!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
.mybox	heaps/samples/domkit_res/style.css	/^.mybox {$/;"	c
0	heaps/haxelib.json	/^	"contributors" : ["ncannasse"],$/;"	s	array:contributors
0	heaps/samples/templates/.vscode/launch.json	/^		{$/;"	o	array:configurations
0	heaps/samples/templates/.vscode/tasks.json	/^		{$/;"	o	array:tasks
1	heaps/samples/templates/.vscode/launch.json	/^		{$/;"	o	array:configurations
1	heaps/samples/templates/.vscode/tasks.json	/^		{$/;"	o	array:tasks
1.3.0 (July 31, 2018)	heaps/CHANGELOG.md	/^## 1.3.0 (July 31, 2018)$/;"	s
1.4.0 (October 1, 2018)	heaps/CHANGELOG.md	/^## 1.4.0 (October 1, 2018)$/;"	s
1.5.0 (October 25, 2018)	heaps/CHANGELOG.md	/^## 1.5.0 (October 25, 2018)$/;"	s
1.6.0 (March 9, 2019)	heaps/CHANGELOG.md	/^## 1.6.0 (March 9, 2019)$/;"	s
1.7.0 (September 9, 2019)	heaps/CHANGELOG.md	/^## 1.7.0 (September 9, 2019)$/;"	s
1.8.0 (April 7, 2020)	heaps/CHANGELOG.md	/^## 1.8.0 (April 7, 2020)$/;"	s
1.9.0 (February 28, 2021)	heaps/CHANGELOG.md	/^## 1.9.0 (February 28, 2021)$/;"	s
1.9.1 (March 5, 2021)	heaps/CHANGELOG.md	/^## 1.9.1 (March 5, 2021)$/;"	s
2	heaps/samples/templates/.vscode/launch.json	/^		{$/;"	o	array:configurations
2	heaps/samples/templates/.vscode/tasks.json	/^		{$/;"	o	array:tasks
3	heaps/samples/templates/.vscode/tasks.json	/^		{$/;"	o	array:tasks
A	heaps/h2d/col/IPolygon.hx	/^			var A = p0.x - p1.x;$/;"	v
A	heaps/h2d/col/Polygon.hx	/^			var A = p0.x - p1.x;$/;"	v
A	heaps/h2d/col/Polygon.hx	/^		var A = 0.;$/;"	v
A	heaps/hxd/Key.hx	/^	public static inline var A			= 65;$/;"	v
A	heaps/hxd/Pixels.hx	/^	public var A = 3;$/;"	v
A	heaps/hxd/clipper/Clipper.hx	/^        var A = ln1.y - ln2.y;$/;"	v
AB	heaps/h3d/col/Capsule.hx	/^		var AB = new h3d.col.Point(b.x-a.x, b.y-a.y, b.z-a.z);$/;"	v
ABdotAB	heaps/h3d/col/Capsule.hx	/^		var ABdotAB = AB.dot(AB);$/;"	v
AL	heaps/hxd/snd/openal/AudioTypes.hx	/^typedef AL = Emulator;$/;"	t
AL	heaps/hxd/snd/openal/AudioTypes.hx	/^typedef AL = openal.AL;$/;"	t
ALC	heaps/hxd/snd/openal/Emulator.hx	/^class ALC {$/;"	c
ALChannel	heaps/hxd/snd/NativeChannel.hx	/^private class ALChannel {$/;"	c
ALL	heaps/hxsl/Globals.hx	/^	static var ALL : Array<String>;$/;"	v
ALLEY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ALLEY                     = new ReverbPreset(-1000,  -270, 0.0,  1.49, 0.86, /;"	v
ALLOW_BIND	heaps/hxd/net/Socket.hx	/^	public static inline var ALLOW_BIND = #if (flash && air3) true #else false #end;$/;"	v
ALLOW_KEY_REPEAT	heaps/hxd/Key.hx	/^	public static var ALLOW_KEY_REPEAT = false;$/;"	v
ALLOW_WEBGL2	heaps/h3d/impl/GlDriver.hx	/^	public static var ALLOW_WEBGL2 = true;$/;"	v
ALL_ATTRIBUTES	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ALL_ATTRIBUTES                   = 0x1003;$/;"	v
ALL_DEVICES_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ALL_DEVICES_SPECIFIER            = 0x1013;$/;"	v
ALL_FLAGS	heaps/h3d/impl/MemoryManager.hx	/^	static var ALL_FLAGS = Type.allEnums(Buffer.BufferFlag);$/;"	v
ALPHA	heaps/h3d/scene/pbr/Renderer.hx	/^	static var ALPHA : hxsl.Output = Swiz(Value("output.color"),[W]);$/;"	v
ALT	heaps/hxd/Key.hx	/^	public static inline var ALT		= 18;$/;"	v
ANALOG_BUTTON_THRESHOLDS	heaps/hxd/Pad.hx	/^	public static var ANALOG_BUTTON_THRESHOLDS = { press: 0.3, release: 0.25 };$/;"	v
ANTIALIASING	heaps/h3d/Engine.hx	/^	public static var ANTIALIASING = 0;$/;"	v
AO	heaps/h3d/col/Capsule.hx	/^		var AO = new h3d.col.Point(o.x-a.x, o.y-a.y, o.z-a.z);$/;"	v
AO	heaps/h3d/shader/pbr/Slides.hx	/^	var AO = 7;$/;"	v
ARENA	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ARENA                     = new ReverbPreset(-1000,  -698, 0.0,  7.24, 0.33, /;"	v
ARead	heaps/hxsl/Flatten.hx	/^enum ARead {$/;"	e
ASCII	heaps/hxd/Charset.hx	/^	public static var ASCII = " !\\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]/;"	v
ASYNC_LOADER	heaps/hxd/res/Image.hx	/^	public static var ASYNC_LOADER : hxd.impl.AsyncLoader;$/;"	v
ATTRIBUTES_SIZE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ATTRIBUTES_SIZE                  = 0x1002;$/;"	v
AUDITORIUM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var AUDITORIUM                = new ReverbPreset(-1000,  -476, 0.0,  4.32, 0.59, /;"	v
AUTO_ALPHA	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@const var AUTO_ALPHA : Bool = true;$/;"	v
AbstractMask	heaps/h2d/filter/AbstractMask.hx	/^class AbstractMask extends Filter {$/;"	c
Access	heaps/hxsl/DynamicShader.hx	/^private class Access {$/;"	c
AccessKind	heaps/hxsl/DynamicShader.hx	/^@:enum private abstract AccessKind(Int) {$/;"	a
Add	heaps/h3d/mat/Material.hx	/^	var Add = "Add";$/;"	v
Add	heaps/h3d/mat/PbrMaterial.hx	/^	var Add = "Add";$/;"	v
AddEdgeToSEL	heaps/hxd/clipper/Clipper.hx	/^	private function AddEdgeToSEL(edge:TEdge)$/;"	f
AddGhostJoin	heaps/hxd/clipper/Clipper.hx	/^	private function AddGhostJoin(op : OutPt, offPt : IPoint) {$/;"	f
AddJoin	heaps/hxd/clipper/Clipper.hx	/^	private function AddJoin(op1:OutPt, op2:OutPt, offPt:IPoint) {$/;"	f
AddLocalMaxPoly	heaps/hxd/clipper/Clipper.hx	/^	private function AddLocalMaxPoly(e1:TEdge,e2:TEdge,pt:IPoint)$/;"	f
AddLocalMinPoly	heaps/hxd/clipper/Clipper.hx	/^	private function AddLocalMinPoly(e1:TEdge,e2:TEdge,pt:IPoint)$/;"	f
AddOutPt	heaps/hxd/clipper/Clipper.hx	/^	private function AddOutPt(e:TEdge,pt:IPoint)$/;"	f
AddPolyNodeToPaths	heaps/hxd/clipper/Clipper.hx	/^      function AddPolyNodeToPaths(polynode : PolyNode, nt : NodeType, paths : IPolygons)$/;"	f
AdjustColor	heaps/samples/AdjustColor.hx	/^class AdjustColor extends SampleApp {$/;"	c
AdvancingFront	heaps/hxd/poly2tri/AdvancingFront.hx	/^class AdvancingFront$/;"	c
AelNext	heaps/hxd/clipper/Clipper.hx	/^		var AelNext = e.nextInAEL;$/;"	v
AelPrev	heaps/hxd/clipper/Clipper.hx	/^		var AelPrev = e.prevInAEL;$/;"	v
AfterTonemapping	heaps/h3d/mat/PbrMaterial.hx	/^	var AfterTonemapping = "AfterTonemapping";$/;"	v
AgalOptim	heaps/hxsl/AgalOptim.hx	/^class AgalOptim {$/;"	c
AgalOut	heaps/hxsl/AgalOut.hx	/^class AgalOut {$/;"	c
Air3File	heaps/hxd/impl/Air3File.hx	/^class Air3File {$/;"	c
Albedo	heaps/h3d/shader/pbr/Slides.hx	/^	var Albedo = 1;$/;"	v
Align	heaps/h2d/Text.hx	/^enum Align {$/;"	e
Alloc	heaps/hxsl/Flatten.hx	/^private class Alloc {$/;"	c
AllocGlobal	heaps/hxsl/RuntimeShader.hx	/^class AllocGlobal {$/;"	c
AllocParam	heaps/hxsl/RuntimeShader.hx	/^class AllocParam {$/;"	c
AllocPos	heaps/hxd/impl/AllocPos.hx	/^typedef AllocPos = #if track_alloc AllocPosImpl #else {} #end$/;"	t
AllocPosImpl	heaps/hxd/impl/AllocPos.hx	/^class AllocPosImpl {$/;"	c
AllocatedVar	heaps/hxsl/Linker.hx	/^private class AllocatedVar {$/;"	c
Allocator	heaps/hxd/impl/Allocator.hx	/^class Allocator {$/;"	c
Alpha	heaps/h2d/Font.hx	/^	var Alpha = 3;$/;"	v
Alpha	heaps/h3d/mat/Material.hx	/^	var Alpha = "Alpha";$/;"	v
Alpha	heaps/h3d/mat/PbrMaterial.hx	/^	var Alpha = "Alpha";$/;"	v
AlphaAdd	heaps/h3d/mat/PbrMaterial.hx	/^	var AlphaAdd = "AlphaAdd";$/;"	v
AlphaChannel	heaps/h3d/shader/AlphaChannel.hx	/^class AlphaChannel extends hxsl.Shader {$/;"	c
AlphaKill	heaps/h3d/mat/Material.hx	/^	var AlphaKill = "AlphaKill";$/;"	v
AlphaMap	heaps/h3d/shader/AlphaMap.hx	/^class AlphaMap extends hxsl.Shader {$/;"	c
AlphaMult	heaps/h3d/shader/AlphaMult.hx	/^class AlphaMult extends hxsl.Shader {$/;"	c
AlphaMultiply	heaps/h3d/mat/PbrMaterial.hx	/^	var AlphaMultiply = "AlphaMultiply";$/;"	v
AlphaMultiply	heaps/h3d/shader/pbr/AlphaMultiply.hx	/^class AlphaMultiply extends hxsl.Shader {$/;"	c
Always	heaps/h3d/mat/PbrMaterial.hx	/^	var Always = "Always";$/;"	v
Ambient	heaps/h2d/filter/Ambient.hx	/^class Ambient extends AbstractMask {$/;"	c
AmbientLight	heaps/h3d/shader/AmbientLight.hx	/^class AmbientLight extends hxsl.Shader {$/;"	c
AnchorPoint	heaps/hxd/fmt/kframes/Data.hx	/^	var AnchorPoint = "ANCHOR_POINT";$/;"	v
Anim	heaps/h2d/Anim.hx	/^class Anim extends Drawable {$/;"	c
AnimCurve	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^private class AnimCurve {$/;"	c
AnimatedObject	heaps/h3d/anim/Animation.hx	/^class AnimatedObject {$/;"	c
AnimatedTexture	heaps/h3d/shader/AnimatedTexture.hx	/^class AnimatedTexture extends hxsl.Shader {$/;"	c
Animation	heaps/h3d/anim/Animation.hx	/^class Animation {$/;"	c
Animation	heaps/hxd/fmt/hmd/Data.hx	/^class Animation {$/;"	c
Animation	heaps/hxd/fmt/spine/Data.hx	/^class Animation {$/;"	c
AnimationCurve	heaps/hxd/fmt/spine/Data.hx	/^class AnimationCurve {$/;"	c
AnimationEvent	heaps/hxd/fmt/hmd/Data.hx	/^class AnimationEvent {$/;"	c
AnimationFlag	heaps/hxd/fmt/hmd/Data.hx	/^enum AnimationFlag {$/;"	e
AnimationObject	heaps/hxd/fmt/hmd/Data.hx	/^class AnimationObject {$/;"	c
Any	heaps/hxd/res/Any.hx	/^class Any extends Resource {$/;"	c
AnyProps	heaps/hxd/impl/AnyProps.hx	/^class AnyProps {$/;"	c
Api	heaps/hxd/impl/Api.hx	/^class Api {$/;"	c
App	heaps/hxd/App.hx	/^class App implements h3d.IDrawable {$/;"	c
AppendPolygon	heaps/hxd/clipper/Clipper.hx	/^	private function AppendPolygon(e1:TEdge,e2:TEdge)$/;"	f
ArcTolerance	heaps/hxd/clipper/Clipper.hx	/^	public var ArcTolerance : Float;$/;"	v
Area	heaps/hxd/clipper/Clipper.hx	/^	function Area(outRec:OutRec) {$/;"	f
ArrayBuffer	heaps/hxd/impl/TypedArray.hx	/^typedef ArrayBuffer = js.html.ArrayBuffer;$/;"	t
ArrayBuffer	heaps/hxd/impl/TypedArray.hx	/^typedef ArrayBuffer = js.lib.ArrayBuffer;$/;"	t
ArrayBufferView	heaps/hxd/impl/TypedArray.hx	/^typedef ArrayBufferView = js.html.ArrayBufferView;$/;"	t
ArrayBufferView	heaps/hxd/impl/TypedArray.hx	/^typedef ArrayBufferView = js.lib.ArrayBufferView;$/;"	t
ArrayCopy	heaps/h3d/pass/Copy.hx	/^class ArrayCopy extends ScreenFx<ArrayCopyShader> {$/;"	c
ArrayCopyShader	heaps/h3d/pass/Copy.hx	/^private class ArrayCopyShader extends h3d.shader.ScreenShader {$/;"	c
ArrayIterator	heaps/hxd/impl/ArrayIterator.hx	/^@:generic class ArrayIterator<T> {$/;"	c
Ascii	heaps/hxd/fmt/tiff/Data.hx	/^	public var Ascii = 2;$/;"	v
AsyncLoader	heaps/hxd/impl/AsyncLoader.hx	/^interface AsyncLoader {$/;"	i
Atlas	heaps/hxd/res/Atlas.hx	/^class Atlas extends Resource {$/;"	c
Attachment	heaps/hxd/fmt/spine/Data.hx	/^class Attachment {$/;"	c
AxesHelper	heaps/samples/Helpers.hx	/^class AxesHelper extends h3d.scene.Graphics {$/;"	c
B	heaps/h2d/col/IPolygon.hx	/^			var B = p0.y - p1.y;$/;"	v
B	heaps/h2d/col/Polygon.hx	/^			var B = p0.y - p1.y;$/;"	v
B	heaps/hxd/Key.hx	/^	public static inline var B			= 66;$/;"	v
B	heaps/hxd/Pixels.hx	/^	public var B = 2;$/;"	v
B	heaps/hxd/clipper/Clipper.hx	/^        var B = ln2.x - ln1.x;$/;"	v
BACKSPACE	heaps/hxd/Key.hx	/^	public static inline var BACKSPACE	= 8;$/;"	v
BATHROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var BATHROOM                  = new ReverbPreset(-1000, -1200, 0.0,  1.49, 0.54, /;"	v
BDFFont	heaps/hxd/res/BDFFont.hx	/^class BDFFont extends Resource {$/;"	c
BDFFontChar	heaps/hxd/res/BDFFont.hx	/^ class BDFFontChar {$/;"	c
BDRF	heaps/h3d/shader/pbr/BDRF.hx	/^class BDRF extends hxsl.Shader {$/;"	c
BITS	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var BITS                       = 0x2002;$/;"	v
BLACK	heaps/h3d/impl/GlDriver.hx	/^	static var BLACK = new h3d.Vector(0,0,0,0);$/;"	v
BLACK_1x1	heaps/hxd/res/Image.hx	/^	static var BLACK_1x1 = Pixels.alloc(1,1,RGBA);$/;"	v
BLEND	heaps/h3d/impl/DirectXDriver.hx	/^	static var BLEND : Array<Blend> = [$/;"	v
BLEND	heaps/h3d/impl/GlDriver.hx	/^	static var BLEND = [$/;"	v
BLEND	heaps/h3d/impl/Stage3dDriver.hx	/^	static var BLEND = [$/;"	v
BLEND	heaps/hxd/fmt/hmd/Reader.hx	/^	static var BLEND = Type.allEnums(h2d.BlendMode);$/;"	v
BLENDS	heaps/hxd/fmt/spine/Library.hx	/^			var BLENDS = new Map<String, h2d.BlendMode>();$/;"	v
BLEND_ALPHA	heaps/h3d/impl/DirectXDriver.hx	/^	static var BLEND_ALPHA : Array<Blend> = [$/;"	v
BLEND_FACTORS	heaps/h3d/impl/DirectXDriver.hx	/^	static inline var BLEND_FACTORS = NTARGETS;$/;"	v
BLEND_OP	heaps/h3d/impl/DirectXDriver.hx	/^	static var BLEND_OP : Array<BlendOp> = [$/;"	v
BLOCKSIZE	heaps/hxd/res/NanoJpeg.hx	/^	static inline var BLOCKSIZE = 64;$/;"	v
BOPS	heaps/hxsl/Serializer.hx	/^	static var BOPS = {$/;"	v
BUFFER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var BUFFER                     = 0x1009;$/;"	v
BUFFERING	heaps/h2d/RenderContext.hx	/^	static inline var BUFFERING = #if heaps_emit_tile_buffering true #else false #end;$/;"	v
BUFFERS_PROCESSED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var BUFFERS_PROCESSED          = 0x1016;$/;"	v
BUFFERS_QUEUED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var BUFFERS_QUEUED             = 0x1015;$/;"	v
BUFFER_QUEUE_LENGTH	heaps/hxd/snd/Manager.hx	/^	public static var BUFFER_QUEUE_LENGTH        = 2;$/;"	v
BUFFER_STREAM_SPLIT	heaps/hxd/snd/Manager.hx	/^	public static var BUFFER_STREAM_SPLIT        = 16;$/;"	v
BVec	heaps/hxsl/Types.hx	/^typedef BVec = Array<Bool>;$/;"	t
BYTES	heaps/hxd/res/DefaultFont.hx	/^			var BYTES = hxd.res.Embed.getResource("hxd\/res\/defaultFont.png");$/;"	v
BYTE_OFFSET	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var BYTE_OFFSET                = 0x1026;$/;"	v
Back	heaps/h3d/mat/PbrMaterial.hx	/^	var Back = "Back";$/;"	v
Background	heaps/h3d/scene/pbr/Renderer.hx	/^	var Background = "Background";$/;"	v
Base	heaps/h3d/pass/Base.hx	/^class Base {$/;"	c
Base2D	heaps/samples/Base2D.hx	/^class Base2D extends hxd.App {$/;"	c
Base2d	heaps/h3d/shader/Base2d.hx	/^class Base2d extends hxsl.Shader {$/;"	c
Base3D	heaps/samples/Base3D.hx	/^class Base3D extends SampleApp {$/;"	c
BaseLibrary	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^class BaseLibrary {$/;"	c
BaseMaterial	heaps/h3d/mat/BaseMaterial.hx	/^class BaseMaterial extends hxd.impl.AnyProps {$/;"	c
BaseMesh	heaps/h3d/shader/BaseMesh.hx	/^class BaseMesh extends hxsl.Shader {$/;"	c
BasicElement	heaps/h2d/SpriteBatch.hx	/^class BasicElement extends BatchElement {$/;"	c
Basin	heaps/hxd/poly2tri/Basin.hx	/^class Basin$/;"	c
BatchData	heaps/h3d/scene/MeshBatch.hx	/^private class BatchData {$/;"	c
BatchDrawState	heaps/h2d/impl/BatchDrawState.hx	/^class BatchDrawState {$/;"	c
BatchElement	heaps/h2d/SpriteBatch.hx	/^class BatchElement {$/;"	c
BatchShader	heaps/hxsl/BatchShader.hx	/^class BatchShader extends hxsl.Shader {$/;"	c
Batch_Buffer	heaps/hxsl/BatchShader.hx	/^		@param var Batch_Buffer : Buffer<Vec4,Batch_Count>;$/;"	v
Batch_HasOffset	heaps/hxsl/BatchShader.hx	/^		@const var Batch_HasOffset : Bool;$/;"	v
Beachsection	heaps/h2d/col/Voronoi.hx	/^private class Beachsection extends RBNode<Beachsection> {$/;"	c
BeforeTonemapping	heaps/h3d/mat/PbrMaterial.hx	/^	var BeforeTonemapping = "BeforeTonemapping";$/;"	v
Benchmark	heaps/h3d/impl/Benchmark.hx	/^class Benchmark extends h2d.Graphics {$/;"	c
BigPrimitive	heaps/h3d/prim/BigPrimitive.hx	/^class BigPrimitive extends Primitive {$/;"	c
BigTexture	heaps/h3d/mat/BigTexture.hx	/^class BigTexture {$/;"	c
BigTextureElement	heaps/h3d/mat/BigTexture.hx	/^class BigTextureElement {$/;"	c
BinaryLoader	heaps/hxd/net/BinaryLoader.hx	/^class BinaryLoader {$/;"	c
Binop	heaps/hxsl/Ast.hx	/^typedef Binop = haxe.macro.Expr.Binop;$/;"	t
Bitmap	heaps/h2d/Bitmap.hx	/^class Bitmap extends Drawable {$/;"	c
BitmapComp	heaps/h2d/domkit/BaseComponents.hx	/^class BitmapComp extends DrawableComp implements domkit.Component.ComponentDecl<h2d.Bitmap> {$/;"	c
BitmapData	heaps/hxd/BitmapData.hx	/^class BitmapData {$/;"	c
BitmapFont	heaps/hxd/res/BitmapFont.hx	/^class BitmapFont extends Resource {$/;"	c
BitmapInnerData	heaps/hxd/BitmapData.hx	/^typedef BitmapInnerData =$/;"	t
BitmapInnerDataImpl	heaps/hxd/BitmapData.hx	/^class BitmapInnerDataImpl {$/;"	c
BitmapMaxWidth	heaps/hxd/res/BDFFont.hx	/^	static inline var BitmapMaxWidth : Int = 1024;$/;"	v
BitmapPad	heaps/hxd/res/BDFFont.hx	/^	static inline var BitmapPad : Float = 0.1;$/;"	v
BitsBuilder	heaps/hxd/impl/BitsBuilder.hx	/^class BitsBuilder {$/;"	c
BitsPerSample	heaps/hxd/fmt/tiff/Data.hx	/^	public var BitsPerSample = 258;$/;"	v
Blend	heaps/h3d/mat/Data.hx	/^enum Blend {$/;"	e
Blend	heaps/hxd/fmt/blend/Data.hx	/^class Blend {$/;"	c
BlendMode	heaps/h2d/BlendMode.hx	/^enum BlendMode {$/;"	e
BlendMode	heaps/h3d/mat/BlendMode.hx	/^typedef BlendMode = h2d.BlendMode;/;"	t
BlendMode	heaps/h3d/parts/Data.hx	/^enum BlendMode {$/;"	e
Block	heaps/hxd/fmt/blend/Data.hx	/^class Block {$/;"	c
Bloom	heaps/h2d/filter/Bloom.hx	/^class Bloom extends Blur {$/;"	c
Bloom	heaps/h3d/shader/Bloom.hx	/^class Bloom extends ScreenShader {$/;"	c
Blue	heaps/h2d/Font.hx	/^	var Blue = 2;$/;"	v
Blur	heaps/h2d/filter/Blur.hx	/^class Blur extends Filter {$/;"	c
Blur	heaps/h3d/pass/Blur.hx	/^class Blur extends ScreenFx<h3d.shader.Blur> {$/;"	c
Blur	heaps/h3d/shader/Blur.hx	/^class Blur extends ScreenShader {$/;"	c
Blur	heaps/samples/Blur.hx	/^class Blur extends SampleApp {$/;"	c
Bone	heaps/hxd/fmt/spine/Data.hx	/^class Bone {$/;"	c
BoneCurve	heaps/hxd/fmt/spine/Data.hx	/^class BoneCurve extends AnimationCurve {$/;"	c
Border	heaps/h3d/pass/Border.hx	/^class Border extends ScreenFx<BorderShader> {$/;"	c
BorderShader	heaps/h3d/pass/Border.hx	/^private class BorderShader extends h3d.shader.ScreenShader {$/;"	c
Both	heaps/h3d/mat/PbrMaterial.hx	/^	var Both = "Both";$/;"	v
Bounds	heaps/h2d/col/Bounds.hx	/^class Bounds implements Collider {$/;"	c
Bounds	heaps/h3d/col/Bounds.hx	/^class Bounds implements Collider {$/;"	c
Bounds	heaps/samples/Bounds.hx	/^class Bounds extends hxd.App {$/;"	c
Box	heaps/h3d/scene/Box.hx	/^class Box extends Graphics {$/;"	c
BrowseOptions	heaps/hxd/File.hx	/^typedef BrowseOptions = {$/;"	t
BrowseSelect	heaps/hxd/File.hx	/^typedef BrowseSelect = {$/;"	t
Buffer	heaps/h3d/Buffer.hx	/^class Buffer {$/;"	c
Buffer	heaps/hxd/snd/Manager.hx	/^class Buffer {$/;"	c
Buffer	heaps/hxd/snd/openal/Emulator.hx	/^class Buffer {$/;"	c
Buffer	heaps/hxsl/Types.hx	/^typedef Buffer = h3d.Buffer;$/;"	t
BufferAnimation	heaps/h3d/anim/BufferAnimation.hx	/^class BufferAnimation extends Animation {$/;"	c
BufferFlag	heaps/h3d/Buffer.hx	/^enum BufferFlag {$/;"	e
BufferFlags	heaps/hxd/impl/Allocator.hx	/^@:enum abstract BufferFlags(Int) {$/;"	a
BufferHandle	heaps/hxd/snd/Driver.hx	/^typedef BufferHandle = haxe.AudioTypes.BufferHandle;$/;"	t
BufferHandle	heaps/hxd/snd/Driver.hx	/^typedef BufferHandle = hxd.snd.openal.AudioTypes.BufferHandle;$/;"	t
BufferHandle	heaps/hxd/snd/Driver.hx	/^typedef BufferHandle = hxd.snd.webaudio.AudioTypes.BufferHandle;$/;"	t
BufferHandle	heaps/hxd/snd/openal/AudioTypes.hx	/^class BufferHandle {$/;"	c
BufferHandle	heaps/hxd/snd/webaudio/AudioTypes.hx	/^class BufferHandle {$/;"	c
BufferKind	heaps/h3d/shader/Buffers.hx	/^@:enum abstract BufferKind(Int) {$/;"	a
BufferObject	heaps/h3d/anim/BufferAnimation.hx	/^class BufferObject extends AnimatedObject {$/;"	c
BufferOffset	heaps/h3d/Buffer.hx	/^class BufferOffset {$/;"	c
BufferPlayback	heaps/hxd/snd/webaudio/AudioTypes.hx	/^class BufferPlayback {$/;"	c
BufferPool	heaps/hxd/snd/webaudio/Context.hx	/^private class BufferPool {$/;"	c
Buffers	heaps/h3d/shader/Buffers.hx	/^	public var Buffers = 3;$/;"	v
Buffers	heaps/h3d/shader/Buffers.hx	/^class Buffers {$/;"	c
Build	heaps/hxd/fmt/pak/Build.hx	/^class Build {$/;"	c
BuildIntersectList	heaps/hxd/clipper/Clipper.hx	/^	private function BuildIntersectList(topY:Int)$/;"	f
BuildResult	heaps/hxd/clipper/Clipper.hx	/^	private function BuildResult()$/;"	f
BuildResult2	heaps/hxd/clipper/Clipper.hx	/^	private function BuildResult2(polytree:PolyTree)$/;"	f
ButtonComp	heaps/samples/Domkit.hx	/^class ButtonComp extends h2d.Flow implements h2d.domkit.Object {$/;"	c
Byte	heaps/hxd/fmt/tiff/Data.hx	/^	public var Byte = 1;$/;"	v
ByteConversions	heaps/hxd/ByteConversions.hx	/^class ByteConversions{$/;"	c
Bytes	heaps/hxd/snd/openal/Emulator.hx	/^private typedef Bytes = haxe.io.Bytes;$/;"	t
BytesBuffer	heaps/hxd/BytesBuffer.hx	/^abstract BytesBuffer(InnerData) {$/;"	a
BytesFileEntry	heaps/hxd/fs/BytesFileSystem.hx	/^class BytesFileEntry extends FileEntry {$/;"	c
BytesFileSystem	heaps/hxd/fs/BytesFileSystem.hx	/^class BytesFileSystem implements FileSystem {$/;"	c
BytesOutput	heaps/hxd/snd/OggData.hx	/^private class BytesOutput extends haxe.io.Output {$/;"	c
C	heaps/h2d/col/IPolygon.hx	/^			var C = p2.x - p1.x;$/;"	v
C	heaps/h2d/col/Polygon.hx	/^			var C = p2.x - p1.x;$/;"	v
C	heaps/hxd/Key.hx	/^	public static inline var C			= 67;$/;"	v
C	heaps/hxd/clipper/Clipper.hx	/^        var C = A * ln1.x  + B * ln1.y;$/;"	v
CACHE	heaps/h3d/impl/Driver.hx	/^	static var CACHE = new Map<String,InputNames>();$/;"	v
CACHED_FREQ	heaps/hxd/snd/openal/Emulator.hx	/^	static var CACHED_FREQ : Null<Int>;$/;"	v
CACHED_NAME	heaps/hxd/System.flash.hx	/^	static var CACHED_NAME = null;$/;"	v
CACHED_SAMPLES	heaps/hxd/snd/OggData.hx	/^	static inline var CACHED_SAMPLES = 44100 * 3; \/\/ 3s of cached sound$/;"	v
CACHE_FILE	heaps/h3d/impl/DirectXDriver.hx	/^	public static var CACHE_FILE : { input : String, output : String } = null;$/;"	v
CAPS_LOCK	heaps/hxd/Key.hx	/^	public static inline var CAPS_LOCK = 20;$/;"	v
CAPTURE_DEFAULT_DEVICE_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CAPTURE_DEFAULT_DEVICE_SPECIFIER = 0x311;$/;"	v
CAPTURE_DEVICE_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CAPTURE_DEVICE_SPECIFIER         = 0x310;$/;"	v
CAPTURE_SAMPLES	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CAPTURE_SAMPLES                  = 0x312;$/;"	v
CARPETEDHALLWAY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CARPETEDHALLWAY           = new ReverbPreset(-1000, -4000, 0.0,  0.30, 0.10, /;"	v
CASTLE_ALCOVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_ALCOVE             = new ReverbPreset(-1000,  -600, 0.0,  1.64, 0.87, /;"	v
CASTLE_COURTYARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_COURTYARD          = new ReverbPreset(-1000,  -700, 0.0,  2.13, 0.61, /;"	v
CASTLE_CUPBOARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_CUPBOARD           = new ReverbPreset(-1000, -1100, 0.0,  0.67, 0.87, /;"	v
CASTLE_HALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_HALL               = new ReverbPreset(-1000, -1100, 0.0,  3.14, 0.79, /;"	v
CASTLE_LARGEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_LARGEROOM          = new ReverbPreset(-1000, -1100, 0.0,  2.53, 0.83, /;"	v
CASTLE_LONGPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_LONGPASSAGE        = new ReverbPreset(-1000,  -800, 0.0,  3.42, 0.83, /;"	v
CASTLE_MEDIUMROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_MEDIUMROOM         = new ReverbPreset(-1000, -1100, 0.0,  2.04, 0.83, /;"	v
CASTLE_SHORTPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_SHORTPASSAGE       = new ReverbPreset(-1000, -1000, 0.0,  2.32, 0.83, /;"	v
CASTLE_SMALLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CASTLE_SMALLROOM          = new ReverbPreset(-1000,  -800, 0.0,  1.22, 0.83, /;"	v
CAVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CAVE                      = new ReverbPreset(-1000,     0, 0.0,  2.91, 1.30, /;"	v
CBUFFERS	heaps/h3d/impl/GlDriver.hx	/^	static var CBUFFERS =$/;"	v
CCW	heaps/hxd/poly2tri/Orientation.hx	/^	inline public static var CCW = -1;$/;"	v
CCW_OFFSET	heaps/hxd/poly2tri/Triangle.hx	/^	inline static private var CCW_OFFSET = -1;$/;"	v
CENTERED	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@const var CENTERED : Bool;$/;"	v
CF	heaps/hxd/res/NanoJpeg.hx	/^	static inline function CF(x) return njClip(((x) + 64) >> 7);$/;"	f
CF2A	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF2A = 139;$/;"	v
CF2B	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF2B = -11;$/;"	v
CF3A	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3A = 28;$/;"	v
CF3B	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3B = 109;$/;"	v
CF3C	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3C = -9;$/;"	v
CF3X	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3X = 104;$/;"	v
CF3Y	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3Y = 27;$/;"	v
CF3Z	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF3Z = -3;$/;"	v
CF4A	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF4A = -9;$/;"	v
CF4B	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF4B = 111;$/;"	v
CF4C	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF4C = 29;$/;"	v
CF4D	heaps/hxd/res/NanoJpeg.hx	/^	static inline var CF4D = -3;$/;"	v
CHANNELS	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CHANNELS                   = 0x2003;$/;"	v
CHANNEL_BUFSIZE	heaps/hxd/snd/openal/Emulator.hx	/^	public static var CHANNEL_BUFSIZE = #if js 8192 #else 4096 #end; \/* 100 ms latency @44.1Khz *\/$/;"	v
CHAPEL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CHAPEL                    = new ReverbPreset(-1000,  -500, 0.0,  4.62, 0.64, /;"	v
CITY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY                      = new ReverbPreset(-1000,  -800, 0.0,  1.49, 0.67, /;"	v
CITY_ABANDONED	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_ABANDONED            = new ReverbPreset(-1000,  -200, 0.0,  3.28, 1.17, /;"	v
CITY_LIBRARY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_LIBRARY              = new ReverbPreset(-1000, -1100, 0.0,  2.76, 0.89, /;"	v
CITY_MUSEUM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_MUSEUM               = new ReverbPreset(-1000, -1500, 0.0,  3.28, 1.4,  /;"	v
CITY_STREETS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_STREETS              = new ReverbPreset(-1000,  -300, 0.0,  1.79, 1.12, /;"	v
CITY_SUBWAY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_SUBWAY               = new ReverbPreset(-1000,  -300, 0.0,  3.01, 1.23, /;"	v
CITY_UNDERPASS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CITY_UNDERPASS            = new ReverbPreset(-1000,  -700, 0.0,  3.57, 1.12, /;"	v
CODEMAP	heaps/hxd/Window.hl.hx	/^	static var CODEMAP = [for( i in 0...2048 ) i];$/;"	v
COLLINEAR	heaps/hxd/poly2tri/Orientation.hx	/^	inline public static var COLLINEAR = 0;$/;"	v
COMPARE	heaps/h3d/impl/DirectXDriver.hx	/^	static var COMPARE : Array<ComparisonFunc> = [$/;"	v
COMPARE	heaps/h3d/impl/GlDriver.hx	/^	static var COMPARE = [$/;"	v
COMPARE	heaps/h3d/impl/Stage3dDriver.hx	/^	static var COMPARE = [$/;"	v
COMPS	heaps/hxsl/AgalOptim.hx	/^	static var COMPS = [X, Y, Z, W];$/;"	v
COMPS	heaps/hxsl/AgalOut.hx	/^	static var COMPS = [X, Y, Z, W];$/;"	v
CONCERTHALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var CONCERTHALL               = new ReverbPreset(-1000,  -500, 0.0,  3.92, 0.70, /;"	v
CONE_INNER_ANGLE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CONE_INNER_ANGLE           = 0x1001;$/;"	v
CONE_OUTER_ANGLE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CONE_OUTER_ANGLE           = 0x1002;$/;"	v
CONE_OUTER_GAIN	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var CONE_OUTER_GAIN            = 0x1022;$/;"	v
CONFIG	heaps/hxd/Pad.hx	/^	public static var CONFIG : Dynamic = {};$/;"	v
CONFIG_JS_DS4	heaps/hxd/Pad.hx	/^	public static var CONFIG_JS_DS4 = {$/;"	v
CONFIG_JS_DS4_FF	heaps/hxd/Pad.hx	/^	public static var CONFIG_JS_DS4_FF = {$/;"	v
CONFIG_JS_STD	heaps/hxd/Pad.hx	/^	public static var CONFIG_JS_STD = {$/;"	v
CONFIG_SDL	heaps/hxd/Pad.hx	/^	public static var CONFIG_SDL = {$/;"	v
CONFIG_XBOX	heaps/hxd/Pad.hx	/^	public static var CONFIG_XBOX = {$/;"	v
CONTEXT_MENU	heaps/hxd/Key.hx	/^	public static inline var CONTEXT_MENU = 93;$/;"	v
COUNT	heaps/samples/ShaderAdvanced.hx	/^		@const var COUNT : Int = 3;$/;"	v
CTRL	heaps/hxd/Key.hx	/^	public static inline var CTRL		= 17;$/;"	v
CUBE_FACES	heaps/h3d/impl/GlDriver.hx	/^	static var CUBE_FACES = [$/;"	v
CULL	heaps/h3d/impl/DirectXDriver.hx	/^	static var CULL : Array<CullMode> = [$/;"	v
CULLING	heaps/hxd/fmt/hmd/Reader.hx	/^	static var CULLING = Type.allEnums(h3d.mat.Data.Face);$/;"	v
CURRENT	heaps/h3d/Engine.hx	/^	static var CURRENT : Engine = null;$/;"	v
CURRENT_VERSION	heaps/hxd/fmt/hmd/Data.hx	/^	public static inline var CURRENT_VERSION = 3;$/;"	v
CW	heaps/hxd/poly2tri/Orientation.hx	/^	inline public static var CW = 1;$/;"	v
CW_OFFSET	heaps/hxd/poly2tri/Triangle.hx	/^	inline static private var CW_OFFSET = 1;$/;"	v
CYRILLIC	heaps/hxd/Charset.hx	/^	public static var CYRILLIC = "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯа/;"	v
C_ID	heaps/hxd/poly2tri/Point.hx	/^	public static var C_ID = 0;$/;"	v
Cache	heaps/hxd/impl/CacheAllocator.hx	/^private class Cache<T> {$/;"	c
Cache	heaps/hxsl/Cache.hx	/^class Cache {$/;"	c
CacheAllocator	heaps/hxd/impl/CacheAllocator.hx	/^class CacheAllocator extends Allocator {$/;"	c
CacheFile	heaps/hxsl/CacheFile.hx	/^class CacheFile extends Cache {$/;"	c
CacheFileBuilder	heaps/hxsl/CacheFileBuilder.hx	/^class CacheFileBuilder {$/;"	c
CacheFilePlatform	heaps/hxsl/CacheFileBuilder.hx	/^enum CacheFilePlatform {$/;"	e
Camera	heaps/h2d/Camera.hx	/^class Camera {$/;"	c
Camera	heaps/h3d/Camera.hx	/^class Camera {$/;"	c
Camera2D	heaps/samples/Camera2D.hx	/^class Camera2D extends SampleApp {$/;"	c
CameraController	heaps/h3d/scene/CameraController.hx	/^class CameraController extends h3d.scene.Object {$/;"	c
CameraStackEntry	heaps/h2d/RenderContext.hx	/^private typedef CameraStackEntry = {$/;"	t
Canvas	_old/Canvas.hx	/^class Canvas {$/;"	c
Cap	heaps/hxd/System.flash.hx	/^		var Cap = flash.system.Capabilities;$/;"	v
Capsule	heaps/h3d/col/Capsule.hx	/^class Capsule implements Collider {$/;"	c
CdbLevel	heaps/h2d/CdbLevel.hx	/^class CdbLevel extends Layers {$/;"	c
Cell	heaps/h2d/col/Voronoi.hx	/^class Cell {$/;"	c
Channel	heaps/hxd/Pixels.hx	/^@:enum abstract Channel(Int) {$/;"	a
Channel	heaps/hxd/snd/Channel.hx	/^class Channel extends ChannelBase {$/;"	c
Channel	heaps/hxd/snd/openal/Emulator.hx	/^private class Channel extends NativeChannel {$/;"	c
Channel	heaps/hxsl/Channel.hx	/^enum Channel {$/;"	e
ChannelBase	heaps/hxd/snd/ChannelBase.hx	/^class ChannelBase {$/;"	c
ChannelGroup	heaps/hxd/snd/ChannelGroup.hx	/^class ChannelGroup extends ChannelBase {$/;"	c
ChannelTexture	heaps/hxsl/ChannelTexture.hx	/^typedef ChannelTexture = { texture : hxsl.Types.ChannelTextureType, channel : hxsl.Channel };$/;"	t
ChannelTextureType	heaps/hxsl/Types.hx	/^typedef ChannelTextureType = h3d.mat.Texture;$/;"	t
ChannelTools	heaps/hxsl/Types.hx	/^class ChannelTools {$/;"	c
Charset	heaps/hxd/Charset.hx	/^class Charset {$/;"	c
CheckBox	heaps/h2d/CheckBox.hx	/^class CheckBox extends h2d.Flow {$/;"	c
CheckMacroCompilation	heaps/samples/ExtraTests.hx	/^class CheckMacroCompilation {$/;"	c
Checker	heaps/hxsl/Checker.hx	/^class Checker {$/;"	c
Circle	heaps/h2d/col/Circle.hx	/^class Circle implements Collider {$/;"	c
CircleEvent	heaps/h2d/col/Voronoi.hx	/^private class CircleEvent extends RBNode<CircleEvent> {$/;"	c
CleanPolygon	heaps/hxd/clipper/Clipper.hx	/^      public function CleanPolygon(path : IPolygon, distance = 1.415)$/;"	f
CleanPolygons	heaps/hxd/clipper/Clipper.hx	/^      public function CleanPolygons(polys : IPolygons, distance = 1.415)$/;"	f
ClearColor	heaps/hxd/res/BDFFont.hx	/^	static inline var ClearColor : Int = 0x000000FF;$/;"	v
ClipType	heaps/hxd/clipper/ClipType.hx	/^enum ClipType {$/;"	e
Clipper	heaps/hxd/clipper/Clipper.hx	/^class Clipper extends ClipperBase {$/;"	c
ClipperBase	heaps/hxd/clipper/Clipper.hx	/^private class ClipperBase$/;"	c
ClipperOffset	heaps/hxd/clipper/Clipper.hx	/^class ClipperOffset$/;"	c
Clone	heaps/hxsl/Clone.hx	/^class Clone {$/;"	c
CollideCheck	heaps/samples/CollideCheck.hx	/^class CollideCheck extends hxd.App {$/;"	c
Collider	heaps/h2d/col/Collider.hx	/^interface Collider \/* extends hxd.impl.Serializable.StructSerializable *\/ {$/;"	i
Collider	heaps/h3d/col/Collider.hx	/^interface Collider {$/;"	i
Collider	heaps/h3d/parts/Collider.hx	/^interface Collider {$/;"	i
Color	heaps/hxd/fmt/grd/Data.hx	/^enum Color {$/;"	e
ColorAdd	heaps/h3d/shader/ColorAdd.hx	/^class ColorAdd extends hxsl.Shader {$/;"	c
ColorAdjust	heaps/h3d/Matrix.hx	/^typedef ColorAdjust = {$/;"	t
ColorKey	heaps/h3d/parts/Data.hx	/^class ColorKey {$/;"	c
ColorKey	heaps/h3d/shader/ColorKey.hx	/^class ColorKey extends hxsl.Shader {$/;"	c
ColorMatrix	heaps/h2d/filter/ColorMatrix.hx	/^class ColorMatrix extends Filter {$/;"	c
ColorMatrix	heaps/h3d/pass/ColorMatrix.hx	/^class ColorMatrix extends ScreenFx<ColorMatrixShader> {$/;"	c
ColorMatrix	heaps/h3d/shader/ColorMatrix.hx	/^class ColorMatrix extends hxsl.Shader {$/;"	c
ColorMatrixShader	heaps/h3d/pass/ColorMatrix.hx	/^class ColorMatrixShader extends h3d.shader.ScreenShader {$/;"	c
ColorMult	heaps/h3d/shader/ColorMult.hx	/^class ColorMult extends hxsl.Shader {$/;"	c
ColorMult	heaps/samples/FxView.hx	/^class ColorMult extends hxsl.Shader {$/;"	c
ColorStop	heaps/hxd/fmt/grd/Data.hx	/^class ColorStop {$/;"	c
ColorStopType	heaps/hxd/fmt/grd/Data.hx	/^enum ColorStopType {$/;"	e
Command	heaps/hxd/fs/Convert.hx	/^class Command extends Convert {$/;"	c
Community	heaps/README.md	/^Community$/;"	s
Compare	heaps/h3d/mat/Data.hx	/^enum Compare {$/;"	e
CompiledAttribute	heaps/h3d/impl/GlDriver.hx	/^private class CompiledAttribute {$/;"	c
CompiledProgram	heaps/h3d/impl/GlDriver.hx	/^private class CompiledProgram {$/;"	c
CompiledShader	heaps/h3d/impl/DirectXDriver.hx	/^private class CompiledShader {$/;"	c
CompiledShader	heaps/h3d/impl/GlDriver.hx	/^private class CompiledShader {$/;"	c
CompiledShader	heaps/h3d/impl/Stage3dDriver.hx	/^private class CompiledShader {$/;"	c
Component	heaps/hxd/res/NanoJpeg.hx	/^private class Component {$/;"	c
Component	heaps/hxsl/Ast.hx	/^enum Component {$/;"	e
CompressIMG	heaps/hxd/fs/Convert.hx	/^class CompressIMG extends Convert {$/;"	c
Compression	heaps/hxd/fmt/tiff/Data.hx	/^	public var Compression = 259;$/;"	v
Config	heaps/hxd/res/Config.hx	/^class Config {$/;"	c
Console	heaps/h2d/Console.hx	/^class Console #if !macro extends h2d.Object #end {$/;"	c
ConsoleArg	heaps/h2d/Console.hx	/^enum ConsoleArg {$/;"	e
ConsoleArgDesc	heaps/h2d/Console.hx	/^typedef ConsoleArgDesc = {$/;"	t
Const	heaps/hxsl/Ast.hx	/^enum Const {$/;"	e
Constants	heaps/hxd/poly2tri/Constants.hx	/^class Constants {$/;"	c
ContainerComp	heaps/samples/Domkit.hx	/^class ContainerComp extends h2d.Flow implements h2d.domkit.Object {$/;"	c
Context	heaps/hxd/snd/openal/Emulator.hx	/^class Context {$/;"	c
Context	heaps/hxd/snd/webaudio/Context.hx	/^class Context {$/;"	c
Converge	heaps/h3d/parts/Data.hx	/^enum Converge {$/;"	e
Convert	heaps/hxd/fs/Convert.hx	/^class Convert {$/;"	c
ConvertBinJSON	heaps/hxd/fs/Convert.hx	/^class ConvertBinJSON extends Convert {$/;"	c
ConvertCommand	heaps/hxd/fs/FileConverter.hx	/^typedef ConvertCommand = {$/;"	t
ConvertConfig	heaps/hxd/fs/FileConverter.hx	/^typedef ConvertConfig = {$/;"	t
ConvertFBX2HMD	heaps/hxd/fs/Convert.hx	/^class ConvertFBX2HMD extends Convert {$/;"	c
ConvertFNT2BFNT	heaps/hxd/fs/Convert.hx	/^class ConvertFNT2BFNT extends Convert {$/;"	c
ConvertPattern	heaps/hxd/fs/FileConverter.hx	/^enum ConvertPattern {$/;"	e
ConvertRule	heaps/hxd/fs/FileConverter.hx	/^typedef ConvertRule = { pt : ConvertPattern, cmd : ConvertCommand, priority : Int };$/;"	t
ConvertTGA2PNG	heaps/hxd/fs/Convert.hx	/^class ConvertTGA2PNG extends Convert {$/;"	c
ConvertWAV2MP3	heaps/hxd/fs/Convert.hx	/^class ConvertWAV2MP3 extends Convert {$/;"	c
ConvertWAV2OGG	heaps/hxd/fs/Convert.hx	/^class ConvertWAV2OGG extends Convert {$/;"	c
Copy	heaps/h3d/pass/Copy.hx	/^class Copy extends ScreenFx<CopyShader> {$/;"	c
Copy	heaps/h3d/pass/Copy.hx	/^class Copy {$/;"	c
CopyAELToSEL	heaps/hxd/clipper/Clipper.hx	/^	private inline function CopyAELToSEL()$/;"	f
CopyShader	heaps/h3d/pass/Copy.hx	/^private class CopyShader extends h3d.shader.ScreenShader {$/;"	c
CreateOutRec	heaps/hxd/clipper/Clipper.hx	/^	private function CreateOutRec() : OutRec$/;"	f
Cube	heaps/h3d/prim/Cube.hx	/^class Cube extends Polygon {$/;"	c
CubeCopy	heaps/h3d/pass/CubeCopy.hx	/^class CubeCopy extends ScreenFx<CubeCopyShader> {$/;"	c
CubeCopyShader	heaps/h3d/pass/CubeCopy.hx	/^private class CubeCopyShader extends h3d.shader.ScreenShader {$/;"	c
CubeFaceFlag	heaps/h3d/pass/PointShadowMap.hx	/^enum CubeFaceFlag {$/;"	e
CubeLod	heaps/h3d/shader/pbr/CubeLod.hx	/^class CubeLod extends hxsl.Shader {$/;"	c
CubeMap	heaps/h3d/shader/CubeMap.hx	/^class CubeMap extends hxsl.Shader {$/;"	c
CubeMinMaxShader	heaps/h3d/shader/MinMaxShader.hx	/^class CubeMinMaxShader extends ScreenShader {$/;"	c
CubeTexture	heaps/samples/CubeTexture.hx	/^class CubeTexture extends hxd.App {$/;"	c
CubeToPanorama	heaps/h3d/scene/pbr/Environment.hx	/^class CubeToPanorama extends h3d.shader.ScreenShader {$/;"	c
Cursor	heaps/hxd/Cursor.hx	/^enum Cursor {$/;"	e
Cursor	heaps/samples/Cursor.hx	/^class Cursor extends SampleApp {$/;"	c
Cursor	heaps/samples/Network.hx	/^class Cursor implements hxbit.NetworkSerializable {$/;"	c
CustomCacheFile	heaps/hxsl/CacheFileBuilder.hx	/^private class CustomCacheFile extends CacheFile {$/;"	c
CustomColor	heaps/h3d/scene/pbr/Renderer.hx	/^	var CustomColor = "CustomColor";$/;"	v
CustomCursor	heaps/hxd/Cursor.hx	/^class CustomCursor {$/;"	c
CustomParser	heaps/h2d/domkit/BaseComponents.hx	/^class CustomParser extends CssValue.ValueParser {$/;"	c
CustomRenderer	heaps/samples/Sao.hx	/^class CustomRenderer extends h3d.scene.fwd.Renderer {$/;"	c
CustomSprite	heaps/samples/DrawingTiles.hx	/^class CustomSprite extends h2d.SpriteBatch.BatchElement {$/;"	c
Cylinder	heaps/h3d/prim/Cylinder.hx	/^class Cylinder extends Quads {$/;"	c
D	heaps/h2d/col/IPolygon.hx	/^			var D = p2.y - p1.y;$/;"	v
D	heaps/h2d/col/Polygon.hx	/^			var D = p2.y - p1.y;$/;"	v
D	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var D = normalDistributionGGX(NdH, roughness);\/\/ Normal distribution fonction$/;"	v
D	heaps/h3d/shader/pbr/Lighting.hx	/^				var D = normalDistributionGGX(NdH, roughness);\/\/ Normal distribution fonction$/;"	v
D	heaps/hxd/Key.hx	/^	public static inline var D			= 68;$/;"	v
DATA	heaps/hxd/res/DynamicText.hx	/^			static var DATA : Dynamic = null;$/;"	v
DBytes4	heaps/hxd/fmt/hmd/Data.hx	/^	public var DBytes4 = 9;$/;"	v
DEBUG_IDS	heaps/hxsl/Cache.hx	/^	public static var DEBUG_IDS = false;$/;"	v
DEFAULT	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DEFAULT                   = new ReverbPreset(-1000,  -100, 0.0,  1.49, 0.83, /;"	v
DEFAULT_ALL_DEVICES_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DEFAULT_ALL_DEVICES_SPECIFIER    = 0x1012;$/;"	v
DEFAULT_ASYNC	heaps/hxd/res/Image.hx	/^	public static var DEFAULT_ASYNC = false;$/;"	v
DEFAULT_CHARS	heaps/hxd/Charset.hx	/^	public static var DEFAULT_CHARS = ASCII + LATIN1;$/;"	v
DEFAULT_CONFIG	heaps/hxd/Pad.hx	/^	public static var DEFAULT_CONFIG : PadConfig =$/;"	v
DEFAULT_DEVICE_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DEFAULT_DEVICE_SPECIFIER         = 0x1004;$/;"	v
DEFAULT_FILTER	heaps/hxd/res/Image.hx	/^	public static var DEFAULT_FILTER : h3d.mat.Data.Filter = Linear;$/;"	v
DELETE	heaps/hxd/Key.hx	/^	public static inline var DELETE		= 46;$/;"	v
DESC	heaps/hxd/res/DefaultFont.hx	/^			var DESC = hxd.res.Embed.getResource("hxd\/res\/defaultFont.fnt");$/;"	v
DEVICE_SPECIFIER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DEVICE_SPECIFIER                 = 0x1005;$/;"	v
DFloat	heaps/hxd/fmt/hmd/Data.hx	/^	public var DFloat = 1;$/;"	v
DIF	heaps/h3d/scene/pbr/Environment.hx	/^		var DIF = hxd.res.Embed.getResource("h3d\/scene\/pbr\/envDefault.envd.dds");$/;"	v
DIRECTION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DIRECTION                  = 0x1005;$/;"	v
DIRECT_FILTER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DIRECT_FILTER                         = 0x20005;$/;"	v
DISTANCE_MODEL	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DISTANCE_MODEL            = 0xD000;$/;"	v
DIZZY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DIZZY                     = new ReverbPreset(-1000,  -400, 0.0, 17.23, 0.56, /;"	v
DOME_SAINTPAULS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DOME_SAINTPAULS           = new ReverbPreset(-1000,  -900, 0.0, 10.48, 0.19, /;"	v
DOME_TOMB	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DOME_TOMB                 = new ReverbPreset(-1000,  -900, 0.0,  4.18, 0.21, /;"	v
DOPPLER_FACTOR	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DOPPLER_FACTOR            = 0xC000;$/;"	v
DOPPLER_VELOCITY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var DOPPLER_VELOCITY          = 0xC001;$/;"	v
DOWN	heaps/hxd/Key.hx	/^	public static inline var DOWN		= 40;$/;"	v
DRIVING_COMMENTATOR	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_COMMENTATOR       = new ReverbPreset(-1000,  -500, 0.0,  2.42, 0.88, /;"	v
DRIVING_EMPTYGRANDSTAND	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_EMPTYGRANDSTAND   = new ReverbPreset(-1000,     0, 0.0,  4.62, 1.75, /;"	v
DRIVING_FULLGRANDSTAND	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_FULLGRANDSTAND    = new ReverbPreset(-1000, -1100, 0.0,  3.01, 1.37, /;"	v
DRIVING_INCAR_LUXURY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_INCAR_LUXURY      = new ReverbPreset(-1000, -2000, 0.0,  0.13, 0.41, /;"	v
DRIVING_INCAR_RACER	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_INCAR_RACER       = new ReverbPreset(-1000,     0, 0.0,  0.17, 2.0,  /;"	v
DRIVING_INCAR_SPORTS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_INCAR_SPORTS      = new ReverbPreset(-1000,  -400, 0.0,  0.17, 0.75, /;"	v
DRIVING_PITGARAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_PITGARAGE         = new ReverbPreset(-1000,  -300, 0.0,  1.72, 0.93, /;"	v
DRIVING_TUNNEL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRIVING_TUNNEL            = new ReverbPreset(-1000,  -800, 0.0,  3.42, 0.94, /;"	v
DRUGGED	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DRUGGED                   = new ReverbPreset(-1000,     0, 0.0,  8.39, 1.39, /;"	v
DUSTYROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var DUSTYROOM                 = new ReverbPreset(-1000,  -200, 0.0,  1.79, 0.38, /;"	v
DVec2	heaps/hxd/fmt/hmd/Data.hx	/^	public var DVec2 = 2;$/;"	v
DVec3	heaps/hxd/fmt/hmd/Data.hx	/^	public var DVec3 = 3;$/;"	v
DVec4	heaps/hxd/fmt/hmd/Data.hx	/^	public var DVec4 = 4;$/;"	v
Data	heaps/hxd/fmt/grd/Data.hx	/^class Data extends haxe.ds.StringMap<Gradient> { }$/;"	c
Data	heaps/hxd/fmt/hmd/Data.hx	/^class Data {$/;"	c
Data	heaps/hxd/fmt/pak/Data.hx	/^class Data {$/;"	c
Data	heaps/hxd/snd/Data.hx	/^class Data {$/;"	c
DataLayout	heaps/h3d/anim/BufferAnimation.hx	/^enum DataLayout {$/;"	e
DataPosition	heaps/hxd/fmt/hmd/Data.hx	/^typedef DataPosition = Int;$/;"	t
Dce	heaps/hxsl/Dce.hx	/^class Dce {$/;"	c
Dds	heaps/hxd/res/Image.hx	/^	var Dds = 4;$/;"	v
Debug	heaps/h3d/scene/pbr/Renderer.hx	/^	var Debug = "Debug";$/;"	v
DebugMode	heaps/h3d/shader/pbr/Slides.hx	/^@:enum abstract DebugMode(Int) {$/;"	a
Decal	heaps/h3d/mat/PbrMaterial.hx	/^	var Decal = "Decal";$/;"	v
Decal	heaps/h3d/scene/pbr/Decal.hx	/^class Decal extends Mesh {$/;"	c
DecalOverlay	heaps/h3d/shader/pbr/VolumeDecal.hx	/^class DecalOverlay extends hxsl.Shader {$/;"	c
DecalPBR	heaps/h3d/shader/pbr/VolumeDecal.hx	/^class DecalPBR extends hxsl.Shader {$/;"	c
DecalPass	heaps/h3d/mat/PbrMaterial.hx	/^	var DecalPass = "DecalPass";$/;"	v
Decrement	heaps/h3d/mat/PbrMaterial.hx	/^	var Decrement = "Decrement";$/;"	v
DecrementWrap	heaps/h3d/mat/PbrMaterial.hx	/^	var DecrementWrap = "DecrementWrap";$/;"	v
Default	heaps/h3d/pass/Default.hx	/^class Default extends Base {$/;"	c
DefaultFont	heaps/hxd/res/DefaultFont.hx	/^class DefaultFont {$/;"	c
DefaultForward	heaps/h3d/shader/pbr/DefaultForward.hx	/^class DefaultForward extends hxsl.Shader {$/;"	c
DefaultKind	heaps/h3d/mat/Material.hx	/^@:enum private abstract DefaultKind(String) {$/;"	a
DefaultMatrixes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^class DefaultMatrixes {$/;"	c
DefaultProps	heaps/h3d/mat/Material.hx	/^private typedef DefaultProps = {$/;"	t
DefaultShadowMap	heaps/h3d/pass/DefaultShadowMap.hx	/^class DefaultShadowMap extends DirShadowMap {$/;"	c
Defaults	heaps/h3d/mat/Defaults.hx	/^class Defaults {$/;"	c
Delaunay	heaps/h2d/col/Delaunay.hx	/^class Delaunay {$/;"	c
DelaunayEdge	heaps/h2d/col/Delaunay.hx	/^private class DelaunayEdge  {$/;"	c
DelaunayEdges	heaps/h2d/col/Delaunay.hx	/^			var DelaunayEdges = [];$/;"	v
DelaunayTriangle	heaps/h2d/col/Delaunay.hx	/^class DelaunayTriangle  {$/;"	c
DeleteFromAEL	heaps/hxd/clipper/Clipper.hx	/^	private function DeleteFromAEL(e:TEdge)$/;"	f
DeleteFromSEL	heaps/hxd/clipper/Clipper.hx	/^	private function DeleteFromSEL(e:TEdge)$/;"	f
Depth	heaps/h3d/shader/pbr/Slides.hx	/^	var Depth = 6;$/;"	v
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = haxe.GraphicsDriver.DepthBuffer;$/;"	t
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = { r : haxe.GLTypes.Renderbuffer };$/;"	t
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = { r : js.html.webgl.Renderbuffer #if multidriver, driver : Driver #end };$/;"	t
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = { r : sdl.GL.Renderbuffer };$/;"	t
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = { res : dx.Resource, view : dx.Driver.DepthStencilView };$/;"	t
DepthBuffer	heaps/h3d/impl/Driver.hx	/^typedef DepthBuffer = {};$/;"	t
DepthBuffer	heaps/h3d/mat/DepthBuffer.hx	/^class DepthBuffer {$/;"	c
DepthCopy	heaps/h3d/scene/pbr/Renderer.hx	/^class DepthCopy extends h3d.shader.ScreenShader {$/;"	c
DepthEntry	heaps/h2d/ZGroup.hx	/^private class DepthEntry {$/;"	c
DepthFormat	heaps/h3d/mat/DepthBuffer.hx	/^enum DepthFormat {$/;"	e
DepthMap	heaps/h2d/ZGroup.hx	/^class DepthMap {$/;"	c
DepthPass	heaps/h3d/scene/fwd/Renderer.hx	/^class DepthPass extends h3d.pass.Default {$/;"	c
Device	heaps/hxd/snd/openal/Emulator.hx	/^class Device {$/;"	c
Diagram	heaps/h2d/col/Voronoi.hx	/^class Diagram {$/;"	c
Dir1	heaps/hxd/clipper/Clipper.hx	/^		var Dir1 = (op1.pt.x > op1b.pt.x ? Direction.RightToLeft : Direction.LeftToRight);$/;"	v
Dir2	heaps/hxd/clipper/Clipper.hx	/^		var Dir2 = (op2.pt.x > op2b.pt.x ? Direction.RightToLeft : Direction.LeftToRight);$/;"	v
DirLight	heaps/h3d/scene/fwd/DirLight.hx	/^class DirLight extends Light {$/;"	c
DirLight	heaps/h3d/scene/pbr/DirLight.hx	/^class DirLight extends Light {$/;"	c
DirLight	heaps/h3d/shader/DirLight.hx	/^class DirLight extends hxsl.Shader {$/;"	c
DirLight	heaps/h3d/shader/pbr/Light.hx	/^class DirLight extends Light {$/;"	c
DirShadow	heaps/h3d/shader/DirShadow.hx	/^class DirShadow extends hxsl.Shader {$/;"	c
DirShadowMap	heaps/h3d/pass/DirShadowMap.hx	/^class DirShadowMap extends Shadows {$/;"	c
Direct	heaps/h3d/shader/pbr/Lighting.hx	/^class Direct extends PropsDefinition {$/;"	c
DirectXDriver	heaps/h3d/impl/DirectXDriver.hx	/^class DirectXDriver extends h3d.impl.Driver {$/;"	c
Direction	heaps/hxd/Direction.hx	/^@:enum abstract Direction(Int) {$/;"	a
Disc	heaps/h3d/prim/Disc.hx	/^class Disc extends Polygon {$/;"	c
DiscardLeftSide	heaps/hxd/clipper/Clipper.hx	/^			var DiscardLeftSide;$/;"	v
Displacement	heaps/h2d/filter/Displacement.hx	/^class Displacement extends Filter {$/;"	c
Displacement	heaps/h3d/shader/Displacement.hx	/^class Displacement extends ScreenShader {$/;"	c
DisplayMode	heaps/h3d/scene/pbr/Renderer.hx	/^@:enum abstract DisplayMode(String) {$/;"	a
DisplayMode	heaps/hxd/Window.flash.hx	/^enum DisplayMode {$/;"	e
DisplayMode	heaps/hxd/Window.hl.hx	/^enum DisplayMode {$/;"	e
DisplayMode	heaps/hxd/Window.hl.hx	/^typedef DisplayMode = dx.Window.DisplayMode;$/;"	t
DisplayMode	heaps/hxd/Window.hl.hx	/^typedef DisplayMode = sdl.Window.DisplayMode;$/;"	t
DisplayMode	heaps/hxd/Window.hx	/^enum DisplayMode {$/;"	e
DisplayMode	heaps/hxd/Window.js.hx	/^enum DisplayMode {$/;"	e
DisplaySetting	heaps/hxd/Window.hl.hx	/^typedef DisplaySetting = {$/;"	t
DisposeAllPolyPts	heaps/hxd/clipper/Clipper.hx	/^	private function DisposeAllPolyPts() {$/;"	f
DisposeOutRec	heaps/hxd/clipper/Clipper.hx	/^	function DisposeOutRec(index:Int) {$/;"	f
DisposeScanbeamList	heaps/hxd/clipper/Clipper.hx	/^	function DisposeScanbeamList()$/;"	f
DistanceFromLineSqrd	heaps/hxd/clipper/Clipper.hx	/^      private function DistanceFromLineSqrd(pt : IPoint, ln1 : IPoint, ln2 : IPoint)$/;"	f
Distortion	heaps/h3d/mat/PbrMaterial.hx	/^	var Distortion = "Distortion";$/;"	v
Distortion	heaps/h3d/shader/pbr/Distortion.hx	/^class Distortion extends h3d.shader.ScreenShader {$/;"	c
Dna	heaps/hxd/fmt/blend/Data.hx	/^class Dna {$/;"	c
DnaStruct	heaps/hxd/fmt/blend/Data.hx	/^class DnaStruct {$/;"	c
DoMaxima	heaps/hxd/clipper/Clipper.hx	/^	private function DoMaxima(e:TEdge)$/;"	f
DoSimplePolygons	heaps/hxd/clipper/Clipper.hx	/^	private function DoSimplePolygons()$/;"	f
Domkit	heaps/samples/Domkit.hx	/^class Domkit extends hxd.App {$/;"	c
Double	heaps/hxd/fmt/tiff/Data.hx	/^	public var Double = 12;$/;"	v
Down	heaps/hxd/Direction.hx	/^	public var Down = 9;$/;"	v
Drawable	heaps/h2d/Drawable.hx	/^class Drawable extends Object {$/;"	c
DrawableComp	heaps/h2d/domkit/BaseComponents.hx	/^class DrawableComp extends ObjectComp implements domkit.Component.ComponentDecl<h2d.Drawable> {$/;"	c
DrawingTiles	heaps/samples/DrawingTiles.hx	/^class DrawingTiles extends SampleApp {$/;"	c
Driver	heaps/h3d/impl/Driver.hx	/^class Driver {$/;"	c
Driver	heaps/hxd/snd/Driver.hx	/^interface Driver {$/;"	i
Driver	heaps/hxd/snd/openal/Driver.hx	/^class Driver implements hxd.snd.Driver {$/;"	c
Driver	heaps/hxd/snd/webaudio/Driver.hx	/^class Driver implements hxd.snd.Driver {$/;"	c
DriverFeature	heaps/hxd/snd/Driver.hx	/^enum DriverFeature {$/;"	e
DropShadow	heaps/h2d/filter/DropShadow.hx	/^class DropShadow extends Glow {$/;"	c
Dropdown	heaps/h2d/Dropdown.hx	/^class Dropdown extends Flow {$/;"	c
DummyConvert	heaps/hxd/fs/Convert.hx	/^class DummyConvert extends Convert {$/;"	c
Dump	heaps/hxd/fmt/hmd/Dump.hx	/^class Dump {$/;"	c
DupOutPt	heaps/hxd/clipper/Clipper.hx	/^	function DupOutPt(outPt : OutPt, InsertAfter : Bool)$/;"	f
Dynamic	heaps/hxd/impl/Allocator.hx	/^	public var Dynamic = 0;$/;"	v
Dynamic	heaps/hxsl/DynamicShader.hx	/^	var Dynamic = 0;$/;"	v
DynamicPrimitive	heaps/h3d/prim/DynamicPrimitive.hx	/^class DynamicPrimitive extends Primitive {$/;"	c
DynamicShader	heaps/hxsl/DynamicShader.hx	/^class DynamicShader extends Shader {$/;"	c
DynamicText	heaps/hxd/res/DynamicText.hx	/^class DynamicText {$/;"	c
DynamicTextMeta	heaps/hxd/res/DynamicText.hx	/^typedef DynamicTextMeta = Map<String,DynamicTextMetaContent>;$/;"	t
DynamicTextMetaContent	heaps/hxd/res/DynamicText.hx	/^typedef DynamicTextMetaContent = { skip : Bool, sub : DynamicTextMeta };$/;"	t
E	heaps/h3d/scene/CameraController.hx	/^			var E = 2e-5;$/;"	v
E	heaps/hxd/Key.hx	/^	public static inline var E			= 69;$/;"	v
E2InsertsBeforeE1	heaps/hxd/clipper/Clipper.hx	/^	private function E2InsertsBeforeE1(e1:TEdge,e2:TEdge) : Bool$/;"	f
EARCUT	heaps/h2d/Graphics.hx	/^	static var EARCUT = null;$/;"	v
EFX	heaps/hxd/snd/openal/AudioTypes.hx	/^typedef EFX = openal.EFX;$/;"	t
EFX	heaps/hxd/snd/openal/Emulator.hx	/^class EFX {$/;"	c
EFX_MAJOR_VERSION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EFX_MAJOR_VERSION                     = 0x20001;$/;"	v
EFX_MINOR_VERSION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EFX_MINOR_VERSION                     = 0x20002;$/;"	v
ENABLE	heaps/hxd/Worker.hx	/^	public static var ENABLE = false;$/;"	v
ENABLE	heaps/hxd/Worker.hx	/^	public static var ENABLE = flash.system.Worker.isSupported;$/;"	v
ENABLE_AUTO_WATCH	heaps/hxd/res/Image.hx	/^	static var ENABLE_AUTO_WATCH = true;$/;"	v
ENABLE_AUTO_WATCH	heaps/hxd/res/Sound.hx	/^	static var ENABLE_AUTO_WATCH = true;$/;"	v
END	heaps/hxd/Key.hx	/^	public static inline var END		= 35;$/;"	v
ENGINE_PACKAGES	heaps/hxd/impl/AllocPos.hx	/^	public static var ENGINE_PACKAGES = ["h3d","hxd","h2d","haxe","sys","hrt" \/* HIDE *\/];$/;"	v
ENTER	heaps/hxd/Key.hx	/^	public static inline var ENTER		= 13;$/;"	v
ENUMERATE_ALL_EXT	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ENUMERATE_ALL_EXT                = 1;$/;"	v
EPSILON	heaps/h3d/anim/Animation.hx	/^	static inline var EPSILON = 0.000001;$/;"	v
EPSILON	heaps/hxd/Math.hx	/^	public static inline var EPSILON = 1e-10;$/;"	v
EPSILON	heaps/hxd/poly2tri/Constants.hx	/^	static public var EPSILON = 0;$/;"	v
EPSILON	heaps/hxd/poly2tri/Constants.hx	/^	static public var EPSILON:Float  = 1e-24;$/;"	v
ESCAPE	heaps/hxd/Key.hx	/^	public static inline var ESCAPE		= 27;$/;"	v
EStart	heaps/hxd/clipper/Clipper.hx	/^		var EStart : TEdge;$/;"	v
EXPONENT_DISTANCE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EXPONENT_DISTANCE         = 0xD005;$/;"	v
EXPONENT_DISTANCE_CLAMPED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EXPONENT_DISTANCE_CLAMPED = 0xD006;$/;"	v
EXTENSIONS	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EXTENSIONS                       = 0x1006;$/;"	v
EXTENSIONS	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EXTENSIONS                 = 0xB004;$/;"	v
EXT_CAPTURE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var EXT_CAPTURE                      = 1;$/;"	v
EarNode	heaps/hxd/earcut/Earcut.hx	/^class EarNode {$/;"	c
Earcut	heaps/hxd/earcut/Earcut.hx	/^class Earcut {$/;"	c
Edge	heaps/h2d/col/Voronoi.hx	/^class Edge {$/;"	c
Edge	heaps/hxd/poly2tri/Edge.hx	/^class Edge$/;"	c
EdgeEvent	heaps/hxd/poly2tri/EdgeEvent.hx	/^class EdgeEvent$/;"	c
EdgesAdjacent	heaps/hxd/clipper/Clipper.hx	/^	private inline function EdgesAdjacent(inode:IntersectNode) : Bool$/;"	f
Effect	heaps/hxd/snd/Effect.hx	/^class Effect {$/;"	c
EffectDriver	heaps/hxd/snd/Driver.hx	/^class EffectDriver<T> {$/;"	c
ElementsIterator	heaps/h2d/SpriteBatch.hx	/^private class ElementsIterator {$/;"	c
Embed	heaps/hxd/res/Embed.hx	/^class Embed {$/;"	c
EmbedEntry	heaps/hxd/fs/EmbedFileSystem.hx	/^private class EmbedEntry extends FileEntry {$/;"	c
EmbedFileSystem	heaps/hxd/fs/EmbedFileSystem.hx	/^class EmbedFileSystem #if !macro implements FileSystem #end {$/;"	c
EmbedOptions	heaps/hxd/res/EmbedOptions.hx	/^typedef EmbedOptions = {$/;"	t
Emitter	heaps/h3d/parts/Emitter.hx	/^class Emitter extends Particles implements Randomized {$/;"	c
Emmissive	heaps/h3d/shader/pbr/Slides.hx	/^	var Emmissive = 5;$/;"	v
Emulator	heaps/hxd/snd/openal/Emulator.hx	/^class Emulator {$/;"	c
EndType	heaps/hxd/clipper/EndType.hx	/^enum EndType {$/;"	e
Engine	heaps/h3d/Engine.hx	/^class Engine {$/;"	c
Env	heaps/h3d/scene/pbr/Renderer.hx	/^	var Env = "Env";$/;"	v
Environment	heaps/h3d/scene/pbr/Environment.hx	/^class Environment {$/;"	c
Epsilon	heaps/h2d/col/Delaunay.hx	/^	static inline var Epsilon = 1e-10;$/;"	v
Equal	heaps/h3d/mat/PbrMaterial.hx	/^	var Equal = "Equal";$/;"	v
Error	heaps/hxsl/Ast.hx	/^class Error {$/;"	c
Eval	heaps/hxsl/Eval.hx	/^class Eval {$/;"	c
Event	heaps/hxd/Event.hx	/^class Event {$/;"	c
Event	heaps/hxd/Pad.hx	/^private typedef Event = {$/;"	t
EventKind	heaps/hxd/Event.hx	/^enum EventKind {$/;"	e
ExcludeOp	heaps/hxd/clipper/Clipper.hx	/^      private function ExcludeOp(op : OutPt)$/;"	f
ExecuteInternal	heaps/hxd/clipper/Clipper.hx	/^	private function ExecuteInternal() {$/;"	f
ExecuteTree	heaps/hxd/clipper/Clipper.hx	/^	public function ExecuteTree(clipType:ClipType, polytree:PolyTree, ?subjFillType, ?clipFillType /;"	f
Exit	heaps/hxsl/Dce.hx	/^private class Exit {$/;"	c
Expr	heaps/hxsl/Ast.hx	/^typedef Expr = { expr : ExprDef, pos : Position };$/;"	t
ExprDef	heaps/hxsl/Ast.hx	/^enum ExprDef {$/;"	e
ExtraTests	heaps/samples/ExtraTests.hx	/^class ExtraTests extends hxd.App {$/;"	c
F	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var F = fresnelSchlick(VdH, F0);\/\/ Fresnel term$/;"	v
F	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var F = F0 + (max(vec3(1 - roughness), F0) - F0) * exp2( ( -5.55473 * NdV - 6.98316) * NdV );$/;"	v
F	heaps/h3d/shader/pbr/Lighting.hx	/^				var F = F0 + (max(vec3(1 - roughness), F0) - F0) * exp2( ( -5.55473 * NdV - 6.98316) * NdV )/;"	v
F	heaps/h3d/shader/pbr/Lighting.hx	/^				var F = fresnelSchlick(VdH, F0);\/\/ Fresnel term$/;"	v
F	heaps/hxd/Key.hx	/^	public static inline var F			= 70;$/;"	v
F	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var F = Math.PI \/ 180;$/;"	v
F0	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var F0 : Vec3;$/;"	v
F0	heaps/h3d/shader/pbr/Lighting.hx	/^				var F0 = pbrSpecularColor;$/;"	v
F1	heaps/hxd/Key.hx	/^	public static inline var F1			= 112;$/;"	v
F10	heaps/hxd/Key.hx	/^	public static inline var F10		= 121;$/;"	v
F11	heaps/hxd/Key.hx	/^	public static inline var F11		= 122;$/;"	v
F12	heaps/hxd/Key.hx	/^	public static inline var F12		= 123;$/;"	v
F13	heaps/hxd/Key.hx	/^	public static inline var F13		= 124;$/;"	v
F14	heaps/hxd/Key.hx	/^	public static inline var F14		= 125;$/;"	v
F15	heaps/hxd/Key.hx	/^	public static inline var F15		= 126;$/;"	v
F16	heaps/hxd/Key.hx	/^	public static inline var F16		= 127;$/;"	v
F17	heaps/hxd/Key.hx	/^	public static inline var F17		= 128;$/;"	v
F18	heaps/hxd/Key.hx	/^	public static inline var F18		= 129;$/;"	v
F19	heaps/hxd/Key.hx	/^	public static inline var F19		= 130;$/;"	v
F2	heaps/hxd/Key.hx	/^	public static inline var F2			= 113;$/;"	v
F20	heaps/hxd/Key.hx	/^	public static inline var F20		= 131;$/;"	v
F21	heaps/hxd/Key.hx	/^	public static inline var F21		= 132;$/;"	v
F22	heaps/hxd/Key.hx	/^	public static inline var F22		= 133;$/;"	v
F23	heaps/hxd/Key.hx	/^	public static inline var F23		= 134;$/;"	v
F24	heaps/hxd/Key.hx	/^	public static inline var F24		= 135;$/;"	v
F3	heaps/hxd/Key.hx	/^	public static inline var F3			= 114;$/;"	v
F32	heaps/hxd/snd/openal/Emulator.hx	/^private typedef F32 = Float;$/;"	t
F4	heaps/hxd/Key.hx	/^	public static inline var F4			= 115;$/;"	v
F5	heaps/hxd/Key.hx	/^	public static inline var F5			= 116;$/;"	v
F6	heaps/hxd/Key.hx	/^	public static inline var F6			= 117;$/;"	v
F7	heaps/hxd/Key.hx	/^	public static inline var F7			= 118;$/;"	v
F8	heaps/hxd/Key.hx	/^	public static inline var F8			= 119;$/;"	v
F9	heaps/hxd/Key.hx	/^	public static inline var F9			= 120;$/;"	v
FACE	heaps/h3d/impl/Stage3dDriver.hx	/^	static var FACE = [$/;"	v
FACES	heaps/h3d/impl/GlDriver.hx	/^	static var FACES = [$/;"	v
FACTORY_ALCOVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_ALCOVE            = new ReverbPreset(-1200,  -200, 0.0,  3.14, 0.65, /;"	v
FACTORY_COURTYARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_COURTYARD         = new ReverbPreset(-1000, -1000, 0.0,  2.32, 0.29, /;"	v
FACTORY_CUPBOARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_CUPBOARD          = new ReverbPreset(-1200,  -200, 0.0,  0.49, 0.65, /;"	v
FACTORY_HALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_HALL              = new ReverbPreset(-1000,  -300, 0.0,  7.43, 0.51, /;"	v
FACTORY_LARGEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_LARGEROOM         = new ReverbPreset(-1200,  -300, 0.0,  4.24, 0.51, /;"	v
FACTORY_LONGPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_LONGPASSAGE       = new ReverbPreset(-1200,  -200, 0.0,  4.06, 0.65, /;"	v
FACTORY_MEDIUMROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_MEDIUMROOM        = new ReverbPreset(-1200,  -200, 0.0,  2.76, 0.65, /;"	v
FACTORY_SHORTPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_SHORTPASSAGE      = new ReverbPreset(-1200,  -200, 0.0,  2.53, 0.65, /;"	v
FACTORY_SMALLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FACTORY_SMALLROOM         = new ReverbPreset(-1000,  -200, 0.0,  1.72, 0.65, /;"	v
FADE_SAMPLES	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	static inline var FADE_SAMPLES = 10; \/\/ Click prevent at the start.$/;"	v
FADE_START	heaps/hxd/snd/openal/Emulator.hx	/^	static inline var FADE_START = 10; \/\/ prevent clic at startup$/;"	v
FALSE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FALSE                            = 0;$/;"	v
FALSE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FALSE                      = 0;$/;"	v
FAllocated	heaps/h3d/scene/Object.hx	/^	public var FAllocated = 0x20;$/;"	v
FAlwaysSync	heaps/h3d/scene/Object.hx	/^	public var FAlwaysSync = 0x40;$/;"	v
FCulled	heaps/h3d/scene/Object.hx	/^	public var FCulled = 0x04;$/;"	v
FCullingColliderInherited	heaps/h3d/scene/Object.hx	/^	public var FCullingColliderInherited = 0x1000;$/;"	v
FFixedPosition	heaps/h3d/scene/Object.hx	/^	public var FFixedPosition = 0x2000;$/;"	v
FFixedPositionSynced	heaps/h3d/scene/Object.hx	/^	public var FFixedPositionSynced = 0x4000;$/;"	v
FFollowPositionOnly	heaps/h3d/scene/Object.hx	/^	public var FFollowPositionOnly = 0x08;$/;"	v
FIELDS	heaps/h2d/Particles.hx	/^	static var FIELDS = null;$/;"	v
FIELDS	heaps/h3d/parts/GpuParticles.hx	/^	static var FIELDS = null;$/;"	v
FILENAME	heaps/hxsl/CacheFile.hx	/^	public static var FILENAME = "res\/shaders.cache";$/;"	v
FILES_CHECK_MAX	heaps/hxd/fs/LocalFileSystem.hx	/^	public static var FILES_CHECK_MAX = 5;$/;"	v
FILTER	heaps/h3d/impl/DirectXDriver.hx	/^	static var FILTER : Array<Array<Filter>> = [$/;"	v
FILTER	heaps/h3d/impl/Stage3dDriver.hx	/^	static var FILTER = [$/;"	v
FILTER_NULL	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FILTER_NULL                           = 0x0000;$/;"	v
FIgnoreBounds	heaps/h3d/scene/Object.hx	/^	public var FIgnoreBounds = 0x200;$/;"	v
FIgnoreCollide	heaps/h3d/scene/Object.hx	/^	public var FIgnoreCollide = 0x400;$/;"	v
FIgnoreParentTransform	heaps/h3d/scene/Object.hx	/^	public var FIgnoreParentTransform = 0x800;$/;"	v
FInheritCulled	heaps/h3d/scene/Object.hx	/^	public var FInheritCulled = 0x80;$/;"	v
FKIND	heaps/hxsl/Serializer.hx	/^	static var FKIND = FunctionKind.createAll();$/;"	v
FLAGS	heaps/hxd/fmt/hmd/Dump.hx	/^		var FLAGS = Type.allEnums(AnimationFlag);$/;"	v
FLightCameraCenter	heaps/h3d/scene/Object.hx	/^	public var FLightCameraCenter = 0x10;$/;"	v
FModelRoot	heaps/h3d/scene/Object.hx	/^	public var FModelRoot = 0x100;$/;"	v
FONTS	heaps/hxd/res/FontBuilder.hx	/^	static var FONTS = new Map<String,h2d.Font>();$/;"	v
FOREST	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var FOREST                    = new ReverbPreset(-1000, -3300, 0.0,  1.49, 0.54, /;"	v
FORMAT	heaps/h3d/impl/Stage3dDriver.hx	/^	static var FORMAT = [$/;"	v
FORMAT_MONO16	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_MONO16              = 0x1101;$/;"	v
FORMAT_MONO8	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_MONO8               = 0x1100;$/;"	v
FORMAT_MONOF32	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_MONOF32				= 0x1110;$/;"	v
FORMAT_STEREO16	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_STEREO16            = 0x1103;$/;"	v
FORMAT_STEREO8	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_STEREO8             = 0x1102;$/;"	v
FORMAT_STEREOF32	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FORMAT_STEREOF32			= 0x1111;$/;"	v
FPoint	heaps/h3d/col/FPoint.hx	/^class FPoint {$/;"	c
FPosChanged	heaps/h3d/scene/Object.hx	/^	public var FPosChanged = 0x01;$/;"	v
FREQUENCY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FREQUENCY                        = 0x1007;$/;"	v
FREQUENCY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var FREQUENCY                  = 0x2001;$/;"	v
FVisible	heaps/h3d/scene/Object.hx	/^	public var FVisible = 0x02;$/;"	v
FXAA	heaps/h3d/pass/FXAA.hx	/^class FXAA extends ScreenFx<FXAAShader> {$/;"	c
FXAAShader	heaps/h3d/pass/FXAA.hx	/^private class FXAAShader extends h3d.shader.ScreenShader {$/;"	c
Face	heaps/h3d/mat/Data.hx	/^enum Face {$/;"	e
Fake	heaps/h2d/Dropdown.hx	/^private class Fake extends Object {$/;"	c
FastBytes	heaps/hxd/res/NanoJpeg.hx	/^private abstract FastBytes(haxe.io.Bytes) {$/;"	a
FbxNode	heaps/hxd/fmt/fbx/Data.hx	/^typedef FbxNode = {$/;"	t
FbxProp	heaps/hxd/fmt/fbx/Data.hx	/^enum FbxProp {$/;"	e
FbxTools	heaps/hxd/fmt/fbx/Data.hx	/^class FbxTools {$/;"	c
Feature	heaps/h3d/impl/Driver.hx	/^enum Feature {$/;"	e
File	heaps/hxd/File.hx	/^class File {$/;"	c
File	heaps/hxd/fmt/pak/Data.hx	/^class File {$/;"	c
File	heaps/hxd/impl/Air3File.hx	/^typedef File = Air3File;$/;"	t
FileConverter	heaps/hxd/fs/FileConverter.hx	/^class FileConverter {$/;"	c
FileEntry	heaps/hxd/fs/FileEntry.hx	/^class FileEntry {$/;"	c
FileEntry	heaps/hxd/res/FileTree.hx	/^private typedef FileEntry = { e : Expr, t : ComplexType, ?doc:String };$/;"	t
FileInput	heaps/hxd/fmt/pak/FileSystem.hx	/^class FileInput extends haxe.io.BytesInput {$/;"	c
FileInput	heaps/hxd/fs/FileInput.hx	/^class FileInput extends haxe.io.Input {$/;"	c
FileInput	heaps/hxd/impl/Air3File.hx	/^class FileInput extends haxe.io.Input {$/;"	c
FileSeek	heaps/hxd/fmt/pak/FileSystem.hx	/^class FileSeek {$/;"	c
FileSeek	heaps/hxd/impl/Air3File.hx	/^enum FileSeek {$/;"	e
FileSeekMode	heaps/hxd/fmt/pak/FileSystem.hx	/^enum FileSeekMode {$/;"	e
FileSeekMode	heaps/hxd/fmt/pak/FileSystem.hx	/^typedef FileSeekMode = sys.io.FileSeek;$/;"	t
FileSystem	heaps/hxd/fmt/pak/FileSystem.hx	/^class FileSystem implements hxd.fs.FileSystem {$/;"	c
FileSystem	heaps/hxd/fs/FileSystem.hx	/^interface FileSystem {$/;"	i
FileTree	heaps/hxd/res/FileTree.hx	/^class FileTree {$/;"	c
FileTreeData	heaps/hxd/res/FileTree.hx	/^typedef FileTreeData = {$/;"	t
Filter	heaps/h2d/filter/Filter.hx	/^class Filter {$/;"	c
Filter	heaps/h3d/mat/Data.hx	/^enum Filter {$/;"	e
Filter	heaps/hxd/fmt/fbx/Filter.hx	/^class Filter {$/;"	c
Filter	heaps/hxd/res/NanoJpeg.hx	/^enum Filter {$/;"	e
FilterStack	heaps/h2d/RenderContext.hx	/^private typedef FilterStack = { spr: h2d.Object, scaleX:Float, scaleY:Float };$/;"	t
Filters	heaps/samples/Filters.hx	/^class Filters extends hxd.App {$/;"	c
FindNextLocMin	heaps/hxd/clipper/Clipper.hx	/^    function FindNextLocMin(e : TEdge)  {$/;"	f
FirstIsBottomPt	heaps/hxd/clipper/Clipper.hx	/^	private function FirstIsBottomPt(btmPt1:OutPt,btmPt2:OutPt) : Bool$/;"	f
FixHoleLinkage	heaps/hxd/clipper/Clipper.hx	/^	function FixHoleLinkage(outRec:OutRec) {$/;"	f
FixedColor	heaps/h3d/pass/HardwarePick.hx	/^private class FixedColor extends hxsl.Shader {$/;"	c
FixedColor	heaps/h3d/shader/FixedColor.hx	/^class FixedColor extends hxsl.Shader {$/;"	c
FixupFirstLefts1	heaps/hxd/clipper/Clipper.hx	/^	private function FixupFirstLefts1(OldOutRec:OutRec, NewOutRec:OutRec)$/;"	f
FixupFirstLefts2	heaps/hxd/clipper/Clipper.hx	/^	private function FixupFirstLefts2(OldOutRec:OutRec,NewOutRec:OutRec)$/;"	f
FixupIntersectionOrder	heaps/hxd/clipper/Clipper.hx	/^	private function FixupIntersectionOrder() : Bool$/;"	f
FixupOutPolygon	heaps/hxd/clipper/Clipper.hx	/^	private function FixupOutPolygon(outRec:OutRec)$/;"	f
Flags	heaps/hxd/Pixels.hx	/^enum Flags {$/;"	e
FlashSocketInput	heaps/hxd/net/Socket.hx	/^private class FlashSocketInput extends SocketInput {$/;"	c
FlashSocketOutput	heaps/hxd/net/Socket.hx	/^private class FlashSocketOutput extends SocketOutput {$/;"	c
Flatten	heaps/hxsl/Flatten.hx	/^class Flatten {$/;"	c
Float	heaps/hxd/fmt/tiff/Data.hx	/^	public var Float = 11;$/;"	v
Float	heaps/hxsl/DynamicShader.hx	/^	var Float = 1;$/;"	v
Float32	heaps/hxd/impl/Float32.hx	/^typedef Float32 = #if hl hl.F32 #else Float #end;/;"	t
Float32Array	heaps/hxd/impl/TypedArray.hx	/^typedef Float32Array = haxe.ds.Vector<Float32>;$/;"	t
Float32Array	heaps/hxd/impl/TypedArray.hx	/^typedef Float32Array = js.html.Float32Array;$/;"	t
Float32Array	heaps/hxd/impl/TypedArray.hx	/^typedef Float32Array = js.lib.Float32Array;$/;"	t
Float32Expand	heaps/hxd/FloatBuffer.hx	/^private abstract Float32Expand({ pos : Int, array : hxd.impl.TypedArray.Float32Array }) {$/;"	a
FloatBuffer	heaps/hxd/FloatBuffer.hx	/^abstract FloatBuffer(InnerData) {$/;"	a
Flow	heaps/h2d/Flow.hx	/^class Flow extends Object {$/;"	c
FlowAlign	heaps/h2d/Flow.hx	/^enum FlowAlign {$/;"	e
FlowBg	heaps/h2d/domkit/BaseComponents.hx	/^typedef FlowBg = { tile : #if macro Bool #else h2d.Tile #end, borderL : Int, borderT : Int, bord/;"	t
FlowComp	heaps/h2d/domkit/BaseComponents.hx	/^class FlowComp extends ObjectComp implements domkit.Component.ComponentDecl<h2d.Flow> {$/;"	c
FlowLayout	heaps/h2d/Flow.hx	/^enum FlowLayout {$/;"	e
FlowOverflow	heaps/h2d/Flow.hx	/^enum FlowOverflow {$/;"	e
FlowProperties	heaps/h2d/Flow.hx	/^class FlowProperties {$/;"	c
Flows	heaps/samples/Flows.hx	/^class Flows extends hxd.App {$/;"	c
Font	heaps/h2d/Font.hx	/^class Font {$/;"	c
Font	heaps/hxd/res/Font.hx	/^class Font extends Resource {$/;"	c
FontBuildOptions	heaps/hxd/res/FontBuilder.hx	/^typedef FontBuildOptions = {$/;"	t
FontBuilder	heaps/hxd/res/FontBuilder.hx	/^class FontBuilder {$/;"	c
FontChar	heaps/h2d/Font.hx	/^class FontChar {$/;"	c
FontParser	heaps/hxd/fmt/bfnt/FontParser.hx	/^class FontParser {$/;"	c
FontType	heaps/h2d/Font.hx	/^enum FontType {$/;"	e
FormatMap	heaps/hxd/fmt/hmd/Library.hx	/^private class FormatMap {$/;"	c
Forward	heaps/h3d/mat/PbrMaterial.hx	/^	var Forward = "Forward";$/;"	v
Framebuffer	heaps/h3d/impl/GlDriver.hx	/^private typedef Framebuffer = haxe.GLTypes.Framebuffer;$/;"	t
Framebuffer	heaps/h3d/impl/GlDriver.hx	/^private typedef Framebuffer = js.html.webgl.Framebuffer;$/;"	t
Framebuffer	heaps/h3d/impl/GlDriver.hx	/^private typedef Framebuffer = sdl.GL.Framebuffer;$/;"	t
FreeCell	heaps/h3d/impl/ManagedBuffer.hx	/^private class FreeCell {$/;"	c
Front	heaps/h3d/mat/PbrMaterial.hx	/^	var Front = "Front";$/;"	v
Frustum	heaps/h3d/col/Frustum.hx	/^class Frustum {$/;"	c
Full	heaps/h3d/shader/pbr/Slides.hx	/^	var Full = 0;$/;"	v
Fullscreen	heaps/samples/Fullscreen.hx	/^class Fullscreen extends SampleApp {$/;"	c
FunDecl	heaps/hxsl/Ast.hx	/^typedef FunDecl = {$/;"	t
FunType	heaps/hxsl/Ast.hx	/^typedef FunType = { args : Array<{ name : String, type : Type }>, ret : Type };$/;"	t
FunctionKind	heaps/hxsl/Ast.hx	/^enum FunctionKind {$/;"	e
FxView	heaps/samples/FxView.hx	/^class FxView extends hxd.App {$/;"	c
G	G.hx	/^class G {$/;"	c
G	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var G = geometrySchlickGGX(NdV, NdL, roughness);\/\/ Geometric attenuation$/;"	v
G	heaps/h3d/shader/pbr/Lighting.hx	/^				var G = geometrySchlickGGX(NdV, NdL, roughness);\/\/ Geometric attenuation$/;"	v
G	heaps/hxd/Key.hx	/^	public static inline var G			= 71;$/;"	v
G	heaps/hxd/Pixels.hx	/^	public var G = 1;$/;"	v
GAIN	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var GAIN                       = 0x100A;$/;"	v
GAMMA_CORRECT	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@const var GAMMA_CORRECT : Bool;$/;"	v
GENERIC	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var GENERIC                   = new ReverbPreset(-1000,  -100, 0.0,  1.49, 0.83, /;"	v
GGX	heaps/h3d/scene/pbr/Environment.hx	/^		function GGX( NdotV : Float, roughness : Float ) : Float {$/;"	f
GL	heaps/h3d/impl/GlDriver.hx	/^private typedef GL = js.html.webgl.GL2;$/;"	t
GLOBALS	heaps/hxsl/Checker.hx	/^	static var GLOBALS = null;$/;"	v
GLOBALS	heaps/hxsl/GlslOut.hx	/^	static var GLOBALS = {$/;"	v
GLOBALS	heaps/hxsl/HlslOut.hx	/^	static var GLOBALS = {$/;"	v
GLOBAL_STR_MAP	heaps/hxd/fmt/hbson/Reader.hx	/^	static var GLOBAL_STR_MAP : Map<String,String> = [];$/;"	v
GLShader	heaps/h3d/impl/GlDriver.hx	/^private typedef GLShader = haxe.GLTypes.Shader;$/;"	t
GLShader	heaps/h3d/impl/GlDriver.hx	/^private typedef GLShader = js.html.webgl.Shader;$/;"	t
GLShader	heaps/h3d/impl/GlDriver.hx	/^private typedef GLShader = sdl.GL.Shader;$/;"	t
GPREC	heaps/hxd/Perlin.hx	/^	static inline var GPREC = 65536;$/;"	v
GPoint	heaps/h2d/Graphics.hx	/^class GPoint {$/;"	c
GPoint	heaps/h3d/scene/Graphics.hx	/^private class GPoint {$/;"	c
GRADIENTS	heaps/hxd/Perlin.hx	/^	static var GRADIENTS = [$/;"	v
GUID	heaps/h3d/Buffer.hx	/^	public static var GUID = 0;$/;"	v
G_Smith	heaps/h3d/scene/pbr/Environment.hx	/^		function G_Smith(roughness : Float, nDotV : Float, nDotL : Float) : Float {$/;"	f
GameController	heaps/hxd/Pad.hx	/^private class GameController {$/;"	c
GammaCorrect	heaps/h3d/shader/pbr/GammaCorrect.hx	/^class GammaCorrect extends hxsl.Shader {$/;"	c
GenPointApi	heaps/h2d/impl/PointApi.hx	/^interface GenPointApi<Point,Unit> {$/;"	i
GenTexture	heaps/h3d/shader/GenTexture.hx	/^class GenTexture extends ScreenShader {$/;"	c
Generator	heaps/samples/Generator.hx	/^class Generator {$/;"	c
GeoAsciiParams	heaps/hxd/fmt/tiff/Data.hx	/^	public var GeoAsciiParams = 34737;$/;"	v
GeoDoubleParams	heaps/hxd/fmt/tiff/Data.hx	/^	public var GeoDoubleParams = 34736;$/;"	v
GeoKeyDirectory	heaps/hxd/fmt/tiff/Data.hx	/^	public var GeoKeyDirectory = 34735;$/;"	v
GeoSphere	heaps/h3d/prim/GeoSphere.hx	/^class GeoSphere extends Polygon {$/;"	c
Geometry	heaps/hxd/fmt/fbx/Geometry.hx	/^class Geometry {$/;"	c
Geometry	heaps/hxd/fmt/hmd/Data.hx	/^class Geometry {$/;"	c
GeometryBuffer	heaps/hxd/fmt/hmd/Library.hx	/^class GeometryBuffer {$/;"	c
GeometryDataFormat	heaps/hxd/fmt/hmd/Data.hx	/^@:enum abstract GeometryDataFormat(Int) {$/;"	a
GeometryFormat	heaps/hxd/fmt/hmd/Data.hx	/^class GeometryFormat {$/;"	c
Get started!	heaps/README.md	/^Get started!$/;"	s
GetBottomPt	heaps/hxd/clipper/Clipper.hx	/^	private function GetBottomPt(pp:OutPt) : OutPt$/;"	f
GetDx	heaps/hxd/clipper/Clipper.hx	/^	private function GetDx(pt1:IPoint,pt2:IPoint) : Float$/;"	f
GetHorzDirection	heaps/hxd/clipper/Clipper.hx	/^	function GetHorzDirection(HorzEdge : TEdge) {$/;"	f
GetLowermostRec	heaps/hxd/clipper/Clipper.hx	/^	private function GetLowermostRec(outRec1:OutRec,outRec2:OutRec) : OutRec$/;"	f
GetMaximaPair	heaps/hxd/clipper/Clipper.hx	/^	private function GetMaximaPair(e:TEdge) : TEdge$/;"	f
GetNextInAEL	heaps/hxd/clipper/Clipper.hx	/^	private inline function GetNextInAEL(e:TEdge,dir:Direction) : TEdge$/;"	f
GetOutRec	heaps/hxd/clipper/Clipper.hx	/^	private function GetOutRec(idx:Int) : OutRec$/;"	f
GetOverlap	heaps/hxd/clipper/Clipper.hx	/^	function GetOverlap(a1 : Int, a2 : Int, b1 : Int, b2 : Int)$/;"	f
Gif	heaps/hxd/res/Image.hx	/^	var Gif = 2;$/;"	v
GlDriver	heaps/h3d/impl/GlDriver.hx	/^class GlDriver extends Driver {$/;"	c
GlobalSlot	heaps/hxsl/Globals.hx	/^abstract GlobalSlot<T>(Int) {$/;"	a
Globals	heaps/h3d/shader/Buffers.hx	/^	public var Globals = 0;$/;"	v
Globals	heaps/hxsl/Globals.hx	/^class Globals {$/;"	c
Glow	heaps/h2d/filter/Glow.hx	/^class Glow extends Blur {$/;"	c
GlowBlendShader	heaps/h2d/filter/InnerGlow.hx	/^private class GlowBlendShader extends h3d.shader.ScreenShader {$/;"	c
GlowShader	heaps/h2d/filter/InnerGlow.hx	/^private class GlowShader extends h3d.shader.ScreenShader {$/;"	c
GlslOut	heaps/hxsl/GlslOut.hx	/^class GlslOut {$/;"	c
GpuEmitMode	heaps/h3d/parts/GpuParticles.hx	/^enum GpuEmitMode {$/;"	e
GpuPart	heaps/h3d/parts/GpuParticles.hx	/^class GpuPart {$/;"	c
GpuPartGroup	heaps/h3d/parts/GpuParticles.hx	/^class GpuPartGroup {$/;"	c
GpuParticle	heaps/h3d/shader/GpuParticle.hx	/^class GpuParticle extends hxsl.Shader {$/;"	c
GpuParticles	heaps/h3d/parts/GpuParticles.hx	/^class GpuParticles extends h3d.scene.MultiMaterial {$/;"	c
GpuParticles	heaps/samples/GpuParticles.hx	/^class GpuParticles extends SampleApp {$/;"	c
GpuSave	heaps/h3d/parts/GpuParticles.hx	/^typedef GpuSave = {$/;"	t
GpuSortMode	heaps/h3d/parts/GpuParticles.hx	/^enum GpuSortMode {$/;"	e
Gradient	heaps/hxd/fmt/grd/Data.hx	/^class Gradient {$/;"	c
GradientStop	heaps/hxd/fmt/grd/Data.hx	/^class GradientStop {$/;"	c
Gradients	heaps/hxd/res/Gradients.hx	/^class Gradients extends Resource {$/;"	c
Graphics	heaps/h2d/Graphics.hx	/^class Graphics extends Drawable {$/;"	c
Graphics	heaps/h3d/scene/Graphics.hx	/^class Graphics extends Mesh {$/;"	c
GraphicsContent	heaps/h2d/Graphics.hx	/^private class GraphicsContent extends h3d.prim.Primitive {$/;"	c
GraphicsDraw	heaps/samples/GraphicsDraw.hx	/^class GraphicsDraw extends hxd.App {$/;"	c
GraphicsPoint	heaps/h2d/Graphics.hx	/^private typedef GraphicsPoint = hxd.poly2tri.Point;$/;"	t
Greater	heaps/h3d/mat/PbrMaterial.hx	/^	var Greater = "Greater";$/;"	v
GreaterEqual	heaps/h3d/mat/PbrMaterial.hx	/^	var GreaterEqual = "GreaterEqual";$/;"	v
Green	heaps/h2d/Font.hx	/^	var Green = 1;$/;"	v
Grid	heaps/h3d/prim/Grid.hx	/^class Grid extends Polygon {$/;"	c
GridHelper	heaps/samples/Helpers.hx	/^class GridHelper extends h3d.scene.Graphics {$/;"	c
Group	heaps/h2d/filter/Group.hx	/^class Group extends Filter {$/;"	c
GroupCollider	heaps/h3d/col/Collider.hx	/^class GroupCollider implements Collider {$/;"	c
H	heaps/hxd/Key.hx	/^	public static inline var H			= 72;$/;"	v
HALLWAY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var HALLWAY                   = new ReverbPreset(-1000,  -300, 0.0,  1.49, 0.59, /;"	v
HANGAR	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var HANGAR                    = new ReverbPreset(-1000, -1000, 0.0, 10.05, 0.23, /;"	v
HASHLINK	heaps/tools/mikktspace/Makefile	/^HASHLINK=\/usr\/local\/include$/;"	m
HASHLINK	heaps/tools/mikktspace/Makefile	/^HASHLINK=\/usr\/local\/lib$/;"	m
HEX	heaps/hxsl/CacheFile.hx	/^	static var HEX = "0123456789abcdef";$/;"	v
HIDE_LOG_TIMEOUT	heaps/h2d/Console.hx	/^	public static var HIDE_LOG_TIMEOUT = 3.;$/;"	v
HLSocketInput	heaps/hxd/net/Socket.hx	/^class HLSocketInput extends SocketInput {$/;"	c
HLSocketOutput	heaps/hxd/net/Socket.hx	/^class HLSocketOutput extends SocketOutput {$/;"	c
HMDModel	heaps/h3d/prim/HMDModel.hx	/^class HMDModel extends MeshPrimitive {$/;"	c
HMDOut	heaps/hxd/fmt/fbx/HMDOut.hx	/^class HMDOut extends BaseLibrary {$/;"	c
HMD_STRINGS	heaps/hxd/fmt/hmd/Reader.hx	/^	static var HMD_STRINGS : Map<String,String>;$/;"	v
HOME	heaps/hxd/Key.hx	/^	public static inline var HOME		= 36;$/;"	v
HORIZONTAL	heaps/hxd/clipper/Clipper.hx	/^	static inline var HORIZONTAL = -9007199254740992.; \/\/ -2^53, big enough for JS$/;"	v
HOST	heaps/samples/Network.hx	/^	static var HOST = "127.0.0.1";$/;"	v
HP	ra/hp/HP.hx	/^class HP {$/;"	c
HSVtoRGB	heaps/hxd/res/Gradients.hx	/^	static function HSVtoRGB(h : Float, s : Float, v : Float) : h3d.Vector$/;"	f
Halfedge	heaps/h2d/col/Voronoi.hx	/^class Halfedge {$/;"	c
Handle	heaps/hxd/fmt/blend/Data.hx	/^class Handle {$/;"	c
HardwarePick	heaps/h3d/pass/HardwarePick.hx	/^class HardwarePick extends Default {$/;"	c
Haxe	ra/Haxe.hx	/^class Haxe {$/;"	c
Hdr	heaps/hxd/res/Image.hx	/^	var Hdr = 6;$/;"	v
Heaps	heaps/README.md	/^# Heaps$/;"	c
Heaps	ra/Heaps.hx	/^class Heaps {$/;"	c
HeightMap	heaps/h3d/col/HeightMap.hx	/^class HeightMap implements Collider {$/;"	c
Helpers	heaps/samples/Helpers.hx	/^class Helpers extends hxd.App {$/;"	c
Hidden	heaps/h3d/mat/Material.hx	/^	var Hidden = "Hidden";$/;"	v
Hide	heaps/h2d/filter/AbstractMask.hx	/^class Hide extends Filter {$/;"	c
Hide	heaps/h3d/scene/pbr/Renderer.hx	/^	var Hide = "Hide";$/;"	v
HideProps	heaps/h3d/prim/ModelCache.hx	/^typedef HideProps = {$/;"	t
HlslOut	heaps/hxsl/HlslOut.hx	/^class HlslOut {$/;"	c
Horz	heaps/hxd/clipper/Clipper.hx	/^		var Horz : TEdge;$/;"	v
HorzSegmentsOverlap	heaps/hxd/clipper/Clipper.hx	/^	function HorzSegmentsOverlap(seg1a : Int, seg1b : Int, seg2a : Int, seg2b : Int) {$/;"	f
HtmlText	heaps/h2d/HtmlText.hx	/^class HtmlText extends Text {$/;"	c
HtmlText	heaps/samples/HtmlText.hx	/^class HtmlText extends hxd.App {$/;"	c
HtmlTextComp	heaps/h2d/domkit/BaseComponents.hx	/^class HtmlTextComp extends TextComp implements domkit.Component.ComponentDecl<h2d.HtmlText> {$/;"	c
HtmlTextWidget	heaps/samples/HtmlText.hx	/^class HtmlTextWidget extends Object$/;"	c
I	heaps/h3d/Matrix.hx	/^	public static function I() {$/;"	f
I	heaps/hxd/Key.hx	/^	public static inline var I			= 73;$/;"	v
IBounds	heaps/h2d/col/IBounds.hx	/^class IBounds {$/;"	c
ICEPALACE_ALCOVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_ALCOVE          = new ReverbPreset(-1000,  -500, 0.0,  2.76, 1.46, /;"	v
ICEPALACE_COURTYARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_COURTYARD       = new ReverbPreset(-1000, -1100, 0.0,  2.04, 1.2,  /;"	v
ICEPALACE_CUPBOARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_CUPBOARD        = new ReverbPreset(-1000,  -600, 0.0,  0.76, 1.53, /;"	v
ICEPALACE_HALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_HALL            = new ReverbPreset(-1000,  -700, 0.0,  5.49, 1.53, /;"	v
ICEPALACE_LARGEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_LARGEROOM       = new ReverbPreset(-1000,  -500, 0.0,  3.14, 1.53, /;"	v
ICEPALACE_LONGPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_LONGPASSAGE     = new ReverbPreset(-1000,  -500, 0.0,  3.01, 1.46, /;"	v
ICEPALACE_MEDIUMROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_MEDIUMROOM      = new ReverbPreset(-1000,  -500, 0.0,  2.22, 1.53, /;"	v
ICEPALACE_SHORTPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_SHORTPASSAGE    = new ReverbPreset(-1000,  -500, 0.0,  1.79, 1.46, /;"	v
ICEPALACE_SMALLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ICEPALACE_SMALLROOM       = new ReverbPreset(-1000,  -500, 0.0,  1.51, 1.53, /;"	v
ID	heaps/hxd/snd/Channel.hx	/^	static var ID = 0;$/;"	v
ID	heaps/hxd/snd/Manager.hx	/^	static var ID = 0;$/;"	v
ID	heaps/hxd/snd/openal/Emulator.hx	/^	static var ID = 0;$/;"	v
IDrawable	heaps/h3d/IDrawable.hx	/^interface IDrawable {$/;"	i
INITIAL	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INITIAL                    = 0x1011;$/;"	v
INIT_DONE	heaps/h2d/Video.hx	/^	static var INIT_DONE = false;$/;"	v
INSERT	heaps/hxd/Key.hx	/^	public static inline var INSERT		= 45;$/;"	v
INST	heaps/hxsl/Cache.hx	/^	static var INST : Cache;$/;"	v
INTL_BACKSLASH	heaps/hxd/Key.hx	/^	public static inline var INTL_BACKSLASH = 226; \/\/ Backslash located next to left shift on som/;"	v
INVALID_CONTEXT	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_CONTEXT                  = 0xA002;$/;"	v
INVALID_DEVICE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_DEVICE                   = 0xA001;$/;"	v
INVALID_ENUM	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_ENUM                     = 0xA003;$/;"	v
INVALID_ENUM	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_ENUM               = 0xA002;$/;"	v
INVALID_NAME	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_NAME               = 0xA001;$/;"	v
INVALID_OPERATION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_OPERATION          = 0xA004;$/;"	v
INVALID_VALUE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_VALUE                    = 0xA004;$/;"	v
INVALID_VALUE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVALID_VALUE              = 0xA003;$/;"	v
INVERSE_DISTANCE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVERSE_DISTANCE          = 0xD001;$/;"	v
INVERSE_DISTANCE_CLAMPED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var INVERSE_DISTANCE_CLAMPED  = 0xD002;$/;"	v
INVERT	heaps/hxd/Direction.hx	/^	static var INVERT = [ffrom(1, 1), Down, ffrom(1, -1), ffrom(0, 0), Right, ffrom(0, 0), Left, ff/;"	v
IPoint	heaps/h2d/col/IPoint.hx	/^class IPoint #if apicheck implements h2d.impl.PointApi.IPointApi<IPoint> #end {$/;"	c
IPoint	heaps/h3d/col/IPoint.hx	/^class IPoint #if apicheck implements h2d.impl.PointApi.IPointApi<IPoint> #end {$/;"	c
IPointApi	heaps/h2d/impl/PointApi.hx	/^interface IPointApi<Point> extends GenPointApi<Point,Int> {$/;"	i
IPolygon	heaps/h2d/col/IPolygon.hx	/^abstract IPolygon(Array<IPoint>) from Array<IPoint> to Array<IPoint> {$/;"	a
IPolygons	heaps/h2d/col/IPolygons.hx	/^abstract IPolygons(Array<IPolygon>) from Array<IPolygon> to Array<IPolygon> {$/;"	a
IVec	heaps/hxsl/Types.hx	/^typedef IVec = Array<Int>;$/;"	t
Image	heaps/hxd/res/Image.hx	/^class Image extends Resource {$/;"	c
ImageFormat	heaps/hxd/res/Image.hx	/^@:enum abstract ImageFormat(Int) {$/;"	a
ImageHeight	heaps/hxd/fmt/tiff/Data.hx	/^	public var ImageHeight = 257;$/;"	v
ImageInfo	heaps/hxd/res/Image.hx	/^class ImageInfo {$/;"	c
ImageInfoFlag	heaps/hxd/res/Image.hx	/^enum ImageInfoFlag {$/;"	e
ImageVerticalAlign	heaps/h2d/HtmlText.hx	/^enum ImageVerticalAlign {$/;"	e
ImageWidth	heaps/hxd/fmt/tiff/Data.hx	/^	public var ImageWidth = 256;$/;"	v
InCircle	heaps/h2d/col/Delaunay.hx	/^	static inline function InCircle( p:Point, p1:Point, p2:Point, p3:Point ){$/;"	f
Increment	heaps/h3d/mat/PbrMaterial.hx	/^	var Increment = "Increment";$/;"	v
IncrementWrap	heaps/h3d/mat/PbrMaterial.hx	/^	var IncrementWrap = "IncrementWrap";$/;"	v
Index	heaps/hxd/fmt/hmd/Data.hx	/^typedef Index<T> = Int;$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = flash.display3D.IndexBuffer3D;$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = haxe.GraphicsDriver.IndexBuffer;$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = { b : haxe.GLTypes.Buffer, is32 : Bool };$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = { b : js.html.webgl.Buffer, is32 : Bool };$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = { b : sdl.GL.Buffer, is32 : Bool };$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = { res : dx.Resource, count : Int, bits : Int };$/;"	t
IndexBuffer	heaps/h3d/impl/Driver.hx	/^typedef IndexBuffer = {};$/;"	t
IndexBuffer	heaps/hxd/IndexBuffer.hx	/^abstract IndexBuffer(InnerData) {$/;"	a
Indexes	heaps/h3d/Indexes.hx	/^class Indexes {$/;"	c
Indirect	heaps/h3d/shader/pbr/Lighting.hx	/^class Indirect extends PropsDefinition {$/;"	c
Influence	heaps/h3d/anim/Skin.hx	/^private class Influence {$/;"	c
Init	heaps/h3d/impl/VarBinding.hx	/^class Init {$/;"	c
InitComponents	heaps/h2d/domkit/InitComponents.hx	/^class InitComponents {$/;"	c
InitEdge	heaps/hxd/clipper/Clipper.hx	/^	inline function InitEdge(e:TEdge, eNext:TEdge, ePrev:TEdge, pt:IPoint) {$/;"	f
InitEdge2	heaps/hxd/clipper/Clipper.hx	/^	inline function InitEdge2(e:TEdge, polyType : PolyType ) {$/;"	f
InnerData	heaps/hxd/BytesBuffer.hx	/^private typedef InnerData = #if flash flash.utils.ByteArray #else haxe.io.BytesOutput #end$/;"	t
InnerData	heaps/hxd/FloatBuffer.hx	/^private typedef InnerData = #if flash flash.Vector<Float> #elseif js Float32Expand #else Array<h/;"	t
InnerData	heaps/hxd/IndexBuffer.hx	/^private typedef InnerData = #if flash flash.Vector<UInt> #else Array<hxd.impl.UInt16> #end$/;"	t
InnerData	heaps/hxd/impl/UncheckedBytes.hx	/^private typedef InnerData = #if hl hl.Bytes #elseif js TypedArray.Uint8Array #else haxe.io.Bytes/;"	t
InnerGlow	heaps/h2d/filter/InnerGlow.hx	/^class InnerGlow extends Blur {$/;"	c
InnerIterator	heaps/hxd/FloatBuffer.hx	/^private class InnerIterator {$/;"	c
InnerIterator	heaps/hxd/IndexBuffer.hx	/^private class InnerIterator {$/;"	c
Input	heaps/samples/Input.hx	/^class Input extends hxd.App {$/;"	c
InputComp	heaps/h2d/domkit/BaseComponents.hx	/^class InputComp extends TextComp implements domkit.Component.ComponentDecl<h2d.TextInput> {$/;"	c
InputNames	heaps/h3d/impl/Driver.hx	/^class InputNames {$/;"	c
InsertEdgeIntoAEL	heaps/hxd/clipper/Clipper.hx	/^	private function InsertEdgeIntoAEL(edge:TEdge, startEdge : TEdge = null)$/;"	f
InsertLocalMinima	heaps/hxd/clipper/Clipper.hx	/^	private function InsertLocalMinima(newLm:LocalMinima)$/;"	f
InsertLocalMinimaIntoAEL	heaps/hxd/clipper/Clipper.hx	/^	private function InsertLocalMinimaIntoAEL(botY:Int) {$/;"	f
InsertScanbeam	heaps/hxd/clipper/Clipper.hx	/^	private function InsertScanbeam(y:Int)$/;"	f
Inside	heaps/hxd/clipper/Clipper.hx	/^				var Inside = true;$/;"	v
InstanceBuffer	heaps/h3d/impl/InstanceBuffer.hx	/^class InstanceBuffer {$/;"	c
Instanced	heaps/h3d/prim/Instanced.hx	/^class Instanced extends MeshPrimitive {$/;"	c
InstancedOffsetShader	heaps/samples/ShaderAdvanced.hx	/^class InstancedOffsetShader extends hxsl.Shader {$/;"	c
Int16Array	heaps/hxd/impl/TypedArray.hx	/^typedef Int16Array = js.html.Int16Array;$/;"	t
Int16Array	heaps/hxd/impl/TypedArray.hx	/^typedef Int16Array = js.lib.Int16Array;$/;"	t
Interactive	heaps/h2d/Interactive.hx	/^class Interactive extends Object implements hxd.SceneEvents.Interactive {$/;"	c
Interactive	heaps/h3d/scene/Interactive.hx	/^class Interactive extends Object implements hxd.SceneEvents.Interactive {$/;"	c
Interactive	heaps/hxd/SceneEvents.hx	/^interface Interactive {$/;"	i
Interactive	heaps/samples/Interactive.hx	/^class Interactive extends SampleApp {$/;"	c
Interactive2D	heaps/samples/Interactive2D.hx	/^class Interactive2D extends SampleApp {$/;"	c
InteractiveScene	heaps/hxd/SceneEvents.hx	/^interface InteractiveScene {$/;"	i
IntersectEdges	heaps/hxd/clipper/Clipper.hx	/^	private function IntersectEdges(e1:TEdge, e2:TEdge, pt:IPoint) {$/;"	f
IntersectNode	heaps/hxd/clipper/Clipper.hx	/^private class IntersectNode {$/;"	c
IntersectNodeSort	heaps/hxd/clipper/Clipper.hx	/^	inline function IntersectNodeSort(node1 : IntersectNode, node2 : IntersectNode)$/;"	f
IntersectPoint	heaps/hxd/clipper/Clipper.hx	/^	inline function IntersectPoint(edge1 : TEdge, edge2 : TEdge)$/;"	f
Invert	heaps/h3d/mat/PbrMaterial.hx	/^	var Invert = "Invert";$/;"	v
InvertColorShader	heaps/h2d/filter/Shader.hx	/^	class InvertColorShader extends h3d.shader.ScreenShader {$/;"	c
Irrad	heaps/h3d/scene/pbr/Renderer.hx	/^	var Irrad = "Irrad";$/;"	v
IrradBase	heaps/h3d/scene/pbr/Environment.hx	/^class IrradBase extends h3d.shader.ScreenShader {$/;"	c
IrradLut	heaps/h3d/scene/pbr/Environment.hx	/^class IrradLut extends IrradBase {$/;"	c
IrradShader	heaps/h3d/scene/pbr/Environment.hx	/^class IrradShader extends IrradBase {$/;"	c
IsContributing	heaps/hxd/clipper/Clipper.hx	/^	private function IsContributing(edge:TEdge) : Bool$/;"	f
IsEvenOddAltFillType	heaps/hxd/clipper/Clipper.hx	/^	private inline function IsEvenOddAltFillType(edge:TEdge) : Bool$/;"	f
IsEvenOddFillType	heaps/hxd/clipper/Clipper.hx	/^	private inline function IsEvenOddFillType(edge:TEdge) : Bool$/;"	f
IsIntermediate	heaps/hxd/clipper/Clipper.hx	/^	private inline function IsIntermediate(e:TEdge,y:Float) : Bool$/;"	f
IsLastHorz	heaps/hxd/clipper/Clipper.hx	/^			var IsLastHorz = (horzEdge == eLastHorz);$/;"	v
IsMaxima	heaps/hxd/clipper/Clipper.hx	/^	private inline function IsMaxima(e:TEdge,y:Float) : Bool$/;"	f
IsMaximaEdge	heaps/hxd/clipper/Clipper.hx	/^			var IsMaximaEdge = IsMaxima(e, topY);$/;"	v
IsMinima	heaps/hxd/clipper/Clipper.hx	/^	private inline function IsMinima(e:TEdge) : Bool$/;"	f
J	heaps/hxd/Key.hx	/^	public static inline var J			= 74;$/;"	v
JAnimation	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JAnimation = {$/;"	t
JAttachment	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JAttachment = {$/;"	t
JBone	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JBone = {$/;"	t
JBoneAnimation	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JBoneAnimation = {$/;"	t
JCurve	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JCurve = haxe.ds.Either<String,Array<Float>>; \/\/ "stepped" | "linear" | [b1,b2,b3,b4] /;"	t
JP_KANA	heaps/hxd/Charset.hx	/^	public static var JP_KANA = "　あいうえおかきくけこさしすせそたちつてとな/;"	v
JRegionAttach	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JRegionAttach = { > JAttachment,$/;"	t
JSkeleton	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JSkeleton = {$/;"	t
JSkin	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JSkin = DynamicAccess<DynamicAccess<JAttachment>>;$/;"	t
JSkinMeshAttach	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JSkinMeshAttach = { >JAttachment,$/;"	t
JSlot	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JSlot = {$/;"	t
Join	heaps/hxd/clipper/Clipper.hx	/^private class Join {$/;"	c
JoinCommonEdges	heaps/hxd/clipper/Clipper.hx	/^	private function JoinCommonEdges() {$/;"	f
JoinHorz	heaps/hxd/clipper/Clipper.hx	/^	function JoinHorz(op1 : OutPt, op1b : OutPt, op2 : OutPt, op2b : OutPt, pt : IPoint, DiscardLef/;"	f
JoinPoints	heaps/hxd/clipper/Clipper.hx	/^	function JoinPoints(j : Join, outRec1 : OutRec, outRec2 : OutRec)$/;"	f
JoinType	heaps/hxd/clipper/JoinType.hx	/^enum JoinType {$/;"	e
Joint	heaps/h3d/anim/Skin.hx	/^class Joint {$/;"	c
Joint	heaps/h3d/scene/Skin.hx	/^class Joint extends Object {$/;"	c
Jpg	heaps/hxd/res/Image.hx	/^	var Jpg = 0;$/;"	v
JsonData	heaps/hxd/fmt/spine/JsonData.hx	/^typedef JsonData = {$/;"	t
K	heaps/hxd/Key.hx	/^	public static inline var K			= 75;$/;"	v
KEYWORDS	heaps/hxd/res/FileTree.hx	/^	static var KEYWORDS = [for( k in ["break","case","cast","catch","class","continue","default","d/;"	v
KFAnimProp	heaps/hxd/fmt/kframes/Data.hx	/^@:enum abstract KFAnimProp(String) {$/;"	a
KFAnimValue	heaps/hxd/fmt/kframes/Data.hx	/^typedef KFAnimValue = {$/;"	t
KFAnimation	heaps/hxd/fmt/kframes/Data.hx	/^typedef KFAnimation = {$/;"	t
KFFeature	heaps/hxd/fmt/kframes/Data.hx	/^typedef KFFeature = {$/;"	t
KFSize	heaps/hxd/fmt/kframes/Data.hx	/^abstract KFSize<T:Float>(Array<T>) {$/;"	a
KWDS	heaps/hxsl/GlslOut.hx	/^	static var KWDS = [for( k in KWD_LIST ) k => true];$/;"	v
KWDS	heaps/hxsl/HlslOut.hx	/^	static var KWDS = [for( k in KWD_LIST ) k => true];$/;"	v
KWD_LIST	heaps/hxsl/GlslOut.hx	/^	static var KWD_LIST = [$/;"	v
KWD_LIST	heaps/hxsl/HlslOut.hx	/^	static var KWD_LIST = [$/;"	v
Keep	heaps/h3d/mat/PbrMaterial.hx	/^	var Keep = "Keep";$/;"	v
Kerning	heaps/h2d/Font.hx	/^class Kerning {$/;"	c
Key	heaps/hxd/Key.hx	/^class Key {$/;"	c
Key	heaps/hxd/res/DynamicText.hx	/^abstract Key<T>(String) {$/;"	a
KeyFrames	heaps/h2d/KeyFrames.hx	/^class KeyFrames extends Mask {$/;"	c
KeyframesFile	heaps/hxd/fmt/kframes/Data.hx	/^typedef KeyframesFile = {$/;"	t
KeyframesLayer	heaps/h2d/KeyFrames.hx	/^typedef KeyframesLayer = {$/;"	t
KillAlpha	heaps/h3d/shader/KillAlpha.hx	/^class KillAlpha extends hxsl.Shader {$/;"	c
L	heaps/h3d/Matrix.hx	/^	public static function L( a : Array<Float> ) {$/;"	f
L	heaps/hxd/Key.hx	/^	public static inline var L			= 76;$/;"	v
LALT	heaps/hxd/Key.hx	/^	public static inline var LALT = ALT | LOC_LEFT;$/;"	v
LATIN1	heaps/hxd/Charset.hx	/^	public static var LATIN1 = "¡¢£¤¥¦§¨©ª«¬-®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂ/;"	v
LCTRL	heaps/hxd/Key.hx	/^	public static inline var LCTRL = CTRL | LOC_LEFT;$/;"	v
LEFT	heaps/hxd/Key.hx	/^	public static inline var LEFT		= 37;$/;"	v
LEFT_WINDOW_KEY	heaps/hxd/Key.hx	/^	public static inline var LEFT_WINDOW_KEY = 91;$/;"	v
LINEAR_DISTANCE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var LINEAR_DISTANCE           = 0xD003;$/;"	v
LINEAR_DISTANCE_CLAMPED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var LINEAR_DISTANCE_CLAMPED   = 0xD004;$/;"	v
LIVE_UPDATE	heaps/hxd/res/Resource.hx	/^	public static var LIVE_UPDATE = #if debug true #else false #end;$/;"	v
LIVINGROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var LIVINGROOM                = new ReverbPreset(-1000, -6000, 0.0,  0.50, 0.10, /;"	v
LOC_LEFT	heaps/hxd/Key.hx	/^	public static inline var LOC_LEFT = 256;$/;"	v
LOC_RIGHT	heaps/hxd/Key.hx	/^	public static inline var LOC_RIGHT = 512;$/;"	v
LOG_TEXTURE_LOAD	heaps/hxd/res/Image.hx	/^	public static var LOG_TEXTURE_LOAD = #if heaps_texture_load true #else false #end;$/;"	v
LOOPING	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var LOOPING                    = 0x1007;$/;"	v
LSHIFT	heaps/hxd/Key.hx	/^	public static inline var LSHIFT = SHIFT | LOC_LEFT;$/;"	v
LUT_PIXELS	heaps/h3d/scene/pbr/Environment.hx	/^	static var LUT_PIXELS = null;$/;"	v
Laser	Laser.hx	/^class Laser extends Graphics {$/;"	c
LayerSpec	heaps/h2d/CdbLevel.hx	/^typedef LayerSpec = {$/;"	t
Layers	heaps/h2d/Layers.hx	/^class Layers extends Object {$/;"	c
Left	heaps/hxd/Direction.hx	/^	public var Left = 4;$/;"	v
Left	heaps/hxd/clipper/Clipper.hx	/^			var Left = out.left;$/;"	v
Left	heaps/hxd/clipper/Clipper.hx	/^		var Left : Int;$/;"	v
Less	heaps/h3d/mat/PbrMaterial.hx	/^	var Less = "Less";$/;"	v
LessEqual	heaps/h3d/mat/PbrMaterial.hx	/^	var LessEqual = "LessEqual";$/;"	v
LevelGroup	heaps/h2d/CdbLevel.hx	/^class LevelGroup {$/;"	c
LevelLayer	heaps/h2d/CdbLevel.hx	/^class LevelLayer {$/;"	c
LevelLayerData	heaps/h2d/CdbLevel.hx	/^enum LevelLayerData {$/;"	e
LevelObject	heaps/h2d/CdbLevel.hx	/^class LevelObject {$/;"	c
LevelObjectInstance	heaps/h2d/CdbLevel.hx	/^class LevelObjectInstance {$/;"	c
LevelSpec	heaps/h2d/CdbLevel.hx	/^typedef LevelSpec = {$/;"	t
LevelTileset	heaps/h2d/CdbLevel.hx	/^class LevelTileset {$/;"	c
Library	heaps/hxd/fmt/hmd/Library.hx	/^class Library {$/;"	c
Library	heaps/hxd/fmt/spine/Library.hx	/^class Library {$/;"	c
Light	heaps/h3d/scene/Light.hx	/^class Light extends Object {$/;"	c
Light	heaps/h3d/scene/fwd/Light.hx	/^class Light extends h3d.scene.Light {$/;"	c
Light	heaps/h3d/scene/pbr/Light.hx	/^class Light extends h3d.scene.Light {$/;"	c
Light	heaps/h3d/shader/pbr/Light.hx	/^class Light extends LightEvaluation {$/;"	c
LightBuffer	heaps/h3d/scene/pbr/LightBuffer.hx	/^class LightBuffer {$/;"	c
LightEvaluation	heaps/h3d/shader/pbr/Light.hx	/^class LightEvaluation extends hxsl.Shader {$/;"	c
LightSystem	heaps/h3d/scene/LightSystem.hx	/^class LightSystem {$/;"	c
LightSystem	heaps/h3d/scene/fwd/LightSystem.hx	/^class LightSystem extends h3d.scene.LightSystem {$/;"	c
LightSystem	heaps/h3d/scene/pbr/LightSystem.hx	/^class LightSystem extends h3d.scene.LightSystem {$/;"	c
Lights	heaps/samples/Lights.hx	/^class Lights extends SampleApp {$/;"	c
Line	heaps/h2d/col/Line.hx	/^class Line {$/;"	c
LineHeightMode	heaps/h2d/HtmlText.hx	/^enum LineHeightMode {$/;"	e
LineInfo	heaps/h2d/HtmlText.hx	/^private typedef LineInfo = {$/;"	t
LineShader	heaps/h3d/shader/LineShader.hx	/^class LineShader extends hxsl.Shader {$/;"	c
Linear	heaps/h3d/scene/pbr/Renderer.hx	/^	var Linear = "Linear";$/;"	v
LinearAnimation	heaps/h3d/anim/LinearAnimation.hx	/^class LinearAnimation extends Animation {$/;"	c
LinearFrame	heaps/h3d/anim/LinearAnimation.hx	/^class LinearFrame {$/;"	c
LinearObject	heaps/h3d/anim/LinearAnimation.hx	/^class LinearObject extends AnimatedObject {$/;"	c
Linker	heaps/hxsl/Linker.hx	/^class Linker {$/;"	c
Listener	heaps/hxd/snd/Listener.hx	/^class Listener {$/;"	c
LoadedBitmap	heaps/hxd/fs/LoadedBitmap.hx	/^abstract LoadedBitmap(LoadedBitmapData) {$/;"	a
LoadedBitmapData	heaps/hxd/fs/LoadedBitmap.hx	/^typedef LoadedBitmapData = flash.display.BitmapData;$/;"	t
LoadedBitmapData	heaps/hxd/fs/LoadedBitmap.hx	/^typedef LoadedBitmapData = hxd.BitmapData;$/;"	t
LoadedBitmapData	heaps/hxd/fs/LoadedBitmap.hx	/^typedef LoadedBitmapData = js.html.Image;$/;"	t
Loader	heaps/hxd/fmt/pak/Loader.hx	/^class Loader extends h2d.Object {$/;"	c
Loader	heaps/hxd/res/Loader.hx	/^class Loader {$/;"	c
LoadingData	heaps/hxd/snd/LoadingData.hx	/^class LoadingData extends Data {$/;"	c
LocalEntry	heaps/hxd/fs/LocalFileSystem.hx	/^class LocalEntry extends FileEntry {$/;"	c
LocalFileSystem	heaps/hxd/fs/LocalFileSystem.hx	/^class LocalFileSystem implements FileSystem {$/;"	c
LocalMinima	heaps/hxd/clipper/Clipper.hx	/^private class LocalMinima {$/;"	c
LogDriver	heaps/h3d/impl/LogDriver.hx	/^class LogDriver extends Driver {$/;"	c
Long	heaps/hxd/fmt/tiff/Data.hx	/^	public var Long = 4;$/;"	v
LowPass	heaps/hxd/snd/effect/LowPass.hx	/^class LowPass extends hxd.snd.Effect {$/;"	c
LowPassDriver	heaps/hxd/snd/openal/LowPassDriver.hx	/^class LowPassDriver extends hxd.snd.Driver.EffectDriver<LowPass> {$/;"	c
LowPassDriver	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^class LowPassDriver extends EffectDriver<LowPass> {$/;"	c
M	heaps/hxd/Key.hx	/^	public static inline var M			= 77;$/;"	v
M	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var M = 1.0;$/;"	v
MAJOR_VERSION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MAJOR_VERSION                    = 0x1000;$/;"	v
MAP	heaps/hxsl/Globals.hx	/^	static var MAP : #if flash haxe.ds.UnsafeStringMap<Int> #else Map<String,Int> #end;$/;"	v
MAT34	heaps/hxsl/GlslOut.hx	/^	static var MAT34 = "struct _mat3x4 { vec4 a; vec4 b; vec4 c; };";$/;"	v
MAX_AUXILIARY_SENDS	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MAX_AUXILIARY_SENDS                   = 0x20003;$/;"	v
MAX_BUFFERS	heaps/h3d/impl/MemoryManager.hx	/^	static inline var MAX_BUFFERS = #if flash 4096 #else 1 << 16 #end;$/;"	v
MAX_BUFFER_ELEMENTS	heaps/h3d/scene/MeshBatch.hx	/^	static var MAX_BUFFER_ELEMENTS = 4096;$/;"	v
MAX_CHANNELS_BITS	heaps/hxsl/Ast.hx	/^	public static var MAX_CHANNELS_BITS = 3;$/;"	v
MAX_DIR_LIGHT	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_DIR_LIGHT = 2;$/;"	v
MAX_DIR_SHADOW	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_DIR_SHADOW = 1;$/;"	v
MAX_DISTANCE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MAX_DISTANCE               = 0x1023;$/;"	v
MAX_GAIN	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MAX_GAIN                   = 0x100E;$/;"	v
MAX_MEMORY	heaps/h3d/impl/MemoryManager.hx	/^	static inline var MAX_MEMORY = #if flash 250 #else 4096 #end * (1024. * 1024.); \/\/ MB$/;"	v
MAX_POINT_LIGHT	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_POINT_LIGHT = 10;$/;"	v
MAX_POINT_SHADOW	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_POINT_SHADOW = 3;$/;"	v
MAX_SOURCES	heaps/hxd/snd/Manager.hx	/^	public static var MAX_SOURCES                = 16;$/;"	v
MAX_SPOT_LIGHT	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_SPOT_LIGHT = 10;$/;"	v
MAX_SPOT_SHADOW	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var MAX_SPOT_SHADOW = 3;$/;"	v
METERS_PER_UNIT	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var METERS_PER_UNIT                       = 0x20004;$/;"	v
MINOR_VERSION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MINOR_VERSION                    = 0x1001;$/;"	v
MIN_FRAMERATE	heaps/hxd/Window.hl.hx	/^	static var MIN_FRAMERATE = 60; \/\/ 30 and 60 are always allowed$/;"	v
MIN_GAIN	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MIN_GAIN                   = 0x100D;$/;"	v
MIN_HEIGHT	heaps/hxd/Window.hl.hx	/^	static var MIN_HEIGHT = 720;$/;"	v
MIP	heaps/h3d/impl/Stage3dDriver.hx	/^	static var MIP = [$/;"	v
MONO_SOURCES	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var MONO_SOURCES                     = 0x1010;$/;"	v
MOOD_HEAVEN	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var MOOD_HEAVEN               = new ReverbPreset(-1000,  -200, 0.0,  5.04, 1.12, /;"	v
MOOD_HELL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var MOOD_HELL                 = new ReverbPreset(-1000,  -900, 0.0,  3.57, 0.49, /;"	v
MOOD_MEMORY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var MOOD_MEMORY               = new ReverbPreset(-1000,  -400, 0.0,  4.06, 0.82, /;"	v
MOUNTAINS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var MOUNTAINS                 = new ReverbPreset(-1000, -2500, 0.0,  1.49, 0.21, /;"	v
MOUSE_BACK	heaps/hxd/Key.hx	/^	public static inline var MOUSE_BACK = 3;$/;"	v
MOUSE_FORWARD	heaps/hxd/Key.hx	/^	public static inline var MOUSE_FORWARD = 4;$/;"	v
MOUSE_LEFT	heaps/hxd/Key.hx	/^	public static inline var MOUSE_LEFT = 0;$/;"	v
MOUSE_MIDDLE	heaps/hxd/Key.hx	/^	public static inline var MOUSE_MIDDLE = 2;$/;"	v
MOUSE_RIGHT	heaps/hxd/Key.hx	/^	public static inline var MOUSE_RIGHT = 1;$/;"	v
MOUSE_WHEEL_DOWN	heaps/hxd/Key.hx	/^	public static inline var MOUSE_WHEEL_DOWN = 6;$/;"	v
MOUSE_WHEEL_UP	heaps/hxd/Key.hx	/^	public static inline var MOUSE_WHEEL_UP = 5;$/;"	v
MZERO	heaps/h3d/anim/SmoothTransition.hx	/^	static var MZERO = h3d.Matrix.L([$/;"	v
MacroHelper	heaps/h3d/impl/MacroHelper.hx	/^class MacroHelper {$/;"	c
MacroParser	heaps/hxsl/MacroParser.hx	/^class MacroParser {$/;"	c
Macros	heaps/h3d/impl/VarBinding.hx	/^class Macros {$/;"	c
Macros	heaps/hxsl/Macros.hx	/^class Macros {$/;"	c
Main	Main.hx	/^class Main extends hxd.App {$/;"	c
Main	heaps/tools/hxsl/Main.hx	/^class Main {$/;"	c
ManagedBuffer	heaps/h3d/impl/ManagedBuffer.hx	/^class ManagedBuffer {$/;"	c
Manager	heaps/hxd/snd/Manager.hx	/^class Manager {$/;"	c
Mask	heaps/h2d/Mask.hx	/^class Mask extends Object {$/;"	c
Mask	heaps/h2d/filter/Mask.hx	/^class Mask extends AbstractMask {$/;"	c
Mask	heaps/samples/Mask.hx	/^class Mask extends hxd.App {$/;"	c
MaskComp	heaps/h2d/domkit/BaseComponents.hx	/^class MaskComp extends ObjectComp implements domkit.Component.ComponentDecl<h2d.Mask> {$/;"	c
MaskShader	heaps/h2d/filter/Mask.hx	/^private class MaskShader extends h3d.shader.ScreenShader {$/;"	c
MaskWithSample	heaps/samples/Mask.hx	/^class MaskWithSample extends Object {$/;"	c
MatCap	heaps/h3d/scene/pbr/Renderer.hx	/^	var MatCap = "MatCap";$/;"	v
Material	heaps/h3d/mat/Material.hx	/^class Material extends BaseMaterial {$/;"	c
Material	heaps/hxd/fmt/hmd/Data.hx	/^class Material {$/;"	c
MaterialDatabase	heaps/h3d/mat/MaterialDatabase.hx	/^class MaterialDatabase {$/;"	c
MaterialSetup	heaps/h3d/mat/MaterialSetup.hx	/^class MaterialSetup {$/;"	c
Math	heaps/hxd/Math.hx	/^class Math {$/;"	c
MathExtensions	ra/hp/MathExtensions.hx	/^class MathExtensions {$/;"	c
Matrix	heaps/h2d/col/Matrix.hx	/^class Matrix {$/;"	c
Matrix	heaps/h2d/col/Polynomial.hx	/^private class Matrix {$/;"	c
Matrix	heaps/h3d/Matrix.hx	/^class Matrix {$/;"	c
Matrix	heaps/hxsl/Types.hx	/^typedef Matrix = h3d.Matrix;$/;"	t
MaxBones	heaps/h3d/shader/SkinBase.hx	/^		@const var MaxBones : Int;$/;"	v
MemoryManager	heaps/h3d/impl/MemoryManager.hx	/^class MemoryManager {$/;"	c
Mesh	heaps/h3d/scene/Mesh.hx	/^class Mesh extends Object {$/;"	c
MeshBatch	heaps/h3d/scene/MeshBatch.hx	/^class MeshBatch extends MultiMaterial {$/;"	c
MeshBatch	heaps/samples/MeshBatch.hx	/^class MeshBatch extends hxd.App {$/;"	c
MeshBatchPart	heaps/h3d/scene/MeshBatch.hx	/^class MeshBatchPart {$/;"	c
MeshInst	heaps/samples/MeshBatch.hx	/^class MeshInst {$/;"	c
MeshPrimitive	heaps/h3d/prim/MeshPrimitive.hx	/^class MeshPrimitive extends Primitive {$/;"	c
Metalness	heaps/h3d/shader/pbr/Slides.hx	/^	var Metalness = 4;$/;"	v
Mikktspace	heaps/tools/mikktspace/Mikktspace.hx	/^class Mikktspace {$/;"	c
MinMaxShader	heaps/h3d/shader/MinMaxShader.hx	/^class MinMaxShader extends ScreenShader {$/;"	c
Minkowski	heaps/hxd/clipper/Clipper.hx	/^      function Minkowski(pattern : IPolygon, path : IPolygon , IsSum : Bool)$/;"	f
MinkowskiDiff	heaps/hxd/clipper/Clipper.hx	/^      public static function MinkowskiDiff(pattern : IPolygon, pol : IPolygon, ?kind : ResultKin/;"	f
MinkowskiSum	heaps/hxd/clipper/Clipper.hx	/^      public function MinkowskiSum(pattern : IPolygon, pol : IPolygon, ?kind : ResultKind)$/;"	f
MinkowskiSums	heaps/hxd/clipper/Clipper.hx	/^      public static function MinkowskiSums(pattern : IPolygon, pols : IPolygons, ?kind : ResultK/;"	f
MipMap	heaps/h3d/mat/Data.hx	/^enum MipMap {$/;"	e
MiterLimit	heaps/hxd/clipper/Clipper.hx	/^	public var MiterLimit : Float;$/;"	v
Model	heaps/hxd/fmt/hmd/Data.hx	/^class Model {$/;"	c
Model	heaps/hxd/res/Model.hx	/^class Model extends Resource {$/;"	c
ModelCache	heaps/h3d/prim/ModelCache.hx	/^class ModelCache {$/;"	c
ModelPixelScale	heaps/hxd/fmt/tiff/Data.hx	/^	public var ModelPixelScale = 33550;$/;"	v
ModelTiepoint	heaps/hxd/fmt/tiff/Data.hx	/^	public var ModelTiepoint = 33922;$/;"	v
Monitor	heaps/hxd/Window.hl.hx	/^typedef Monitor = {$/;"	t
Mp3Data	heaps/hxd/snd/Mp3Data.hx	/^class Mp3Data extends Data {$/;"	c
Mp3File	heaps/hxd/snd/Mp3Data.hx	/^private typedef Mp3File = hl.Abstract<"fmt_mp3">;$/;"	t
MultiChannel	heaps/h2d/Font.hx	/^	var MultiChannel = 4;$/;"	v
MultiFileEntry	heaps/hxd/fs/MultiFileSystem.hx	/^private class MultiFileEntry extends FileEntry {$/;"	c
MultiFileSystem	heaps/hxd/fs/MultiFileSystem.hx	/^class MultiFileSystem implements FileSystem {$/;"	c
MultiMaterial	heaps/h3d/scene/MultiMaterial.hx	/^class MultiMaterial extends Mesh {$/;"	c
Multiply	heaps/h3d/mat/PbrMaterial.hx	/^	var Multiply = "Multiply";$/;"	v
N	heaps/hxd/Key.hx	/^	public static inline var N			= 78;$/;"	v
NATIVE_FREQ	heaps/hxd/snd/openal/Emulator.hx	/^	public static var NATIVE_FREQ(get,never) : Int;$/;"	v
NEGATIVE_INFINITY	heaps/hxd/Math.hx	/^	public static var NEGATIVE_INFINITY(get, never) : Float;$/;"	v
NGRADS	heaps/hxd/Perlin.hx	/^	static inline var NGRADS = 256;$/;"	v
NONE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var NONE                       = 0;$/;"	v
NO_ERROR	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var NO_ERROR                         = 0;$/;"	v
NO_ERROR	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var NO_ERROR                   = 0;$/;"	v
NTARGETS	heaps/h3d/impl/DirectXDriver.hx	/^	static inline var NTARGETS = 8;$/;"	v
NUMBER_0	heaps/hxd/Key.hx	/^	public static inline var NUMBER_0	= 48;$/;"	v
NUMBER_1	heaps/hxd/Key.hx	/^	public static inline var NUMBER_1	= 49;$/;"	v
NUMBER_2	heaps/hxd/Key.hx	/^	public static inline var NUMBER_2	= 50;$/;"	v
NUMBER_3	heaps/hxd/Key.hx	/^	public static inline var NUMBER_3	= 51;$/;"	v
NUMBER_4	heaps/hxd/Key.hx	/^	public static inline var NUMBER_4	= 52;$/;"	v
NUMBER_5	heaps/hxd/Key.hx	/^	public static inline var NUMBER_5	= 53;$/;"	v
NUMBER_6	heaps/hxd/Key.hx	/^	public static inline var NUMBER_6	= 54;$/;"	v
NUMBER_7	heaps/hxd/Key.hx	/^	public static inline var NUMBER_7	= 55;$/;"	v
NUMBER_8	heaps/hxd/Key.hx	/^	public static inline var NUMBER_8	= 56;$/;"	v
NUMBER_9	heaps/hxd/Key.hx	/^	public static inline var NUMBER_9	= 57;$/;"	v
NUMPAD_0	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_0	= 96;$/;"	v
NUMPAD_1	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_1	= 97;$/;"	v
NUMPAD_2	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_2	= 98;$/;"	v
NUMPAD_3	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_3	= 99;$/;"	v
NUMPAD_4	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_4	= 100;$/;"	v
NUMPAD_5	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_5	= 101;$/;"	v
NUMPAD_6	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_6	= 102;$/;"	v
NUMPAD_7	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_7	= 103;$/;"	v
NUMPAD_8	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_8	= 104;$/;"	v
NUMPAD_9	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_9	= 105;$/;"	v
NUMPAD_ADD	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_ADD	= 107;$/;"	v
NUMPAD_DIV	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_DIV = 111;$/;"	v
NUMPAD_DOT	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_DOT = 110;$/;"	v
NUMPAD_ENTER	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_ENTER = 108;$/;"	v
NUMPAD_MULT	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_MULT = 106;$/;"	v
NUMPAD_SUB	heaps/hxd/Key.hx	/^	public static inline var NUMPAD_SUB = 109;$/;"	v
NUM_AXES	heaps/hxd/Pad.hx	/^	public static var NUM_AXES = 0;$/;"	v
NUM_BUTTONS	heaps/hxd/Pad.hx	/^	public static var NUM_BUTTONS = 0;$/;"	v
NUM_LOCK	heaps/hxd/Key.hx	/^	public static inline var NUM_LOCK = 144;$/;"	v
NaN	heaps/hxd/Math.hx	/^	public static var NaN(get, never) : Float;$/;"	v
NanoJpeg	heaps/hxd/res/NanoJpeg.hx	/^class NanoJpeg {$/;"	c
NativeChannel	heaps/hxd/snd/NativeChannel.hx	/^class NativeChannel {$/;"	c
NdH	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var NdH = clamp(transformedNormal.dot(half), 0.0, 1.0);$/;"	v
NdH	heaps/h3d/shader/pbr/Lighting.hx	/^				var NdH = normal.dot(half).max(0.);$/;"	v
NdL	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var NdL = clamp(transformedNormal.dot(lightDirection), 0.0, 1.0);$/;"	v
NdL	heaps/h3d/shader/pbr/Lighting.hx	/^			var NdL = normal.dot(pbrLightDirection).max(0.);$/;"	v
NdV	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var NdV : Float;$/;"	v
NdV	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var NdV : Float;$/;"	v
Network	heaps/samples/Network.hx	/^class Network extends hxd.App {$/;"	c
Never	heaps/h3d/mat/PbrMaterial.hx	/^	var Never = "Never";$/;"	v
NoArg	heaps/hxd/res/DynamicText.hx	/^abstract NoArg({}) {$/;"	a
NoH	heaps/h3d/scene/pbr/Environment.hx	/^				var NoH = saturate( dot(n, h) );$/;"	v
NoL	heaps/h3d/scene/pbr/Environment.hx	/^				var NoL = saturate( dot(n, l) );$/;"	v
NoV	heaps/h3d/scene/pbr/Environment.hx	/^			var NoV = input.uv.y;$/;"	v
Node	heaps/hxd/poly2tri/Node.hx	/^class Node$/;"	c
NodeSocketInput	heaps/hxd/net/Socket.hx	/^class NodeSocketInput extends SocketInput {$/;"	c
NodeSocketOutput	heaps/hxd/net/Socket.hx	/^class NodeSocketOutput extends SocketOutput {$/;"	c
NodeType	heaps/hxd/clipper/Clipper.hx	/^enum NodeType {$/;"	e
NoiseChannel	heaps/samples/Sound.hx	/^class NoiseChannel extends hxd.snd.NativeChannel {$/;"	c
NoiseLib	heaps/h3d/shader/NoiseLib.hx	/^class NoiseLib extends hxsl.Shader {$/;"	c
None	heaps/h3d/mat/PbrMaterial.hx	/^	var None = "None";$/;"	v
Normal	heaps/h3d/shader/pbr/Slides.hx	/^	var Normal = 2;$/;"	v
NormalMap	heaps/h3d/shader/NormalMap.hx	/^class NormalMap extends hxsl.Shader {$/;"	c
NormalPass	heaps/h3d/scene/fwd/Renderer.hx	/^class NormalPass extends h3d.pass.Default {$/;"	c
NotEqual	heaps/h3d/mat/PbrMaterial.hx	/^	var NotEqual = "NotEqual";$/;"	v
NotEqual	heaps/h3d/mat/PbrMaterial.hx	/^	var NotEqual= "NotEqual";$/;"	v
NotFound	heaps/hxd/fs/NotFound.hx	/^class NotFound {$/;"	c
NotFound	heaps/hxd/res/NotFound.hx	/^typedef NotFound = hxd.fs.NotFound;/;"	t
Nothing	heaps/h2d/filter/Nothing.hx	/^class Nothing extends Filter {$/;"	c
NullDriver	heaps/h3d/impl/NullDriver.hx	/^class NullDriver extends Driver {$/;"	c
NullShader	heaps/hxsl/CacheFile.hx	/^private class NullShader extends hxsl.Shader {$/;"	c
O	heaps/hxd/Key.hx	/^	public static inline var O			= 79;$/;"	v
OKIdx	heaps/hxd/clipper/Clipper.hx	/^		var OKIdx = e1.outIdx;$/;"	v
OP	heaps/h3d/impl/GlDriver.hx	/^	static var OP = [$/;"	v
ORIENTATION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ORIENTATION                = 0x100F;$/;"	v
OUTDOORS_BACKYARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var OUTDOORS_BACKYARD         = new ReverbPreset(-1000, -1200, 0.0,  1.12, 0.34, /;"	v
OUTDOORS_CREEK	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var OUTDOORS_CREEK            = new ReverbPreset(-1000, -1500, 0.0,  2.13, 0.21, /;"	v
OUTDOORS_DEEPCANYON	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var OUTDOORS_DEEPCANYON       = new ReverbPreset(-1000, -1500, 0.0,  3.89, 0.21, /;"	v
OUTDOORS_ROLLINGPLAINS	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var OUTDOORS_ROLLINGPLAINS    = new ReverbPreset(-1000, -3902, 0.0,  2.13, 0.21, /;"	v
OUTDOORS_VALLEY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var OUTDOORS_VALLEY           = new ReverbPreset(-1000, -3100, 0.0,  2.88, 0.26, /;"	v
OUT_OF_MEMORY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var OUT_OF_MEMORY                    = 0xA005;$/;"	v
OUT_OF_MEMORY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var OUT_OF_MEMORY              = 0xA005;$/;"	v
Object	heaps/h2d/Object.hx	/^class Object #if (domkit && !domkit_heaps) implements domkit.Model<h2d.Object> #end {$/;"	c
Object	heaps/h2d/domkit/Object.hx	/^interface Object {$/;"	i
Object	heaps/h3d/scene/Object.hx	/^class Object {$/;"	c
ObjectCollider	heaps/h3d/col/ObjectCollider.hx	/^class ObjectCollider implements Collider {$/;"	c
ObjectComp	heaps/h2d/domkit/BaseComponents.hx	/^class ObjectComp implements h2d.domkit.Object implements domkit.Component.ComponentDecl<h2d.Obje/;"	c
ObjectFlags	heaps/h3d/scene/Object.hx	/^@:enum abstract ObjectFlags(Int) {$/;"	a
ObjectFollower	heaps/h2d/ObjectFollower.hx	/^class ObjectFollower extends Object {$/;"	c
ObsoleteIdx	heaps/hxd/clipper/Clipper.hx	/^		var ObsoleteIdx = e2.outIdx;$/;"	v
OffsetKind	heaps/h2d/col/IPolygon.hx	/^enum OffsetKind {$/;"	e
OggData	heaps/hxd/snd/OggData.hx	/^class OggData extends Data {$/;"	c
OggFile	heaps/hxd/snd/OggData.hx	/^private typedef OggFile = hl.Abstract<"fmt_ogg">;$/;"	t
Opacity	heaps/hxd/fmt/kframes/Data.hx	/^	var Opacity = "OPACITY";$/;"	v
Opaque	heaps/h3d/mat/Material.hx	/^	var Opaque = "Opaque";$/;"	v
Operation	heaps/h3d/mat/Data.hx	/^enum Operation {$/;"	e
OptAlgorithm	heaps/h3d/scene/World.hx	/^enum OptAlgorithm {$/;"	e
OptimizedCollider	heaps/h3d/col/Collider.hx	/^class OptimizedCollider implements Collider {$/;"	c
Orientation	heaps/hxd/clipper/Clipper.hx	/^	public static inline function Orientation(poly : IPolygon )$/;"	f
Orientation	heaps/hxd/fmt/tiff/Data.hx	/^	public var Orientation = 274;$/;"	v
Orientation	heaps/hxd/poly2tri/Orientation.hx	/^class Orientation$/;"	c
OutPt	heaps/hxd/clipper/Clipper.hx	/^private class OutPt {$/;"	c
OutRec	heaps/hxd/clipper/Clipper.hx	/^private class OutRec {$/;"	c
Outline	heaps/h2d/filter/Outline.hx	/^class Outline extends Filter {$/;"	c
Outline	heaps/h3d/pass/Outline.hx	/^class Outline extends ScreenFx<h3d.shader.Outline2D> {$/;"	c
Outline	heaps/h3d/shader/Outline.hx	/^class Outline extends hxsl.Shader {$/;"	c
Outline2D	heaps/h3d/shader/Outline2D.hx	/^class Outline2D extends ScreenShader {$/;"	c
Output	heaps/h3d/pass/Output.hx	/^class Output extends Default {$/;"	c
Output	heaps/hxsl/Output.hx	/^enum Output {$/;"	e
Output	heaps/tools/hxsl/Main.hx	/^enum Output {$/;"	e
Overlay	heaps/h3d/mat/PbrMaterial.hx	/^	var Overlay = "Overlay";$/;"	v
P	heaps/hxd/Key.hx	/^	public static inline var P			= 80;$/;"	v
P0	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var P0 = new Point();$/;"	v
P1	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var P1 = new Point(1, 1, 1);$/;"	v
PADDEDCELL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PADDEDCELL                = new ReverbPreset(-1000, -6000, 0.0,  0.17, 0.10, /;"	v
PARKINGLOT	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PARKINGLOT                = new ReverbPreset(-1000,     0, 0.0,  1.65, 1.50, /;"	v
PAUSED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var PAUSED                     = 0x1013;$/;"	v
PAUSE_BREAK	heaps/hxd/Key.hx	/^	public static inline var PAUSE_BREAK = 19;$/;"	v
PBR	heaps/h3d/mat/PbrMaterial.hx	/^	var PBR = "PBR";$/;"	v
PCF_SAMPLES	heaps/h3d/shader/DirShadow.hx	/^		@const var PCF_SAMPLES : Int;$/;"	v
PENDING	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var PENDING                    = 0x2011;$/;"	v
PGDOWN	heaps/hxd/Key.hx	/^	public static inline var PGDOWN		= 34;$/;"	v
PGUP	heaps/hxd/Key.hx	/^	public static inline var PGUP		= 33;$/;"	v
PI	heaps/h3d/scene/pbr/Environment.hx	/^			var PI = 3.1415926;$/;"	v
PI	heaps/hxd/Math.hx	/^	public static inline var PI = 3.14159265358979323;$/;"	v
PIPE_LARGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PIPE_LARGE                = new ReverbPreset(-1000,  -900, 0.0,  8.45, 0.1,  /;"	v
PIPE_LONGTHIN	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PIPE_LONGTHIN             = new ReverbPreset(-1000,  -700, 0.0,  9.21, 0.18, /;"	v
PIPE_RESONANT	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PIPE_RESONANT             = new ReverbPreset(-1000,  -700, 0.0,  6.81, 0.18, /;"	v
PIPE_SMALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PIPE_SMALL                = new ReverbPreset(-1000,  -900, 0.0,  5.04, 0.1,  /;"	v
PITCH	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var PITCH                      = 0x1003;$/;"	v
PI_2	heaps/hxd/poly2tri/Constants.hx	/^	static public var PI_2:Float     = Math.PI \/ 2;$/;"	v
PI_3div4	heaps/hxd/poly2tri/Constants.hx	/^	static public var PI_3div4:Float = 3 * Math.PI \/ 4;$/;"	v
PLAIN	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PLAIN                     = new ReverbPreset(-1000, -2000, 0.0,  1.49, 0.50, /;"	v
PLAYING	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var PLAYING                    = 0x1012;$/;"	v
POLISH	heaps/hxd/Charset.hx	/^	public static var POLISH = "ĄĆĘŁŃÓŚŹŻąćęłńóśźż";$/;"	v
PORT	heaps/samples/Network.hx	/^	static var PORT = 6676;$/;"	v
POSITION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var POSITION                   = 0x1004;$/;"	v
POSITIVE_INFINITY	heaps/hxd/Math.hx	/^	public static var POSITIVE_INFINITY(get, never) : Float;$/;"	v
PRECS	heaps/hxsl/Serializer.hx	/^	static var PRECS = Prec.createAll();$/;"	v
PREFAB_CARAVAN	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PREFAB_CARAVAN            = new ReverbPreset(-1000, -2100, 0.0,  0.43, 1.5,  /;"	v
PREFAB_OUTHOUSE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PREFAB_OUTHOUSE           = new ReverbPreset(-1000, -1900, 0.0,  1.38, 0.38, /;"	v
PREFAB_PRACTISEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PREFAB_PRACTISEROOM       = new ReverbPreset(-1000,  -800, 0.0,  1.12, 0.56, /;"	v
PREFAB_SCHOOLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PREFAB_SCHOOLROOM         = new ReverbPreset(-1000,  -400, 0.0,  0.98, 0.45, /;"	v
PREFAB_WORKSHOP	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PREFAB_WORKSHOP           = new ReverbPreset(-1000, -1700, 0.0,  0.76,  1.0, /;"	v
PREFETCH_CACHE	heaps/hxd/fs/FileInput.hx	/^	static var PREFETCH_CACHE : haxe.io.Bytes = null;$/;"	v
PREV_BUFFER	heaps/h3d/prim/BigPrimitive.hx	/^	static var PREV_BUFFER : hxd.FloatBuffer;$/;"	v
PREV_INDEX	heaps/h3d/prim/BigPrimitive.hx	/^	static var PREV_INDEX : hxd.IndexBuffer;$/;"	v
PROCESSED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var PROCESSED                  = 0x2012;$/;"	v
PROFILE	heaps/h3d/impl/Stage3dDriver.hx	/^	public static var PROFILE = #if flash15 cast "standard" #else flash.display3D.Context3DProfile./;"	v
PSYCHOTIC	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var PSYCHOTIC                 = new ReverbPreset(-1000,  -151, 0.0,  7.56, 0.91, /;"	v
PUVS	heaps/h3d/parts/GpuParticles.hx	/^	static var PUVS = [new h3d.prim.UV(0, 0), new h3d.prim.UV(1, 0), new h3d.prim.UV(0, 1), new h3d/;"	v
Pad	heaps/hxd/Pad.hx	/^class Pad {$/;"	c
Pad	heaps/samples/Pad.hx	/^class Pad extends hxd.App {$/;"	c
PadConfig	heaps/hxd/Pad.hx	/^typedef PadConfig = {$/;"	t
PadUI	heaps/samples/Pad.hx	/^class PadUI extends h2d.Object {$/;"	c
PakEntry	heaps/hxd/fmt/pak/FileSystem.hx	/^private class PakEntry extends FileEntry {$/;"	c
PanoramaToCube	heaps/h3d/scene/pbr/Environment.hx	/^class PanoramaToCube extends h3d.shader.ScreenShader {$/;"	c
Parallax	heaps/h3d/shader/Parallax.hx	/^class Parallax extends hxsl.Shader {$/;"	c
Param1RightOfParam2	heaps/hxd/clipper/Clipper.hx	/^	function Param1RightOfParam2(outRec1:OutRec, outRec2:OutRec)$/;"	f
Params	heaps/h3d/shader/Buffers.hx	/^	public var Params = 1;$/;"	v
ParseFirstLeft	heaps/hxd/clipper/Clipper.hx	/^	function ParseFirstLeft(FirstLeft : OutRec)$/;"	f
Parser	heaps/hxd/fmt/fbx/Parser.hx	/^class Parser {$/;"	c
PartEmitMode	heaps/h2d/Particles.hx	/^enum PartEmitMode {$/;"	e
PartSortMode	heaps/h2d/Particles.hx	/^enum PartSortMode {$/;"	e
Particle	heaps/h2d/Particles.hx	/^private class Particle extends h2d.SpriteBatch.BatchElement {$/;"	c
Particle	heaps/h3d/parts/Particle.hx	/^class Particle implements Data.Randomized {$/;"	c
ParticleGroup	heaps/h2d/Particles.hx	/^class ParticleGroup {$/;"	c
ParticleIterator	heaps/h3d/parts/Particles.hx	/^private class ParticleIterator {$/;"	c
ParticleShader	heaps/h2d/Particles.hx	/^private class ParticleShader extends hxsl.Shader {$/;"	c
ParticleShader	heaps/h3d/shader/ParticleShader.hx	/^class ParticleShader extends hxsl.Shader {$/;"	c
Particles	heaps/h2d/Particles.hx	/^class Particles extends Drawable {$/;"	c
Particles	heaps/h3d/parts/Particles.hx	/^class Particles extends h3d.scene.Mesh {$/;"	c
Particles2d	heaps/samples/Particles2d.hx	/^class Particles2d extends SampleApp {$/;"	c
Pass	heaps/h3d/mat/Pass.hx	/^class Pass {$/;"	c
PassList	heaps/h3d/pass/PassList.hx	/^class PassList {$/;"	c
PassListIterator	heaps/h3d/pass/PassList.hx	/^class PassListIterator {$/;"	c
PassObject	heaps/h3d/pass/PassObject.hx	/^class PassObject {$/;"	c
PassObjects	heaps/h3d/scene/Renderer.hx	/^class PassObjects {$/;"	c
Pbr	heaps/h3d/scene/pbr/Renderer.hx	/^	var Pbr = "Pbr";$/;"	v
Pbr	heaps/samples/Pbr.hx	/^class Pbr extends SampleApp {$/;"	c
PbrBlend	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrBlend(String) {$/;"	a
PbrCullingMode	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrCullingMode(String) {$/;"	a
PbrDepthTest	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrDepthTest(String) {$/;"	a
PbrMaterial	heaps/h3d/mat/PbrMaterial.hx	/^class PbrMaterial extends Material {$/;"	c
PbrMaterialSetup	heaps/h3d/mat/PbrMaterialSetup.hx	/^class PbrMaterialSetup extends MaterialSetup {$/;"	c
PbrMode	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrMode(String) {$/;"	a
PbrProps	heaps/h3d/mat/PbrMaterial.hx	/^typedef PbrProps = {$/;"	t
PbrStencilCompare	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrStencilCompare(String) {$/;"	a
PbrStencilOp	heaps/h3d/mat/PbrMaterial.hx	/^@:enum abstract PbrStencilOp(String) {$/;"	a
Perlin	heaps/hxd/Perlin.hx	/^class Perlin {$/;"	c
Permut	heaps/h3d/anim/Skin.hx	/^private class Permut {$/;"	c
PhotometricInterpretation	heaps/hxd/fmt/tiff/Data.hx	/^	public var PhotometricInterpretation = 262;$/;"	v
PipelineKind	heaps/h3d/impl/DirectXDriver.hx	/^enum PipelineKind {$/;"	e
PipelineState	heaps/h3d/impl/DirectXDriver.hx	/^class PipelineState {$/;"	c
Pitch	heaps/hxd/snd/effect/Pitch.hx	/^class Pitch extends hxd.snd.Effect {$/;"	c
PitchDriver	heaps/hxd/snd/openal/PitchDriver.hx	/^class PitchDriver extends EffectDriver<Pitch> {$/;"	c
PitchDriver	heaps/hxd/snd/webaudio/PitchDriver.hx	/^class PitchDriver extends EffectDriver<Pitch> {$/;"	c
PixelColor	heaps/hxd/res/BDFFont.hx	/^	static inline var PixelColor : Int = 0x00FFFFFF;$/;"	v
PixelFormat	heaps/hxd/PixelFormat.hx	/^enum PixelFormat {$/;"	e
Pixels	heaps/hxd/Pixels.hx	/^class Pixels {$/;"	c
PixelsARGB	heaps/hxd/Pixels.hx	/^abstract PixelsARGB(Pixels) to Pixels {$/;"	a
PixelsCollider	heaps/h2d/col/PixelsCollider.hx	/^class PixelsCollider implements Collider {$/;"	c
PixelsFloat	heaps/hxd/Pixels.hx	/^abstract PixelsFloat(Pixels) to Pixels {$/;"	a
PixelsFloatRGBA	heaps/hxd/Pixels.hx	/^abstract PixelsFloatRGBA(Pixels) to Pixels {$/;"	a
PlanarConfiguration	heaps/hxd/fmt/tiff/Data.hx	/^	public var PlanarConfiguration = 284;$/;"	v
Plane	heaps/h3d/col/Plane.hx	/^class Plane {$/;"	c
Plane2D	heaps/h3d/prim/Plane2D.hx	/^class Plane2D extends Primitive {$/;"	c
Platform	heaps/hxd/System.flash.hx	/^enum Platform {$/;"	e
Platform	heaps/hxd/System.hl.hx	/^enum Platform {$/;"	e
Platform	heaps/hxd/System.hx	/^enum Platform {$/;"	e
Platform	heaps/hxd/System.js.hx	/^enum Platform {$/;"	e
Platform	heaps/hxd/res/Config.hx	/^enum Platform {$/;"	e
Player	Player.hx	/^class Player extends Object {$/;"	c
Png	heaps/hxd/res/Image.hx	/^	var Png = 1;$/;"	v
Point	heaps/h2d/col/Point.hx	/^class Point #if apicheck implements h2d.impl.PointApi<Point,Matrix> #end {$/;"	c
Point	heaps/h3d/col/Point.hx	/^class Point #if apicheck implements h2d.impl.PointApi<Point,Matrix> #end {$/;"	c
Point	heaps/hxd/poly2tri/Point.hx	/^class Point$/;"	c
PointApi	heaps/h2d/impl/PointApi.hx	/^interface PointApi<Point,M> extends GenPointApi<Point,Float> {$/;"	i
PointCount	heaps/hxd/clipper/Clipper.hx	/^	private function PointCount(pts:OutPt) : Int$/;"	f
PointInPolygon	heaps/hxd/clipper/Clipper.hx	/^	public function PointInPolygon(pt : IPoint, pol : IPolygon)$/;"	f
PointInPolygon2	heaps/hxd/clipper/Clipper.hx	/^    function PointInPolygon2(pt : IPoint, op : OutPt)$/;"	f
PointIsVertex	heaps/hxd/clipper/Clipper.hx	/^	function PointIsVertex(pt:IPoint, pp:OutPt) {$/;"	f
PointLight	heaps/h3d/scene/fwd/PointLight.hx	/^class PointLight extends Light {$/;"	c
PointLight	heaps/h3d/scene/pbr/PointLight.hx	/^class PointLight extends Light {$/;"	c
PointLight	heaps/h3d/shader/PointLight.hx	/^class PointLight extends hxsl.Shader {$/;"	c
PointLight	heaps/h3d/shader/pbr/Light.hx	/^class PointLight extends Light {$/;"	c
PointLightHelper	heaps/samples/Helpers.hx	/^class PointLightHelper extends h3d.scene.Mesh {$/;"	c
PointLights	heaps/samples/PointLights.hx	/^class PointLights extends hxd.App {$/;"	c
PointOnLineSegment	heaps/hxd/clipper/Clipper.hx	/^	function PointOnLineSegment(pt:IPoint, linePt1:IPoint, linePt2:IPoint) {$/;"	f
PointOnPolygon	heaps/hxd/clipper/Clipper.hx	/^	function PointOnPolygon(pt:IPoint, pp:OutPt)$/;"	f
PointShadow	heaps/h3d/shader/PointShadow.hx	/^class PointShadow extends hxsl.Shader {$/;"	c
PointShadowMap	heaps/h3d/pass/PointShadowMap.hx	/^class PointShadowMap extends Shadows {$/;"	c
PointsAreClose	heaps/hxd/clipper/Clipper.hx	/^      private function PointsAreClose(pt1 : IPoint, pt2 : IPoint, distSqrd : Float)$/;"	f
Poly2ContainsPoly1	heaps/hxd/clipper/Clipper.hx	/^	private function Poly2ContainsPoly1(outPt1:OutPt, outPt2:OutPt) : Bool	{$/;"	f
PolyFillType	heaps/hxd/clipper/PolyFillType.hx	/^enum PolyFillType {$/;"	e
PolyNode	heaps/hxd/clipper/Clipper.hx	/^private class PolyNode {$/;"	c
PolyTree	heaps/hxd/clipper/Clipper.hx	/^private class PolyTree extends PolyNode {$/;"	c
PolyTreeToPaths	heaps/hxd/clipper/Clipper.hx	/^      public function PolyTreeToPaths(polytree : PolyTree)$/;"	f
PolyType	heaps/hxd/clipper/PolyType.hx	/^enum PolyType {$/;"	e
Polygon	heaps/h2d/col/Polygon.hx	/^abstract Polygon(Array<Point>) from Array<Point> to Array<Point> {$/;"	a
Polygon	heaps/h3d/col/Polygon.hx	/^class Polygon implements Collider {$/;"	c
Polygon	heaps/h3d/prim/Polygon.hx	/^class Polygon extends MeshPrimitive {$/;"	c
PolygonBuffer	heaps/h3d/col/PolygonBuffer.hx	/^class PolygonBuffer implements Collider {$/;"	c
PolygonCollider	heaps/h2d/col/PolygonCollider.hx	/^class PolygonCollider implements Collider {$/;"	c
Polygons	heaps/h2d/col/Polygons.hx	/^abstract Polygons(Array<Polygon>) from Array<Polygon> to Array<Polygon> {$/;"	a
Polygons	heaps/samples/Polygons.hx	/^class Polygons extends hxd.App {$/;"	c
Polynomial	heaps/h2d/col/Polynomial.hx	/^class Polynomial {$/;"	c
PopLocalMinima	heaps/hxd/clipper/Clipper.hx	/^	function PopLocalMinima() {$/;"	f
PopScanbeam	heaps/hxd/clipper/Clipper.hx	/^	private function PopScanbeam() : Int$/;"	f
Position	heaps/hxd/fmt/hmd/Data.hx	/^class Position {$/;"	c
Position	heaps/hxsl/Ast.hx	/^typedef Position = haxe.macro.Expr.Position;$/;"	t
Prec	heaps/hxsl/Ast.hx	/^enum Prec {$/;"	e
Prefab	heaps/hxd/res/Prefab.hx	/^typedef Prefab = hrt.prefab.Resource;$/;"	t
Prefab	heaps/hxd/res/Prefab.hx	/^typedef Prefab = hxd.res.Resource;$/;"	t
Primitive	heaps/h3d/prim/Primitive.hx	/^class Primitive {$/;"	c
Printer	heaps/hxsl/Printer.hx	/^class Printer {$/;"	c
ProcessBound	heaps/hxd/clipper/Clipper.hx	/^	function ProcessBound(E : TEdge, LeftBoundIsForward : Bool) {$/;"	f
ProcessEdgesAtTopOfScanbeam	heaps/hxd/clipper/Clipper.hx	/^	function ProcessEdgesAtTopOfScanbeam(topY : Int) {$/;"	f
ProcessHorizontal	heaps/hxd/clipper/Clipper.hx	/^	function ProcessHorizontal(horzEdge : TEdge, isTopOfScanbeam : Bool ) {$/;"	f
ProcessHorizontals	heaps/hxd/clipper/Clipper.hx	/^	private function ProcessHorizontals(isTopOfScanbeam : Bool)$/;"	f
ProcessIntersectList	heaps/hxd/clipper/Clipper.hx	/^	private function ProcessIntersectList()$/;"	f
ProcessIntersections	heaps/hxd/clipper/Clipper.hx	/^	private function ProcessIntersections(topY:Int) : Bool$/;"	f
Program	heaps/h3d/impl/GlDriver.hx	/^private typedef Program = haxe.GLTypes.Program;$/;"	t
Program	heaps/h3d/impl/GlDriver.hx	/^private typedef Program = js.html.webgl.Program;$/;"	t
Program	heaps/h3d/impl/GlDriver.hx	/^private typedef Program = sdl.GL.Program;$/;"	t
Properties	heaps/hxd/fmt/hmd/Data.hx	/^typedef Properties = Null<Array<Property<Dynamic>>>;$/;"	t
Properties	heaps/hxd/impl/Properties.hx	/^class Properties {$/;"	c
Property	heaps/hxd/fmt/hmd/Data.hx	/^enum Property<T> {$/;"	e
PropsDefinition	heaps/h3d/shader/pbr/PropsDefinition.hx	/^class PropsDefinition extends hxsl.Shader {$/;"	c
PropsImport	heaps/h3d/shader/pbr/PropsImport.hx	/^class PropsImport extends hxsl.Shader {$/;"	c
PropsTexture	heaps/h3d/shader/pbr/PropsTexture.hx	/^class PropsTexture extends hxsl.Shader {$/;"	c
PropsValues	heaps/h3d/shader/pbr/PropsValues.hx	/^class PropsValues extends hxsl.Shader {$/;"	c
Pt	heaps/hxd/clipper/Clipper.hx	/^						var Pt = new IPoint(e.currX, horzEdge.currY);$/;"	v
Pt	heaps/hxd/clipper/Clipper.hx	/^			var  Pt;$/;"	v
Pt2IsBetweenPt1AndPt3	heaps/hxd/clipper/Clipper.hx	/^    function Pt2IsBetweenPt1AndPt3(pt1 : IPoint, pt2 : IPoint, pt3 : IPoint) {$/;"	f
Q	heaps/h3d/col/Capsule.hx	/^		var Q = new h3d.col.Point(RD.x-(AB.x*m), RD.y-(AB.y*m), RD.z-(AB.z*m)); \/\/ RD - (AB * m)$/;"	v
Q	heaps/h3d/shader/SAO.hx	/^			var Q = getPosition(targetUV);$/;"	v
Q	heaps/hxd/Key.hx	/^	public static inline var Q			= 81;$/;"	v
QR	heaps/h2d/col/Polynomial.hx	/^private class QR {$/;"	c
QTMP	heaps/hxd/fmt/hmd/Data.hx	/^	static var QTMP = new h3d.Quat();$/;"	v
QUARRY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var QUARRY                    = new ReverbPreset(-1000, -1000, 0.0,  1.49, 0.83, /;"	v
QWERTY_BACKSLASH	heaps/hxd/Key.hx	/^	public static inline var QWERTY_BACKSLASH = 220;$/;"	v
QWERTY_BRACKET_LEFT	heaps/hxd/Key.hx	/^	public static inline var QWERTY_BRACKET_LEFT = 219;$/;"	v
QWERTY_BRACKET_RIGHT	heaps/hxd/Key.hx	/^	public static inline var QWERTY_BRACKET_RIGHT = 221;$/;"	v
QWERTY_COMMA	heaps/hxd/Key.hx	/^	public static inline var QWERTY_COMMA = 188;$/;"	v
QWERTY_EQUALS	heaps/hxd/Key.hx	/^	public static inline var QWERTY_EQUALS = 187;$/;"	v
QWERTY_MINUS	heaps/hxd/Key.hx	/^	public static inline var QWERTY_MINUS = 189;$/;"	v
QWERTY_PERIOD	heaps/hxd/Key.hx	/^	public static inline var QWERTY_PERIOD = 190;$/;"	v
QWERTY_QUOTE	heaps/hxd/Key.hx	/^	public static inline var QWERTY_QUOTE = 222;$/;"	v
QWERTY_SEMICOLON	heaps/hxd/Key.hx	/^	public static inline var QWERTY_SEMICOLON = 186;$/;"	v
QWERTY_SLASH	heaps/hxd/Key.hx	/^	public static inline var QWERTY_SLASH = 191;$/;"	v
QWERTY_TILDE	heaps/hxd/Key.hx	/^	public static inline var QWERTY_TILDE = 192;$/;"	v
QuadTree	heaps/h3d/mat/BigTexture.hx	/^private class QuadTree {$/;"	c
Quads	heaps/h3d/prim/Quads.hx	/^class Quads extends Primitive {$/;"	c
Quality	heaps/h3d/shader/Blur.hx	/^		@param @const var Quality : Int;$/;"	v
Quat	heaps/h3d/Quat.hx	/^class Quat {$/;"	c
Quaternion	heaps/samples/Quaternion.hx	/^class Quaternion extends hxd.App {$/;"	c
Query	heaps/h3d/impl/Driver.hx	/^typedef Query = haxe.GraphicsDriver.Query;$/;"	t
Query	heaps/h3d/impl/Driver.hx	/^typedef Query = { q : haxe.GLTypes.Query, kind : QueryKind };$/;"	t
Query	heaps/h3d/impl/Driver.hx	/^typedef Query = { q : sdl.GL.Query, kind : QueryKind };$/;"	t
Query	heaps/h3d/impl/Driver.hx	/^typedef Query = {};$/;"	t
Query	heaps/h3d/impl/GlDriver.hx	/^private typedef Query = h3d.impl.Driver.Query;$/;"	t
QueryKind	heaps/h3d/impl/Driver.hx	/^enum QueryKind {$/;"	e
QueryObject	heaps/h3d/impl/Benchmark.hx	/^private class QueryObject {$/;"	c
R	heaps/h3d/Matrix.hx	/^	public static function R(x,y,z) {$/;"	f
R	heaps/h3d/col/Capsule.hx	/^		var R = new h3d.col.Point(AO.x-(AB.x*n), AO.y-(AB.y*n), AO.z-(AB.z*n)); \/\/ AO - (AB * n);$/;"	v
R	heaps/hxd/Key.hx	/^	public static inline var R			= 82;$/;"	v
R	heaps/hxd/Pixels.hx	/^	public var R = 0;$/;"	v
RALT	heaps/hxd/Key.hx	/^	public static inline var RALT = ALT | LOC_RIGHT;$/;"	v
RBNode	heaps/h2d/col/Voronoi.hx	/^private class RBNode<T:RBNode<T>> {$/;"	c
RBTree	heaps/h2d/col/Voronoi.hx	/^@:generic private class RBTree<T:RBNode<T>> {$/;"	c
RCTRL	heaps/hxd/Key.hx	/^	public static inline var RCTRL = CTRL | LOC_RIGHT;$/;"	v
RD	heaps/h3d/col/Capsule.hx	/^		var RD = r.getDir();$/;"	v
RECTS_ELTS	heaps/h3d/impl/DirectXDriver.hx	/^	static inline var RECTS_ELTS = 4 * NTARGETS;$/;"	v
REFERENCE_DISTANCE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var REFERENCE_DISTANCE         = 0x1020;$/;"	v
REFRESH	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var REFRESH                          = 0x1008;$/;"	v
REGS	heaps/hxsl/Serializer.hx	/^	static var REGS = [X,Y,Z,W];$/;"	v
REG_SPACES	heaps/h2d/HtmlText.hx	/^	static var REG_SPACES = ~\/[\\r\\n\\t ]+\/g;$/;"	v
RENDERER	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var RENDERER                   = 0xB003;$/;"	v
RH	heaps/samples/CollideCheck.hx	/^	static var RH = 30;$/;"	v
RIGHT	heaps/hxd/Key.hx	/^	public static inline var RIGHT		= 39;$/;"	v
RIGHT_WINDOW_KEY	heaps/hxd/Key.hx	/^	public static inline var RIGHT_WINDOW_KEY = 92;$/;"	v
ROLLOFF_FACTOR	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var ROLLOFF_FACTOR             = 0x1021;$/;"	v
ROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var ROOM                      = new ReverbPreset(-1000,  -454, 0.0,  0.40, 0.83, /;"	v
ROT2RAD	heaps/h3d/scene/Object.hx	/^	static inline var ROT2RAD = -0.017453292519943295769236907684886;$/;"	v
RSHIFT	heaps/hxd/Key.hx	/^	public static inline var RSHIFT = SHIFT | LOC_RIGHT;$/;"	v
RW	heaps/samples/CollideCheck.hx	/^	static var RW = 100;$/;"	v
Rand	heaps/hxd/Rand.hx	/^class Rand {$/;"	c
Randomized	heaps/h3d/parts/Data.hx	/^interface Randomized {$/;"	i
Rational	heaps/hxd/fmt/tiff/Data.hx	/^	public var Rational = 5;$/;"	v
Raw	heaps/hxd/res/Image.hx	/^	var Raw = 5;$/;"	v
RawFormat	heaps/hxd/impl/Allocator.hx	/^	public var RawFormat = 2;$/;"	v
RawPrimitive	heaps/h3d/prim/RawPrimitive.hx	/^class RawPrimitive extends Primitive {$/;"	c
RawQuads	heaps/hxd/impl/Allocator.hx	/^	public var RawQuads = 3;$/;"	v
Ray	heaps/h2d/col/Ray.hx	/^class Ray {$/;"	c
Ray	heaps/h3d/col/Ray.hx	/^class Ray {$/;"	c
Reader	heaps/hxd/fmt/bfnt/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/grd/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/hbson/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/hdr/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/hmd/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/pak/Reader.hx	/^class Reader {$/;"	c
Reader	heaps/hxd/fmt/tiff/Reader.hx	/^class Reader {$/;"	c
Rect	heaps/hxd/clipper/Rect.hx	/^class Rect {$/;"	c
Red	heaps/h2d/Font.hx	/^	var Red = 0;$/;"	v
Ref	heaps/hxd/clipper/Clipper.hx	/^private class Ref<T> {$/;"	c
RegInfos	heaps/hxsl/AgalOptim.hx	/^private class RegInfos {$/;"	c
RegionAttachment	heaps/hxd/fmt/spine/Data.hx	/^class RegionAttachment extends Attachment {$/;"	c
Reinhard	heaps/h3d/scene/pbr/Renderer.hx	/^	var Reinhard = "Reinhard";$/;"	v
RemoveEdge	heaps/hxd/clipper/Clipper.hx	/^	function RemoveEdge(e : TEdge) {$/;"	f
RenderContext	heaps/h2d/RenderContext.hx	/^class RenderContext extends h3d.impl.RenderContext {$/;"	c
RenderContext	heaps/h3d/impl/RenderContext.hx	/^class RenderContext {$/;"	c
RenderContext	heaps/h3d/scene/RenderContext.hx	/^class RenderContext extends h3d.impl.RenderContext {$/;"	c
RenderFlag	heaps/h3d/impl/Driver.hx	/^enum RenderFlag {$/;"	e
RenderMode	heaps/h3d/pass/Shadows.hx	/^enum RenderMode {$/;"	e
RenderMode	heaps/h3d/scene/Renderer.hx	/^enum RenderMode{$/;"	e
RenderProps	heaps/h3d/scene/pbr/Renderer.hx	/^typedef RenderProps = {$/;"	t
RenderZoneStack	heaps/h2d/RenderContext.hx	/^private typedef RenderZoneStack = { hasRZ:Bool, x:Float, y:Float, w:Float, h:Float };$/;"	t
Renderer	heaps/h3d/scene/Renderer.hx	/^class Renderer extends hxd.impl.AnyProps {$/;"	c
Renderer	heaps/h3d/scene/fwd/Renderer.hx	/^class Renderer extends h3d.scene.Renderer {$/;"	c
Renderer	heaps/h3d/scene/pbr/Renderer.hx	/^class Renderer extends h3d.scene.Renderer {$/;"	c
RendererFX	heaps/h3d/impl/RendererFX.hx	/^interface RendererFX {$/;"	i
Replace	heaps/h3d/mat/PbrMaterial.hx	/^	var Replace = "Replace";$/;"	v
Res	heaps/hxd/Res.hx	/^class Res {$/;"	c
Reset	heaps/hxd/clipper/Clipper.hx	/^	function Reset()$/;"	f
Reset	heaps/hxd/clipper/Clipper.hx	/^	override function Reset()$/;"	f
Resource	heaps/hxd/res/Resource.hx	/^class Resource {$/;"	c
Result	heaps/hxd/clipper/Clipper.hx	/^		var Result = E;$/;"	v
ResultKind	heaps/hxd/clipper/Clipper.hx	/^enum ResultKind {$/;"	e
Reverb	heaps/hxd/snd/effect/Reverb.hx	/^class Reverb extends hxd.snd.Effect {$/;"	c
ReverbDriver	heaps/hxd/snd/openal/ReverbDriver.hx	/^class ReverbDriver extends hxd.snd.Driver.EffectDriver<Reverb> {$/;"	c
ReverbPreset	heaps/hxd/snd/effect/ReverbPreset.hx	/^class ReverbPreset {$/;"	c
Reverse1	heaps/hxd/clipper/Clipper.hx	/^			var Reverse1 = ((op1b.pt.y > op1.pt.y) || !SlopesEqual3(op1.pt, op1b.pt, j.offPt));$/;"	v
Reverse2	heaps/hxd/clipper/Clipper.hx	/^			var Reverse2 = ((op2b.pt.y > op2.pt.y) ||$/;"	v
ReverseHorizontal	heaps/hxd/clipper/Clipper.hx	/^	function ReverseHorizontal(e : TEdge)$/;"	f
ReversePolyPtLinks	heaps/hxd/clipper/Clipper.hx	/^	private function ReversePolyPtLinks(pp:OutPt)$/;"	f
Right	heaps/hxd/Direction.hx	/^	public var Right = 6;$/;"	v
Right	heaps/hxd/clipper/Clipper.hx	/^			var Right = out.right;$/;"	v
Right	heaps/hxd/clipper/Clipper.hx	/^		var Right : Int;$/;"	v
Rotation	heaps/hxd/fmt/kframes/Data.hx	/^	var Rotation = "ROTATION";$/;"	v
Roughness	heaps/h3d/shader/pbr/Slides.hx	/^	var Roughness = 3;$/;"	v
Round	heaps/hxd/clipper/Clipper.hx	/^	private inline function Round(value:Float) : Int$/;"	f
RoundRect	heaps/h2d/col/RoundRect.hx	/^class RoundRect implements Collider {$/;"	c
RowsPerStrip	heaps/hxd/fmt/tiff/Data.hx	/^	public var RowsPerStrip = 278;$/;"	v
RuntimeShader	heaps/hxsl/RuntimeShader.hx	/^class RuntimeShader {$/;"	c
RuntimeShaderData	heaps/hxsl/RuntimeShader.hx	/^class RuntimeShaderData {$/;"	c
S	heaps/h3d/Matrix.hx	/^	public static function S( x = 1., y = 1., z = 1.0 ) {$/;"	f
S	heaps/hxd/Key.hx	/^	public static inline var S			= 83;$/;"	v
SALT	heaps/hxd/Save.hx	/^	static var SALT = "s*al!t";$/;"	v
SAMPLE_OFFSET	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SAMPLE_OFFSET              = 0x1025;$/;"	v
SAO	heaps/h3d/shader/SAO.hx	/^class SAO extends ScreenShader {$/;"	c
SByte	heaps/hxd/fmt/tiff/Data.hx	/^	public var SByte = 6;$/;"	v
SCISSOR_BIT	heaps/h3d/impl/DirectXDriver.hx	/^	static inline var SCISSOR_BIT = Pass.reserved_mask;$/;"	v
SCROLL_LOCK	heaps/hxd/Key.hx	/^	public static inline var SCROLL_LOCK = 145;$/;"	v
SDFChannel	heaps/h2d/Font.hx	/^@:enum abstract SDFChannel(Int) from Int to Int {$/;"	a
SEC_OFFSET	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SEC_OFFSET                 = 0x1024;$/;"	v
SEWERPIPE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SEWERPIPE                 = new ReverbPreset(-1000, -1000, 0.0,  2.81, 0.14, /;"	v
SHADER_CACHE_PATH	heaps/h3d/impl/Stage3dDriver.hx	/^	public static var SHADER_CACHE_PATH = null;$/;"	v
SHIFT	heaps/hxd/Key.hx	/^	public static inline var SHIFT		= 16;$/;"	v
SIGN	heaps/hxsl/Serializer.hx	/^	static var SIGN = 0x8B741D; \/\/ will be encoded to HXSL$/;"	v
SIZE	heaps/h3d/impl/MemoryManager.hx	/^	static inline var SIZE = 65533;$/;"	v
SIZE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SIZE                       = 0x2004;$/;"	v
SKIP	heaps/hxd/clipper/Clipper.hx	/^	static inline var SKIP = -2;$/;"	v
SLong	heaps/hxd/fmt/tiff/Data.hx	/^	public var SLong = 9;$/;"	v
SMALLWATERROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SMALLWATERROOM            = new ReverbPreset(-1000,  -698, 0.0,  1.51, 1.25, /;"	v
SMap	heaps/h3d/scene/fwd/Renderer.hx	/^private typedef SMap<T> = #if flash haxe.ds.UnsafeStringMap<T> #else Map<String,T> #end$/;"	t
SOFTWARE_DRIVER	heaps/h3d/Engine.hx	/^	public static var SOFTWARE_DRIVER = false;$/;"	v
SOUND_BUFFER_CACHE_SIZE	heaps/hxd/snd/Manager.hx	/^	public static var SOUND_BUFFER_CACHE_SIZE    = 256;$/;"	v
SOURCE_RELATIVE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SOURCE_RELATIVE            = 0x202;$/;"	v
SOURCE_STATE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SOURCE_STATE               = 0x1010;$/;"	v
SOURCE_TYPE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SOURCE_TYPE                = 0x1027;$/;"	v
SPACE	heaps/hxd/Key.hx	/^	public static inline var SPACE		= 32;$/;"	v
SPACESTATION_ALCOVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_ALCOVE       = new ReverbPreset(-1000,  -300, 0.0,  1.16, 0.81, /;"	v
SPACESTATION_CUPBOARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_CUPBOARD     = new ReverbPreset(-1000,  -300, 0.0,  0.79, 0.81, /;"	v
SPACESTATION_HALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_HALL         = new ReverbPreset(-1000,  -400, 0.0,  7.11, 0.38, /;"	v
SPACESTATION_LARGEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_LARGEROOM    = new ReverbPreset(-1000,  -400, 0.0,  3.89, 0.38, /;"	v
SPACESTATION_LONGPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_LONGPASSAGE  = new ReverbPreset(-1000,  -400, 0.0,  4.62, 0.62, /;"	v
SPACESTATION_MEDIUMROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_MEDIUMROOM   = new ReverbPreset(-1000,  -400, 0.0,  3.01, 0.5,  /;"	v
SPACESTATION_SHORTPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_SHORTPASSAGE = new ReverbPreset(-1000,  -400, 0.0,  3.57, 0.5,  /;"	v
SPACESTATION_SMALLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPACESTATION_SMALLROOM    = new ReverbPreset(-1000,  -300, 0.0,  1.72, 0.82, /;"	v
SPEC	heaps/h3d/scene/pbr/Environment.hx	/^		var SPEC = hxd.res.Embed.getResource("h3d\/scene\/pbr\/envDefault.envs.dds");$/;"	v
SPEED_OF_SOUND	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SPEED_OF_SOUND            = 0xC003;$/;"	v
SPORT_EMPTYSTADIUM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_EMPTYSTADIUM        = new ReverbPreset(-1000,  -700, 0.0,  6.26, 0.51, /;"	v
SPORT_FULLSTADIUM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_FULLSTADIUM         = new ReverbPreset(-1000, -2300, 0.0,  5.25, 0.17, /;"	v
SPORT_GYMNASIUM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_GYMNASIUM           = new ReverbPreset(-1000,  -700, 0.0,  3.14, 1.06, /;"	v
SPORT_LARGESWIMMINGPOOL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_LARGESWIMMINGPOOL   = new ReverbPreset(-1000,  -200, 0.0,  5.49, 1.31, /;"	v
SPORT_SMALLSWIMMINGPOOL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_SMALLSWIMMINGPOOL   = new ReverbPreset(-1000,  -200, 0.0,  2.76, 1.25, /;"	v
SPORT_SQUASHCOURT	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_SQUASHCOURT         = new ReverbPreset(-1000, -1000, 0.0,  2.22, 0.91, /;"	v
SPORT_STADIUMTANNOY	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var SPORT_STADIUMTANNOY       = new ReverbPreset(-1000,  -500, 0.0,  2.53, 0.88, /;"	v
SQ13	heaps/h3d/Matrix.hx	/^	static inline var SQ13 = 0.57735026918962576450914878050196; \/\/ sqrt(1\/3)$/;"	v
SRC	heaps/h2d/Particles.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h2d/filter/InnerGlow.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h2d/filter/Mask.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h2d/filter/Shader.hx	/^		static var SRC = {$/;"	v
SRC	heaps/h3d/pass/Border.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/pass/ColorMatrix.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/pass/Copy.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/pass/CubeCopy.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/pass/FXAA.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/pass/HardwarePick.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/scene/pbr/Environment.hx	/^		var SRC = hxd.res.Embed.getResource("h3d\/scene\/pbr\/envDefault.dds");$/;"	v
SRC	heaps/h3d/scene/pbr/Environment.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/scene/pbr/Renderer.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/AlphaChannel.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/AlphaMap.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/AlphaMult.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/AmbientLight.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/AnimatedTexture.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Base2d.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/BaseMesh.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Bloom.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Blur.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ColorAdd.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ColorKey.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ColorMatrix.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ColorMult.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/CubeMap.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/DirLight.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/DirShadow.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Displacement.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/FixedColor.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/GenTexture.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/GpuParticle.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/KillAlpha.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/LineShader.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/MinMaxShader.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/NoiseLib.hx	/^static var SRC = {$/;"	v
SRC	heaps/h3d/shader/NormalMap.hx	/^    static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Outline.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Outline2D.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Parallax.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ParticleShader.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/PointLight.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/PointShadow.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SAO.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ScreenShader.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Shadow.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SignedDistanceField.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SinusDeform.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Skin.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SkinBase.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SkinTangent.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SpecularTexture.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/SpotShadow.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Texture.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/Texture2.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/UVAnim.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/UVDelta.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/UVScroll.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/VertexColor.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/VertexColorAlpha.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/VolumeDecal.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/WhiteAlpha.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/ZCut.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/AlphaMultiply.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/BDRF.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/CubeLod.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/DefaultForward.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/Distortion.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/GammaCorrect.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/Light.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/Lighting.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/PropsDefinition.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/PropsImport.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/PropsTexture.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/PropsValues.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/Slides.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/StrengthValues.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/ToneMapping.hx	/^	static var SRC = {$/;"	v
SRC	heaps/h3d/shader/pbr/VolumeDecal.hx	/^	static var SRC = {$/;"	v
SRC	heaps/hxsl/BatchShader.hx	/^	static var SRC = {$/;"	v
SRC	heaps/hxsl/CacheFile.hx	/^	static var SRC = {$/;"	v
SRC	heaps/samples/Domkit.hx	/^	static var SRC = <button>$/;"	v
SRC	heaps/samples/Domkit.hx	/^	static var SRC = <container>$/;"	v
SRC	heaps/samples/Domkit.hx	/^	static var SRC =$/;"	v
SRC	heaps/samples/FxView.hx	/^	static var SRC = {$/;"	v
SRC	heaps/samples/ShaderAdvanced.hx	/^	static var SRC = {$/;"	v
SRational	heaps/hxd/fmt/tiff/Data.hx	/^	public var SRational = 10;$/;"	v
SShort	heaps/hxd/fmt/tiff/Data.hx	/^	public var SShort = 8;$/;"	v
STATIC	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var STATIC                     = 0x1028;$/;"	v
STATIC	heaps/hxsl/HlslOut.hx	/^	var STATIC = "static ";$/;"	v
STENCIL_OP	heaps/h3d/impl/DirectXDriver.hx	/^	static var STENCIL_OP : Array<StencilOp> = [$/;"	v
STENCIL_OP	heaps/h3d/impl/GlDriver.hx	/^	static var STENCIL_OP = [$/;"	v
STENCIL_OP	heaps/h3d/impl/Stage3dDriver.hx	/^	static var STENCIL_OP = [$/;"	v
STEREO_SOURCES	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var STEREO_SOURCES                   = 0x1011;$/;"	v
STONECORRIDOR	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var STONECORRIDOR             = new ReverbPreset(-1000,  -237, 0.0,  2.70, 0.79, /;"	v
STONEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var STONEROOM                 = new ReverbPreset(-1000,  -300, 0.0,  2.31, 0.64, /;"	v
STOPPED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var STOPPED                    = 0x1014;$/;"	v
STOP_DELAY	heaps/hxd/snd/openal/Emulator.hx	/^	static inline var STOP_DELAY = #if js 200 #else 0 #end;$/;"	v
STREAMING	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var STREAMING                  = 0x1029;$/;"	v
STREAM_BUFFER_SAMPLE_COUNT	heaps/hxd/snd/Manager.hx	/^	public static var STREAM_BUFFER_SAMPLE_COUNT = 44100;$/;"	v
STREAM_DURATION	heaps/hxd/snd/Manager.hx	/^	public static var STREAM_DURATION            = 5.;$/;"	v
STREAM_POS	heaps/h3d/impl/GlDriver.hx	/^	static inline var STREAM_POS = #if hl 0 #else 1 #end;$/;"	v
STRICT	heaps/h3d/pass/ShaderManager.hx	/^	public static var STRICT = true;$/;"	v
STRIDE	heaps/h3d/parts/GpuParticles.hx	/^	static inline var STRIDE = 14;$/;"	v
SV_InstanceID	heaps/hxsl/HlslOut.hx	/^	var SV_InstanceID = "SV_InstanceID";$/;"	v
SV_IsFrontFace	heaps/hxsl/HlslOut.hx	/^	var SV_IsFrontFace = "SV_IsFrontFace";$/;"	v
SV_POSITION	heaps/hxsl/HlslOut.hx	/^	var SV_POSITION = "SV_POSITION";$/;"	v
SV_TARGET	heaps/hxsl/HlslOut.hx	/^	var SV_TARGET = "SV_TARGET";$/;"	v
SV_VertexID	heaps/hxsl/HlslOut.hx	/^	var SV_VertexID = "SV_VertexID";$/;"	v
SWIZ	heaps/hxsl/Ast.hx	/^	public static var SWIZ = Component.createAll();$/;"	v
SWIZ	heaps/hxsl/Printer.hx	/^	static var SWIZ = ["x", "y", "z", "w"];$/;"	v
SYNC	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var SYNC                             = 0x1009;$/;"	v
SampleApp	heaps/samples/SampleApp.hx	/^class SampleApp extends hxd.App {$/;"	c
SampleFormat	heaps/hxd/fmt/tiff/Data.hx	/^	public var SampleFormat = 339;$/;"	v
SampleFormat	heaps/hxd/snd/Data.hx	/^enum SampleFormat {$/;"	e
Sampler2D	heaps/hxsl/Types.hx	/^typedef Sampler2D = h3d.mat.Texture;$/;"	t
Sampler2DArray	heaps/hxsl/Types.hx	/^typedef Sampler2DArray = h3d.mat.TextureArray;$/;"	t
SamplerCube	heaps/hxsl/Types.hx	/^typedef SamplerCube = h3d.mat.Texture;$/;"	t
Samplers	heaps/hxsl/HlslOut.hx	/^class Samplers {$/;"	c
Samples	heaps/README.md	/^Samples$/;"	s
SamplesPerPixel	heaps/hxd/fmt/tiff/Data.hx	/^	public var SamplesPerPixel = 277;$/;"	v
Sao	heaps/samples/Sao.hx	/^class Sao extends SampleApp {$/;"	c
Save	heaps/hxd/Save.hx	/^class Save {$/;"	c
ScalableAO	heaps/h3d/pass/ScalableAO.hx	/^class ScalableAO extends h3d.pass.ScreenFx<h3d.shader.SAO> {$/;"	c
Scale	heaps/hxd/fmt/kframes/Data.hx	/^	var Scale = "SCALE";$/;"	v
ScaleGrid	heaps/h2d/ScaleGrid.hx	/^class ScaleGrid extends h2d.TileGroup {$/;"	c
ScaleGridComp	heaps/h2d/domkit/BaseComponents.hx	/^class ScaleGridComp extends DrawableComp implements domkit.Component.ComponentDecl<h2d.ScaleGrid/;"	c
ScaleMode	heaps/h2d/Scene.hx	/^enum ScaleMode {$/;"	e
ScaleMode2D	heaps/samples/ScaleMode2D.hx	/^class ScaleMode2D extends SampleApp {$/;"	c
ScaleModeAlign	heaps/h2d/Scene.hx	/^enum ScaleModeAlign {$/;"	e
Scanbeam	heaps/hxd/clipper/Clipper.hx	/^private class Scanbeam {$/;"	c
Scene	heaps/h2d/Scene.hx	/^class Scene extends Layers implements h3d.IDrawable implements hxd.SceneEvents.InteractiveScene /;"	c
Scene	heaps/h3d/scene/Scene.hx	/^class Scene extends Object implements h3d.IDrawable implements hxd.SceneEvents.InteractiveScene /;"	c
SceneEvents	heaps/hxd/SceneEvents.hx	/^class SceneEvents {$/;"	c
ScreenFx	heaps/h3d/pass/ScreenFx.hx	/^class ScreenFx<T:h3d.shader.ScreenShader> {$/;"	c
ScreenShader	heaps/h3d/shader/ScreenShader.hx	/^class ScreenShader extends hxsl.Shader {$/;"	c
SearchMap	heaps/hxsl/Cache.hx	/^class SearchMap {$/;"	c
Seg	heaps/h3d/col/Seg.hx	/^class Seg {$/;"	c
Segment	heaps/h2d/col/Segment.hx	/^class Segment {$/;"	c
Segments	heaps/h2d/col/Segments.hx	/^abstract Segments(Array<Segment>) from Array<Segment> to Array<Segment> {$/;"	a
SelNext	heaps/hxd/clipper/Clipper.hx	/^		var SelNext = e.nextInSEL;$/;"	v
SelPrev	heaps/hxd/clipper/Clipper.hx	/^		var SelPrev = e.prevInSEL;$/;"	v
Serializer	heaps/hxsl/Serializer.hx	/^class Serializer {$/;"	c
SetDx	heaps/hxd/clipper/Clipper.hx	/^	private function SetDx(e:TEdge)$/;"	f
SetHoleState	heaps/hxd/clipper/Clipper.hx	/^	private function SetHoleState(e:TEdge,outRec:OutRec)$/;"	f
SetWindingCount	heaps/hxd/clipper/Clipper.hx	/^	private function SetWindingCount(edge:TEdge) {$/;"	f
Shader	heaps/h2d/filter/Shader.hx	/^class Shader< T:h3d.shader.ScreenShader > extends Filter {$/;"	c
Shader	heaps/hxsl/Shader.hx	/^class Shader {$/;"	c
ShaderAdvanced	heaps/samples/ShaderAdvanced.hx	/^class ShaderAdvanced extends hxd.App {$/;"	c
ShaderBufferData	heaps/h3d/shader/Buffers.hx	/^typedef ShaderBufferData = hxd.impl.TypedArray.Float32Array;$/;"	t
ShaderBuffers	heaps/h3d/shader/Buffers.hx	/^class ShaderBuffers {$/;"	c
ShaderCompiler	heaps/h3d/impl/GlDriver.hx	/^private typedef ShaderCompiler = haxe.GLTypes.ShaderCompiler;$/;"	t
ShaderCompiler	heaps/h3d/impl/GlDriver.hx	/^private typedef ShaderCompiler = hxsl.GlslOut;$/;"	t
ShaderConst	heaps/hxsl/SharedShader.hx	/^class ShaderConst {$/;"	c
ShaderContext	heaps/h3d/impl/DirectXDriver.hx	/^private class ShaderContext {$/;"	c
ShaderData	heaps/hxsl/Ast.hx	/^typedef ShaderData = {$/;"	t
ShaderGlobal	heaps/hxsl/SharedShader.hx	/^class ShaderGlobal {$/;"	c
ShaderInfos	heaps/hxsl/Linker.hx	/^private class ShaderInfos {$/;"	c
ShaderInstance	heaps/hxsl/SharedShader.hx	/^class ShaderInstance {$/;"	c
ShaderInstanceDesc	heaps/hxsl/RuntimeShader.hx	/^class ShaderInstanceDesc {$/;"	c
ShaderIterator	heaps/hxsl/ShaderList.hx	/^private class ShaderIterator {$/;"	c
ShaderList	heaps/hxsl/ShaderList.hx	/^class ShaderList {$/;"	c
ShaderManager	heaps/h3d/pass/ShaderManager.hx	/^class ShaderManager {$/;"	c
Shadow	heaps/h3d/shader/Shadow.hx	/^class Shadow extends hxsl.Shader {$/;"	c
Shadow	heaps/h3d/shader/pbr/Slides.hx	/^	var Shadow = 8;$/;"	v
ShadowSamplingKind	heaps/h3d/pass/Shadows.hx	/^enum ShadowSamplingKind {$/;"	e
Shadows	heaps/h3d/pass/Shadows.hx	/^class Shadows extends Default {$/;"	c
Shadows	heaps/samples/Shadows.hx	/^class Shadows extends SampleApp {$/;"	c
Shape	heaps/h3d/parts/Data.hx	/^enum Shape {$/;"	e
SharedGlobal	heaps/h3d/scene/RenderContext.hx	/^private class SharedGlobal {$/;"	c
SharedShader	heaps/hxsl/SharedShader.hx	/^class SharedShader {$/;"	c
Short	heaps/hxd/fmt/tiff/Data.hx	/^	public var Short = 3;$/;"	v
SignedDistanceField	heaps/h3d/shader/SignedDistanceField.hx	/^class SignedDistanceField extends hxsl.Shader {$/;"	c
SimpleBlend	heaps/h3d/anim/SimpleBlend.hx	/^class SimpleBlend extends Transition {$/;"	c
SimplifyPolygon	heaps/hxd/clipper/Clipper.hx	/^	public static function SimplifyPolygon(poly : IPolygon, ?fillType)$/;"	f
SimplifyPolygons	heaps/hxd/clipper/Clipper.hx	/^      public static function SimplifyPolygons(polys : IPolygons, ?fillType)$/;"	f
SingleFileSystem	heaps/hxd/res/Any.hx	/^private class SingleFileSystem extends hxd.fs.BytesFileSystem {$/;"	c
SinusDeform	heaps/h3d/shader/SinusDeform.hx	/^class SinusDeform extends hxsl.Shader {$/;"	c
SizeDecl	heaps/hxsl/Ast.hx	/^enum SizeDecl {$/;"	e
Skin	heaps/h3d/anim/Skin.hx	/^class Skin {$/;"	c
Skin	heaps/h3d/scene/Skin.hx	/^class Skin extends MultiMaterial {$/;"	c
Skin	heaps/h3d/shader/Skin.hx	/^class Skin extends SkinBase {$/;"	c
Skin	heaps/hxd/fmt/hmd/Data.hx	/^class Skin {$/;"	c
Skin	heaps/hxd/fmt/spine/Data.hx	/^class Skin {$/;"	c
Skin	heaps/samples/Skin.hx	/^class Skin extends SampleApp {$/;"	c
SkinBase	heaps/h3d/shader/SkinBase.hx	/^class SkinBase extends hxsl.Shader {$/;"	c
SkinCollider	heaps/h3d/col/SkinCollider.hx	/^class SkinCollider implements Collider {$/;"	c
SkinColliderDebugObj	heaps/h3d/col/SkinCollider.hx	/^class SkinColliderDebugObj extends h3d.scene.Object {$/;"	c
SkinJoint	heaps/hxd/fmt/hmd/Data.hx	/^class SkinJoint {$/;"	c
SkinSplit	heaps/hxd/fmt/hmd/Data.hx	/^class SkinSplit {$/;"	c
SkinTangent	heaps/h3d/shader/SkinTangent.hx	/^class SkinTangent extends SkinBase {$/;"	c
SkinnedMeshAttachment	heaps/hxd/fmt/spine/Data.hx	/^class SkinnedMeshAttachment extends Attachment {$/;"	c
SkinnedVertice	heaps/hxd/fmt/spine/Data.hx	/^class SkinnedVertice {$/;"	c
SkyMode	heaps/h3d/scene/pbr/Renderer.hx	/^@:enum abstract SkyMode(String) {$/;"	a
Slider	heaps/h2d/Slider.hx	/^class Slider extends h2d.Interactive {$/;"	c
Slides	heaps/h3d/shader/pbr/Slides.hx	/^class Slides extends ScreenShader {$/;"	c
SlopesEqual	heaps/hxd/clipper/Clipper.hx	/^	inline function SlopesEqual(e1:TEdge, e2:TEdge) {$/;"	f
SlopesEqual3	heaps/hxd/clipper/Clipper.hx	/^	inline function SlopesEqual3(pt1:IPoint, pt2:IPoint, pt3:IPoint) {$/;"	f
SlopesNearCollinear	heaps/hxd/clipper/Clipper.hx	/^      private function SlopesNearCollinear(pt1 : IPoint, pt2 : IPoint , pt3 : IPoint, distSqrd :/;"	f
Slot	heaps/hxd/fmt/spine/Data.hx	/^class Slot {$/;"	c
SmoothObject	heaps/h3d/anim/SmoothTarget.hx	/^private class SmoothObject extends Animation.AnimatedObject {$/;"	c
SmoothTarget	heaps/h3d/anim/SmoothTarget.hx	/^class SmoothTarget extends Animation {$/;"	c
SmoothTransition	heaps/h3d/anim/SmoothTransition.hx	/^class SmoothTransition extends Transition {$/;"	c
SmoothedObject	heaps/h3d/anim/SmoothTransition.hx	/^class SmoothedObject extends Animation.AnimatedObject {$/;"	c
Socket	heaps/hxd/net/Socket.hx	/^class Socket {$/;"	c
SocketClient	heaps/hxd/net/SocketHost.hx	/^class SocketClient extends NetworkClient {$/;"	c
SocketHost	heaps/hxd/net/SocketHost.hx	/^class SocketHost extends NetworkHost {$/;"	c
SocketInput	heaps/hxd/net/Socket.hx	/^private class SocketInput extends haxe.io.Input {$/;"	c
SocketOutput	heaps/hxd/net/Socket.hx	/^private class SocketOutput extends haxe.io.Output {$/;"	c
SoftAdd	heaps/h3d/mat/Material.hx	/^	var SoftAdd = "SoftAdd";$/;"	v
SortByMaterial	heaps/h3d/pass/SortByMaterial.hx	/^class SortByMaterial {$/;"	c
SortMode	heaps/h3d/parts/Data.hx	/^enum SortMode {$/;"	e
Sound	heaps/hxd/res/Sound.hx	/^class Sound extends Resource {$/;"	c
Sound	heaps/samples/Sound.hx	/^class Sound extends SampleApp {$/;"	c
SoundFormat	heaps/hxd/res/Sound.hx	/^enum SoundFormat {$/;"	e
SoundGroup	heaps/hxd/snd/SoundGroup.hx	/^class SoundGroup {$/;"	c
Source	heaps/hxd/snd/Manager.hx	/^class Source {$/;"	c
Source	heaps/hxd/snd/openal/Emulator.hx	/^class Source {$/;"	c
SourceHandle	heaps/hxd/snd/Driver.hx	/^typedef SourceHandle = haxe.AudioTypes.SourceHandle;$/;"	t
SourceHandle	heaps/hxd/snd/Driver.hx	/^typedef SourceHandle = hxd.snd.openal.AudioTypes.SourceHandle;$/;"	t
SourceHandle	heaps/hxd/snd/Driver.hx	/^typedef SourceHandle = hxd.snd.webaudio.AudioTypes.SourceHandle;$/;"	t
SourceHandle	heaps/hxd/snd/openal/AudioTypes.hx	/^class SourceHandle {$/;"	c
SourceHandle	heaps/hxd/snd/webaudio/AudioTypes.hx	/^class SourceHandle {$/;"	c
Spatialization	heaps/hxd/snd/effect/Spatialization.hx	/^class Spatialization extends hxd.snd.Effect {$/;"	c
SpatializationDriver	heaps/hxd/snd/openal/SpatializationDriver.hx	/^class SpatializationDriver extends EffectDriver<Spatialization> {$/;"	c
SpatializationDriver	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^class SpatializationDriver extends EffectDriver<Spatialization> {$/;"	c
Specular	heaps/h3d/scene/pbr/Renderer.hx	/^	var Specular = "Specular";$/;"	v
SpecularTexture	heaps/h3d/shader/SpecularTexture.hx	/^class SpecularTexture extends hxsl.Shader {$/;"	c
Sphere	heaps/h3d/col/Sphere.hx	/^class Sphere implements Collider {$/;"	c
Sphere	heaps/h3d/prim/Sphere.hx	/^class Sphere extends Polygon {$/;"	c
Sphere	heaps/h3d/scene/Sphere.hx	/^class Sphere extends Graphics {$/;"	c
SplitNode	heaps/h2d/HtmlText.hx	/^private typedef SplitNode = {$/;"	t
Splitter	heaps/hxsl/Splitter.hx	/^class Splitter {$/;"	c
SpotLight	heaps/h3d/scene/pbr/SpotLight.hx	/^class SpotLight extends Light {$/;"	c
SpotLight	heaps/h3d/shader/pbr/Light.hx	/^class SpotLight extends Light {$/;"	c
SpotShadow	heaps/h3d/shader/SpotShadow.hx	/^class SpotShadow extends hxsl.Shader {$/;"	c
SpotShadowMap	heaps/h3d/pass/SpotShadowMap.hx	/^class SpotShadowMap extends Shadows {$/;"	c
Sprite	heaps/h2d/Sprite.hx	/^typedef Sprite = Object;/;"	t
SpriteBatch	heaps/h2d/SpriteBatch.hx	/^class SpriteBatch extends Drawable {$/;"	c
Stage	heaps/hxd/Stage.hx	/^typedef Stage = Window;/;"	t
Stage3dDriver	heaps/h3d/impl/Stage3dDriver.hx	/^class Stage3dDriver extends Driver {$/;"	c
State	heaps/h2d/ZGroup.hx	/^private class State {$/;"	c
State	heaps/h3d/parts/Data.hx	/^class State {$/;"	c
StateEntry	heaps/h2d/impl/BatchDrawState.hx	/^private class StateEntry {$/;"	c
StatsObject	heaps/h3d/impl/Benchmark.hx	/^private class StatsObject {$/;"	c
Stencil	heaps/h3d/mat/Stencil.hx	/^class Stencil {$/;"	c
Stencil	heaps/samples/Stencil.hx	/^class Stencil extends hxd.App {$/;"	c
StencilOp	heaps/h3d/mat/Data.hx	/^enum StencilOp {$/;"	e
Step	heaps/h3d/impl/RendererFX.hx	/^enum Step {$/;"	e
StrengthValues	heaps/h3d/shader/pbr/StrengthValues.hx	/^class StrengthValues extends hxsl.Shader {$/;"	c
StripByteCounts	heaps/hxd/fmt/tiff/Data.hx	/^	public var StripByteCounts = 279;$/;"	v
StripOffsets	heaps/hxd/fmt/tiff/Data.hx	/^	public var StripOffsets = 273;$/;"	v
Structure	heaps/hxsl/DynamicShader.hx	/^	var Structure = 2;$/;"	v
Style	heaps/h2d/domkit/Style.hx	/^class Style extends domkit.CssStyle {$/;"	c
SwapPolyIndexes	heaps/hxd/clipper/Clipper.hx	/^	private function SwapPolyIndexes(edge1:TEdge,edge2:TEdge)$/;"	f
SwapPositionsInAEL	heaps/hxd/clipper/Clipper.hx	/^	private function SwapPositionsInAEL(edge1:TEdge, edge2:TEdge) {$/;"	f
SwapPositionsInSEL	heaps/hxd/clipper/Clipper.hx	/^	private function SwapPositionsInSEL(edge1:TEdge,edge2:TEdge)$/;"	f
SwapSides	heaps/hxd/clipper/Clipper.hx	/^	private inline function SwapSides(edge1:TEdge,edge2:TEdge)$/;"	f
SwapX	heaps/hxd/clipper/Clipper.hx	/^	private inline function SwapX(e:TEdge)$/;"	f
Sweep	heaps/hxd/poly2tri/Sweep.hx	/^class Sweep$/;"	c
SweepContext	heaps/hxd/poly2tri/SweepContext.hx	/^class SweepContext$/;"	c
System	heaps/hxd/System.flash.hx	/^class System {$/;"	c
System	heaps/hxd/System.hl.hx	/^class System {$/;"	c
System	heaps/hxd/System.hx	/^class System {$/;"	c
System	heaps/hxd/System.js.hx	/^class System {$/;"	c
SystemValue	heaps/hxd/System.flash.hx	/^enum SystemValue {$/;"	e
SystemValue	heaps/hxd/System.hl.hx	/^enum SystemValue {$/;"	e
SystemValue	heaps/hxd/System.hx	/^enum SystemValue {$/;"	e
SystemValue	heaps/hxd/System.js.hx	/^enum SystemValue {$/;"	e
T	heaps/h3d/Matrix.hx	/^	public static function T( x = 0., y = 0., z = 0. ) {$/;"	f
T	heaps/h3d/col/PolygonBuffer.hx	/^			var T = r0.sub(p0);$/;"	v
T	heaps/hxd/Key.hx	/^	public static inline var T			= 84;$/;"	v
T0	heaps/h2d/domkit/Style.hx	/^		var T0 = domkit.CssStyle.TAG;$/;"	v
TAB	heaps/hxd/Key.hx	/^	public static inline var TAB		= 9;$/;"	v
TEXCONV_FMT	heaps/hxd/fs/Convert.hx	/^	static var TEXCONV_FMT = [$/;"	v
TEdge	heaps/hxd/clipper/Clipper.hx	/^private class TEdge {$/;"	c
TExpr	heaps/hxsl/Ast.hx	/^typedef TExpr = { e : TExprDef, t : Type, p : Position }$/;"	t
TExprDef	heaps/hxsl/Ast.hx	/^enum TExprDef {$/;"	e
TFILTERS	heaps/h3d/impl/GlDriver.hx	/^	static var TFILTERS = [$/;"	v
TFunction	heaps/hxsl/Ast.hx	/^typedef TFunction = {$/;"	t
TGLOBALS	heaps/hxsl/Serializer.hx	/^	static var TGLOBALS = hxsl.TGlobal.createAll();$/;"	v
TGlobal	heaps/hxsl/Ast.hx	/^enum TGlobal {$/;"	e
THRESHOLD	heaps/hxd/Perlin.hx	/^	static var THRESHOLD = [1, 0.8592513390087628, 0.7688052643570193, 0.7087726039952893, 0.664711/;"	v
TILE_SIZE	heaps/samples/Tiled.hx	/^	inline static var TILE_SIZE:Int = 16;$/;"	v
TMP_BYTES	heaps/hxd/fs/FileEntry.hx	/^	static var TMP_BYTES : haxe.io.Bytes = null;$/;"	v
TMP_MAT	heaps/h3d/col/ObjectCollider.hx	/^	static var TMP_MAT = new Matrix();$/;"	v
TMP_MAT	heaps/h3d/col/TransformCollider.hx	/^	static var TMP_MAT = new Matrix();$/;"	v
TMP_MAT	heaps/h3d/scene/Skin.hx	/^	static var TMP_MAT = new h3d.Matrix();$/;"	v
TMP_RAY	heaps/h3d/col/ObjectCollider.hx	/^	static var TMP_RAY = new Ray();$/;"	v
TMP_RAY	heaps/h3d/col/TransformCollider.hx	/^	static var TMP_RAY = new Ray();$/;"	v
TOLERANCE	heaps/hxd/clipper/Clipper.hx	/^	static inline var TOLERANCE = 1E-20;$/;"	v
TOUCH_SCALE	heaps/hxd/Window.hl.hx	/^	static inline var TOUCH_SCALE = #if (hl_ver >= version("1.12.0")) 10000 #else 100 #end;$/;"	v
TRACE	heaps/hxsl/Cache.hx	/^	public static var TRACE = true;$/;"	v
TRUE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var TRUE                             = 1;$/;"	v
TRUE	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var TRUE                       = 1;$/;"	v
TSWIZ	heaps/hxsl/Serializer.hx	/^	static var TSWIZ = new Map();$/;"	v
TURKISH	heaps/hxd/Charset.hx	/^	public static var TURKISH = "ÂÇĞIİÎÖŞÜÛâçğıİîöşüû";$/;"	v
TVECS	heaps/hxsl/Serializer.hx	/^	static var TVECS = new Map();$/;"	v
TVar	heaps/hxsl/Ast.hx	/^typedef TVar = {$/;"	t
TWRAP	heaps/h3d/impl/GlDriver.hx	/^	static var TWRAP = [$/;"	v
TargetStackEntry	heaps/h2d/RenderContext.hx	/^private typedef TargetStackEntry = CameraStackEntry & {$/;"	t
TargetTmp	heaps/h3d/Engine.hx	/^private class TargetTmp {$/;"	c
TerrainPass	heaps/h3d/mat/PbrMaterial.hx	/^	var TerrainPass = "TerrainPass";$/;"	v
TestTextureArray	heaps/samples/ShaderAdvanced.hx	/^class TestTextureArray extends hxsl.Shader {$/;"	c
TestUniformBuffer	heaps/samples/ShaderAdvanced.hx	/^class TestUniformBuffer extends hxsl.Shader {$/;"	c
Text	heaps/h2d/Text.hx	/^class Text extends Drawable {$/;"	c
Text	heaps/samples/Text.hx	/^class Text extends hxd.App {$/;"	c
TextComp	heaps/h2d/domkit/BaseComponents.hx	/^class TextComp extends DrawableComp implements domkit.Component.ComponentDecl<h2d.Text> {$/;"	c
TextHistoryElement	heaps/h2d/TextInput.hx	/^private typedef TextHistoryElement = { t : String, c : Int, sel : { start : Int, length : Int } /;"	t
TextInput	heaps/h2d/TextInput.hx	/^class TextInput extends Text {$/;"	c
TextWidget	heaps/samples/Text.hx	/^class TextWidget extends Object$/;"	c
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = flash.display3D.textures.TextureBase;$/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = haxe.GraphicsDriver.Texture;$/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = { res : dx.Resource, view : dx.Driver.ShaderResourceView, rt : Array<dx.Driver/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = { t : haxe.GLTypes.Texture, width : Int, height : Int, internalFmt : Int, pixe/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = { t : js.html.webgl.Texture, width : Int, height : Int, internalFmt : Int, pix/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = { t : sdl.GL.Texture, width : Int, height : Int, internalFmt : Int, pixelFmt :/;"	t
Texture	heaps/h3d/impl/Driver.hx	/^typedef Texture = {};$/;"	t
Texture	heaps/h3d/impl/GlDriver.hx	/^private typedef Texture = h3d.impl.Driver.Texture;$/;"	t
Texture	heaps/h3d/mat/Texture.hx	/^class Texture {$/;"	c
Texture	heaps/h3d/shader/Texture.hx	/^class Texture extends hxsl.Shader {$/;"	c
Texture	heaps/hxsl/Types.hx	/^typedef Texture = h3d.mat.Texture;$/;"	t
Texture2	heaps/h3d/shader/Texture2.hx	/^class Texture2 extends hxsl.Shader {$/;"	c
TextureArray	heaps/h3d/mat/TextureArray.hx	/^class TextureArray extends Texture {$/;"	c
TextureCache	heaps/h3d/impl/TextureCache.hx	/^class TextureCache {$/;"	c
TextureChannels	heaps/h3d/mat/TextureChannels.hx	/^class TextureChannels extends Texture {$/;"	c
TextureFlags	heaps/h3d/mat/Data.hx	/^enum TextureFlags {$/;"	e
TextureFormat	heaps/h3d/mat/Data.hx	/^typedef TextureFormat = hxd.PixelFormat;$/;"	t
Textures	heaps/h3d/shader/Buffers.hx	/^	public var Textures = 2;$/;"	v
Tga	heaps/hxd/res/Image.hx	/^	var Tga = 3;$/;"	v
ThirdPersonCameraController	heaps/samples/Polygons.hx	/^class ThirdPersonCameraController extends CameraController {$/;"	c
ThreadAsyncLoader	heaps/hxd/impl/AsyncLoader.hx	/^class ThreadAsyncLoader implements AsyncLoader {$/;"	c
TifFile	heaps/hxd/fmt/tiff/Data.hx	/^typedef TifFile = {$/;"	t
TifValue	heaps/hxd/fmt/tiff/Data.hx	/^enum TifValue {$/;"	e
Tile	heaps/h2d/Tile.hx	/^class Tile {$/;"	c
TileGroup	heaps/h2d/TileGroup.hx	/^class TileGroup extends Drawable {$/;"	c
TileLayerContent	heaps/h2d/TileGroup.hx	/^class TileLayerContent extends h3d.prim.Primitive {$/;"	c
TileSpec	heaps/h2d/CdbLevel.hx	/^typedef TileSpec = {$/;"	t
Tiled	heaps/samples/Tiled.hx	/^class Tiled extends hxd.App {$/;"	c
TiledMap	heaps/hxd/res/TiledMap.hx	/^class TiledMap extends Resource {$/;"	c
TiledMapData	heaps/hxd/res/TiledMap.hx	/^typedef TiledMapData = {$/;"	t
TiledMapLayer	heaps/hxd/res/TiledMap.hx	/^typedef TiledMapLayer = {$/;"	t
Timer	heaps/hxd/Timer.hx	/^class Timer {$/;"	c
TmpObject	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^class TmpObject {$/;"	c
ToFront	heaps/hxd/clipper/Clipper.hx	/^		var ToFront = (e.side == EdgeSide.Left);$/;"	v
ToneMapping	heaps/h3d/shader/pbr/ToneMapping.hx	/^class ToneMapping extends ScreenShader {$/;"	c
TonemapMap	heaps/h3d/scene/pbr/Renderer.hx	/^@:enum abstract TonemapMap(String) {$/;"	a
Tools	heaps/hxsl/Ast.hx	/^class Tools {$/;"	c
Tools2	heaps/hxsl/Ast.hx	/^class Tools2 {$/;"	c
Tools3	heaps/hxsl/Ast.hx	/^class Tools3 {$/;"	c
Tools4	heaps/hxsl/Ast.hx	/^class Tools4 {$/;"	c
TopX	heaps/hxd/clipper/Clipper.hx	/^	private inline function TopX(edge:TEdge,currentY:Int) : Int$/;"	f
Trail	heaps/h3d/scene/Trail.hx	/^class Trail extends Mesh {$/;"	c
TrailElement	heaps/h3d/scene/Trail.hx	/^private class TrailElement {$/;"	c
TransformCollider	heaps/h3d/col/TransformCollider.hx	/^class TransformCollider implements Collider {$/;"	c
Transition	heaps/h3d/anim/Transition.hx	/^class Transition extends Animation {$/;"	c
TranslatePath	heaps/hxd/clipper/Clipper.hx	/^      private function TranslatePath(path : IPolygon, delta : IPoint)$/;"	f
TransparencyStop	heaps/hxd/fmt/grd/Data.hx	/^class TransparencyStop  {$/;"	c
TriPlane	heaps/h3d/col/Polygon.hx	/^class TriPlane implements Collider {$/;"	c
Triangle	heaps/h2d/col/Triangle.hx	/^class Triangle implements Collider {$/;"	c
Triangle	heaps/hxd/poly2tri/Triangle.hx	/^class Triangle$/;"	c
Type	heaps/hxsl/Ast.hx	/^enum Type {$/;"	e
U	heaps/hxd/Key.hx	/^	public static inline var U			= 85;$/;"	v
UID	heaps/h3d/Buffer.hx	/^	static var UID = 0;$/;"	v
UID	heaps/h3d/impl/Driver.hx	/^	static var UID = 0;$/;"	v
UID	heaps/h3d/impl/GlDriver.hx	/^	static var UID = 0;$/;"	v
UID	heaps/h3d/mat/Texture.hx	/^	static var UID = 0;$/;"	v
UID	heaps/hxd/Cursor.hx	/^	static var UID = 0;$/;"	v
UID	heaps/hxsl/Ast.hx	/^	static var UID = 0;$/;"	v
UID	heaps/hxsl/Linker.hx	/^	static var UID = 0;$/;"	v
UID	heaps/hxsl/RuntimeShader.hx	/^	static var UID = 0;$/;"	v
UInt16	heaps/hxd/impl/UInt16.hx	/^typedef UInt16 = #if hl hl.UI16 #else Int #end;/;"	t
UNASSIGNED	heaps/hxd/clipper/Clipper.hx	/^	static inline var UNASSIGNED = -1;$/;"	v
UNDEF	heaps/h2d/col/Triangle.hx	/^	static inline var UNDEF = 1.1315e-17;$/;"	v
UNDERWATER	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var UNDERWATER                = new ReverbPreset(-1000, -4000, 0.0,  1.49, 0.10, /;"	v
UNDETERMINED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var UNDETERMINED               = 0x1030;$/;"	v
UNICODE_SPECIALS	heaps/hxd/Charset.hx	/^	public static var UNICODE_SPECIALS = "�□";$/;"	v
UNOPS	heaps/hxsl/Serializer.hx	/^	static var UNOPS = Unop.createAll();$/;"	v
UNROLL_LOOPS	heaps/hxsl/SharedShader.hx	/^	public static var UNROLL_LOOPS = #if flash true #else false #end;$/;"	v
UNUSED	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var UNUSED                     = 0x2010;$/;"	v
UP	heaps/hxd/Key.hx	/^	public static inline var UP			= 38;$/;"	v
USE_ALBEDO	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@const var USE_ALBEDO : Bool;$/;"	v
USE_ALPHA	heaps/h3d/shader/FixedColor.hx	/^		@const @param var USE_ALPHA : Bool;$/;"	v
USE_ESM	heaps/h3d/shader/DirShadow.hx	/^		@const var USE_ESM : Bool;$/;"	v
USE_ESM	heaps/h3d/shader/PointShadow.hx	/^		@const var USE_ESM : Bool;$/;"	v
USE_ESM	heaps/h3d/shader/SpotShadow.hx	/^		@const var USE_ESM : Bool;$/;"	v
USE_INDIRECT	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@const var USE_INDIRECT = false;$/;"	v
USE_NORMAL	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@const var USE_NORMAL : Bool;$/;"	v
USE_PCF	heaps/h3d/shader/DirShadow.hx	/^		@const var USE_PCF : Bool;$/;"	v
USE_PCF	heaps/h3d/shader/PointShadow.hx	/^		@const var USE_PCF : Bool;$/;"	v
USE_PCF	heaps/h3d/shader/SpotShadow.hx	/^		@const var USE_PCF : Bool;$/;"	v
USE_VULKAN	heaps/hxd/Window.hl.hx	/^	public static var USE_VULKAN = false;$/;"	v
UV	heaps/h3d/prim/UV.hx	/^class UV {$/;"	c
UVAnim	heaps/h3d/shader/UVAnim.hx	/^class UVAnim extends hxsl.Shader {$/;"	c
UVDelta	heaps/h3d/shader/UVDelta.hx	/^class UVDelta extends hxsl.Shader {$/;"	c
UVScroll	heaps/h3d/shader/UVScroll.hx	/^class UVScroll extends hxsl.Shader {$/;"	c
Uint16Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint16Array = js.html.Uint16Array;$/;"	t
Uint16Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint16Array = js.lib.Uint16Array;$/;"	t
Uint32Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint32Array = js.html.Uint32Array;$/;"	t
Uint32Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint32Array = js.lib.Uint32Array;$/;"	t
Uint8Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint8Array = js.html.Uint8Array;$/;"	t
Uint8Array	heaps/hxd/impl/TypedArray.hx	/^typedef Uint8Array = js.lib.Uint8Array;$/;"	t
UncheckedBytes	heaps/hxd/impl/UncheckedBytes.hx	/^abstract UncheckedBytes(InnerData) {$/;"	a
UndefByte	heaps/hxd/fmt/tiff/Data.hx	/^	public var UndefByte = 7;$/;"	v
Uniform	heaps/h3d/impl/GlDriver.hx	/^private typedef Uniform = haxe.GLTypes.Uniform;$/;"	t
Uniform	heaps/h3d/impl/GlDriver.hx	/^private typedef Uniform = js.html.webgl.UniformLocation;$/;"	t
Uniform	heaps/h3d/impl/GlDriver.hx	/^private typedef Uniform = sdl.GL.Uniform;$/;"	t
UniformDynamic	heaps/hxd/impl/Allocator.hx	/^	public var UniformDynamic = 1;$/;"	v
Unit	heaps/hxd/poly2tri/Constants.hx	/^typedef Unit = Float;$/;"	t
Unit	heaps/hxd/poly2tri/Constants.hx	/^typedef Unit = Int;$/;"	t
Unop	heaps/hxsl/Ast.hx	/^typedef Unop = haxe.macro.Expr.Unop;$/;"	t
Up	heaps/hxd/Direction.hx	/^	public var Up = 1;$/;"	v
UpdateEdgeIntoAEL	heaps/hxd/clipper/Clipper.hx	/^	private function UpdateEdgeIntoAEL(e : TEdge)$/;"	f
UpdateOutPtIdxs	heaps/hxd/clipper/Clipper.hx	/^	private function UpdateOutPtIdxs(outrec:OutRec)$/;"	f
Utils	heaps/hxd/fmt/tiff/Data.hx	/^class Utils {$/;"	c
Utils	heaps/hxd/poly2tri/Utils.hx	/^class Utils$/;"	c
V	heaps/hxd/Key.hx	/^	public static inline var V			= 86;$/;"	v
VALUES	heaps/hxd/Direction.hx	/^	static var VALUES = ["none", "up", null, null, "left", null, "right", null, null, "down"];$/;"	v
VELOCITY	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var VELOCITY                   = 0x1006;$/;"	v
VENDOR	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var VENDOR                     = 0xB001;$/;"	v
VERSION	heaps/h2d/Particles.hx	/^	static inline var VERSION = 1;$/;"	v
VERSION	heaps/h3d/parts/GpuParticles.hx	/^	static inline var VERSION = 2;$/;"	v
VERSION	heaps/hxd/fmt/bfnt/Writer.hx	/^	static inline var VERSION : Int = 1;$/;"	v
VERSION	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline var VERSION                    = 0xB002;$/;"	v
VIEWPORTS_ELTS	heaps/h3d/impl/DirectXDriver.hx	/^	static inline var VIEWPORTS_ELTS = 6 * NTARGETS;$/;"	v
VIRTUAL_VOLUME_THRESHOLD	heaps/hxd/snd/Manager.hx	/^	public static var VIRTUAL_VOLUME_THRESHOLD   = 1e-5;$/;"	v
VKINDS	heaps/hxsl/Serializer.hx	/^	static var VKINDS = VarKind.createAll();$/;"	v
Value	heaps/h3d/parts/Data.hx	/^enum Value {$/;"	e
ValueXYZ	heaps/h3d/parts/Data.hx	/^class ValueXYZ {$/;"	c
VarBinding	heaps/h3d/impl/VarBinding.hx	/^interface VarBinding {$/;"	i
VarDecl	heaps/hxsl/Ast.hx	/^typedef VarDecl = {$/;"	t
VarDeps	heaps/hxsl/Dce.hx	/^private class VarDeps {$/;"	c
VarKind	heaps/hxsl/Ast.hx	/^enum VarKind {$/;"	e
VarProps	heaps/hxsl/Splitter.hx	/^private class VarProps {$/;"	c
VarQualifier	heaps/hxsl/Ast.hx	/^enum VarQualifier {$/;"	e
VdH	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var VdH = clamp(view.dot(half), 0.0, 1.0);$/;"	v
VdH	heaps/h3d/shader/pbr/Lighting.hx	/^				var VdH = view.dot(half).max(0.);$/;"	v
Vec	heaps/hxsl/Types.hx	/^typedef Vec = h3d.Vector;$/;"	t
VecType	heaps/hxsl/Ast.hx	/^enum VecType {$/;"	e
Vector	heaps/h3d/Vector.hx	/^class Vector #if apicheck implements h2d.impl.PointApi<Vector,Matrix> #end {$/;"	c
VertexArray	heaps/h3d/impl/GlDriver.hx	/^private typedef VertexArray = haxe.GLTypes.VertexArray;$/;"	t
VertexArray	heaps/h3d/impl/GlDriver.hx	/^private typedef VertexArray = sdl.GL.VertexArray;$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = Stage3dDriver.VertexWrapper;$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = haxe.GraphicsDriver.VertexBuffer;$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = { b : haxe.GLTypes.Buffer, stride : Int };$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = { b : js.html.webgl.Buffer, stride : Int #if multidriver, driver : Driver/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = { b : sdl.GL.Buffer, stride : Int };$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = { res : dx.Resource, count : Int, stride : Int, uniform : Bool };$/;"	t
VertexBuffer	heaps/h3d/impl/Driver.hx	/^typedef VertexBuffer = {};$/;"	t
VertexColor	heaps/h3d/shader/VertexColor.hx	/^class VertexColor extends hxsl.Shader {$/;"	c
VertexColorAlpha	heaps/h3d/shader/VertexColorAlpha.hx	/^class VertexColorAlpha extends hxsl.Shader {$/;"	c
VertexWrapper	heaps/h3d/impl/Stage3dDriver.hx	/^class VertexWrapper {$/;"	c
Video	heaps/h2d/Video.hx	/^class Video extends Drawable {$/;"	c
Video	heaps/samples/Video.hx	/^class Video extends hxd.App {$/;"	c
VideoImpl	heaps/h2d/Video.hx	/^private abstract VideoImpl(hl.Abstract<"hl_video">) {$/;"	a
ViewComp	heaps/samples/Domkit.hx	/^class ViewComp extends h2d.Flow implements h2d.domkit.Object {$/;"	c
VisiblePolygon	heaps/hxd/poly2tri/VisiblePolygon.hx	/^class VisiblePolygon$/;"	c
VoH	heaps/h3d/scene/pbr/Environment.hx	/^				var VoH = saturate( dot(v, h) );$/;"	v
VolumeDecal	heaps/h3d/shader/VolumeDecal.hx	/^class VolumeDecal extends hxsl.Shader {$/;"	c
Voronoi	heaps/h2d/col/Voronoi.hx	/^class Voronoi {$/;"	c
VulkanDriver	heaps/h3d/impl/VulkanDriver.hx	/^class VulkanDriver extends Driver {$/;"	c
W	heaps/hxd/Key.hx	/^	public static inline var W			= 87;$/;"	v
W1	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W1 = 2841;$/;"	v
W2	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W2 = 2676;$/;"	v
W3	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W3 = 2408;$/;"	v
W5	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W5 = 1609;$/;"	v
W6	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W6 = 1108;$/;"	v
W7	heaps/hxd/res/NanoJpeg.hx	/^	static inline var W7 = 565;$/;"	v
WATCH_INDEX	heaps/hxd/fs/LocalFileSystem.hx	/^	static var WATCH_INDEX = 0;$/;"	v
WATCH_LIST	heaps/hxd/fs/LocalFileSystem.hx	/^	static var WATCH_LIST : Array<LocalEntry> = null;$/;"	v
WOODEN_ALCOVE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_ALCOVE             = new ReverbPreset(-1000, -1800, 0.0,  1.22, 0.62, /;"	v
WOODEN_COURTYARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_COURTYARD          = new ReverbPreset(-1000, -2200, 0.0,  1.79, 0.35, /;"	v
WOODEN_CUPBOARD	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_CUPBOARD           = new ReverbPreset(-1000, -1700, 0.0,  0.56, 0.46, /;"	v
WOODEN_HALL	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_HALL               = new ReverbPreset(-1000, -2200, 0.0,  3.45, 0.3,  /;"	v
WOODEN_LARGEROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_LARGEROOM          = new ReverbPreset(-1000, -2100, 0.0,  2.65, 0.33, /;"	v
WOODEN_LONGPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_LONGPASSAGE        = new ReverbPreset(-1000, -2000, 0.0,  1.99, 0.4,  /;"	v
WOODEN_MEDIUMROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_MEDIUMROOM         = new ReverbPreset(-1000, -2000, 0.0,  1.47, 0.42, /;"	v
WOODEN_SHORTPASSAGE	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_SHORTPASSAGE       = new ReverbPreset(-1000, -1800, 0.0,  1.75, 0.5,  /;"	v
WOODEN_SMALLROOM	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public static var WOODEN_SMALLROOM          = new ReverbPreset(-1000, -1900, 0.0,  0.79, 0.32, /;"	v
WRAP	heaps/h3d/impl/DirectXDriver.hx	/^	static var WRAP : Array<AddressMode> = [$/;"	v
WRAP	heaps/h3d/impl/Stage3dDriver.hx	/^	static var WRAP = [$/;"	v
WaitEvent	heaps/hxd/WaitEvent.hx	/^class WaitEvent {$/;"	c
WavData	heaps/hxd/snd/WavData.hx	/^class WavData extends hxd.snd.Data {$/;"	c
WhiteAlpha	heaps/h3d/shader/WhiteAlpha.hx	/^class WhiteAlpha extends hxsl.Shader {$/;"	c
Window	heaps/hxd/Window.flash.hx	/^class Window {$/;"	c
Window	heaps/hxd/Window.hl.hx	/^class Window {$/;"	c
Window	heaps/hxd/Window.hx	/^class Window {$/;"	c
Window	heaps/hxd/Window.js.hx	/^class Window {$/;"	c
Worker	heaps/hxd/Worker.hx	/^class Worker<T:EnumValue> {$/;"	c
World	heaps/h3d/scene/World.hx	/^class World extends Object {$/;"	c
World	heaps/samples/World.hx	/^class World extends hxd.App {$/;"	c
WorldChunk	heaps/h3d/scene/World.hx	/^class WorldChunk {$/;"	c
WorldElement	heaps/h3d/scene/World.hx	/^class WorldElement {$/;"	c
WorldMaterial	heaps/h3d/scene/World.hx	/^class WorldMaterial {$/;"	c
WorldMesh	heaps/samples/World.hx	/^class WorldMesh extends h3d.scene.World {$/;"	c
WorldModel	heaps/h3d/scene/World.hx	/^class WorldModel {$/;"	c
WorldModelGeometry	heaps/h3d/scene/World.hx	/^class WorldModelGeometry {$/;"	c
Wrap	heaps/h3d/mat/Data.hx	/^enum Wrap {$/;"	e
Writer	heaps/hxd/fmt/bfnt/Writer.hx	/^class Writer {$/;"	c
Writer	heaps/hxd/fmt/hbson/Writer.hx	/^class Writer {$/;"	c
Writer	heaps/hxd/fmt/hmd/Writer.hx	/^class Writer {$/;"	c
Writer	heaps/hxd/fmt/pak/Writer.hx	/^class Writer {$/;"	c
Writer	heaps/hxd/fmt/tiff/Writer.hx	/^class Writer {$/;"	c
X	heaps/h2d/col/Polynomial.hx	/^		var X = b.clone().data;$/;"	v
X	heaps/h3d/col/Plane.hx	/^	public static inline function X(v:Float=0.0) {$/;"	f
X	heaps/hxd/Key.hx	/^	public static inline var X			= 88;$/;"	v
X	heaps/hxd/clipper/Clipper.hx	/^					var X = -1., Y = -1.;$/;"	v
X	heaps/hxd/clipper/Clipper.hx	/^					var X = 1., Y = 0.;$/;"	v
X	heaps/hxd/clipper/Clipper.hx	/^		var X = m_normals[k].x, Y = m_normals[k].y, X2;$/;"	v
X2	heaps/hxd/clipper/Clipper.hx	/^						var X2 = X;$/;"	v
XPosition	heaps/hxd/fmt/kframes/Data.hx	/^	var XPosition = "X_POSITION";$/;"	v
XYZ	heaps/hxsl/AgalOptim.hx	/^		var XYZ = 36;$/;"	v
XYZW	heaps/hxsl/AgalOptim.hx	/^		var XYZW = 228;$/;"	v
Y	heaps/h3d/col/Plane.hx	/^	public static inline function Y(v:Float=0.0) {$/;"	f
Y	heaps/hxd/Key.hx	/^	public static inline var Y			= 89;$/;"	v
YPosition	heaps/hxd/fmt/kframes/Data.hx	/^	var YPosition = "Y_POSITION";$/;"	v
Z	heaps/h3d/col/Plane.hx	/^	public static inline function Z(v:Float=0.0) {$/;"	f
Z	heaps/hxd/Key.hx	/^	public static inline var Z			= 90;$/;"	v
ZCut	heaps/h3d/shader/ZCut.hx	/^class ZCut extends hxsl.Shader {$/;"	c
ZGroup	heaps/h2d/ZGroup.hx	/^class ZGroup extends Layers$/;"	c
Zero	heaps/h3d/mat/PbrMaterial.hx	/^	var Zero = "Zero";$/;"	v
_	heaps/h2d/domkit/BaseComponents.hx	/^	@:keep static var _ = { @:privateAccess domkit.Properties.updateComponentId = updateComponentId/;"	v
_	heaps/hxd/System.hl.hx	/^	@:keep static var _ = {$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new CompressIMG("png,tga,jpg,jpeg,dds,envd,envs","dds"));$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new ConvertFBX2HMD());$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new ConvertFNT2BFNT());$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new ConvertTGA2PNG());$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new ConvertWAV2MP3());$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = Convert.register(new ConvertWAV2OGG());$/;"	v
_	heaps/hxd/fs/Convert.hx	/^	static var _ = [$/;"	v
_	heaps/hxd/fs/FileConverter.hx	/^		static var _ = hxd.fs.Convert.register(new MyFancyConvert());$/;"	v
_11	heaps/h3d/Matrix.hx	/^	public var _11 : Float;$/;"	v
_12	heaps/h3d/Matrix.hx	/^	public var _12 : Float;$/;"	v
_13	heaps/h3d/Matrix.hx	/^	public var _13 : Float;$/;"	v
_14	heaps/h3d/Matrix.hx	/^	public var _14 : Float;$/;"	v
_21	heaps/h3d/Matrix.hx	/^	public var _21 : Float;$/;"	v
_22	heaps/h3d/Matrix.hx	/^	public var _22 : Float;$/;"	v
_23	heaps/h3d/Matrix.hx	/^	public var _23 : Float;$/;"	v
_24	heaps/h3d/Matrix.hx	/^	public var _24 : Float;$/;"	v
_31	heaps/h3d/Matrix.hx	/^	public var _31 : Float;$/;"	v
_32	heaps/h3d/Matrix.hx	/^	public var _32 : Float;$/;"	v
_33	heaps/h3d/Matrix.hx	/^	public var _33 : Float;$/;"	v
_34	heaps/h3d/Matrix.hx	/^	public var _34 : Float;$/;"	v
_41	heaps/h3d/Matrix.hx	/^	public var _41 : Float;$/;"	v
_42	heaps/h3d/Matrix.hx	/^	public var _42 : Float;$/;"	v
_43	heaps/h3d/Matrix.hx	/^	public var _43 : Float;$/;"	v
_44	heaps/h3d/Matrix.hx	/^	public var _44 : Float;$/;"	v
__	heaps/hxd/fs/FileConverter.hx	/^		static var __ = hxd.fs.FileConverter.addConfig({$/;"	v
__init__	heaps/h3d/shader/AmbientLight.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/Base2d.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/BaseMesh.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/GpuParticle.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/LineShader.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/ParticleShader.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/ScreenShader.hx	/^		function __init__() {$/;"	f
__init__	heaps/h3d/shader/pbr/PropsValues.hx	/^		function __init__() {$/;"	f
__init__	heaps/hxd/System.hl.hx	/^	static function __init__() {$/;"	f
__init__	heaps/hxd/System.js.hx	/^	static function __init__() : Void {$/;"	f
__init__	heaps/hxd/res/Embed.hx	/^	static function __init__() untyped {$/;"	f
__init__fragment	heaps/h3d/shader/AmbientLight.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/AnimatedTexture.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/BaseMesh.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/pbr/PropsTexture.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/pbr/ToneMapping.hx	/^		function __init__fragment() {$/;"	f
__init__fragment	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function __init__fragment() {$/;"	f
__init__vertex	heaps/h3d/shader/NormalMap.hx	/^		function __init__vertex() {$/;"	f
__init__vertex	heaps/h3d/shader/Outline.hx	/^		function __init__vertex() {$/;"	f
__init__vertex	heaps/h3d/shader/VolumeDecal.hx	/^		function __init__vertex() {$/;"	f
__init__vertex	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function __init__vertex() {$/;"	f
_cameras	heaps/h2d/Scene.hx	/^	var _cameras : Array<Camera>;$/;"	v
_color	heaps/h3d/scene/pbr/Light.hx	/^	var _color : h3d.Vector;$/;"	v
_detectAnalogButton	heaps/hxd/Pad.hx	/^	function _detectAnalogButton(index: Int, v: Float) {$/;"	f
_engine	heaps/h3d/pass/ScreenFx.hx	/^	var _engine : h3d.Engine;$/;"	v
_flush	heaps/h2d/RenderContext.hx	/^	function _flush() {$/;"	f
_height	heaps/h2d/Graphics.hx	/^			var _height = Math.sin(a) * (height\/2+1) * square2;$/;"	v
_lang	heaps/hxd/System.hl.hx	/^	static var _lang : String;$/;"	v
_lastFrame	heaps/h3d/mat/Texture.hx	/^	var _lastFrame:Int;$/;"	v
_loc	heaps/hxd/System.hl.hx	/^	static var _loc : String;$/;"	v
_mouseLock	heaps/hxd/Window.js.hx	/^	var _mouseLock : Bool = false;$/;"	v
_reversebits	heaps/h3d/scene/pbr/Environment.hx	/^		function _reversebits( i : Int ) : Int {$/;"	f
_setAxis	heaps/hxd/Pad.hx	/^	inline function _setAxis( axisId : Int, value : Int ){$/;"	f
_setButton	heaps/hxd/Pad.hx	/^	inline function _setButton( btnId : Int, down : Bool ){$/;"	f
_setRenderTargets	heaps/h3d/impl/DirectXDriver.hx	/^	function _setRenderTargets( textures:Array<h3d.mat.Texture>, layer : Int, mipLevel : Int ) {$/;"	f
_width	heaps/h2d/Graphics.hx	/^			var _width = Math.cos(a) * (width\/2+1) * square2;$/;"	v
_x	heaps/h2d/TileGroup.hx	/^			var _x = x + Math.cos(a) * ray;$/;"	v
_x	heaps/h2d/TileGroup.hx	/^		var _x = 0.;$/;"	v
_x1	heaps/h2d/TileGroup.hx	/^			var _x1 = x + Math.cos(a) * ray1;$/;"	v
_x1	heaps/h2d/TileGroup.hx	/^		var _x1 = 0.;$/;"	v
_y	heaps/h2d/TileGroup.hx	/^			var _y = y + Math.sin(a) * ray;$/;"	v
_y	heaps/h2d/TileGroup.hx	/^		var _y = 0.;$/;"	v
_y1	heaps/h2d/TileGroup.hx	/^			var _y1 = y + Math.sin(a) * ray1;$/;"	v
_y1	heaps/h2d/TileGroup.hx	/^		var _y1 = 0.;$/;"	v
a	heaps/h2d/Console.hx	/^			var a = cmd.args[i];$/;"	v
a	heaps/h2d/Flow.hx	/^					var a = p.horizontalAlign != null ? p.horizontalAlign : halign;$/;"	v
a	heaps/h2d/Flow.hx	/^					var a = p.verticalAlign != null ? p.verticalAlign : valign;$/;"	v
a	heaps/h2d/Graphics.hx	/^			var a = (nsegments - 1 - i) * angle + angleStart;$/;"	v
a	heaps/h2d/Graphics.hx	/^			var a = i * angle + angleStart;$/;"	v
a	heaps/h2d/Graphics.hx	/^			var a = i * angle + hxd.Math.degToRad(angleStart);$/;"	v
a	heaps/h2d/Graphics.hx	/^			var a = i * angle;$/;"	v
a	heaps/h2d/Graphics.hx	/^	public var a : Float;$/;"	v
a	heaps/h2d/Layers.hx	/^		var a;$/;"	v
a	heaps/h2d/Particles.hx	/^				var a = getAngleFromNormalized(g.emitAngle);$/;"	v
a	heaps/h2d/SpriteBatch.hx	/^	public var a : Float = 1;$/;"	v
a	heaps/h2d/Text.hx	/^		var a = color.w;$/;"	v
a	heaps/h2d/Tile.hx	/^			var a = [];$/;"	v
a	heaps/h2d/TileGroup.hx	/^			var a = i * angle;$/;"	v
a	heaps/h2d/TileGroup.hx	/^			var a = start + i * angle;$/;"	v
a	heaps/h2d/TileGroup.hx	/^		var a = end;$/;"	v
a	heaps/h2d/col/Circle.hx	/^		var a = dx * dx + dy * dy;$/;"	v
a	heaps/h2d/col/Line.hx	/^		var a = p1.x*p2.y - p1.y * p2.x;$/;"	v
a	heaps/h2d/col/Matrix.hx	/^		var a = m.a, b = m.b;$/;"	v
a	heaps/h2d/col/Matrix.hx	/^	public var a : Float;$/;"	v
a	heaps/h2d/col/Polygon.hx	/^			var a = i * angle;$/;"	v
a	heaps/h2d/col/Polygon.hx	/^			var a = p0.x * p.y - p.x * p0.y;$/;"	v
a	heaps/h2d/col/Triangle.hx	/^	public var a : Point;$/;"	v
a	heaps/h2d/domkit/BaseComponents.hx	/^			var a = args[1] == null ? 1. : parseFloat(args[1]);$/;"	v
a	heaps/h2d/domkit/BaseComponents.hx	/^			var a = parseFloat(a);$/;"	v
a	heaps/h2d/domkit/BaseComponents.hx	/^			var a = parseFloat(alpha);$/;"	v
a	heaps/h2d/filter/InnerGlow.hx	/^			var a = texture.get(input.uv).a;$/;"	v
a	heaps/h3d/Camera.hx	/^		var a = new h3d.col.Point(dx,dy,dz);$/;"	v
a	heaps/h3d/Quat.hx	/^		var a = ((1 - v) * halfTheta).sin() * invSinHalfTheta;$/;"	v
a	heaps/h3d/Vector.hx	/^	public var a(get, set) : Float;$/;"	v
a	heaps/h3d/anim/Animation.hx	/^		var a = clone();$/;"	v
a	heaps/h3d/anim/SimpleBlend.hx	/^		var a : SimpleBlend = cast a;$/;"	v
a	heaps/h3d/anim/SmoothTransition.hx	/^		var a = 1 - blendFactor, b = blendFactor;$/;"	v
a	heaps/h3d/anim/Transition.hx	/^		var a : Transition = cast a;$/;"	v
a	heaps/h3d/col/Bounds.hx	/^		var a = p.nx;$/;"	v
a	heaps/h3d/col/Capsule.hx	/^	public var a : Point;$/;"	v
a	heaps/h3d/col/Collider.hx	/^	public var a : Collider;$/;"	v
a	heaps/h3d/col/Ray.hx	/^		var a = new h3d.Vector(px, py, pz);$/;"	v
a	heaps/h3d/col/Sphere.hx	/^		var a = r.lx * r.lx + r.ly * r.ly + r.lz * r.lz;$/;"	v
a	heaps/h3d/impl/GlDriver.hx	/^					var a = new CompiledAttribute();$/;"	v
a	heaps/h3d/impl/GlDriver.hx	/^				var a = buf.globals.subarray(0, s.shader.globalsSize * 4);$/;"	v
a	heaps/h3d/impl/GlDriver.hx	/^				var a = buf.params.subarray(0, s.shader.paramsSize * 4);$/;"	v
a	heaps/h3d/impl/GlDriver.hx	/^				var a = curShader.attribs[i];$/;"	v
a	heaps/h3d/parts/Emitter.hx	/^					var a = 1 - b;$/;"	v
a	heaps/h3d/parts/Emitter.hx	/^			var a = rand() * Math.PI * 2;$/;"	v
a	heaps/h3d/parts/Particle.hx	/^	public var a : Float;$/;"	v
a	heaps/h3d/prim/Cylinder.hx	/^			var a = s * ds;$/;"	v
a	heaps/h3d/prim/Disc.hx	/^			var a = thetaStart + i \/ segments * thetaLength;$/;"	v
a	heaps/h3d/prim/GeoSphere.hx	/^		var a = 1 \/ Math.sqrt(2);$/;"	v
a	heaps/h3d/prim/ModelCache.hx	/^		var a = anims.get(path);$/;"	v
a	heaps/h3d/prim/ModelCache.hx	/^		var a = m.lib.loadAnimation(name);$/;"	v
a	heaps/h3d/prim/Quads.hx	/^		var a = new UV(0, 1);$/;"	v
a	heaps/h3d/scene/Graphics.hx	/^	public var a : Float;$/;"	v
a	heaps/h3d/scene/pbr/Environment.hx	/^			var a = 0., b = 0.;$/;"	v
a	heaps/h3d/scene/pbr/Environment.hx	/^			var a = roughness * roughness;$/;"	v
a	heaps/h3d/scene/pbr/Renderer.hx	/^				var a : Array<h3d.shader.pbr.Slides.DebugMode>;$/;"	v
a	heaps/h3d/shader/MinMaxShader.hx	/^			var a = texA.get(calculatedUV);$/;"	v
a	heaps/h3d/shader/MinMaxShader.hx	/^			var a = texA.get(dir);$/;"	v
a	heaps/hxd/BitmapData.hx	/^			var a = (x + y * i.width) << 2;$/;"	v
a	heaps/hxd/BitmapData.hx	/^		var a;$/;"	v
a	heaps/hxd/Math.hx	/^		var a = Std.int(a1 * (1-k) + a2 * k);$/;"	v
a	heaps/hxd/Pixels.hx	/^				var a = bytes.getInt32(p1);$/;"	v
a	heaps/hxd/Pixels.hx	/^				var a = bytes[p+3];$/;"	v
a	heaps/hxd/Pixels.hx	/^				var a = bytes[p];$/;"	v
a	heaps/hxd/clipper/Clipper.hx	/^		var a = Math.atan2(m_sinA, m_normals[k].x * m_normals[j].x + m_normals[k].y * m_normals[j].y);$/;"	v
a	heaps/hxd/clipper/Clipper.hx	/^		var a:Float = 0;$/;"	v
a	heaps/hxd/clipper/Clipper.hx	/^        var a = 0.;$/;"	v
a	heaps/hxd/earcut/Earcut.hx	/^			var a = p.prev,$/;"	v
a	heaps/hxd/earcut/Earcut.hx	/^		var a = ear.prev,$/;"	v
a	heaps/hxd/earcut/Earcut.hx	/^		var a = start;$/;"	v
a	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var a = glyphs.get("A".code);$/;"	v
a	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var a : { t : Array<Float>, v : Array<Float> };$/;"	v
a	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var a = new Animation();$/;"	v
a	heaps/hxd/fmt/hmd/Dump.hx	/^			var a = h.animations[k];$/;"	v
a	heaps/hxd/fmt/hmd/Library.hx	/^		var a = cachedAnimations.get(name == null ? "" : name);$/;"	v
a	heaps/hxd/fmt/hmd/Library.hx	/^		var a = null;$/;"	v
a	heaps/hxd/fmt/hmd/Reader.hx	/^			var a = new Animation();$/;"	v
a	heaps/hxd/fmt/spine/Library.hx	/^						var a = loadAttachment(ssd.get(attachName));$/;"	v
a	heaps/hxd/fmt/spine/Library.hx	/^						var a = t.angle * Math.PI \/ 180;$/;"	v
a	heaps/hxd/fmt/spine/Library.hx	/^				var a = loadAnimation(j.animations.get(animName));$/;"	v
a	heaps/hxd/fmt/spine/Library.hx	/^		var a = new Animation();$/;"	v
a	heaps/hxd/impl/ArrayIterator.hx	/^	var a : Array<T>;$/;"	v
a	heaps/hxd/res/BDFFont.hx	/^			var a = font.glyphs.get( "E".code );$/;"	v
a	heaps/hxd/res/BDFFont.hx	/^		var a = font.glyphs.get( "A".code );$/;"	v
a	heaps/hxd/res/DynamicText.hx	/^				var a = new Array<Dynamic>();$/;"	v
a	heaps/hxd/res/FileTree.hx	/^				var a = ignoredPairedExt.get(e2);$/;"	v
a	heaps/hxd/res/FileTree.hx	/^			var a = ignoredPairedExt.get(f.ext);$/;"	v
a	heaps/hxsl/AgalOut.hx	/^		var a = new AgalOut();$/;"	v
a	heaps/hxsl/Checker.hx	/^					var a = typeExpr(args[i], With(f.args[i].type));$/;"	v
a	heaps/hxsl/Checker.hx	/^				var a = typeExpr(args[i], With(ft));$/;"	v
a	heaps/hxsl/DynamicShader.hx	/^		var a = accesses[index];$/;"	v
a	heaps/hxsl/DynamicShader.hx	/^		var a = accesses[vidx];$/;"	v
a	heaps/hxsl/Flatten.hx	/^					var a = new Alloc(g, t, apos, pad);$/;"	v
a	heaps/hxsl/Flatten.hx	/^					var a = new Alloc(g, t, best.pos + size, free);$/;"	v
a	heaps/hxsl/Flatten.hx	/^				var a = new Alloc(g, null, alloc.length, 1);$/;"	v
a	heaps/hxsl/Flatten.hx	/^				var a = new Alloc(g, t, -1, size);$/;"	v
a	heaps/hxsl/Flatten.hx	/^				var a = new Alloc(g, t, apos, size);$/;"	v
a	heaps/hxsl/Flatten.hx	/^			var a = new Alloc(g, null, pos, count);$/;"	v
a	heaps/hxsl/Flatten.hx	/^			var a = varMap.get(v);$/;"	v
a	heaps/hxsl/Linker.hx	/^					var a = varMap.get(key + k);$/;"	v
a	heaps/hxsl/Linker.hx	/^		var a = new AllocatedVar();$/;"	v
a	heaps/samples/CollideCheck.hx	/^			var a = Math.PI * i \/ k + Math.PI \/ 2;$/;"	v
a	heaps/samples/CollideCheck.hx	/^			var a = Math.PI * i \/ k - Math.PI \/ 2;$/;"	v
a	heaps/samples/GraphicsDraw.hx	/^			var a = Math.random() * Math.PI * 2;$/;"	v
a	heaps/samples/Interactive2D.hx	/^					var a = Math.PI * i \/ k + Math.PI \/ 2;$/;"	v
a	heaps/samples/Interactive2D.hx	/^					var a = Math.PI * i \/ k - Math.PI \/ 2;$/;"	v
a	heaps/samples/PointLights.hx	/^		var a = [0.4, 0.2, 0.5, 0.8, 1.2, 0.5, 0.7];$/;"	v
a1	heaps/hxd/Math.hx	/^		var a1 = c1 >>> 24;$/;"	v
a11	heaps/h3d/Matrix.hx	/^		var a11 = a._11; var a12 = a._12; var a13 = a._13; var a14 = a._14;$/;"	v
a2	heaps/h3d/prim/Cylinder.hx	/^			var a2 = (s + 1) * ds;$/;"	v
a2	heaps/h3d/shader/pbr/BDRF.hx	/^			var a2 = at * ab;$/;"	v
a2	heaps/hxd/Math.hx	/^		var a2 = c2 >>> 24;$/;"	v
a2	heaps/hxd/Perlin.hx	/^		var a2 = a * a;$/;"	v
a2	heaps/hxd/earcut/Earcut.hx	/^		var a2 = allocNode(a.i, a.x, a.y),$/;"	v
a2	heaps/hxsl/AgalOptim.hx	/^			var a2 = r(a, false);$/;"	v
a21	heaps/h3d/Matrix.hx	/^		var a21 = a._21; var a22 = a._22; var a23 = a._23; var a24 = a._24;$/;"	v
a31	heaps/h3d/Matrix.hx	/^		var a31 = a._31; var a32 = a._32; var a33 = a._33; var a34 = a._34;$/;"	v
a31	heaps/h3d/Matrix.hx	/^		var a31 = a._31; var a32 = a._32; var a33 = a._33;$/;"	v
a41	heaps/h3d/Matrix.hx	/^		var a41 = a._41; var a42 = a._42; var a43 = a._43; var a44 = a._44;$/;"	v
a41	heaps/h3d/Matrix.hx	/^		var a41 = a._41; var a42 = a._42; var a43 = a._43;$/;"	v
aHrefs	heaps/h2d/HtmlText.hx	/^	var aHrefs : Array<String>;$/;"	v
aInteractive	heaps/h2d/HtmlText.hx	/^	var aInteractive : Interactive;$/;"	v
aMask	heaps/hxd/res/Image.hx	/^			var aMask = f.readInt32();$/;"	v
aa	heaps/h2d/col/Matrix.hx	/^		var aa = a.a, ab = a.b, ac = a.c, ad = a.d, ax = a.x, ay = a.y;$/;"	v
aa	heaps/h2d/col/Matrix.hx	/^		var aa = this.a, ab = this.b, ac = this.c, ad = this.d, ax = this.x, ay = this.y;$/;"	v
ab	heaps/h3d/shader/pbr/BDRF.hx	/^			var ab = max(roughness * (1.0 - anisotropy), 0.001);$/;"	v
aboveThresholdScale	heaps/h3d/scene/pbr/Environment.hx	/^		@param var aboveThresholdScale : Float;$/;"	v
abs	heaps/h2d/col/Voronoi.hx	/^	static inline function abs(x:Float) return x < 0 ? -x : x;$/;"	f
abs	heaps/hxd/Math.hx	/^	public static inline function abs( f : Float ) {$/;"	f
abs	heaps/hxd/clipper/Clipper.hx	/^	inline function abs(i:Int):Int {$/;"	f
absHeight	heaps/h2d/Flow.hx	/^				var absHeight = maxLineHeight > maxInHeight && overflow != Expand ? maxInHeight : maxLineHei/;"	v
absPos	heaps/h2d/ObjectFollower.hx	/^		var absPos = follow.getAbsPos();$/;"	v
absPos	heaps/h3d/pass/DirShadowMap.hx	/^				var absPos = m.getAbsPos();$/;"	v
absPos	heaps/h3d/pass/PointShadowMap.hx	/^		var absPos = light.getAbsPos();$/;"	v
absPos	heaps/h3d/pass/SpotShadowMap.hx	/^		var absPos = light.getAbsPos();$/;"	v
absPos	heaps/h3d/scene/Object.hx	/^	var absPos : h3d.Matrix;$/;"	v
absPos	heaps/h3d/scene/pbr/Decal.hx	/^				var absPos = getAbsPos();$/;"	v
absPos	heaps/samples/Lights.hx	/^				var absPos = m.m.getAbsPos();$/;"	v
absPos	heaps/samples/Lights.hx	/^			var absPos = m.getAbsPos();$/;"	v
absPos	heaps/samples/Lights.hx	/^			var absPos = o.getAbsPos();$/;"	v
absScale	heaps/h3d/scene/Skin.hx	/^		var absScale = getAbsPos().getScale(tmpVec);$/;"	v
absWidth	heaps/h2d/Flow.hx	/^				var absWidth = maxColWidth > maxInWidth && overflow != Expand ? maxInWidth : maxColWidth;$/;"	v
absX	heaps/h2d/Camera.hx	/^	var absX : Float;$/;"	v
absX	heaps/h2d/Object.hx	/^	var absX : Float;$/;"	v
absY	heaps/h2d/Camera.hx	/^	var absY : Float;$/;"	v
absY	heaps/h2d/Object.hx	/^	var absY : Float;$/;"	v
absoluteMatrixA	heaps/h3d/shader/Base2d.hx	/^		@param var absoluteMatrixA : Vec3;$/;"	v
absoluteMatrixB	heaps/h3d/shader/Base2d.hx	/^		@param var absoluteMatrixB : Vec3;$/;"	v
absolutePosition	heaps/h3d/shader/Base2d.hx	/^		var absolutePosition : Vec4;$/;"	v
absoluteTexturePath	heaps/hxd/fmt/fbx/HMDOut.hx	/^	public var absoluteTexturePath : Bool;$/;"	v
abstract	heaps/hxd/fmt/tiff/Data.hx	/^enum abstract TifTag(Int) {$/;"	e
abstract	heaps/hxd/fmt/tiff/Data.hx	/^enum abstract TifType(Int) {$/;"	e
acc	heaps/h3d/parts/GpuParticles.hx	/^				var acc = (1 + g.speedIncr * t) * t;$/;"	v
acc	heaps/hxsl/HlslOut.hx	/^			var acc = varAccess.get(v.id);$/;"	v
access	heaps/hxd/fs/Convert.hx	/^		var access : hxd.Pixels.PixelsARGB = pix;$/;"	v
access	heaps/hxd/res/Image.hx	/^				var access : hxd.Pixels.PixelsARGB = pixels;$/;"	v
access	heaps/hxsl/AgalOptim.hx	/^		var access = null;$/;"	v
access	heaps/hxsl/Flatten.hx	/^	function access( a : Alloc, t : Type, pos : Position, acc : ARead ) : TExpr {$/;"	f
accesses	heaps/hxsl/DynamicShader.hx	/^	var accesses = new Array<Access>();$/;"	v
acos	heaps/hxd/Math.hx	/^	public static inline function acos( f : Float ) {$/;"	f
acquire	heaps/hxd/snd/Driver.hx	/^	public function acquire () : Void {};$/;"	f
acquire	heaps/hxd/snd/openal/LowPassDriver.hx	/^	override function acquire() : Void {$/;"	f
acquire	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function acquire() : Void {$/;"	f
acquireAuxiliarySend	heaps/hxd/snd/openal/AudioTypes.hx	/^	public function acquireAuxiliarySend(effect : Effect) : Int {$/;"	f
actabsel	heaps/hxd/res/NanoJpeg.hx	/^	public var actabsel : Int;$/;"	v
add	heaps/h2d/Console.hx	/^	public macro function add( ethis, name, callb ) {$/;"	f
add	heaps/h2d/Graphics.hx	/^	public inline function add( x : Float, y : Float, u : Float, v : Float, r : Float, g : Float, b/;"	f
add	heaps/h2d/Layers.hx	/^	public function add( s : Object, layer : Int = -1, index : Int = -1) {$/;"	f
add	heaps/h2d/Object.hx	/^		inline function add(x:Float, y:Float) {$/;"	f
add	heaps/h2d/SpriteBatch.hx	/^	public function add(e:BatchElement,before=false) {$/;"	f
add	heaps/h2d/TileGroup.hx	/^	public function add( x : Float, y : Float, r : Float, g : Float, b : Float, a : Float, t : Tile/;"	f
add	heaps/h2d/TileGroup.hx	/^	public inline function add(x : Float, y : Float, t : h2d.Tile) {$/;"	f
add	heaps/h2d/col/IPoint.hx	/^	public inline function add( p : IPoint ) : IPoint {$/;"	f
add	heaps/h2d/col/Point.hx	/^	public inline function add( p : Point ) : Point {$/;"	f
add	heaps/h2d/filter/Group.hx	/^	public function add( f : Filter ) {$/;"	f
add	heaps/h2d/impl/BatchDrawState.hx	/^	public inline function add( count : Int ) {$/;"	f
add	heaps/h2d/impl/PointApi.hx	/^	function add( p : Point ) : Point;$/;"	f
add	heaps/h3d/Vector.hx	/^	public inline function add( v : Vector ) {$/;"	f
add	heaps/h3d/col/Bounds.hx	/^	public inline function add( b : Bounds ) {$/;"	f
add	heaps/h3d/col/FPoint.hx	/^	public inline function add( p : FPoint ) {$/;"	f
add	heaps/h3d/col/IPoint.hx	/^	public inline function add( p : IPoint ) {$/;"	f
add	heaps/h3d/col/Point.hx	/^	public inline function add( p : Point ) {$/;"	f
add	heaps/h3d/mat/BigTexture.hx	/^	public function add( t : hxd.res.Image ) {$/;"	f
add	heaps/h3d/parts/GpuParticles.hx	/^			inline function add(v) vbuf[index++] = v;$/;"	f
add	heaps/h3d/parts/Particles.hx	/^	public function add(p) {$/;"	f
add	heaps/h3d/pass/Border.hx	/^		inline function add(x, y) {$/;"	f
add	heaps/h3d/prim/BigPrimitive.hx	/^			inline function add(v) tmpBuf[pos++] = v;$/;"	f
add	heaps/h3d/prim/BigPrimitive.hx	/^	public function add( buf : hxd.FloatBuffer, idx : hxd.IndexBuffer, dx : Float = 0. , dy : Float/;"	f
add	heaps/h3d/scene/Graphics.hx	/^			inline function add(v:Float) {$/;"	f
add	heaps/h3d/scene/Graphics.hx	/^		inline function add(u, v) {$/;"	f
add	heaps/h3d/scene/World.hx	/^	public function add( model : WorldModel, x : Float, y : Float, z : Float, scale = 1., rotation /;"	f
add	heaps/h3d/scene/fwd/LightSystem.hx	/^		inline function add( s : hxsl.Shader ) {$/;"	f
add	heaps/hxd/WaitEvent.hx	/^	public function add( callb ) {$/;"	f
add	heaps/hxd/fmt/hmd/Dump.hx	/^	inline function add<T>( s : T ) {$/;"	f
add	heaps/hxd/fmt/tiff/Writer.hx	/^		inline function add(t,tp,v) tif.tags.push({ tag : t, type : tp, value : v });$/;"	f
add	heaps/hxsl/GlslOut.hx	/^	inline function add( v : Dynamic ) {$/;"	f
add	heaps/hxsl/HlslOut.hx	/^	inline function add( v : Dynamic ) {$/;"	f
add	heaps/hxsl/Printer.hx	/^	inline function add(v:Dynamic) {$/;"	f
addAlias	heaps/h2d/Console.hx	/^	public function addAlias( name, command ) {$/;"	f
addAlias	heaps/h3d/prim/HMDModel.hx	/^	public function addAlias( name : String, realName : String, offset = 0 ) {$/;"	f
addAlpha	heaps/h2d/TileGroup.hx	/^	public inline function addAlpha(x : Float, y : Float, a : Float, t : h2d.Tile) {$/;"	f
addAlphaCurve	heaps/h3d/anim/LinearAnimation.hx	/^	public function addAlphaCurve( objName, alphas ) {$/;"	f
addArraySize	heaps/hxsl/HlslOut.hx	/^	function addArraySize( size ) {$/;"	f
addBeachsection	heaps/h2d/col/Voronoi.hx	/^	function addBeachsection(point:Point) {$/;"	f
addBinaryPayload	heaps/h3d/impl/DirectXDriver.hx	/^	function addBinaryPayload( bytes ) {$/;"	f
addBlock	heaps/hxsl/GlslOut.hx	/^	function addBlock( e : TExpr, tabs : String ) {$/;"	f
addBlock	heaps/hxsl/HlslOut.hx	/^	function addBlock( e : TExpr, tabs ) {$/;"	f
addBounds	heaps/h2d/Object.hx	/^	function addBounds( relativeTo : Object, out : h2d.col.Bounds, dx : Float, dy : Float, width : /;"	f
addBounds	heaps/h2d/col/Bounds.hx	/^	public inline function addBounds( b : Bounds ) {$/;"	f
addBounds	heaps/h2d/col/IBounds.hx	/^	public inline function addBounds( b : IBounds ) {$/;"	f
addBounds	heaps/h3d/prim/BigPrimitive.hx	/^	public inline function addBounds(x, y, z) {$/;"	f
addBreaks	heaps/h2d/HtmlText.hx	/^		function addBreaks( e : Xml ) {$/;"	f
addBtn	heaps/h2d/domkit/Style.hx	/^			function addBtn(o : h2d.Object, indent: Int, open: Bool) {$/;"	f
addBuffer	heaps/h3d/prim/Instanced.hx	/^	public override function addBuffer( name, buffer, offset = 0 ) {$/;"	f
addBuffer	heaps/h3d/prim/MeshPrimitive.hx	/^	function addBuffer( name : String, buf, offset = 0 ) {$/;"	f
addBuffers	heaps/h3d/col/Polygon.hx	/^	public function addBuffers( vertexes : haxe.ds.Vector<hxd.impl.Float32>, indexes : haxe.ds.Vect/;"	f
addButton	heaps/samples/SampleApp.hx	/^	function addButton( label : String, onClick : Void -> Void ) {$/;"	f
addCamera	heaps/h2d/Scene.hx	/^	public function addCamera( cam : Camera, ?pos : Int ) {$/;"	f
addCheck	heaps/samples/SampleApp.hx	/^	function addCheck( label : String, get : Void -> Bool, set : Bool -> Void ) {$/;"	f
addChild	heaps/h2d/Layers.hx	/^	override function addChild(s) {$/;"	f
addChild	heaps/h2d/Object.hx	/^	public function addChild( s : Object ) : Void {$/;"	f
addChild	heaps/h3d/scene/Object.hx	/^	public function addChild( o : Object ) {$/;"	f
addChild	heaps/hxd/clipper/Clipper.hx	/^	function addChild(child:PolyNode) {$/;"	f
addChildAt	heaps/h2d/Flow.hx	/^	override function addChildAt( s, pos ) {$/;"	f
addChildAt	heaps/h2d/Layers.hx	/^	override function addChildAt( s : Object, index : Int ) {$/;"	f
addChildAt	heaps/h2d/Object.hx	/^	public function addChildAt( s : Object, pos : Int ) : Void {$/;"	f
addChildAt	heaps/h3d/scene/Object.hx	/^	public function addChildAt( o : Object, pos : Int ) {$/;"	f
addChildRec	heaps/h2d/domkit/Style.hx	/^			function addChildRec(o : h2d.Object, depth : Int) {$/;"	f
addChoice	heaps/samples/SampleApp.hx	/^	function addChoice( text, choices, callb : Int -> Void, value = 0 ) {$/;"	f
addChunkBounds	heaps/h3d/scene/World.hx	/^	function addChunkBounds(c : WorldChunk, model : WorldModel, mat : h3d.Matrix ) {$/;"	f
addColor	heaps/h2d/TileGroup.hx	/^	public inline function addColor( x : Float, y : Float, color : h3d.Vector, t : Tile ) {$/;"	f
addColor	heaps/h2d/TileGroup.hx	/^	public inline function addColor( x : Float, y : Float, r : Float, g : Float, b : Float, a : Flo/;"	f
addCommand	heaps/h2d/Console.hx	/^	public function addCommand( name, ?help, args : Array<ConsoleArgDesc>, callb : Dynamic ) {$/;"	f
addConfig	heaps/hxd/fs/FileConverter.hx	/^	public static function addConfig(conf:Dynamic) {$/;"	f
addConst	heaps/hxsl/Printer.hx	/^	function addConst( c : Const ) {$/;"	f
addCorner	heaps/h3d/pass/DirShadowMap.hx	/^			inline function addCorner(x,y,d) {$/;"	f
addCorners	heaps/h3d/pass/DirShadowMap.hx	/^			inline function addCorners(d) {$/;"	f
addCullingCollider	heaps/samples/Lights.hx	/^	function addCullingCollider() {$/;"	f
addCurve	heaps/h3d/anim/LinearAnimation.hx	/^	public function addCurve( objName, frames, hasPos, hasRot, hasScale ) {$/;"	f
addDep	heaps/h3d/impl/VarBinding.hx	/^				function addDep( path : Array<String> ) {$/;"	f
addEffect	heaps/hxd/snd/ChannelBase.hx	/^	public function addEffect<T:Effect>( e : T ) : T {$/;"	f
addEmpty	heaps/h3d/mat/BigTexture.hx	/^	public function addEmpty( width : Int, height : Int ) {$/;"	f
addEvent	heaps/h3d/anim/Animation.hx	/^	public function addEvent(frame : Int, data : String) {$/;"	f
addEventListener	heaps/h2d/Scene.hx	/^	public function addEventListener( f : hxd.Event -> Void ) {$/;"	f
addEventListener	heaps/h3d/scene/Scene.hx	/^	public function addEventListener( f : hxd.Event -> Void ) {$/;"	f
addEventTarget	heaps/h2d/Scene.hx	/^	function addEventTarget(i:Interactive) {$/;"	f
addEventTarget	heaps/h3d/scene/Scene.hx	/^	function addEventTarget(i:Interactive) {$/;"	f
addEventTarget	heaps/hxd/Window.flash.hx	/^	public function addEventTarget( et : Event->Void ) : Void {$/;"	f
addEventTarget	heaps/hxd/Window.hl.hx	/^	public function addEventTarget(et : Event -> Void) : Void {$/;"	f
addEventTarget	heaps/hxd/Window.hx	/^	public function addEventTarget( et : Event->Void ) : Void {$/;"	f
addEventTarget	heaps/hxd/Window.js.hx	/^	public function addEventTarget( et : Event->Void ) : Void {$/;"	f
addExpr	heaps/hxsl/GlslOut.hx	/^	function addExpr( e : TExpr, tabs : String ) {$/;"	f
addExpr	heaps/hxsl/HlslOut.hx	/^	function addExpr( e : TExpr, tabs : String ) {$/;"	f
addExpr	heaps/hxsl/Printer.hx	/^	function addExpr( e : TExpr, tabs : String ) : Void {$/;"	f
addExpr	heaps/hxsl/Splitter.hx	/^	function addExpr( f : TFunction, e : TExpr ) {$/;"	f
addField	heaps/hxd/res/FileTree.hx	/^		function addField( fname : String, field : FileEntry ) {$/;"	f
addFun	heaps/hxsl/Printer.hx	/^	function addFun( f : TFunction ) {$/;"	f
addGroup	heaps/h2d/Particles.hx	/^	public function addGroup( ?g : ParticleGroup, ?index ) {$/;"	f
addGroup	heaps/h3d/parts/GpuParticles.hx	/^	public function addGroup( ?g : GpuPartGroup, ?material : h3d.mat.Material, ?index ) {$/;"	f
addIndex	heaps/h2d/Graphics.hx	/^	public inline function addIndex(i) {$/;"	f
addIndex	heaps/h3d/prim/BigPrimitive.hx	/^	public inline function addIndex(i) {$/;"	f
addInfluence	heaps/h3d/anim/Skin.hx	/^	public inline function addInfluence( vid : Int, j : Joint, w : Float ) {$/;"	f
addInstanceBounds	heaps/h3d/prim/Instanced.hx	/^	public inline function addInstanceBounds( absPos : h3d.Matrix ) {$/;"	f
addItem	heaps/h2d/Console.hx	/^		function addItem(id:Int, ?amount:Int) {$/;"	f
addItem	heaps/h2d/Dropdown.hx	/^	public function addItem(s : Object) {$/;"	f
addKerning	heaps/h2d/Font.hx	/^	public function addKerning( prevChar : Int, offset : Int ) {$/;"	f
addKey	heaps/hxd/Window.hl.hx	/^		inline function addKey(sdl, keyCode) {$/;"	f
addLaser	Player.hx	/^	private function addLaser() {$/;"	f
addLink	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function addLink( parent : FbxNode, child : FbxNode ) {$/;"	f
addMatrix	heaps/h3d/scene/MeshBatch.hx	/^			inline function addMatrix(m:h3d.Matrix) {$/;"	f
addModels	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function addModels(includeGeometry) {$/;"	f
addNewShader	heaps/hxsl/CacheFile.hx	/^	function addNewShader( s : RuntimeShader ) {$/;"	f
addNode	heaps/h2d/HtmlText.hx	/^	function addNode( e : Xml, font : Font, align : Align, rebuild : Bool, metrics : Array<LineInfo/;"	f
addNormals	heaps/h3d/prim/Polygon.hx	/^	public function addNormals() {$/;"	f
addNormals	heaps/h3d/prim/Quads.hx	/^	public function addNormals() {$/;"	f
addNormals	heaps/h3d/prim/Sphere.hx	/^	override function addNormals() {$/;"	f
addObject	heaps/h2d/domkit/Style.hx	/^	public function addObject( obj ) {$/;"	f
addObject	heaps/h3d/anim/BufferAnimation.hx	/^	public function addObject( objName, offset ) {$/;"	f
addPak	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function addPak( file : FileInput, ?path : String ) {$/;"	f
addParam	heaps/hxsl/Cache.hx	/^		function addParam(p:RuntimeShader.AllocParam) {$/;"	f
addParam	heaps/hxsl/SharedShader.hx	/^	function addParam( eval : Eval, i : ShaderInstance, v : TVar ) {$/;"	f
addParamRec	heaps/hxsl/Macros.hx	/^	static function addParamRec( eparams : Array<haxe.macro.Expr>, tparams : Array<Type>, e : haxe./;"	f
addPass	heaps/h3d/mat/BaseMaterial.hx	/^	public function addPass<T:Pass>( p : T ) : T {$/;"	f
addPoint	heaps/h2d/TileGroup.hx	/^	public function addPoint( x : Float, y : Float, color : Int ) {$/;"	f
addPoint	heaps/h2d/col/Bounds.hx	/^	public inline function addPoint( p : Point ) {$/;"	f
addPoint	heaps/h2d/col/IBounds.hx	/^	public inline function addPoint( p : IPoint ) {$/;"	f
addPoint	heaps/h3d/col/Bounds.hx	/^	public inline function addPoint( p : Point ) {$/;"	f
addPoint	heaps/h3d/prim/BigPrimitive.hx	/^	public inline function addPoint(x, y, z) {$/;"	f
addPoints	heaps/hxd/poly2tri/SweepContext.hx	/^	function addPoints(points:Array<Point>)$/;"	f
addPolygon	heaps/hxd/clipper/Clipper.hx	/^	public function addPolygon(pg:IPolygon, polyType:PolyType)$/;"	f
addPolygon	heaps/hxd/clipper/Clipper.hx	/^    public function addPolygon(pol : IPolygon, joinType : JoinType, endType : EndType) {$/;"	f
addPolygons	heaps/hxd/clipper/Clipper.hx	/^	public function addPolygons(ppg:IPolygons, polyType:PolyType)$/;"	f
addPolygons	heaps/hxd/clipper/Clipper.hx	/^    public function addPolygons(pols : IPolygons, joinType : JoinType, endType : EndType)$/;"	f
addPolyline	heaps/hxd/poly2tri/SweepContext.hx	/^	public function addPolyline(polyline:Array<Point>)$/;"	f
addPolyline	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function addPolyline(polyline:Array<Point>)$/;"	f
addPos	heaps/h2d/col/Bounds.hx	/^	public inline function addPos( x : Float, y : Float ) {$/;"	f
addPos	heaps/h2d/col/IBounds.hx	/^	public inline function addPos( x : Int, y : Int ) {$/;"	f
addPos	heaps/h3d/col/Bounds.hx	/^	public inline function addPos( x : Float, y : Float, z : Float ) {$/;"	f
addPropCurve	heaps/h3d/anim/LinearAnimation.hx	/^	public function addPropCurve( objName, propName, values ) {$/;"	f
addProps	heaps/hxd/fmt/hmd/Dump.hx	/^	function addProps( props : Properties ) {$/;"	f
addRec	heaps/hxd/clipper/Clipper.hx	/^	function addRec(polynode:PolyNode,polygons:IPolygons) {$/;"	f
addRec	heaps/hxd/fmt/pak/FileSystem.hx	/^	function addRec( parent : PakEntry, path : String, f : Data.File, pakFile : Int, delta : Int ) /;"	f
addResizeEvent	heaps/hxd/Window.flash.hx	/^	public function addResizeEvent( f : Void -> Void ) : Void {$/;"	f
addResizeEvent	heaps/hxd/Window.hl.hx	/^	public function addResizeEvent( f : Void -> Void ) : Void {$/;"	f
addResizeEvent	heaps/hxd/Window.hx	/^	public function addResizeEvent( f : Void -> Void ) : Void {$/;"	f
addResizeEvent	heaps/hxd/Window.js.hx	/^	public function addResizeEvent( f : Void -> Void ) : Void {$/;"	f
addScene	heaps/hxd/SceneEvents.hx	/^	public function addScene( s : InteractiveScene, ?index : Int ) {$/;"	f
addSelfParam	heaps/hxsl/SharedShader.hx	/^	function addSelfParam( i : ShaderInstance, v : TVar ) {$/;"	f
addSeparator	heaps/samples/Pbr.hx	/^	function addSeparator() {$/;"	f
addShader	heaps/h2d/Drawable.hx	/^	public function addShader<T:hxsl.Shader>( s : T ) : T {$/;"	f
addShader	heaps/h3d/mat/Pass.hx	/^	public function addShader<T:hxsl.Shader>(s:T) : T {$/;"	f
addShader	heaps/h3d/pass/ScreenFx.hx	/^	public function addShader<T:hxsl.Shader>(s:T) {$/;"	f
addShader	heaps/h3d/scene/Renderer.hx	/^	public function addShader( s : hxsl.Shader ) {$/;"	f
addShader	heaps/h3d/scene/pbr/Renderer.hx	/^	override function addShader(s:hxsl.Shader) {$/;"	f
addShader	heaps/hxsl/Linker.hx	/^	function addShader( name : String, vertex : Null<Bool>, e : TExpr, p : Int ) {$/;"	f
addShaderAtIndex	heaps/h3d/mat/Pass.hx	/^	function addShaderAtIndex<T:hxsl.Shader>(s:T, index:Int) : T {$/;"	f
addSlider	heaps/samples/SampleApp.hx	/^	function addSlider( label : String, get : Void -> Float, set : Float -> Void, min : Float = 0.,/;"	f
addSort	heaps/hxsl/ShaderList.hx	/^	public static function addSort( s : Shader, shaders : ShaderList ) {$/;"	f
addSource	heaps/hxsl/CacheFile.hx	/^	function addSource( s : RuntimeShader ) {$/;"	f
addSource	heaps/hxsl/CacheFileBuilder.hx	/^	override function addSource(r:RuntimeShader) {$/;"	f
addSpacing	heaps/h2d/Flow.hx	/^	public function addSpacing( v : Int ) {$/;"	f
addSphere	heaps/h3d/col/Bounds.hx	/^	public inline function addSphere( s : Sphere ) {$/;"	f
addSphere	heaps/samples/Pbr.hx	/^		function addSphere(x,y) {$/;"	f
addSpherePos	heaps/h3d/col/Bounds.hx	/^	public inline function addSpherePos( x : Float, y : Float, z : Float, r : Float ) {$/;"	f
addStack	heaps/h3d/impl/MemoryManager.hx	/^		inline function addStack( a : hxd.impl.AllocPos, stacks : Array<{ stack : String, count : Int,/;"	f
addSub	heaps/h3d/prim/BigPrimitive.hx	/^	public function addSub( buf : hxd.FloatBuffer, idx : hxd.IndexBuffer, startVert, startTri, nver/;"	f
addTangents	heaps/h3d/prim/HMDModel.hx	/^	public function addTangents() {$/;"	f
addTangents	heaps/h3d/prim/Polygon.hx	/^	public function addTangents() {$/;"	f
addText	heaps/samples/SampleApp.hx	/^	function addText(text="") {$/;"	f
addToCache	heaps/hxsl/CacheFile.hx	/^	function addToCache( r : RuntimeShader, shaders : hxsl.ShaderList ) {$/;"	f
addToMap	heaps/hxd/poly2tri/SweepContext.hx	/^	public function addToMap(triangle:Triangle)$/;"	f
addTransform	heaps/h2d/TileGroup.hx	/^	public function addTransform( x : Float, y : Float, sx : Float, sy : Float, r : Float, c : h3d./;"	f
addTransform	heaps/h2d/TileGroup.hx	/^	public inline function addTransform(x : Float, y : Float, sx : Float, sy : Float, r : Float, t /;"	f
addTransform	heaps/h3d/scene/World.hx	/^	public function addTransform( model : WorldModel, mat : h3d.Matrix ) {$/;"	f
addType	heaps/hxsl/GlslOut.hx	/^	function addType( t : Type ) {$/;"	f
addType	heaps/hxsl/HlslOut.hx	/^	function addType( t : Type ) {$/;"	f
addUVCurve	heaps/h3d/anim/LinearAnimation.hx	/^	public function addUVCurve( objName, uvs ) {$/;"	f
addUVs	heaps/h3d/prim/Cube.hx	/^	override function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Cylinder.hx	/^	override function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Disc.hx	/^	override function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Grid.hx	/^	override function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Polygon.hx	/^	public function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Quads.hx	/^	public function addUVs() {$/;"	f
addUVs	heaps/h3d/prim/Sphere.hx	/^	override function addUVs() {$/;"	f
addUniformUVs	heaps/h3d/prim/Cube.hx	/^	public function addUniformUVs(scale = 1.) {$/;"	f
addValue	heaps/hxsl/GlslOut.hx	/^	function addValue( e : TExpr, tabs : String ) {$/;"	f
addValue	heaps/hxsl/HlslOut.hx	/^	function addValue( e : TExpr, tabs : String ) {$/;"	f
addVar	heaps/hxsl/GlslOut.hx	/^	function addVar( v : TVar ) {$/;"	f
addVar	heaps/hxsl/HlslOut.hx	/^	function addVar( v : TVar ) {$/;"	f
addVar	heaps/hxsl/Linker.hx	/^		function addVar(v:AllocatedVar) {$/;"	f
addVar	heaps/hxsl/Printer.hx	/^	function addVar( v : TVar, defKind : VarKind, tabs = "", ?parent ) {$/;"	f
addVarIndex	heaps/hxsl/DynamicShader.hx	/^	function addVarIndex(v:hxsl.Ast.TVar, ?access : Access, ?defObj : Dynamic ) {$/;"	f
addVarName	heaps/hxsl/Printer.hx	/^	function addVarName( v : TVar ) {$/;"	f
addVertex	heaps/h2d/Graphics.hx	/^	public function addVertex( x : Float, y : Float, r : Float, g : Float, b : Float, a : Float, u /;"	f
addVertex	heaps/h3d/scene/Graphics.hx	/^	inline function addVertex( x, y, z, r, g, b, a ) {$/;"	f
addVertexValue	heaps/h3d/prim/BigPrimitive.hx	/^	public inline function addVertexValue(v) {$/;"	f
added	heaps/h3d/prim/HMDModel.hx	/^			var added = false;$/;"	v
additive	heaps/h3d/shader/AmbientLight.hx	/^		@const var additive : Bool;$/;"	v
additive	heaps/h3d/shader/Texture.hx	/^		@const var additive : Bool;$/;"	v
additive	heaps/h3d/shader/Texture2.hx	/^		@const var additive : Bool;$/;"	v
additive	heaps/h3d/shader/VertexColor.hx	/^		@const var additive : Bool;$/;"	v
additive	heaps/h3d/shader/VertexColorAlpha.hx	/^		@const var additive : Bool;$/;"	v
additiveLighting	heaps/h3d/scene/fwd/LightSystem.hx	/^	public var additiveLighting(get, set) : Bool;$/;"	v
adj	heaps/h2d/domkit/BaseComponents.hx	/^		var adj : h3d.Matrix.ColorAdjust = {};$/;"	v
adjustColor	heaps/h2d/Drawable.hx	/^	public function adjustColor( ?col : h3d.Matrix.ColorAdjust ) : Void {$/;"	f
adjustColor	heaps/h3d/Matrix.hx	/^	public function adjustColor( col : ColorAdjust ) {$/;"	f
adjustScale	heaps/hxd/Perlin.hx	/^	public function adjustScale( size : Int, scale : Float ) {$/;"	f
adst	heaps/h3d/impl/GlDriver.hx	/^			var adst = Pass.getBlendAlphaDst(bits);$/;"	v
adst	heaps/h3d/impl/Stage3dDriver.hx	/^			var adst = Pass.getBlendAlphaDst(bits);$/;"	v
adv	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var adv = Std.parseInt(k.att.advance);$/;"	v
adx	heaps/hxd/poly2tri/Utils.hx	/^		var adx    = pa.x - pd.x;$/;"	v
adx	heaps/hxd/poly2tri/Utils.hx	/^		var adx = pa.x - pdx;$/;"	v
adxbdy	heaps/hxd/poly2tri/Utils.hx	/^		var adxbdy = adx * bdy;$/;"	v
adxbdy	heaps/hxd/poly2tri/Utils.hx	/^		var adxbdy= adx * bdy;$/;"	v
adxcdy	heaps/hxd/poly2tri/Utils.hx	/^		var adxcdy = adx * cdy;$/;"	v
ady	heaps/hxd/poly2tri/Utils.hx	/^		var ady    = pa.y - pd.y;$/;"	v
ady	heaps/hxd/poly2tri/Utils.hx	/^		var ady = pa.y - pdy;$/;"	v
affect	heaps/hxsl/Dce.hx	/^			var affect = [];$/;"	v
after	heaps/h3d/shader/Parallax.hx	/^				var after = curDepth - curLayerDepth;$/;"	v
agal	heaps/h3d/impl/Stage3dDriver.hx	/^		var agal = hxsl.AgalOut.toAgal(s, agalVersion);$/;"	v
agalVersion	heaps/h3d/impl/Stage3dDriver.hx	/^		var agalVersion = isStandardMode ? 2 : 1;$/;"	v
alFormat	heaps/hxd/snd/openal/Driver.hx	/^		var alFormat = switch (format) {$/;"	v
albedo	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var albedo : Vec3;$/;"	v
albedo	heaps/h3d/shader/pbr/PropsImport.hx	/^		var albedo : Vec3;$/;"	v
albedo	heaps/h3d/shader/pbr/Slides.hx	/^		var albedo : Vec3;$/;"	v
albedo	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var albedo = albedoTexture.get(calculatedUV);$/;"	v
albedoGamma	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var albedoGamma : Vec3;$/;"	v
albedoStrength	heaps/h3d/shader/pbr/StrengthValues.hx	/^		@param var albedoStrength : Float;$/;"	v
albedoStrength	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var albedoStrength : Float;$/;"	v
albedoTex	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var albedoTex : Sampler2D;$/;"	v
albedoTexture	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var albedoTexture : Sampler2D;$/;"	v
alen	heaps/h3d/impl/GlDriver.hx	/^		var alen = total - streamPos;$/;"	v
alias	heaps/h3d/prim/HMDModel.hx	/^		var alias = bufferAliases.get(name);$/;"	v
aliases	heaps/h2d/Console.hx	/^	var aliases : Map<String,String>;$/;"	v
alift	heaps/hxd/poly2tri/Utils.hx	/^		var alift = adx * adx + ady * ady;$/;"	v
align	heaps/h2d/Flow.hx	/^				var align = p.horizontalAlign == null ? halign : p.horizontalAlign;$/;"	v
align	heaps/h2d/Flow.hx	/^				var align = p.verticalAlign == null ? valign : p.verticalAlign;$/;"	v
align	heaps/h2d/Flow.hx	/^	public inline function align(vertical, horizontal) {$/;"	f
align	heaps/h2d/Text.hx	/^		var align = textAlign;$/;"	v
align	heaps/h3d/impl/ManagedBuffer.hx	/^		var align = b.flags.has(Quads) ? 4 : (b.flags.has(Triangles) ? 3 : 1);$/;"	v
align	heaps/h3d/impl/MemoryManager.hx	/^		var align = b.flags.has(Triangles) ? 3 : b.flags.has(Quads) ? 4 : 0;$/;"	v
align	heaps/hxd/fmt/blend/Data.hx	/^	function align() {$/;"	f
align	heaps/samples/HtmlText.hx	/^	public var align: Align;$/;"	v
align	heaps/samples/Text.hx	/^	public var align: Align;$/;"	v
alignLine	heaps/h2d/Flow.hx	/^			inline function alignLine( maxIndex ) {$/;"	f
alive	heaps/samples/Network.hx	/^	public function alive() {$/;"	f
all	heaps/h2d/Console.hx	/^		var all;$/;"	v
all	heaps/h2d/col/Bounds.hx	/^	public inline function all() {$/;"	f
all	heaps/h2d/col/IBounds.hx	/^	public inline function all() {$/;"	f
all	heaps/h3d/col/Bounds.hx	/^	public inline function all() {$/;"	f
all	heaps/h3d/impl/MemoryManager.hx	/^		var all = [];$/;"	v
all	heaps/hxd/fs/MultiFileSystem.hx	/^		var all : Array<FileEntry> = [];$/;"	v
all	heaps/hxd/res/FontBuilder.hx	/^		var all, bmp;$/;"	v
all	heaps/hxd/res/FontBuilder.hx	/^		var all, done;$/;"	v
all	heaps/hxd/snd/openal/Emulator.hx	/^	static var all = new Map<Int,Buffer>();$/;"	v
all	heaps/hxd/snd/openal/Emulator.hx	/^	static var all = new Map<Int,Source>();$/;"	v
all	heaps/hxsl/AgalOptim.hx	/^		var all = [X, Y, Z, W];$/;"	v
all	heaps/tools/mikktspace/Makefile	/^all: codegen$/;"	t
allChunks	heaps/h3d/scene/World.hx	/^	var allChunks : Array<WorldChunk>;$/;"	v
allIndexes	heaps/h3d/prim/BigPrimitive.hx	/^	var allIndexes : Array<Indexes>;$/;"	v
allJoints	heaps/h3d/anim/Skin.hx	/^	public var allJoints(default,null) : Array<Joint>;$/;"	v
allJoints	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var allJoints = [];$/;"	v
allNames	heaps/hxsl/GlslOut.hx	/^	var allNames : Map<String, Int>;$/;"	v
allNames	heaps/hxsl/HlslOut.hx	/^	var allNames : Map<String, Int>;$/;"	v
allObjects	heaps/h3d/anim/SmoothTransition.hx	/^		var allObjects = new Map();$/;"	v
allPasses	heaps/h3d/scene/Renderer.hx	/^	var allPasses : Array<h3d.pass.Base>;$/;"	v
allPixels	heaps/h3d/mat/BigTexture.hx	/^	var allPixels : hxd.Pixels;$/;"	v
allPolys	heaps/hxd/clipper/Clipper.hx	/^	public var allPolys : Array<PolyNode>;$/;"	v
allRegs	heaps/hxsl/AgalOptim.hx	/^				var allRegs = 0, first = -1, last = -1;$/;"	v
allSigns	heaps/hxsl/CacheFile.hx	/^		var allSigns = new Map();$/;"	v
allSources	heaps/hxsl/CacheFile.hx	/^	var allSources : Map<String,String> = new Map();$/;"	v
allTimes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var allTimes = [for( a in allTimes ) a];$/;"	v
allTimes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var allTimes = new Map();$/;"	v
allVars	heaps/hxsl/Flatten.hx	/^		var allVars = globals.concat(params);$/;"	v
allVars	heaps/hxsl/Linker.hx	/^	public var allVars : Array<AllocatedVar>;$/;"	v
alloc	heaps/h2d/Graphics.hx	/^		var alloc = Allocator.get();$/;"	v
alloc	heaps/h2d/Graphics.hx	/^	override function alloc( engine : h3d.Engine ) {$/;"	f
alloc	heaps/h2d/SpriteBatch.hx	/^	public function alloc( t : Tile ) : BatchElement {$/;"	f
alloc	heaps/h2d/TileGroup.hx	/^	override public function alloc(engine:h3d.Engine) {$/;"	f
alloc	heaps/h3d/Indexes.hx	/^	public static function alloc( i : hxd.IndexBuffer, startPos = 0, length = -1 ) {$/;"	f
alloc	heaps/h3d/impl/ManagedBuffer.hx	/^	public function alloc(vertices,align) {$/;"	f
alloc	heaps/h3d/mat/DepthBuffer.hx	/^	function alloc() {$/;"	f
alloc	heaps/h3d/mat/Texture.hx	/^	public function alloc() {$/;"	f
alloc	heaps/h3d/parts/Particles.hx	/^	public function alloc() {$/;"	f
alloc	heaps/h3d/prim/DynamicPrimitive.hx	/^		var alloc = hxd.impl.Allocator.get();$/;"	v
alloc	heaps/h3d/prim/HMDModel.hx	/^	override function alloc(engine:h3d.Engine) {$/;"	f
alloc	heaps/h3d/prim/Plane2D.hx	/^	override function alloc( engine : h3d.Engine ) {$/;"	f
alloc	heaps/h3d/prim/Polygon.hx	/^	override function alloc( engine : h3d.Engine ) {$/;"	f
alloc	heaps/h3d/prim/Primitive.hx	/^	public function alloc( engine : h3d.Engine ) {$/;"	f
alloc	heaps/h3d/prim/Quads.hx	/^	override function alloc( engine : Engine ) {$/;"	f
alloc	heaps/h3d/prim/RawPrimitive.hx	/^	override function alloc( engine : h3d.Engine ) {$/;"	f
alloc	heaps/h3d/scene/MeshBatch.hx	/^		var alloc = hxd.impl.Allocator.get();$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : Array<Dynamic>;$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : Array<String>;$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : Array<dx.Cursor>;$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : Array<sdl.Cursor>;$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : Dynamic;$/;"	v
alloc	heaps/hxd/Cursor.hx	/^	var alloc : flash.ui.MouseCursorData;$/;"	v
alloc	heaps/hxd/Pixels.hx	/^	public static function alloc( width, height, format : PixelFormat ) {$/;"	f
alloc	heaps/hxd/res/NanoJpeg.hx	/^	inline function alloc( nbytes : Int ) {$/;"	f
alloc	heaps/hxd/snd/openal/Emulator.hx	/^	public function alloc(size) {$/;"	f
alloc	heaps/hxsl/Cache.hx	/^			var alloc = flat.allocData.get(g);$/;"	v
alloc	heaps/hxsl/Flatten.hx	/^		var alloc = new Array<Alloc>(), apos = 0;$/;"	v
alloc	heaps/hxsl/Flatten.hx	/^		var alloc = new Array<Alloc>();$/;"	v
allocAlias	heaps/h3d/prim/HMDModel.hx	/^	function allocAlias( name : String ) {$/;"	f
allocBuffer	heaps/h3d/impl/ManagedBuffer.hx	/^	function allocBuffer( b : Buffer ) {$/;"	f
allocBuffer	heaps/h3d/impl/MemoryManager.hx	/^	function allocBuffer( b : Buffer, stride : Int ) {$/;"	f
allocBuffer	heaps/h3d/prim/MeshPrimitive.hx	/^	function allocBuffer( engine : h3d.Engine, name : String ) {$/;"	f
allocBuffer	heaps/hxd/impl/Allocator.hx	/^	public function allocBuffer( vertices : Int, stride : Int, flags : BufferFlags ) : h3d.Buffer {$/;"	f
allocBuffer	heaps/hxd/impl/CacheAllocator.hx	/^	override function allocBuffer(vertices:Int, stride:Int, flags:BufferFlags):h3d.Buffer {$/;"	f
allocChannelID	heaps/hxsl/Globals.hx	/^	public function allocChannelID( t : Texture ) {$/;"	f
allocChecker	heaps/h3d/mat/Texture.hx	/^	static function allocChecker( t : h3d.mat.Texture, size : Int ) {$/;"	f
allocConst	heaps/hxsl/Flatten.hx	/^	function allocConst( v : Float, p ) : TExpr {$/;"	f
allocConsts	heaps/hxsl/Flatten.hx	/^	function allocConsts( va : Array<Float>, p ) : TExpr {$/;"	f
allocData	heaps/hxsl/Flatten.hx	/^	public var allocData : Map< TVar, Array<Alloc> >;$/;"	v
allocDepth	heaps/h3d/impl/MemoryManager.hx	/^	function allocDepth( b : h3d.mat.DepthBuffer ) {$/;"	f
allocDepthBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function allocDepthBuffer( b : h3d.mat.DepthBuffer ) : DepthBuffer {$/;"	f
allocDepthBuffer	heaps/h3d/impl/Driver.hx	/^	public function allocDepthBuffer( b : h3d.mat.DepthBuffer ) : DepthBuffer {$/;"	f
allocDepthBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function allocDepthBuffer( b : h3d.mat.DepthBuffer ) : DepthBuffer {$/;"	f
allocDepthBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function allocDepthBuffer(b:h3d.mat.DepthBuffer):DepthBuffer {$/;"	f
allocFirst	heaps/h3d/scene/RenderContext.hx	/^	var allocFirst : h3d.pass.PassObject;$/;"	v
allocFloats	heaps/hxd/impl/Allocator.hx	/^	public function allocFloats( count : Int ) : hxd.FloatBuffer {$/;"	f
allocHead	heaps/h3d/impl/ManagedBuffer.hx	/^	var allocHead : Buffer;$/;"	v
allocID	heaps/hxsl/Globals.hx	/^	public static function allocID( path : String ) : Int {$/;"	f
allocIndexBuffer	heaps/hxd/impl/Allocator.hx	/^	public function allocIndexBuffer( count : Int ) {$/;"	f
allocIndexBuffer	heaps/hxd/impl/CacheAllocator.hx	/^	override function allocIndexBuffer( count : Int ) {$/;"	f
allocIndexes	heaps/h3d/impl/DirectXDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/Driver.hx	/^	public function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/GlDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/LogDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/MemoryManager.hx	/^	function allocIndexes( i : Indexes ) {$/;"	f
allocIndexes	heaps/h3d/impl/NullDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/h3d/impl/VulkanDriver.hx	/^	override function allocIndexes( count : Int, is32 : Bool ) : IndexBuffer {$/;"	f
allocIndexes	heaps/hxd/impl/Allocator.hx	/^	public function allocIndexes( count : Int ) {$/;"	f
allocInstanceBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function allocInstanceBuffer(b:InstanceBuffer, buf : haxe.io.Bytes) {$/;"	f
allocInstanceBuffer	heaps/h3d/impl/Driver.hx	/^	public function allocInstanceBuffer( b : h3d.impl.InstanceBuffer, bytes : haxe.io.Bytes ) {$/;"	f
allocInstanceBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function allocInstanceBuffer( b : InstanceBuffer, bytes : haxe.io.Bytes ) {$/;"	f
allocLabel	heaps/h3d/impl/Benchmark.hx	/^	function allocLabel(index) {$/;"	f
allocManaged	heaps/h3d/impl/MemoryManager.hx	/^	function allocManaged( m : ManagedBuffer ) {$/;"	f
allocNext	heaps/h3d/Buffer.hx	/^	var allocNext : Buffer;$/;"	v
allocNext	heaps/hxd/earcut/Earcut.hx	/^	public var allocNext : EarNode;$/;"	v
allocNode	heaps/hxd/earcut/Earcut.hx	/^	inline function allocNode(i, x, y, last=null) {$/;"	f
allocNoise	heaps/h3d/mat/Texture.hx	/^	static function allocNoise( t : h3d.mat.Texture, size : Int ) {$/;"	f
allocPass	heaps/h3d/mat/BaseMaterial.hx	/^	public function allocPass( name : String, ?inheritMain = true ) : Pass {$/;"	f
allocPool	heaps/h3d/scene/RenderContext.hx	/^	var allocPool : h3d.pass.PassObject;$/;"	v
allocPos	heaps/h2d/Graphics.hx	/^	var allocPos : hxd.impl.AllocPos;$/;"	v
allocPos	heaps/h3d/Buffer.hx	/^	var allocPos : hxd.impl.AllocPos;$/;"	v
allocPos	heaps/h3d/Indexes.hx	/^	var allocPos : hxd.impl.AllocPos;$/;"	v
allocPos	heaps/h3d/mat/BigTexture.hx	/^	function allocPos( w : Int, h : Int ) {$/;"	f
allocPos	heaps/h3d/mat/Texture.hx	/^	var allocPos : hxd.impl.AllocPos;$/;"	v
allocPos	heaps/h3d/prim/BigPrimitive.hx	/^	var allocPos : hxd.impl.AllocPos;$/;"	v
allocPosition	heaps/h3d/impl/ManagedBuffer.hx	/^	function allocPosition( nvert : Int, align : Int ) {$/;"	f
allocQuery	heaps/h3d/impl/Benchmark.hx	/^	function allocQuery() {$/;"	f
allocQuery	heaps/h3d/impl/Driver.hx	/^	public function allocQuery( queryKind : QueryKind ) : Query {$/;"	f
allocQuery	heaps/h3d/impl/GlDriver.hx	/^	override function allocQuery(kind:QueryKind) {$/;"	f
allocReg	heaps/hxsl/AgalOut.hx	/^	function allocReg( ?t : Type ) : Reg {$/;"	f
allocRegs	heaps/hxsl/AgalOptim.hx	/^	function allocRegs() {$/;"	f
allocShaderList	heaps/h3d/scene/RenderContext.hx	/^	public function allocShaderList( s : hxsl.Shader, ?next : hxsl.ShaderList ) {$/;"	f
allocSize	heaps/hxd/fs/FileEntry.hx	/^			var allocSize = (len + 65535) & 0xFFFF0000;$/;"	v
allocSource	heaps/hxsl/CacheFile.hx	/^	function allocSource( s : String ) {$/;"	f
allocStat	heaps/h3d/impl/Benchmark.hx	/^	function allocStat( name, time : Float ) {$/;"	f
allocStats	heaps/h3d/impl/MemoryManager.hx	/^	public function allocStats() : Array<{ position : String, count : Int, tex : Bool, size : Int, /;"	f
allocTarget	heaps/h2d/RenderContext.hx	/^	public function allocTarget(name, filter = false) {$/;"	f
allocTarget	heaps/h3d/impl/TextureCache.hx	/^	public function allocTarget( name : String, width : Int, height : Int, defaultDepth=true, ?form/;"	f
allocTarget	heaps/h3d/scene/Renderer.hx	/^	inline function allocTarget( name : String, depth = true, size = 1., ?format ) {$/;"	f
allocTargetScale	heaps/h3d/impl/TextureCache.hx	/^	public function allocTargetScale( name : String, scale : Float, defaultDepth=true, ?format:hxd./;"	f
allocTemp	heaps/hxsl/AgalOptim.hx	/^	function allocTemp( size : Int ) : Reg {$/;"	f
allocTexture	heaps/h3d/impl/DirectXDriver.hx	/^	override function allocTexture(t:h3d.mat.Texture):Texture {$/;"	f
allocTexture	heaps/h3d/impl/Driver.hx	/^	public function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTexture	heaps/h3d/impl/GlDriver.hx	/^	override function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTexture	heaps/h3d/impl/LogDriver.hx	/^	override function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTexture	heaps/h3d/impl/MemoryManager.hx	/^	function allocTexture( t : h3d.mat.Texture ) {$/;"	f
allocTexture	heaps/h3d/impl/NullDriver.hx	/^	override function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTexture	heaps/h3d/impl/Stage3dDriver.hx	/^	override function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTexture	heaps/h3d/impl/VulkanDriver.hx	/^	override function allocTexture( t : h3d.mat.Texture ) : Texture {$/;"	f
allocTileTarget	heaps/h3d/impl/TextureCache.hx	/^	public function allocTileTarget( name : String, tile : h2d.Tile, defaultDepth=false, ?format:hx/;"	f
allocVar	heaps/hxsl/Linker.hx	/^	function allocVar( v : TVar, p : Position, ?shaderName : String, ?path : String, ?parent : Allo/;"	f
allocVarId	heaps/hxsl/Ast.hx	/^	public static function allocVarId() {$/;"	f
allocVertexes	heaps/h3d/impl/DirectXDriver.hx	/^	override function allocVertexes(m:ManagedBuffer):VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/Driver.hx	/^	public function allocVertexes( m : ManagedBuffer ) : VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/GlDriver.hx	/^	override function allocVertexes( m : ManagedBuffer ) : VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/LogDriver.hx	/^	override function allocVertexes( m : ManagedBuffer ) : VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/NullDriver.hx	/^	override function allocVertexes( m : ManagedBuffer ) : VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function allocVertexes( buf : ManagedBuffer ) : VertexBuffer {$/;"	f
allocVertexes	heaps/h3d/impl/VulkanDriver.hx	/^	override function allocVertexes( m : ManagedBuffer ) : VertexBuffer {$/;"	f
allocated	heaps/h2d/Object.hx	/^	var allocated : Bool;$/;"	v
allocated	heaps/h3d/scene/Object.hx	/^	var allocated(get,set) : Bool;$/;"	v
allocated	heaps/hxd/earcut/Earcut.hx	/^	var allocated : EarNode;$/;"	v
allocator	heaps/h2d/Graphics.hx	/^			var allocator = Allocator.get();$/;"	v
allowAsync	heaps/h3d/mat/TextureChannels.hx	/^	public var allowAsync : Bool = true;$/;"	v
allowCompile	heaps/hxsl/CacheFile.hx	/^	var allowCompile : Bool;$/;"	v
allowDraw	heaps/h3d/impl/DirectXDriver.hx	/^	var allowDraw = false;$/;"	v
allowInspect	heaps/h2d/domkit/Style.hx	/^	public var allowInspect(default, set) = false;$/;"	v
allowLCID	heaps/hxd/System.hl.hx	/^	public static var allowLCID : Bool = false;$/;"	v
allowMultiClick	heaps/h2d/Interactive.hx	/^	public var allowMultiClick : Bool = false;$/;"	v
allowMultiClick	heaps/h3d/scene/Interactive.hx	/^	public var allowMultiClick : Bool = false;$/;"	v
allowSave	heaps/hxsl/CacheFile.hx	/^	public var allowSave = #if usesys false #else true #end;$/;"	v
allowTimeout	heaps/hxd/System.flash.hx	/^	public static var allowTimeout(get, set) : Bool;$/;"	v
allowTimeout	heaps/hxd/System.hl.hx	/^	public static var allowTimeout(get, set) : Bool;$/;"	v
allowTimeout	heaps/hxd/System.hx	/^	public static var allowTimeout(get, set) : Bool;$/;"	v
allowTimeout	heaps/hxd/System.js.hx	/^	public static var allowTimeout(get, set) : Bool;$/;"	v
allowVertexColor	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var allowVertexColor : Bool = true;$/;"	v
allowVirtual	heaps/hxd/snd/Channel.hx	/^	public var allowVirtual = true;$/;"	v
alpha	heaps/h2d/Anim.hx	/^			var alpha = curFrame - Std.int(curFrame);$/;"	v
alpha	heaps/h2d/Drawable.hx	/^		var alpha = color.a * ctx.globalAlpha;$/;"	v
alpha	heaps/h2d/Object.hx	/^	public var alpha : Float = 1.;$/;"	v
alpha	heaps/h2d/SpriteBatch.hx	/^	public var alpha(get,set) : Float;$/;"	v
alpha	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var alpha : Float = 1;$/;"	v
alpha	heaps/h2d/filter/Glow.hx	/^	public var alpha : Float;$/;"	v
alpha	heaps/h2d/filter/InnerGlow.hx	/^		@param var alpha : Float;$/;"	v
alpha	heaps/h2d/filter/InnerGlow.hx	/^	public var alpha : Float;$/;"	v
alpha	heaps/h2d/filter/Mask.hx	/^			var alpha = smoothAlpha ? k.a : float(k.a>0);$/;"	v
alpha	heaps/h2d/filter/Outline.hx	/^	public var alpha(get, set) : Float;$/;"	v
alpha	heaps/h3d/mat/Texture.hx	/^		var alpha = hxd.Pixels.alloc(width, height, ARGB);$/;"	v
alpha	heaps/h3d/parts/Data.hx	/^	public var alpha : Value;$/;"	v
alpha	heaps/h3d/parts/Particle.hx	/^	public var alpha(get, set) : Float;$/;"	v
alpha	heaps/h3d/pass/Outline.hx	/^	public var alpha : Float = 1.;$/;"	v
alpha	heaps/h3d/scene/pbr/Environment.hx	/^			var alpha = 2 * PI * p.y;$/;"	v
alpha	heaps/h3d/shader/SAO.hx	/^			var alpha = (float(tapIndex) + 0.5) * (1.0 \/ float(numSamples));$/;"	v
alpha	heaps/h3d/shader/pbr/BDRF.hx	/^			var alpha = roughness * roughness;$/;"	v
alpha	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var alpha = c.a == null ? null : new haxe.ds.Vector(numFrames);$/;"	v
alpha2	heaps/h3d/shader/pbr/BDRF.hx	/^			var alpha2 = alpha * alpha;$/;"	v
alphaChannel	heaps/h3d/mat/BigTexture.hx	/^	public var alphaChannel : hxd.res.Image;$/;"	v
alphaCutoff	heaps/h2d/col/PixelsCollider.hx	/^	public var alphaCutoff : Int;$/;"	v
alphaCutoff	heaps/h3d/shader/SignedDistanceField.hx	/^		@param var alphaCutoff : Float = 0.5;$/;"	v
alphaKill	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var alphaKill : Bool;$/;"	v
alphaPass	heaps/h2d/filter/DropShadow.hx	/^	var alphaPass = new h3d.mat.Pass("");$/;"	v
alphaPos	heaps/h3d/mat/BigTexture.hx	/^			var alphaPos = hxd.Pixels.getChannelOffset(allPixels.format, A);$/;"	v
alphaPos	heaps/h3d/mat/Texture.hx	/^		var alphaPos = hxd.Pixels.getChannelOffset(alpha.format, A);$/;"	v
alphas	heaps/h3d/anim/LinearAnimation.hx	/^	public var alphas : haxe.ds.Vector<Float>;$/;"	v
alreadyGen	heaps/hxd/fs/FileConverter.hx	/^		var alreadyGen = sys.FileSystem.exists(fullOutPath) && match.ver == conv.version #if disable_r/;"	v
alwaysSync	heaps/h3d/scene/Object.hx	/^	public var alwaysSync(get, set) : Bool;$/;"	v
am	heaps/h3d/mat/PbrMaterial.hx	/^			var am = mainPass.getShader(h3d.shader.pbr.AlphaMultiply);$/;"	v
ambientLight	heaps/h3d/scene/fwd/LightSystem.hx	/^	public var ambientLight(default,null) : h3d.Vector;$/;"	v
ambientLight	heaps/h3d/shader/AmbientLight.hx	/^			var ambientLight : Vec3;$/;"	v
ambientShader	heaps/h3d/scene/fwd/LightSystem.hx	/^	var ambientShader : hxsl.Shader;$/;"	v
amount	heaps/h2d/filter/Bloom.hx	/^	public var amount(get, set) : Float;$/;"	v
amount	heaps/h3d/parts/GpuParticles.hx	/^	public var amount : Float = 1.;$/;"	v
amount	heaps/h3d/parts/GpuParticles.hx	/^	public var amount = 1.;$/;"	v
amount	heaps/h3d/scene/pbr/Environment.hx	/^				var amount = n.dot(l).saturate();$/;"	v
amount	heaps/h3d/shader/Bloom.hx	/^		@param var amount : Float;$/;"	v
amount	heaps/h3d/shader/ColorMult.hx	/^		@param var amount : Float = 1.0;$/;"	v
amount	heaps/h3d/shader/Parallax.hx	/^		@param var amount : Float;$/;"	v
amount	heaps/samples/FxView.hx	/^		@param var amount : Float = 1.0;$/;"	v
amplitude	heaps/h3d/shader/SinusDeform.hx	/^		@param var amplitude : Float;$/;"	v
anchorX	heaps/h2d/Camera.hx	/^	public var anchorX(default, set) : Float;$/;"	v
anchorY	heaps/h2d/Camera.hx	/^	public var anchorY(default, set) : Float;$/;"	v
angle	Laser.hx	/^		var angle = this.rotation;$/;"	v
angle	heaps/h2d/Graphics.hx	/^		var angle = Math.PI * 2 \/ nsegments;$/;"	v
angle	heaps/h2d/Graphics.hx	/^		var angle = angleLength \/ (nsegments - 1);$/;"	v
angle	heaps/h2d/Graphics.hx	/^		var angle = hxd.Math.degToRad(90) \/ (nsegments - 1);$/;"	v
angle	heaps/h2d/TileGroup.hx	/^		var angle = Math.PI * 2 \/ nsegments;$/;"	v
angle	heaps/h2d/TileGroup.hx	/^		var angle = arcLength \/ nsegments;$/;"	v
angle	heaps/h2d/col/Line.hx	/^	public inline function angle():Float {$/;"	f
angle	heaps/h2d/col/Polygon.hx	/^		var angle = Math.PI * 2 \/ npoints;$/;"	v
angle	heaps/h2d/col/Voronoi.hx	/^	public var angle : Float;$/;"	v
angle	heaps/h2d/filter/DropShadow.hx	/^	public var angle : Float;$/;"	v
angle	heaps/h3d/scene/Trail.hx	/^	public var angle : Float = 0.;$/;"	v
angle	heaps/h3d/scene/pbr/SpotLight.hx	/^	public var angle(default,set) : Float;$/;"	v
angle	heaps/h3d/shader/Outline2D.hx	/^			var angle = 0.;$/;"	v
angle	heaps/h3d/shader/SAO.hx	/^			var angle = alpha * (float(numSpiralTurns) * 6.28) + rotationAngle;$/;"	v
angle	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var angle = lightInfos[i+3].r;$/;"	v
angle	heaps/h3d/shader/pbr/Light.hx	/^		@param var angle : Float;$/;"	v
angle	heaps/hxd/Direction.hx	/^	public var angle(get, never) : Float;$/;"	v
angle	heaps/hxd/Math.hx	/^	public static inline function angle( da : Float ) {$/;"	f
angle	heaps/hxd/poly2tri/Sweep.hx	/^		var angle:Float;$/;"	v
angleFalloff	heaps/h3d/shader/pbr/Light.hx	/^			var angleFalloff = clamp((theta - angle) \/ epsilon, 0.0, 1.0);$/;"	v
angleLerp	heaps/hxd/Math.hx	/^	public static inline function angleLerp( a : Float, b : Float, k : Float ) {$/;"	f
angleMove	heaps/hxd/Math.hx	/^	public static inline function angleMove( a : Float, b : Float, max : Float ) {$/;"	f
anim	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var anim = new h3d.anim.LinearAnimation(animName, numFrames, sampling);$/;"	v
anim	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var anim = loadAnimation(animName);$/;"	v
anim1	heaps/h3d/anim/Transition.hx	/^	public var anim1 : Animation;$/;"	v
anim2	heaps/h3d/anim/Transition.hx	/^	public var anim2 : Animation;$/;"	v
animNode	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var animNode = switch( animNodes.length ) {$/;"	v
animNodes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var animNodes = [];$/;"	v
animPos	heaps/hxd/fmt/hmd/Dump.hx	/^			var animPos = 0;$/;"	v
animStride	heaps/hxd/fmt/hmd/Dump.hx	/^			var animStride = 0;$/;"	v
animatedFrames	heaps/samples/Cursor.hx	/^		var animatedFrames = [bmp];$/;"	v
animatedObjects	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var animatedObjects = [];$/;"	v
animatedUV	heaps/h3d/shader/AnimatedTexture.hx	/^		var animatedUV : Vec2;$/;"	v
animatedUV2	heaps/h3d/shader/AnimatedTexture.hx	/^		var animatedUV2 : Vec2;$/;"	v
animationEvents	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var animationEvents : Array<{ frame : Int, data : String }>;$/;"	v
animationFixedFrame	heaps/h3d/shader/GpuParticle.hx	/^		@param var animationFixedFrame : Float;$/;"	v
animationRepeat	heaps/h2d/Particles.hx	/^	public var animationRepeat(default,set) : Float	= 1;$/;"	v
animationRepeat	heaps/h3d/parts/GpuParticles.hx	/^	public var animationRepeat : Float			= 1;$/;"	v
animationRepeat	heaps/h3d/shader/GpuParticle.hx	/^		@param var animationRepeat : Float;$/;"	v
animationSupported	heaps/samples/Cursor.hx	/^		var animationSupported = false;$/;"	v
animation_frame_count	heaps/hxd/fmt/kframes/Data.hx	/^	var animation_frame_count : Int;$/;"	v
animation_groups	heaps/hxd/fmt/kframes/Data.hx	/^	var animation_groups : Array<{}>; \/\/ TODO$/;"	v
animations	heaps/h2d/KeyFrames.hx	/^	var animations : Array<KFAnimation>;$/;"	v
animations	heaps/h3d/prim/ModelCache.hx	/^	var animations : haxe.DynamicAccess<{ events : Array<{ frame : Int, data : String }> }>;$/;"	v
animations	heaps/hxd/fmt/hmd/Data.hx	/^	public var animations : Array<Animation>;$/;"	v
animations	heaps/hxd/fmt/spine/JsonData.hx	/^	var animations : DynamicAccess<JAnimation>;$/;"	v
animations	heaps/hxd/fmt/spine/Library.hx	/^	public var animations : Map<String, Animation>;$/;"	v
anims	heaps/h3d/prim/ModelCache.hx	/^	var anims : Map<String, h3d.anim.Animation>;$/;"	v
antiAlias	heaps/h3d/Engine.hx	/^	var antiAlias : Int;$/;"	v
antiAlias	heaps/h3d/impl/Stage3dDriver.hx	/^	var antiAlias : Int;$/;"	v
aobj	heaps/h3d/col/Collider.hx	/^		var aobj = a.makeDebugObj();$/;"	v
aop	heaps/h3d/impl/GlDriver.hx	/^			var aop = Pass.getBlendAlphaOp(bits);$/;"	v
aop	heaps/h3d/impl/Stage3dDriver.hx	/^			var aop = Pass.getBlendAlphaOp(bits);$/;"	v
ap	heaps/hxsl/Cache.hx	/^						var ap = new AllocParam(a.v.name, a.pos, -1, -1, a.v.type);$/;"	v
ap	heaps/hxsl/Cache.hx	/^					var ap = new AllocParam(a.v.name, a.pos, p.instance, p.index, a.v.type);$/;"	v
apiMask	heaps/samples/Mask.hx	/^	var apiMask : MaskWithSample;$/;"	v
app	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var app = "";$/;"	v
app	heaps/hxd/impl/Air3File.hx	/^			var app = flash.filesystem.File.applicationDirectory;$/;"	v
appendPixels	heaps/hxd/res/Gradients.hx	/^	static function appendPixels(pixels : hxd.Pixels, dat : Gradient, wid : Int, hei : Int, yoff : /;"	f
applicationPath	heaps/hxd/File.hx	/^	public static function applicationPath() : String {$/;"	f
apply	heaps/h2d/KeyFrames.hx	/^	function apply( l : KeyframesLayer, f : KFAnimation ) {$/;"	f
apply	heaps/h3d/pass/Blur.hx	/^	public function apply( ctx : h3d.impl.RenderContext, src : h3d.mat.Texture, ?output : h3d.mat.T/;"	f
apply	heaps/h3d/pass/ColorMatrix.hx	/^		function apply( color : Vec4, mat : Mat4 ) : Vec4 {$/;"	f
apply	heaps/h3d/pass/ColorMatrix.hx	/^	public function apply( src : h3d.mat.Texture, out : h3d.mat.Texture, ?mask : h3d.mat.Texture, ?/;"	f
apply	heaps/h3d/pass/Copy.hx	/^	public function apply( from : h3d.mat.TextureArray, fromLayer : Int, to, ?blend : h3d.mat.Blend/;"	f
apply	heaps/h3d/pass/Copy.hx	/^	public function apply( from, to, ?blend : h3d.mat.BlendMode, ?customPass : h3d.mat.Pass, ?layer/;"	f
apply	heaps/h3d/pass/CubeCopy.hx	/^	public function apply( from, to, ?blend : h3d.mat.BlendMode, ?customPass : h3d.mat.Pass ) {$/;"	f
apply	heaps/h3d/pass/FXAA.hx	/^	public function apply( texture : h3d.mat.Texture ) {$/;"	f
apply	heaps/h3d/pass/Outline.hx	/^	public function apply(ctx : h3d.impl.RenderContext, src : h3d.mat.Texture, ?output : h3d.mat.Te/;"	f
apply	heaps/h3d/pass/ScalableAO.hx	/^	public function apply( depthTexture : h3d.mat.Texture, normalTexture : h3d.mat.Texture, camera /;"	f
apply	heaps/hxd/impl/Properties.hx	/^	public function apply( props : Dynamic, obj : Dynamic ) {$/;"	f
apply	heaps/hxd/res/DynamicText.hx	/^	static function apply( obj : Dynamic, data : String, ?reference : String, onMissing ) {$/;"	f
apply	heaps/hxd/snd/Driver.hx	/^	public function apply   (e : T, source : SourceHandle) : Void {};$/;"	f
apply	heaps/hxd/snd/openal/LowPassDriver.hx	/^	override function apply(e : LowPass, source : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/openal/PitchDriver.hx	/^	override function apply(e : Pitch, source : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function apply(e : Reverb, s : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/openal/SpatializationDriver.hx	/^	override function apply(e : Spatialization, s : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	override function apply(e : LowPass, source : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/webaudio/PitchDriver.hx	/^	override function apply(e : Pitch, source : SourceHandle) : Void {$/;"	f
apply	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	override function apply(e : Spatialization, source : SourceHandle) : Void {$/;"	f
applyAnimationTransform	heaps/h3d/scene/Object.hx	/^	public function applyAnimationTransform( recursive = true ) {$/;"	f
applyAudibleVolumeModifier	heaps/hxd/snd/Effect.hx	/^	public function applyAudibleVolumeModifier(v : Float) : Float {$/;"	f
applyAudibleVolumeModifier	heaps/hxd/snd/effect/Spatialization.hx	/^	override function applyAudibleVolumeModifier(v : Float) {$/;"	f
applyDisplay	heaps/hxd/Window.hl.hx	/^	public function applyDisplay() {$/;"	f
applyLang	heaps/hxd/res/DynamicText.hx	/^			public static function applyLang( data : String, ?reference, ?onMissing, ?ignoreMeta : hxd.re/;"	f
applyMeta	heaps/hxsl/MacroParser.hx	/^	function applyMeta( m : MetadataEntry, v : Ast.VarDecl ) {$/;"	f
applyPitch	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function applyPitch() {$/;"	f
applyRec	heaps/hxd/res/DynamicText.hx	/^	public static function applyRec( path : Array<String>, obj : Dynamic, data : Access, ref : Acce/;"	f
applyText	heaps/hxd/res/DynamicText.hx	/^	static function applyText( path : Array<String>, old : Dynamic, x : Access, ref : Access, onMis/;"	f
applyTo	heaps/h2d/ZGroup.hx	/^	public function applyTo( ctx : RenderContext ) {$/;"	f
applyTransform	heaps/h3d/col/SkinCollider.hx	/^	function applyTransform() {$/;"	f
arc	heaps/h2d/TileGroup.hx	/^	public inline function arc( x : Float, y : Float, ray : Float, size: Float, start: Float, end: /;"	f
arc	heaps/h2d/col/Voronoi.hx	/^	public var arc : Beachsection;$/;"	v
arcLength	heaps/h2d/TileGroup.hx	/^		var arcLength = end - start;$/;"	v
area	heaps/h2d/col/IPolygon.hx	/^	public function area() {$/;"	f
area	heaps/h2d/col/Polygon.hx	/^	public function area() {$/;"	f
area	heaps/h2d/col/Triangle.hx	/^		var area = getInvArea() * 0.5;$/;"	v
area	heaps/h2d/col/Triangle.hx	/^	var area : Float;$/;"	v
area	heaps/hxd/earcut/Earcut.hx	/^	inline function area(p:EarNode, q:EarNode, r:EarNode) {$/;"	f
args	heaps/h2d/Console.hx	/^		var args = [];$/;"	v
args	heaps/h3d/impl/GlDriver.hx	/^		var args : Array<Int> = commands.data;$/;"	v
args	heaps/hxd/Worker.hx	/^		var args = Type.enumParameters(msg);$/;"	v
args	heaps/hxd/fmt/pak/Build.hx	/^		var args = Sys.args();$/;"	v
args	heaps/hxd/fs/Convert.hx	/^			var args = ["-f", tcFmt, "-y", "-nologo", tmpFile];$/;"	v
args	heaps/hxd/fs/Convert.hx	/^		var args = ["--resample", "44100", "-Q", srcPath, "-o", dstPath];$/;"	v
args	heaps/hxd/fs/Convert.hx	/^		var args = ["-silent"];$/;"	v
args	heaps/hxd/fs/Convert.hx	/^	var args : Array<String>;$/;"	v
args	heaps/hxd/res/BDFFont.hx	/^		var args : Array<String>;$/;"	v
args	heaps/hxsl/AgalOptim.hx	/^			var args : Array<Reg> = cast op.getParameters();$/;"	v
args	heaps/hxsl/Ast.hx	/^	var args : Array<TVar>;$/;"	v
args	heaps/hxsl/Ast.hx	/^	var args : Array<VarDecl>;$/;"	v
args	heaps/hxsl/CacheFileBuilder.hx	/^			var args = ["-T", (rd.vertex ? "vs_" : "ps_") + dxShaderVersion,"-O3","-Fo", tmpOut, tmpSrc];$/;"	v
args	heaps/hxsl/CacheFileBuilder.hx	/^			var args = ["-profile", rd.vertex ? "sce_vs_vs_orbis" : "sce_ps_orbis", "-o", tmpOut, tmpSrc]/;"	v
args	heaps/hxsl/CacheFileBuilder.hx	/^		var args = Sys.args();$/;"	v
args	heaps/hxsl/Checker.hx	/^						var args = [for( a in args ) typeExpr(a, Value)];$/;"	v
args	heaps/hxsl/Checker.hx	/^					var args = v.args.copy();$/;"	v
args	heaps/hxsl/Checker.hx	/^			var args : Array<TVar> = [for( a in f.args ) {$/;"	v
args	heaps/hxsl/Eval.hx	/^			var args = [for( a in eargs ) evalExpr(a)];$/;"	v
args	heaps/samples/templates/.vscode/tasks.json	/^			"args": "active configuration",$/;"	s	object:tasks.0
args	heaps/tools/mikktspace/Mikktspace.hx	/^		var args = Sys.args();$/;"	v
arr	heaps/h3d/impl/DirectXDriver.hx	/^				var arr = tex.flags.has(Cube) || tex.flags.has(IsArray);$/;"	v
arr	heaps/h3d/pass/ShaderManager.hx	/^					var arr : Array<h3d.mat.Texture> = t;$/;"	v
arr	heaps/h3d/prim/HMDModel.hx	/^			var arr = mpts.get(pid);$/;"	v
arr	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var arr = [];$/;"	v
arr	heaps/hxd/fmt/hbson/Reader.hx	/^			var arr : Array<Dynamic> = [];$/;"	v
arr	heaps/hxd/fs/LocalFileSystem.hx	/^		var arr = new Array<FileEntry>();$/;"	v
arr	heaps/hxd/res/DynamicText.hx	/^						var arr : Array<Dynamic> = v;$/;"	v
arr	heaps/hxd/res/Image.hx	/^					var arr = tex.waitLoads;$/;"	v
arrayBufferToBytes	heaps/hxd/ByteConversions.hx	/^	public static inline function arrayBufferToBytes( v : hxd.impl.TypedArray.ArrayBuffer ) : haxe./;"	f
arrayBytes	heaps/hxd/fmt/fbx/Parser.hx	/^		var arrayBytes:Bytes = null;$/;"	v
arrayBytesPos	heaps/hxd/fmt/fbx/Parser.hx	/^		var arrayBytesPos:Int = 0;$/;"	v
arrayCompressedLen	heaps/hxd/fmt/fbx/Parser.hx	/^		var arrayCompressedLen:Int;$/;"	v
arrayEncoding	heaps/hxd/fmt/fbx/Parser.hx	/^		var arrayEncoding:Int;$/;"	v
arrayLen	heaps/hxd/fmt/fbx/Parser.hx	/^		var arrayLen : Int = 0;$/;"	v
arrayRead	heaps/hxd/FloatBuffer.hx	/^	@:arrayAccess inline function arrayRead(key:Int) : hxd.impl.Float32 {$/;"	f
arrayRead	heaps/hxd/IndexBuffer.hx	/^	@:arrayAccess inline function arrayRead(key:Int) : Int {$/;"	f
arrayWrite	heaps/hxd/FloatBuffer.hx	/^	@:arrayAccess inline function arrayWrite(key:Int, value : hxd.impl.Float32) : hxd.impl.Float32 /;"	f
arrayWrite	heaps/hxd/IndexBuffer.hx	/^	@:arrayAccess inline function arrayWrite(key:Int, value : Int) : Int {$/;"	f
arrow	heaps/h2d/Dropdown.hx	/^	var arrow : h2d.Bitmap;$/;"	v
arrow	heaps/samples/Particles2d.hx	/^	var arrow : Texture;$/;"	v
ascent	heaps/hxd/res/BDFFont.hx	/^	var ascent : Int = -1;$/;"	v
asin	heaps/hxd/Math.hx	/^	public static inline function asin( f : Float ) {$/;"	f
asrc	heaps/h3d/impl/GlDriver.hx	/^			var asrc = Pass.getBlendAlphaSrc(bits);$/;"	v
asrc	heaps/h3d/impl/Stage3dDriver.hx	/^			var asrc = Pass.getBlendAlphaSrc(bits);$/;"	v
assignReg	heaps/hxsl/AgalOptim.hx	/^	function assignReg( inf : RegInfos ) {$/;"	f
ast	heaps/tools/hxsl/Main.hx	/^			var ast = new hxsl.MacroParser().parseExpr(e);$/;"	v
astr	heaps/h2d/Console.hx	/^				var astr = a.name;$/;"	v
asyncLoad	heaps/hxd/res/Image.hx	/^	function asyncLoad( data : haxe.io.Bytes ) {$/;"	f
at	heaps/h3d/shader/pbr/BDRF.hx	/^			var at = max(roughness * (1.0 + anisotropy), 0.001);$/;"	v
at	heaps/hxd/res/NanoJpeg.hx	/^		var at = vlctab[c.actabsel];$/;"	v
atan	heaps/hxd/Math.hx	/^	public static inline function atan( f : Float ) {$/;"	f
atan2	heaps/hxd/Math.hx	/^	public static inline function atan2( dy : Float, dx : Float ) {$/;"	f
attach	heaps/hxd/fmt/spine/Library.hx	/^		var attach : Attachment;$/;"	v
attachCircleEvent	heaps/h2d/col/Voronoi.hx	/^	function attachCircleEvent(arc:Beachsection) {$/;"	f
attachToCam	heaps/h3d/parts/GpuParticles.hx	/^	public var attachToCam(default, set) : Bool	= false;$/;"	v
attachment	heaps/hxd/fmt/spine/Data.hx	/^	public var attachment : String;$/;"	v
attachment	heaps/hxd/fmt/spine/JsonData.hx	/^	var attachment : String;$/;"	v
attachments	heaps/hxd/fmt/spine/Data.hx	/^	public var attachments : Array<Attachment>;$/;"	v
attribNames	heaps/h3d/impl/GlDriver.hx	/^			var attribNames = [];$/;"	v
attribs	heaps/h3d/impl/GlDriver.hx	/^	public var attribs : Array<CompiledAttribute>;$/;"	v
audibleCount	heaps/hxd/snd/Manager.hx	/^		var audibleCount = 0;$/;"	v
audibleVolume	heaps/hxd/snd/Channel.hx	/^	var audibleVolume = 1.0;$/;"	v
autoBounds	heaps/h2d/filter/Filter.hx	/^	public var autoBounds = true;$/;"	v
autoCollect	heaps/h3d/scene/World.hx	/^	var autoCollect : Bool;$/;"	v
autoComplete	heaps/h2d/Console.hx	/^	public var autoComplete : Bool = true;$/;"	v
autoCut	heaps/h2d/Tile.hx	/^	public static function autoCut( bmp : hxd.BitmapData, width : Int, ?height : Int ) : { main: Ti/;"	f
autoFlush	heaps/hxd/net/Socket.hx	/^	var autoFlush = true;$/;"	v
autoMerge	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function autoMerge() {$/;"	f
autoResize	heaps/h3d/Engine.hx	/^	public var autoResize : Bool;$/;"	v
autoShrink	heaps/h3d/pass/DirShadowMap.hx	/^	public var autoShrink = true;$/;"	v
autoSmoothing	heaps/h3d/shader/SignedDistanceField.hx	/^		@const var autoSmoothing : Bool = false;$/;"	v
autoZPlanes	heaps/h3d/pass/DirShadowMap.hx	/^	public var autoZPlanes = false;$/;"	v
avail	heaps/hxd/impl/Air3File.hx	/^	var avail : Int;$/;"	v
available	heaps/hxd/impl/CacheAllocator.hx	/^	public var available : Array<T> = [];$/;"	v
available	heaps/hxd/net/Socket.hx	/^	public var available(get, never) : Int;$/;"	v
available	heaps/hxsl/AgalOptim.hx	/^			var available = 4;$/;"	v
aval	heaps/h3d/mat/Texture.hx	/^		var aval = Std.int(alpha * 255);$/;"	v
ax	heaps/h2d/Drawable.hx	/^		var ax = absX + tile.dx * matA + tile.dy * matC;$/;"	v
ax	heaps/h2d/Graphics.hx	/^		var ax = tmpPoints.length == 0 ? 0 : tmpPoints[tmpPoints.length - 1].x;$/;"	v
ax	heaps/h2d/Graphics.hx	/^		var ax = tmpPoints.length == 0 ? 0 :tmpPoints[ tmpPoints.length - 1 ].x;$/;"	v
ax	heaps/h2d/Object.hx	/^		var ax = absX + tile.dx * matA + tile.dy * matC;$/;"	v
ax	heaps/h2d/col/Voronoi.hx	/^		var ax = edge.va.x,$/;"	v
ax	heaps/h3d/Camera.hx	/^		var ax = up.cross(az);$/;"	v
ax	heaps/h3d/Matrix.hx	/^		var ax = dir.normalized();$/;"	v
ax	heaps/h3d/Quat.hx	/^		var ax = dir.clone().normalized();$/;"	v
ax	heaps/hxd/poly2tri/Node.hx	/^		var ax = this.next.point.x - this.point.x;$/;"	v
ax	heaps/samples/Quaternion.hx	/^		var ax = new h3d.scene.Box(0xFF800000, true, cube);$/;"	v
ax	heaps/samples/Quaternion.hx	/^		var ax = new h3d.scene.Box(0xFFFF0000, true, axis);$/;"	v
axis	heaps/samples/Pbr.hx	/^		var axis = new h3d.scene.Graphics(s3d);$/;"	v
axis	heaps/samples/Quaternion.hx	/^		var axis = new h3d.scene.Object(s3d);$/;"	v
axisCount	heaps/hxd/Pad.hx	/^				var axisCount = 0;$/;"	v
axisDeadZone	heaps/hxd/Pad.hx	/^	public var axisDeadZone : Float = 0.1;$/;"	v
axisID	heaps/hxd/Pad.hx	/^						var axisID = axisCount++;$/;"	v
axisX	heaps/hxd/Pad.hx	/^				var axisX = 0, axisY = 1;$/;"	v
ay	heaps/h2d/Drawable.hx	/^		var ay = absY + tile.dx * matB + tile.dy * matD;$/;"	v
ay	heaps/h2d/Graphics.hx	/^		var ay = tmpPoints.length == 0 ? 0 : tmpPoints[tmpPoints.length - 1].y;$/;"	v
ay	heaps/h2d/Graphics.hx	/^		var ay = tmpPoints.length == 0 ? 0 :tmpPoints[ tmpPoints.length - 1 ].y;$/;"	v
ay	heaps/h2d/Object.hx	/^		var ay = absY + tile.dx * matB + tile.dy * matD;$/;"	v
ay	heaps/h3d/Camera.hx	/^		var ay = az.cross(ax);$/;"	v
ay	heaps/h3d/Matrix.hx	/^		var ay = up.cross(ax).normalized();$/;"	v
ay	heaps/h3d/Quat.hx	/^			var ay = new h3d.col.Point(dir.x, dir.y, 0).normalized();$/;"	v
ay	heaps/h3d/Quat.hx	/^		var ay = new Vector(-ax.y, ax.x, 0).normalized();$/;"	v
ay	heaps/hxd/poly2tri/Node.hx	/^		var ay = this.next.point.y - this.point.y;$/;"	v
ay	heaps/samples/Quaternion.hx	/^		var ay = new h3d.scene.Box(0xFF008000, true, cube);$/;"	v
ay	heaps/samples/Quaternion.hx	/^		var ay = new h3d.scene.Box(0xFF00FF00, true, axis);$/;"	v
az	heaps/h3d/Camera.hx	/^		var az = target.sub(pos);$/;"	v
az	heaps/h3d/Matrix.hx	/^		var az = ax.cross(ay);$/;"	v
az	heaps/h3d/Quat.hx	/^			var az = dir.cross(ay);$/;"	v
az	heaps/h3d/Quat.hx	/^		var az = ax.cross(ay);$/;"	v
az	heaps/samples/Quaternion.hx	/^		var az = new h3d.scene.Box(0xFF000080, true, cube);$/;"	v
az	heaps/samples/Quaternion.hx	/^		var az = new h3d.scene.Box(0xFF0000FF, true, axis);$/;"	v
b	heaps/h2d/CdbLevel.hx	/^				var b = l.tileset.getTileBuilder();$/;"	v
b	heaps/h2d/Flow.hx	/^				var b = getSize(c);$/;"	v
b	heaps/h2d/Flow.hx	/^			var b = tmpBounds;$/;"	v
b	heaps/h2d/Graphics.hx	/^	public var b : Float;$/;"	v
b	heaps/h2d/HtmlText.hx	/^					var b = new Bitmap(i, this);$/;"	v
b	heaps/h2d/ObjectFollower.hx	/^			var b = getSize(tmpSize); \/\/ prevent recursive$/;"	v
b	heaps/h2d/SpriteBatch.hx	/^	public var b : Float = 1;$/;"	v
b	heaps/h2d/col/Bounds.hx	/^		var b = new Bounds();$/;"	v
b	heaps/h2d/col/Circle.hx	/^		var b = 2 * (dx * (p1.x - x) + dy * (p1.y - y));$/;"	v
b	heaps/h2d/col/IBounds.hx	/^		var b = new IBounds();$/;"	v
b	heaps/h2d/col/Line.hx	/^		var b = l.p1.x*l.p2.y - l.p1.y*l.p2.x;$/;"	v
b	heaps/h2d/col/Matrix.hx	/^	public var b : Float;$/;"	v
b	heaps/h2d/col/Triangle.hx	/^	public var b : Point;$/;"	v
b	heaps/h2d/domkit/BaseComponents.hx	/^			var b = parseBool(b);$/;"	v
b	heaps/h2d/domkit/Style.hx	/^			var b = fl.getBounds();$/;"	v
b	heaps/h2d/domkit/Style.hx	/^		var b = obj.getBounds();$/;"	v
b	heaps/h3d/Buffer.hx	/^		var b = new Buffer(nvert, stride, flags);$/;"	v
b	heaps/h3d/Buffer.hx	/^		var b = new Buffer(vertices, stride, flags);$/;"	v
b	heaps/h3d/Buffer.hx	/^		var b = new BufferOffset(buffer,offset);$/;"	v
b	heaps/h3d/Buffer.hx	/^		var b = this;$/;"	v
b	heaps/h3d/Matrix.hx	/^		var b = ins * lumB;$/;"	v
b	heaps/h3d/Matrix.hx	/^		var b = t13 + t23 + t33;$/;"	v
b	heaps/h3d/Quat.hx	/^		var b = (v * halfTheta).sin() * invSinHalfTheta * (cosHalfTheta < 0 ? -1 : 1);$/;"	v
b	heaps/h3d/Vector.hx	/^	public var b(get, set) : Float;$/;"	v
b	heaps/h3d/col/Bounds.hx	/^		var b = new Bounds();$/;"	v
b	heaps/h3d/col/Bounds.hx	/^		var b = p.ny;$/;"	v
b	heaps/h3d/col/Capsule.hx	/^	public var b : Point;$/;"	v
b	heaps/h3d/col/Collider.hx	/^	public var b : Collider;$/;"	v
b	heaps/h3d/col/ObjectCollider.hx	/^		var b = collider.contains(p);$/;"	v
b	heaps/h3d/col/Ray.hx	/^		var b = new h3d.Vector(px + lx, py + ly, pz + lz);$/;"	v
b	heaps/h3d/col/SkinCollider.hx	/^			var b = boxes[i];$/;"	v
b	heaps/h3d/col/SkinCollider.hx	/^			var b = new h3d.scene.Box(0xA0A0A0, h3d.col.Bounds.fromValues(-1,-1,-1,2,2,2), this);$/;"	v
b	heaps/h3d/col/Sphere.hx	/^		var b = 2 * r.lx * (x - px) +  2 * r.ly * (y - py) +  2 * r.lz * (z - pz);$/;"	v
b	heaps/h3d/col/TransformCollider.hx	/^		var b = collider.contains(p);$/;"	v
b	heaps/h3d/impl/GlDriver.hx	/^		var b = gl.createBuffer();$/;"	v
b	heaps/h3d/impl/ManagedBuffer.hx	/^		var b = new Buffer(vertices, stride, [NoAlloc]);$/;"	v
b	heaps/h3d/impl/MemoryManager.hx	/^				var b = buf.allocHead;$/;"	v
b	heaps/h3d/impl/MemoryManager.hx	/^			var b = b;$/;"	v
b	heaps/h3d/impl/MemoryManager.hx	/^			var b = buffers[i], prev : ManagedBuffer = null;$/;"	v
b	heaps/h3d/impl/Stage3dDriver.hx	/^			var b = buffers;$/;"	v
b	heaps/h3d/impl/Stage3dDriver.hx	/^		var b = buffers;$/;"	v
b	heaps/h3d/impl/Stage3dDriver.hx	/^		var b = pixels.bytes.getData();$/;"	v
b	heaps/h3d/impl/Stage3dDriver.hx	/^	var b : ManagedBuffer;$/;"	v
b	heaps/h3d/mat/BigTexture.hx	/^		var b = findBest(q.tr, w, h);$/;"	v
b	heaps/h3d/mat/DepthBuffer.hx	/^	var b : h3d.impl.Driver.DepthBuffer;$/;"	v
b	heaps/h3d/mat/Texture.hx	/^			var b = color & 0xFF, g = (color >> 8) & 0xFF, r = (color >> 16) & 0xFF, a = Std.int(alpha * /;"	v
b	heaps/h3d/mat/Texture.hx	/^		var b = new h2d.Bitmap(h2d.Tile.fromTexture(this), s2d);$/;"	v
b	heaps/h3d/mat/Texture.hx	/^		var b = new hxd.BitmapData(size, size);$/;"	v
b	heaps/h3d/parts/Data.hx	/^	public var b : Float;$/;"	v
b	heaps/h3d/parts/Emitter.hx	/^					var b = (p.time - prev.time) \/ (ck.time - prev.time);$/;"	v
b	heaps/h3d/parts/Particle.hx	/^	public var b : Float;$/;"	v
b	heaps/h3d/pass/DirShadowMap.hx	/^				var b = m.primitive.getBounds();$/;"	v
b	heaps/h3d/pass/ShaderManager.hx	/^				var b : h3d.Buffer = getParamValue(p, shaders, !STRICT);$/;"	v
b	heaps/h3d/prim/BigPrimitive.hx	/^				var b = h3d.Buffer.ofSubFloats(tmpBuf, stride, Std.int(bufPos \/ stride));$/;"	v
b	heaps/h3d/prim/Instanced.hx	/^			var b = m.bufferCache.get(bid);$/;"	v
b	heaps/h3d/prim/MeshPrimitive.hx	/^			var b = bufferCache.get(id);$/;"	v
b	heaps/h3d/prim/MeshPrimitive.hx	/^		var b = bufferCache.get(hxsl.Globals.allocID(name));$/;"	v
b	heaps/h3d/prim/Polygon.hx	/^			var b = n.cross(t);$/;"	v
b	heaps/h3d/prim/Polygon.hx	/^		var b = new h3d.col.Bounds();$/;"	v
b	heaps/h3d/prim/Quads.hx	/^		var b = new UV(1, 1);$/;"	v
b	heaps/h3d/prim/Quads.hx	/^		var b = new h3d.col.Bounds();$/;"	v
b	heaps/h3d/scene/Box.hx	/^		var b = o == null ? new Box(color, bounds.clone(), material.mainPass.depthWrite, null) : cast /;"	v
b	heaps/h3d/scene/Graphics.hx	/^	public var b : Float;$/;"	v
b	heaps/h3d/scene/MeshBatch.hx	/^				var b = new BatchData();$/;"	v
b	heaps/h3d/scene/Skin.hx	/^		var b = new h3d.col.Bounds();$/;"	v
b	heaps/h3d/scene/World.hx	/^				var b = c.buffers.get(g.m.bits);$/;"	v
b	heaps/h3d/scene/World.hx	/^			var b = new h3d.mat.BigTexture(bigTextures.length, bigTextureSize, defaultDiffuseBG);$/;"	v
b	heaps/h3d/scene/World.hx	/^		var b = model.bounds.clone();$/;"	v
b	heaps/h3d/shader/MinMaxShader.hx	/^			var b = texB.get(calculatedUV);$/;"	v
b	heaps/h3d/shader/MinMaxShader.hx	/^			var b = texB.get(dir);$/;"	v
b	heaps/hxd/BitmapData.hx	/^		var b = new BitmapData( -101, -102 );$/;"	v
b	heaps/hxd/BitmapData.hx	/^		var b = new BitmapInnerData();$/;"	v
b	heaps/hxd/BitmapData.hx	/^		var b = new flash.display.BitmapData(w, h);$/;"	v
b	heaps/hxd/BitmapData.hx	/^		var b = switch( blendMode ) {$/;"	v
b	heaps/hxd/File.hx	/^				var b : BrowseSelect = {$/;"	v
b	heaps/hxd/File.hx	/^			var b : BrowseSelect = {$/;"	v
b	heaps/hxd/FloatBuffer.hx	/^	var b : InnerData;$/;"	v
b	heaps/hxd/IndexBuffer.hx	/^	var b : InnerData;$/;"	v
b	heaps/hxd/Math.hx	/^		var b = Std.int(b1 * (1 - k) + b2 * k);$/;"	v
b	heaps/hxd/Pixels.hx	/^				var b = bytes.getInt32(p2);$/;"	v
b	heaps/hxd/Pixels.hx	/^				var b = bytes[p+3];$/;"	v
b	heaps/hxd/Pixels.hx	/^				var b = bytes[p];$/;"	v
b	heaps/hxd/earcut/Earcut.hx	/^			var b = a.next.next;$/;"	v
b	heaps/hxd/earcut/Earcut.hx	/^			var b = splitPolygon(root, hole);$/;"	v
b	heaps/hxd/fmt/blend/Data.hx	/^			var b = new Block();$/;"	v
b	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var b = bones[i];$/;"	v
b	heaps/hxd/fmt/grd/Reader.hx	/^		var b = prev.opacity - (m * prev.location);$/;"	v
b	heaps/hxd/fmt/hmd/Library.hx	/^			var b = j.offsets;$/;"	v
b	heaps/hxd/fmt/hmd/Library.hx	/^		var b = haxe.io.Bytes.alloc(entry.size - header.dataPosition);$/;"	v
b	heaps/hxd/fmt/hmd/Library.hx	/^		var b = new h3d.anim.BufferAnimation(a.name, a.frames, a.sampling);$/;"	v
b	heaps/hxd/fmt/hmd/Reader.hx	/^		var b = i.readByte();$/;"	v
b	heaps/hxd/fmt/hmd/Reader.hx	/^		var b = new h3d.col.Bounds();$/;"	v
b	heaps/hxd/fmt/pak/Build.hx	/^		var b = new Build();$/;"	v
b	heaps/hxd/fmt/spine/Library.hx	/^				var b = new Bone();$/;"	v
b	heaps/hxd/fmt/tiff/Reader.hx	/^			var b = new StringBuf();$/;"	v
b	heaps/hxd/fmt/tiff/Reader.hx	/^			var b = new haxe.io.BytesBuffer();$/;"	v
b	heaps/hxd/fs/FileInput.hx	/^		var b = cache.get(cachePos++);$/;"	v
b	heaps/hxd/impl/Air3File.hx	/^		var b = fs.readUnsignedByte();$/;"	v
b	heaps/hxd/impl/Allocator.hx	/^		var b = allocBuffer(nvert, stride, flags);$/;"	v
b	heaps/hxd/impl/CacheAllocator.hx	/^			var b = c.get();$/;"	v
b	heaps/hxd/impl/CacheAllocator.hx	/^		var b = available.pop();$/;"	v
b	heaps/hxd/res/FontBuilder.hx	/^			var b = flash.Memory.getByte(p+3);$/;"	v
b	heaps/hxd/res/NanoJpeg.hx	/^					var b = njClip((y + 454 * cb + 128) >> 8);$/;"	v
b	heaps/hxd/snd/Manager.hx	/^				var b = s.buffers[s.buffers.length - 1];$/;"	v
b	heaps/hxd/snd/Manager.hx	/^				var b = soundBufferMap.get(k);$/;"	v
b	heaps/hxd/snd/Manager.hx	/^				var b = unqueueBuffer(s);$/;"	v
b	heaps/hxd/snd/Manager.hx	/^			var b = soundBufferMap.get(k);$/;"	v
b	heaps/hxd/snd/Manager.hx	/^		var b : Buffer = null;$/;"	v
b	heaps/hxd/snd/Manager.hx	/^		var b = freeStreamBuffers.shift();$/;"	v
b	heaps/hxd/snd/Manager.hx	/^		var b = s.buffers.shift();$/;"	v
b	heaps/hxd/snd/Manager.hx	/^		var b = soundBufferMap.get(key);$/;"	v
b	heaps/hxd/snd/Mp3Data.hx	/^		var b = out.getData();$/;"	v
b	heaps/hxd/snd/OggData.hx	/^		var b = 0, f = 0, s = 0, c = 0;$/;"	v
b	heaps/hxd/snd/openal/Emulator.hx	/^			var b = Buffer.ofInt(buffers.getInt32(i * 4));$/;"	v
b	heaps/hxd/snd/openal/Emulator.hx	/^			var b = Buffer.ofInt(value);$/;"	v
b	heaps/hxd/snd/webaudio/Driver.hx	/^			var b = source.buffers[i];$/;"	v
b	heaps/hxd/snd/webaudio/Driver.hx	/^		var b = new BufferHandle();$/;"	v
b	heaps/hxsl/AgalOptim.hx	/^				var b = t.live[codePos];$/;"	v
b	heaps/hxsl/AgalOptim.hx	/^			var b = s.getIndex();$/;"	v
b	heaps/hxsl/AgalOptim.hx	/^		var b = 0;$/;"	v
b	heaps/hxsl/AgalOut.hx	/^					var b = offset(r2, i);$/;"	v
b	heaps/hxsl/CacheFile.hx	/^		var b = super.createBatchShader(rt, shaders);$/;"	v
b	heaps/hxsl/Serializer.hx	/^		var b = input.readByte();$/;"	v
b	heaps/samples/Bounds.hx	/^			var b = b.getBounds();$/;"	v
b	heaps/samples/Bounds.hx	/^			var b = boxes[i].getBounds(prev);$/;"	v
b	heaps/samples/Bounds.hx	/^			var b = boxes[i];$/;"	v
b	heaps/samples/Bounds.hx	/^			var b = new h2d.Bitmap(h2d.Tile.fromColor(c, size, size, 0.5).sub(0, 0, size, size, -Std.rand/;"	v
b	heaps/samples/GraphicsDraw.hx	/^		var b = new h2d.Bitmap(h2d.Tile.fromTexture(texture), s2d);$/;"	v
b	heaps/samples/GraphicsDraw.hx	/^		var b = new h2d.Bitmap(tile.sub(18, 20, 15, 17), s2d);$/;"	v
b	heaps/samples/GraphicsDraw.hx	/^		var b = new h2d.Bitmap(tile.sub(19, 21, 13, 15), s2d);$/;"	v
b	heaps/samples/Interactive.hx	/^	var b : h2d.Interactive;$/;"	v
b	heaps/samples/Mask.hx	/^			var b = new h2d.Bitmap(hxd.Res.hxlogo.toTile(), obj);$/;"	v
b	heaps/samples/PointLights.hx	/^			var b = new h3d.scene.Mesh(prim, s3d);$/;"	v
b	heaps/samples/SampleApp.hx	/^		var b = new h2d.Graphics(f);$/;"	v
b0	heaps/h3d/scene/Trail.hx	/^				var b0 = (1 - v) * (1 - v);$/;"	v
b1	heaps/h3d/scene/Trail.hx	/^				var b1 = 2 * v * (1 - v);$/;"	v
b1	heaps/hxd/Math.hx	/^		var b1 = c1 & 0xFF;$/;"	v
b1	heaps/hxd/clipper/Clipper.hx	/^		var b1, b2;$/;"	v
b11	heaps/h3d/Matrix.hx	/^		var b11 = _11 * t11 + _12 * t21 + _13 * t31;$/;"	v
b11	heaps/h3d/Matrix.hx	/^		var b11 = b._11; var b12 = b._12; var b13 = b._13; var b14 = b._14;$/;"	v
b11	heaps/h3d/Matrix.hx	/^		var b11 = b._11; var b12 = b._12; var b13 = b._13;$/;"	v
b12	heaps/h3d/Matrix.hx	/^		var b12 = _11 * t12 + _12 * t22 + _13 * t32;$/;"	v
b13	heaps/h3d/Matrix.hx	/^		var b13 = _11 * t13 + _12 * t23 + _13 * t33;$/;"	v
b2	heaps/h3d/mat/BigTexture.hx	/^		var b2 = findBest(q.bl, w, h);$/;"	v
b2	heaps/h3d/mat/BigTexture.hx	/^		var b2 = findBest(q.br, w, h);$/;"	v
b2	heaps/h3d/mat/BigTexture.hx	/^		var b2 = findBest(q.tl, w, h);$/;"	v
b2	heaps/h3d/scene/Trail.hx	/^				var b2 = v * v;$/;"	v
b2	heaps/hxd/Math.hx	/^		var b2 = c2 & 0xFF;$/;"	v
b2	heaps/hxsl/AgalOptim.hx	/^			var b2 = r(b, false);$/;"	v
b21	heaps/h3d/Matrix.hx	/^		var b21 = _21 * t11 + _22 * t21 + _23 * t31;$/;"	v
b21	heaps/h3d/Matrix.hx	/^		var b21 = b._21; var b22 = b._22; var b23 = b._23; var b24 = b._24;$/;"	v
b21	heaps/h3d/Matrix.hx	/^		var b21 = b._21; var b22 = b._22; var b23 = b._23;$/;"	v
b22	heaps/h3d/Matrix.hx	/^		var b22 = _21 * t12 + _22 * t22 + _23 * t32;$/;"	v
b23	heaps/h3d/Matrix.hx	/^		var b23 = _21 * t13 + _22 * t23 + _23 * t33;$/;"	v
b2f	heaps/hxd/Math.hx	/^	public static inline function b2f( v:Int ) :Float {$/;"	f
b31	heaps/h3d/Matrix.hx	/^		var b31 = _31 * t11 + _32 * t21 + _33 * t31;$/;"	v
b31	heaps/h3d/Matrix.hx	/^		var b31 = b._31; var b32 = b._32; var b33 = b._33; var b34 = b._34;$/;"	v
b31	heaps/h3d/Matrix.hx	/^		var b31 = b._31; var b32 = b._32; var b33 = b._33;$/;"	v
b32	heaps/h3d/Matrix.hx	/^		var b32 = _31 * t12 + _32 * t22 + _33 * t32;$/;"	v
b33	heaps/h3d/Matrix.hx	/^		var b33 = _31 * t13 + _32 * t23 + _33 * t33;$/;"	v
b41	heaps/h3d/Matrix.hx	/^		var b41 = b._41; var b42 = b._42; var b43 = b._43; var b44 = b._44;$/;"	v
b41	heaps/h3d/Matrix.hx	/^		var b41 = b._41; var b42 = b._42; var b43 = b._43;$/;"	v
b64	heaps/h3d/impl/DirectXDriver.hx	/^						var b64 = haxe.crypto.Base64.encode(cacheFileData.get(key));$/;"	v
bMask	heaps/hxd/res/Image.hx	/^			var bMask = f.readInt32();$/;"	v
bPt1	heaps/hxd/clipper/Clipper.hx	/^		var bPt1 = outRec1.bottomPt;$/;"	v
bPt2	heaps/hxd/clipper/Clipper.hx	/^		var bPt2 = outRec2.bottomPt;$/;"	v
ba	heaps/h2d/col/Matrix.hx	/^		var ba = b.a, bb = b.b, bc = b.c, bd = b.d, bx = b.x, by = b.y;$/;"	v
back	heaps/hxd/snd/NativeChannel.hx	/^	var back : js.html.audio.AudioBuffer;$/;"	v
back	heaps/samples/HtmlText.hx	/^	public var back: Graphics;$/;"	v
back	heaps/samples/Text.hx	/^	public var back: Graphics;$/;"	v
backBufferFormat	heaps/h3d/impl/DirectXDriver.hx	/^	public var backBufferFormat : dx.Format = R8G8B8A8_UNORM;$/;"	v
backToFront	heaps/h3d/scene/Renderer.hx	/^	var backToFront : h3d.pass.PassList -> Void;$/;"	v
backed_image	heaps/hxd/fmt/kframes/Data.hx	/^	@:optional var backed_image : String;$/;"	v
background	heaps/h2d/Flow.hx	/^				var background = new h2d.ScaleGrid(t, borderLeft, borderTop, borderRight, borderBottom);$/;"	v
background	heaps/h2d/Flow.hx	/^	var background : h2d.ScaleGrid;$/;"	v
backgroundAlpha	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var backgroundAlpha : Float = 1;$/;"	v
backgroundColor	heaps/h2d/Interactive.hx	/^	public var backgroundColor : Null<Int>;$/;"	v
backgroundColor	heaps/h2d/TextInput.hx	/^	public var backgroundColor(get, set) : Null<Int>;$/;"	v
backgroundColor	heaps/h3d/Engine.hx	/^	public var backgroundColor : Null<Int> = 0xFF000000;$/;"	v
backgroundId	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var backgroundId : Bool;$/;"	v
backgroundTile	heaps/h2d/Flow.hx	/^	public var backgroundTile(default, set) : h2d.Tile;$/;"	v
backgroundTilePosX	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var backgroundTilePosX : Null<Int>;$/;"	v
backgroundTilePosY	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var backgroundTilePosY : Null<Int>;$/;"	v
backward	heaps/h3d/Camera.hx	/^	public function backward(speed = 1.) {$/;"	f
barycentric	heaps/h2d/col/Triangle.hx	/^	public inline function barycentric( p : Point ) {$/;"	f
base	heaps/h3d/scene/World.hx	/^					var base = g.startIndex + i*3;$/;"	v
base	heaps/h3d/scene/World.hx	/^					var base = g.startIndex + i2 * 3;$/;"	v
base	heaps/hxd/res/TiledMap.hx	/^		var base = new haxe.crypto.BaseCode(haxe.io.Bytes.ofString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefgh/;"	v
baseBounds	heaps/h3d/prim/Instanced.hx	/^	var baseBounds : h3d.col.Bounds;$/;"	v
baseDir	heaps/hxd/fmt/pak/Build.hx	/^				var baseDir = b.outPrefix == null ? pakFile.substr(0,-4) : b.outPrefix;$/;"	v
baseDir	heaps/hxd/fs/FileConverter.hx	/^	var baseDir : String;$/;"	v
baseDir	heaps/hxd/fs/LocalFileSystem.hx	/^		var baseDir = new haxe.io.Path(path).dir;$/;"	v
baseDir	heaps/hxd/fs/LocalFileSystem.hx	/^	public var baseDir(default,null) : String;$/;"	v
baseFlipY	heaps/h2d/RenderContext.hx	/^	var baseFlipY : Float;$/;"	v
baseLS	heaps/samples/Lights.hx	/^		var baseLS = s3d.lightSystem;$/;"	v
baseLine	heaps/h2d/Font.hx	/^	public var baseLine(default, null) : Float;$/;"	v
baseLine	heaps/h2d/HtmlText.hx	/^	var baseLine : Float;$/;"	v
baseName	heaps/hxd/fmt/blend/Data.hx	/^	function baseName(s:String):String {$/;"	f
basePath	heaps/hxd/File.hx	/^		var basePath = f.clone();$/;"	v
basePath	heaps/hxd/res/Atlas.hx	/^		var basePath = basePath.join("\/");$/;"	v
basePath	heaps/hxd/res/Atlas.hx	/^		var basePath = entry.path.split("\/");$/;"	v
baseSample	heaps/hxd/snd/openal/Emulator.hx	/^			var baseSample = 0;$/;"	v
baseShader	heaps/h2d/RenderContext.hx	/^	var baseShader : h3d.shader.Base2d;$/;"	v
baseShaderList	heaps/h2d/RenderContext.hx	/^	var baseShaderList : hxsl.ShaderList;$/;"	v
baseType	heaps/hxsl/Checker.hx	/^		var baseType = [TFloat, TBool, TInt];$/;"	v
baseUV	heaps/h3d/shader/pbr/Distortion.hx	/^			var baseUV = calculatedUV;$/;"	v
baseVertex	heaps/h3d/scene/MeshBatch.hx	/^	public var baseVertex : Int;$/;"	v
baseY	heaps/h2d/CdbLevel.hx	/^					var baseY = o.y + Std.int(o.obj.tile.height);$/;"	v
basin	heaps/hxd/poly2tri/SweepContext.hx	/^	public var basin:Basin;$/;"	v
batch	heaps/h2d/Particles.hx	/^	var batch : SpriteBatch;$/;"	v
batch	heaps/h2d/SpriteBatch.hx	/^	public var batch(default, null) : SpriteBatch;$/;"	v
batch	heaps/hxsl/CacheFile.hx	/^				var batch = null;$/;"	v
batch	heaps/samples/MeshBatch.hx	/^	var batch : h3d.scene.MeshBatch;$/;"	v
batchMap	heaps/hxsl/CacheFile.hx	/^		var batchMap = new Map();$/;"	v
batchMode	heaps/hxsl/CacheFile.hx	/^				var batchMode = false;$/;"	v
batchMode	heaps/hxsl/Linker.hx	/^	var batchMode : Bool;$/;"	v
batchMode	heaps/hxsl/RuntimeShader.hx	/^	public var batchMode : Bool;$/;"	v
batchShaders	heaps/hxsl/Cache.hx	/^	var batchShaders : Map<RuntimeShader, { shader : SharedShader, params : RuntimeShader.AllocPara/;"	v
batchers	heaps/hxsl/CacheFile.hx	/^	var batchers : Array<{ shader : SharedShader, rt : RuntimeShader }> = [];$/;"	v
bb	heaps/h2d/col/Matrix.hx	/^		var bb = Math.tan(sy);$/;"	v
bbuf	heaps/h3d/pass/Border.hx	/^		var bbuf = new hxd.FloatBuffer();$/;"	v
bbxFound	heaps/hxd/res/BDFFont.hx	/^		var bbxFound : Bool = false;$/;"	v
bbxHeight	heaps/hxd/res/BDFFont.hx	/^		var bbxHeight : Int = 0;$/;"	v
bbxWidth	heaps/hxd/res/BDFFont.hx	/^		var bbxWidth : Int = 0;$/;"	v
bbxXOffset	heaps/hxd/res/BDFFont.hx	/^		var bbxXOffset : Int = 0;$/;"	v
bbxYOffset	heaps/hxd/res/BDFFont.hx	/^		var bbxYOffset : Int = 0;$/;"	v
bc	heaps/h2d/col/Matrix.hx	/^		var bc = Math.tan(sx);$/;"	v
bclone	heaps/samples/GraphicsDraw.hx	/^	var bclone : h2d.Bitmap;$/;"	v
bd	heaps/hxd/fmt/spine/Library.hx	/^				var bd = j.bones.get(boneName);$/;"	v
bdata	heaps/hxd/snd/openal/Emulator.hx	/^			var bdata = buffer.alloc(size >> 1);$/;"	v
bdata	heaps/hxd/snd/openal/Emulator.hx	/^			var bdata = buffer.alloc(size >> 2);$/;"	v
bdata	heaps/hxd/snd/openal/Emulator.hx	/^			var bdata = buffer.alloc(size);$/;"	v
bdata	heaps/hxd/snd/openal/Emulator.hx	/^			var bdata = buffer.alloc(size*2);$/;"	v
bds	heaps/h2d/Dropdown.hx	/^				var bds = item.getBounds();$/;"	v
bds	heaps/h2d/Dropdown.hx	/^				var bds = this.getBounds();$/;"	v
bdx	heaps/hxd/poly2tri/Utils.hx	/^		var bdx    = pb.x - pd.x;$/;"	v
bdx	heaps/hxd/poly2tri/Utils.hx	/^		var bdx = pb.x - pdx;$/;"	v
bdxady	heaps/hxd/poly2tri/Utils.hx	/^		var bdxady = bdx * ady;$/;"	v
bdxcdy	heaps/hxd/poly2tri/Utils.hx	/^		var bdxcdy = bdx * cdy;$/;"	v
bdy	heaps/hxd/poly2tri/Utils.hx	/^		var bdy    = pb.y - pd.y;$/;"	v
bdy	heaps/hxd/poly2tri/Utils.hx	/^		var bdy = pb.y - pdy;$/;"	v
beachline	heaps/h2d/col/Voronoi.hx	/^	var beachline : RBTree<Beachsection>;$/;"	v
beachsection	heaps/h2d/col/Voronoi.hx	/^			var beachsection = this.beachline.getFirst(this.beachline.root);$/;"	v
beachsection	heaps/h2d/col/Voronoi.hx	/^		var beachsection = this.beachsectionJunkyard.pop();$/;"	v
beachsectionJunkyard	heaps/h2d/col/Voronoi.hx	/^	var beachsectionJunkyard : Array<Beachsection>;$/;"	v
beacon	heaps/samples/Interactive.hx	/^		var beacon = null;$/;"	v
beeper	heaps/samples/Sound.hx	/^	var beeper:Bool = true;$/;"	v
before	heaps/h3d/shader/Parallax.hx	/^				var before = heightMap.get(prevUV) - curLayerDepth + layerDepth;$/;"	v
beforeChange	heaps/h2d/TextInput.hx	/^	function beforeChange() {$/;"	f
beforeDraw	heaps/h2d/RenderContext.hx	/^	public function beforeDraw() {$/;"	f
begin	heaps/h2d/RenderContext.hx	/^	public function begin() {$/;"	f
begin	heaps/h3d/Engine.hx	/^	public function begin() {$/;"	f
begin	heaps/h3d/impl/Benchmark.hx	/^	public function begin() {$/;"	f
begin	heaps/h3d/impl/DirectXDriver.hx	/^	override function begin(frame:Int) {$/;"	f
begin	heaps/h3d/impl/Driver.hx	/^	public function begin( frame : Int ) {$/;"	f
begin	heaps/h3d/impl/GlDriver.hx	/^	override function begin(frame) {$/;"	f
begin	heaps/h3d/impl/LogDriver.hx	/^	override function begin( frame : Int ) {$/;"	f
begin	heaps/h3d/impl/RendererFX.hx	/^	public function begin( r : h3d.scene.Renderer, step : Step ) : Void;$/;"	f
begin	heaps/h3d/impl/Stage3dDriver.hx	/^	override function begin( frame : Int ) {$/;"	f
begin	heaps/h3d/impl/TextureCache.hx	/^	public function begin() {$/;"	f
begin	heaps/h3d/impl/VulkanDriver.hx	/^	override function begin(frame:Int) {$/;"	f
begin	heaps/h3d/prim/BigPrimitive.hx	/^	public function begin(vcount,icount) {$/;"	f
begin	heaps/h3d/scene/MeshBatch.hx	/^	public function begin( emitCountTip = -1, resizeDown = false ) {$/;"	f
begin	heaps/h3d/scene/pbr/Renderer.hx	/^	function begin( step : h3d.impl.RendererFX.Step ) {$/;"	f
beginDraw	heaps/h2d/RenderContext.hx	/^	function beginDraw(	obj : h2d.Drawable, texture : h3d.mat.Texture, isRelative : Bool, hasUVPos /;"	f
beginDrawBatch	heaps/h2d/RenderContext.hx	/^	public function beginDrawBatch( obj : h2d.Drawable, texture : h3d.mat.Texture ) {$/;"	f
beginDrawBatchState	heaps/h2d/RenderContext.hx	/^	public function beginDrawBatchState( obj : h2d.Drawable ) {$/;"	f
beginDrawObject	heaps/h2d/RenderContext.hx	/^	public function beginDrawObject( obj : h2d.Drawable, texture : h3d.mat.Texture ) {$/;"	f
beginFill	heaps/h2d/Graphics.hx	/^	public function beginFill( color : Int = 0, alpha = 1.  ) {$/;"	f
beginPbr	heaps/h3d/scene/pbr/Renderer.hx	/^	function beginPbr() {$/;"	f
beginQuery	heaps/h3d/impl/Driver.hx	/^	public function beginQuery( q : Query ) {$/;"	f
beginQuery	heaps/h3d/impl/GlDriver.hx	/^	override function beginQuery( q : Query ) {$/;"	f
beginTileFill	heaps/h2d/Graphics.hx	/^	public function beginTileFill( ?dx : Float, ?dy : Float, ?scaleX : Float, ?scaleY : Float, ?til/;"	f
bench	heaps/samples/Sao.hx	/^	public var bench = new h3d.impl.Benchmark();$/;"	v
best	heaps/h3d/col/Collider.hx	/^		var best = -1.;$/;"	v
best	heaps/h3d/col/Polygon.hx	/^		var best = -1.;$/;"	v
best	heaps/h3d/col/PolygonBuffer.hx	/^		var best = -1.;$/;"	v
best	heaps/hxsl/Cache.hx	/^				var best = -1;$/;"	v
best	heaps/hxsl/Flatten.hx	/^			var best : Alloc = null;$/;"	v
bestMatch	heaps/h3d/scene/Interactive.hx	/^	public var bestMatch : Bool;$/;"	v
bestMatch	heaps/hxsl/Checker.hx	/^			var bestMatch = null, mcount = -1;$/;"	v
beta	heaps/h2d/col/Polynomial.hx	/^		var beta = new Array();$/;"	v
beta	heaps/h2d/col/Polynomial.hx	/^		var beta = qr.solve(y);$/;"	v
bevel	heaps/h2d/Graphics.hx	/^	public var bevel = 0.25; \/\/0 = not beveled, 1 = always beveled$/;"	v
bezier	heaps/h2d/KeyFrames.hx	/^			inline function bezier(c1:Float, c2:Float, t:Float) {$/;"	f
bg	heaps/h2d/CheckBox.hx	/^		var bg = new h2d.Bitmap(t, box);$/;"	v
bg	heaps/h2d/Console.hx	/^	var bg : h2d.Bitmap;$/;"	v
bg	heaps/h2d/domkit/BaseComponents.hx	/^		var bg = @:privateAccess o.background;$/;"	v
bg	heaps/hxd/fmt/pak/Loader.hx	/^	var bg : h2d.Graphics;$/;"	v
bg	heaps/samples/Pad.hx	/^			var bg = but.bg;$/;"	v
bg	heaps/samples/Pad.hx	/^			var bg = new h2d.Bitmap(h2d.Tile.fromColor(0xFFFFFF, hxd.Math.ceil(t.textWidth), 8), t);$/;"	v
bg	heaps/samples/Pad.hx	/^	var bg : h2d.Graphics;$/;"	v
bg	heaps/samples/Pbr.hx	/^		var bg = new h3d.scene.Mesh(sp, s3d);$/;"	v
bg	heaps/samples/ScaleMode2D.hx	/^		var bg = new h2d.Bitmap(h2d.Tile.fromColor(0x333333), s2d);$/;"	v
bgColor	heaps/h3d/mat/BigTexture.hx	/^	var bgColor : Int;$/;"	v
bgWorker	heaps/hxd/Worker.hx	/^			var bgWorker = flash.system.WorkerDomain.current.createWorker(flash.Lib.current.loaderInfo.by/;"	v
bias	heaps/h3d/pass/Shadows.hx	/^	public var bias = 0.01;$/;"	v
bid	heaps/h3d/col/SkinCollider.hx	/^				var bid = obj.skinData.vertexJoints[j++];$/;"	v
bid	heaps/h3d/pass/ShaderManager.hx	/^			var bid = 0;$/;"	v
bid	heaps/h3d/scene/Skin.hx	/^			var bid = j.bindIndex;$/;"	v
bid	heaps/samples/Pad.hx	/^			var bid = Reflect.field(conf, k);$/;"	v
bidx	heaps/h3d/anim/Skin.hx	/^					var bidx = vid * bonesPerVertex + b;$/;"	v
bigTextureSize	heaps/h3d/scene/World.hx	/^	var bigTextureSize = 2048;$/;"	v
bigTextures	heaps/h3d/scene/World.hx	/^	var bigTextures : Array<{ diffuse : h3d.mat.BigTexture, spec : h3d.mat.BigTexture, normal : h3d/;"	v
bin	heaps/h3d/impl/DirectXDriver.hx	/^		var bin = code.indexOf("\/\/BIN=");$/;"	v
binary	heaps/hxd/fmt/fbx/Parser.hx	/^	var binary : Bool;$/;"	v
binaryPayload	heaps/hxsl/CacheFileBuilder.hx	/^	function binaryPayload( data : haxe.io.Bytes ) {$/;"	f
bind	heaps/h2d/filter/AbstractMask.hx	/^	override function bind(s:Object) {$/;"	f
bind	heaps/h2d/filter/Filter.hx	/^	public function bind( s : Object ) {$/;"	f
bind	heaps/h2d/filter/Group.hx	/^	override function bind(s:Object) {$/;"	f
bind	heaps/h3d/anim/Animation.hx	/^	public function bind( base : h3d.scene.Object ) {$/;"	f
bind	heaps/h3d/anim/SmoothTransition.hx	/^	override function bind( base ) {$/;"	f
bind	heaps/h3d/anim/Transition.hx	/^	override function bind(base) {$/;"	f
bind	heaps/h3d/impl/GlDriver.hx	/^			var bind = getBindType(tex);$/;"	v
bind	heaps/h3d/impl/GlDriver.hx	/^		var bind = getBindType(t);$/;"	v
bind	heaps/hxd/fmt/hmd/Data.hx	/^	public var bind : Int;$/;"	v
bind	heaps/hxd/net/Socket.hx	/^	public function bind( host : String, port : Int, onConnect : Socket -> Void, listenCount = 5 ) /;"	f
bind	heaps/hxd/snd/Driver.hx	/^	public function bind    (e : T, source : SourceHandle) : Void {};$/;"	f
bind	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function bind(e : Reverb, s : SourceHandle) : Void {$/;"	f
bind	heaps/hxd/snd/openal/SpatializationDriver.hx	/^	override function bind(e : Spatialization, s : SourceHandle) : Void {$/;"	f
bind	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	override public function bind(e:LowPass, source: SourceHandle) : Void {$/;"	f
bind	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	override public function bind(e : Spatialization, source: SourceHandle) : Void {$/;"	f
bindCount	heaps/h2d/filter/AbstractMask.hx	/^	var bindCount : Int = 0;$/;"	v
bindEffect	heaps/hxd/snd/Manager.hx	/^	function bindEffect(c : Channel, s : Source, e : Effect) {$/;"	f
bindEvents	heaps/hxd/net/Socket.hx	/^	function bindEvents() {$/;"	f
bindIndex	heaps/h3d/anim/Skin.hx	/^	public var bindIndex : Int;$/;"	v
bindedEffects	heaps/hxd/snd/ChannelBase.hx	/^	public var bindedEffects  : Array<Effect> = [];$/;"	v
binop	heaps/hxsl/AgalOptim.hx	/^		inline function binop(_, a, b, _) {$/;"	f
binop	heaps/hxsl/AgalOptim.hx	/^		inline function binop(d, a, b, op) {$/;"	f
binop	heaps/hxsl/AgalOut.hx	/^		inline function binop(bop) {$/;"	f
binop	heaps/hxsl/AgalOut.hx	/^	function binop( bop, et : Type, e1 : TExpr, e2 : TExpr ) {$/;"	f
bit	heaps/hxsl/Cache.hx	/^					var bit = 3 - k;$/;"	v
bitCount	heaps/hxd/Math.hx	/^	public inline static function bitCount(v:Int) {$/;"	f
bitmap	Player.hx	/^	var bitmap:h2d.Bitmap;$/;"	v
bitmap	heaps/samples/Lights.hx	/^	var bitmap : h2d.Bitmap;$/;"	v
bitmapData	heaps/hxd/res/BDFFont.hx	/^		var bitmapData : hxd.BitmapData = new hxd.BitmapData( bitmapWidth, bitmapWidth );$/;"	v
bitmapWidth	heaps/hxd/res/BDFFont.hx	/^		var bitmapWidth : Int = Math.ceil( Math.sqrt( volume * (1 + BitmapPad) ) );$/;"	v
bits	heaps/h3d/impl/DirectXDriver.hx	/^				var bits = @:privateAccess t.bits;$/;"	v
bits	heaps/h3d/impl/DirectXDriver.hx	/^		var bits = @:privateAccess pass.bits;$/;"	v
bits	heaps/h3d/impl/DirectXDriver.hx	/^		var bits = is32 ? 2 : 1;$/;"	v
bits	heaps/h3d/impl/GlDriver.hx	/^				var bits = mip | (filter << 3) | (wrap << 6);$/;"	v
bits	heaps/h3d/impl/GlDriver.hx	/^		var bits = 0;$/;"	v
bits	heaps/h3d/impl/GlDriver.hx	/^		var bits = @:privateAccess pass.bits;$/;"	v
bits	heaps/h3d/impl/GlDriver.hx	/^		var bits = i.is32 ? 2 : 1;$/;"	v
bits	heaps/h3d/impl/Stage3dDriver.hx	/^			var bits = curShader.bufferFormat;$/;"	v
bits	heaps/h3d/impl/Stage3dDriver.hx	/^		var bits = curShader.bufferFormat;$/;"	v
bits	heaps/h3d/mat/Pass.hx	/^	var bits : Int = 0;$/;"	v
bits	heaps/h3d/mat/Texture.hx	/^	var bits : Int;$/;"	v
bits	heaps/h3d/scene/World.hx	/^	public var bits : Int;$/;"	v
bits	heaps/hxd/impl/BitsBuilder.hx	/^			var bits = 0;$/;"	v
bits	heaps/hxd/res/BDFFont.hx	/^	public var bits : Array<Int>;$/;"	v
bits	heaps/hxd/res/NanoJpeg.hx	/^		var bits = vlc.get(value<<1);$/;"	v
bits	heaps/hxsl/Ast.hx	/^						var bits = 0;$/;"	v
bits	heaps/hxsl/CacheFile.hx	/^				var bits = (s.constBits >> c.pos) & ((1 << c.bits) - 1);$/;"	v
bits	heaps/hxsl/Macros.hx	/^				var bits = v.getConstBits();$/;"	v
bits	heaps/hxsl/RuntimeShader.hx	/^	public var bits : Int;$/;"	v
bits	heaps/hxsl/Serializer.hx	/^			var bits = input.readByte();$/;"	v
bits	heaps/hxsl/Serializer.hx	/^			var bits = input.readUInt16();$/;"	v
bits	heaps/hxsl/Serializer.hx	/^			var bits = regs.length - 1, k = 2;$/;"	v
bits	heaps/hxsl/SharedShader.hx	/^			var bits = v.getConstBits();$/;"	v
bits	heaps/hxsl/SharedShader.hx	/^	public var bits : Int;$/;"	v
bitsMap	heaps/hxd/impl/BitsBuilder.hx	/^		var bitsMap = new Map<String, { field : String, current : Int, fields : Array<haxe.macro.Expr>/;"	v
bitsPerPixel	heaps/hxd/res/BDFFont.hx	/^	var bitsPerPixel : Int = 1;$/;"	v
bl	heaps/h2d/HtmlText.hx	/^								var bl = info.baseLine;$/;"	v
bl	heaps/h3d/mat/BigTexture.hx	/^	public var bl : QuadTree;$/;"	v
blend	heaps/h2d/RenderContext.hx	/^		var blend = currentObj.blendMode;$/;"	v
blend	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var blend : h2d.BlendMode = Alpha;$/;"	v
blend	heaps/h3d/anim/SmoothTarget.hx	/^		var blend = hxd.Math.easeFactor(blend, easing);$/;"	v
blend	heaps/h3d/anim/SmoothTarget.hx	/^	public var blend : Float;$/;"	v
blend	heaps/h3d/impl/DirectXDriver.hx	/^		var blend = blendStates.get(blendBits);$/;"	v
blend	heaps/h3d/mat/Pass.hx	/^	public inline function blend( src, dst ) {$/;"	f
blend	heaps/h3d/mat/PbrMaterial.hx	/^	var blend : PbrBlend;$/;"	v
blend	heaps/h3d/scene/World.hx	/^	public var blend : h3d.mat.BlendMode;$/;"	v
blend	heaps/hxd/fmt/blend/Data.hx	/^					var blend = block.blend;$/;"	v
blend	heaps/hxd/fmt/blend/Data.hx	/^	public var blend:Blend;$/;"	v
blend	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var blend : String;$/;"	v
blendBits	heaps/h3d/impl/DirectXDriver.hx	/^		var blendBits = (bits & (Pass.blendSrc_mask | Pass.blendDst_mask | Pass.blendAlphaSrc_mask | P/;"	v
blendFactor	heaps/h3d/anim/SmoothTransition.hx	/^	public var blendFactor : Float;$/;"	v
blendFactor	heaps/h3d/shader/AnimatedTexture.hx	/^		@private var blendFactor : Float;$/;"	v
blendFactors	heaps/h3d/impl/DirectXDriver.hx	/^	var blendFactors : hl.BytesAccess<hl.F32> = new hl.Bytes(4 * BLEND_FACTORS);$/;"	v
blendMode	heaps/h2d/Object.hx	/^	public var blendMode : BlendMode = Alpha;$/;"	v
blendMode	heaps/h2d/Particles.hx	/^	public var blendMode(default, set) : BlendMode = Alpha;$/;"	v
blendMode	heaps/h2d/filter/InnerGlow.hx	/^	public var blendMode : BlendMode = Alpha;$/;"	v
blendMode	heaps/h3d/mat/Material.hx	/^	public var blendMode(default, set) : BlendMode;$/;"	v
blendMode	heaps/h3d/parts/Data.hx	/^	public var blendMode : BlendMode;$/;"	v
blendMode	heaps/hxd/fmt/hmd/Data.hx	/^	public var blendMode : h3d.mat.BlendMode;$/;"	v
blendMode	heaps/hxd/fmt/spine/Data.hx	/^	public var blendMode : h2d.BlendMode;$/;"	v
blendPass	heaps/h2d/filter/InnerGlow.hx	/^	var blendPass = new h3d.pass.ScreenFx<GlowBlendShader>(new GlowBlendShader());$/;"	v
blendStates	heaps/h3d/impl/DirectXDriver.hx	/^	var blendStates : Map<Int,BlendState>;$/;"	v
blended	heaps/h2d/filter/InnerGlow.hx	/^		var blended = ctx.textures.allocTileTarget("innerGlowBlended", t);$/;"	v
blift	heaps/hxd/poly2tri/Utils.hx	/^		var blift = bdx * bdx + bdy * bdy;$/;"	v
blink	heaps/samples/Network.hx	/^	@:rpc function blink( s : Float ) {$/;"	f
blit	heaps/hxd/Pixels.hx	/^	public function blit( x : Int, y : Int, src : hxd.Pixels, srcX : Int, srcY : Int, width : Int, /;"	f
block	heaps/hxd/fmt/blend/Data.hx	/^	public var block:Block;$/;"	v
block	heaps/hxd/res/NanoJpeg.hx	/^	var block : haxe.ds.Vector<Int>;$/;"	v
block	heaps/hxsl/Checker.hx	/^				var block = typeExpr(block, NoValue);$/;"	v
blocks	heaps/hxd/Pixels.hx	/^			var blocks = (width + 3) >> 2;$/;"	v
blocks	heaps/hxd/fmt/blend/Data.hx	/^	public var blocks:Array<Block> = [];$/;"	v
bloom	heaps/h2d/filter/Bloom.hx	/^	var bloom : h3d.pass.ScreenFx<h3d.shader.Bloom>;$/;"	v
blue	heaps/samples/AdjustColor.hx	/^			var blue = (i + 1) >> 2;$/;"	v
blueCutoff	heaps/h2d/col/PixelsCollider.hx	/^	public var blueCutoff : Int;$/;"	v
blur	heaps/h2d/Interactive.hx	/^	public function blur() {$/;"	f
blur	heaps/h3d/pass/Shadows.hx	/^	public var blur : Blur;$/;"	v
blur	heaps/h3d/scene/Interactive.hx	/^	public function blur() {$/;"	f
blur	heaps/hxd/SceneEvents.hx	/^	public function blur() {$/;"	f
blur	heaps/samples/Blur.hx	/^	var blur : h2d.filter.Blur;$/;"	v
blurred	heaps/h2d/filter/Bloom.hx	/^		var blurred = super.draw(ctx, t);$/;"	v
bmp	heaps/h2d/KeyFrames.hx	/^				var bmp : h2d.Bitmap = cast l.spr;$/;"	v
bmp	heaps/h2d/KeyFrames.hx	/^				var bmp = new h2d.Bitmap(tiles[0], this);$/;"	v
bmp	heaps/h2d/KeyFrames.hx	/^			var bmp = hxd.impl.Api.downcast(l.spr, h2d.Bitmap);$/;"	v
bmp	heaps/h2d/Tile.hx	/^			var bmp = bmp.toNative();$/;"	v
bmp	heaps/h3d/impl/Stage3dDriver.hx	/^		var bmp = new flash.display.BitmapData(pixels.width, pixels.height, true, 0);$/;"	v
bmp	heaps/h3d/mat/BigTexture.hx	/^					var bmp = bmp.toBitmap();$/;"	v
bmp	heaps/h3d/mat/TextureChannels.hx	/^				var bmp = bmp.toBitmap();$/;"	v
bmp	heaps/hxd/BitmapData.hx	/^	var bmp : flash.display.BitmapData;$/;"	v
bmp	heaps/hxd/fs/LoadedBitmap.hx	/^		var bmp = new hxd.BitmapData(this.width, this.height);$/;"	v
bmp	heaps/hxd/fs/LocalFileSystem.hx	/^		var bmp = new hxd.res.Image(this).toBitmap();$/;"	v
bmp	heaps/hxd/res/DefaultFont.hx	/^			var bmp = new BitmapFont(DESC.entry);$/;"	v
bmp	heaps/hxd/res/FontBuilder.hx	/^		var bmp = js.Browser.document.createCanvasElement();$/;"	v
bmp	heaps/hxd/res/Image.hx	/^				var bmp = bmp.toBitmap();$/;"	v
bmp	heaps/hxd/res/Image.hx	/^		var bmp = new hxd.BitmapData(inf.width, inf.height);$/;"	v
bmp	heaps/samples/AdjustColor.hx	/^			var bmp = new h2d.Bitmap(h2d.Tile.fromBitmap(gradient), s2d);$/;"	v
bmp	heaps/samples/Base2D.hx	/^			var bmp = new h2d.Bitmap(tile, obj);$/;"	v
bmp	heaps/samples/Blur.hx	/^	var bmp : h2d.Bitmap;$/;"	v
bmp	heaps/samples/CollideCheck.hx	/^		var bmp = hxd.Pixels.alloc(s2d.width, s2d.height, BGRA);$/;"	v
bmp	heaps/samples/CubeTexture.hx	/^		var bmp = hxd.Pixels.alloc(skyTexture.width, skyTexture.height, h3d.mat.Texture.nativeFormat);$/;"	v
bmp	heaps/samples/Cursor.hx	/^		var bmp = new hxd.BitmapData(32, 32);$/;"	v
bmp	heaps/samples/Filters.hx	/^	var bmp : h2d.Bitmap;$/;"	v
bmp	heaps/samples/GraphicsDraw.hx	/^		var bmp = new hxd.BitmapData(256, 256);$/;"	v
bmp	heaps/samples/GraphicsDraw.hx	/^		var bmp = new hxd.BitmapData(64, 64);$/;"	v
bmp	heaps/samples/Network.hx	/^	var bmp : h2d.Graphics;$/;"	v
bmp	heaps/samples/ShaderAdvanced.hx	/^		var bmp = new h2d.Bitmap(h2d.Tile.fromColor(0xFF0000,128,128),s2d);$/;"	v
bmp	heaps/samples/ShaderAdvanced.hx	/^		var bmp = new h2d.Bitmap(h2d.Tile.fromColor(0xFFFFFF,128,128), s2d);$/;"	v
bmp2	heaps/h2d/Tile.hx	/^			var bmp2 = new flash.display.BitmapData(w, h, true, 0);$/;"	v
bmp2	heaps/samples/Cursor.hx	/^			var bmp2 = new hxd.BitmapData(32, 32);$/;"	v
bmps	heaps/samples/AdjustColor.hx	/^	var bmps : Array<h2d.Bitmap>;$/;"	v
bobj	heaps/h3d/col/Collider.hx	/^		var bobj = b.makeDebugObj();$/;"	v
body	heaps/hxd/fmt/spine/JsonData.hx	/^	var body : String;$/;"	v
body	heaps/hxd/res/FontBuilder.hx	/^		var body = js.Browser.document.body;$/;"	v
body	heaps/hxsl/Linker.hx	/^	public var body : TExpr;$/;"	v
bone	heaps/hxd/fmt/spine/Data.hx	/^	public var bone : Bone;$/;"	v
bone	heaps/hxd/fmt/spine/Library.hx	/^						var bone = bones[Std.int(vertices[pos++])];$/;"	v
bone	heaps/hxd/fmt/spine/Library.hx	/^				var bone = bonesMap.get(boneName);$/;"	v
bone0	heaps/hxd/fmt/spine/Data.hx	/^	public var bone0 : Bone;$/;"	v
bone1	heaps/hxd/fmt/spine/Data.hx	/^	public var bone1 : Bone;$/;"	v
bone2	heaps/hxd/fmt/spine/Data.hx	/^	public var bone2 : Bone;$/;"	v
boneCurves	heaps/hxd/fmt/spine/Library.hx	/^			var boneCurves = new Map();$/;"	v
bones	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var bones = [for( d in getChilds(def, "Deformer") ) hobjects.get(getChild(d, "Model").getId()/;"	v
bones	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var bones : DynamicAccess<JBoneAnimation>;$/;"	v
bones	heaps/hxd/fmt/spine/JsonData.hx	/^	var bones : Array<JBone>;$/;"	v
bones	heaps/hxd/fmt/spine/Library.hx	/^	public var bones : Array<Bone>;$/;"	v
bonesMap	heaps/hxd/fmt/spine/Library.hx	/^	public var bonesMap : Map<String,Bone>;$/;"	v
bonesMatrixes	heaps/h3d/shader/SkinBase.hx	/^		@ignore @param var bonesMatrixes : Array<Mat3x4,MaxBones>;$/;"	v
bonesPerVertex	heaps/h3d/anim/Skin.hx	/^	public var bonesPerVertex(default,null) : Int;$/;"	v
bools	heaps/hxd/fmt/fbx/Parser.hx	/^				var bools:Array<Int> = new Array();$/;"	v
bop	heaps/hxsl/Eval.hx	/^			inline function bop(callb:Bool->Bool->Bool,def) {$/;"	f
border	heaps/h3d/pass/DirShadowMap.hx	/^	var border : Border;$/;"	v
border	heaps/h3d/pass/SpotShadowMap.hx	/^	var border : Border;$/;"	v
borderBottom	heaps/h2d/Flow.hx	/^		var borderBottom = #if flow_border borderBottom #else 0 #end;$/;"	v
borderBottom	heaps/h2d/Flow.hx	/^	public var borderBottom(default, set) : Int = 0;$/;"	v
borderBottom	heaps/h2d/ScaleGrid.hx	/^	public var borderBottom(default, set) : Int;$/;"	v
borderHeight	heaps/h2d/CheckBox.hx	/^		var borderHeight = borderTop + borderBottom;$/;"	v
borderHeight	heaps/h2d/Flow.hx	/^	public var borderHeight(never, set) : Int;$/;"	v
borderHeight	heaps/h2d/ScaleGrid.hx	/^	public var borderHeight(never,set) : Int;$/;"	v
borderLeft	heaps/h2d/Flow.hx	/^		var borderLeft = #if flow_border borderLeft #else 0 #end;$/;"	v
borderLeft	heaps/h2d/Flow.hx	/^	public var borderLeft(default, set) : Int = 0;$/;"	v
borderLeft	heaps/h2d/ScaleGrid.hx	/^	public var borderLeft(default, set) : Int;$/;"	v
borderRight	heaps/h2d/Flow.hx	/^		var borderRight = #if flow_border borderRight #else 0 #end;$/;"	v
borderRight	heaps/h2d/Flow.hx	/^	public var borderRight(default, set) : Int = 0;$/;"	v
borderRight	heaps/h2d/ScaleGrid.hx	/^	public var borderRight(default, set) : Int;$/;"	v
borderTop	heaps/h2d/Flow.hx	/^		var borderTop = #if flow_border borderTop #else 0 #end;$/;"	v
borderTop	heaps/h2d/Flow.hx	/^	public var borderTop(default, set) : Int = 0;$/;"	v
borderTop	heaps/h2d/ScaleGrid.hx	/^	public var borderTop(default, set) : Int;$/;"	v
borderWidth	heaps/h2d/CheckBox.hx	/^		var borderWidth = borderLeft + borderRight;$/;"	v
borderWidth	heaps/h2d/Flow.hx	/^	public var borderWidth(never, set) : Int;$/;"	v
borderWidth	heaps/h2d/ScaleGrid.hx	/^	public var borderWidth(never,set) : Int;$/;"	v
bot	heaps/hxd/clipper/Clipper.hx	/^	public var bot(get, set) : IPoint;$/;"	v
botX	heaps/hxd/clipper/Clipper.hx	/^	public var botX : Int;$/;"	v
botY	heaps/hxd/clipper/Clipper.hx	/^		var botY = PopScanbeam();$/;"	v
botY	heaps/hxd/clipper/Clipper.hx	/^	public var botY : Int;$/;"	v
bottom	heaps/hxd/clipper/Rect.hx	/^	public var bottom : Int;$/;"	v
bottomPt	heaps/hxd/clipper/Clipper.hx	/^	public var bottomPt : OutPt;$/;"	v
bottom_node	heaps/hxd/poly2tri/Basin.hx	/^	public var bottom_node:Node;$/;"	v
bounce	heaps/h3d/parts/Data.hx	/^	public var bounce : Float;$/;"	v
bound	heaps/h3d/scene/CameraController.hx	/^			var bound = Math.PI - E;$/;"	v
boundJoints	heaps/h3d/anim/Skin.hx	/^	public var boundJoints(default, null) : Array<Joint>;$/;"	v
boundTextures	heaps/h3d/impl/GlDriver.hx	/^	var boundTextures : Array<Texture> = [];$/;"	v
bounds	heaps/h2d/Object.hx	/^		var bounds = ctx.tmpBounds;$/;"	v
bounds	heaps/h3d/Camera.hx	/^		var bounds = orthoBounds;$/;"	v
bounds	heaps/h3d/parts/GpuParticles.hx	/^		var bounds = null;$/;"	v
bounds	heaps/h3d/parts/GpuParticles.hx	/^	public var bounds(default, null) : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/parts/GpuParticles.hx	/^	var bounds : Array<Float>;$/;"	v
bounds	heaps/h3d/pass/DirShadowMap.hx	/^		var bounds = camera.orthoBounds;$/;"	v
bounds	heaps/h3d/prim/BigPrimitive.hx	/^	var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/prim/DynamicPrimitive.hx	/^	public var bounds = new h3d.col.Bounds();$/;"	v
bounds	heaps/h3d/prim/Instanced.hx	/^	public var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/prim/RawPrimitive.hx	/^	var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/scene/Box.hx	/^	public var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/scene/CameraController.hx	/^		var bounds = scene.getBounds();$/;"	v
bounds	heaps/h3d/scene/MeshBatch.hx	/^	public var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/h3d/scene/World.hx	/^	public var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/hxd/fmt/hmd/Data.hx	/^	public var bounds : h3d.col.Bounds;$/;"	v
bounds	heaps/hxd/fmt/hmd/Library.hx	/^		var bounds = new h3d.col.Bounds();$/;"	v
bounds	heaps/samples/HtmlText.hx	/^		var bounds = textField.getBounds(this);$/;"	v
bounds	heaps/samples/Text.hx	/^		var bounds = textField.getBounds(this);$/;"	v
boundsExtend	heaps/h2d/filter/Filter.hx	/^	public var boundsExtend : Float = 0.;$/;"	v
box	heaps/h2d/CheckBox.hx	/^		var box = new h2d.Flow(this);$/;"	v
box	heaps/h3d/col/SkinCollider.hx	/^	var box : h3d.scene.Box;$/;"	v
box	heaps/h3d/impl/DirectXDriver.hx	/^	var box = new dx.Resource.ResourceBox();$/;"	v
box	heaps/samples/GpuParticles.hx	/^	var box : h3d.scene.Box;$/;"	v
box	heaps/samples/Lights.hx	/^		var box = new h3d.prim.Cube(1,1,1,true);$/;"	v
box	heaps/samples/Sao.hx	/^			var box : h3d.prim.Polygon = new h3d.prim.Cube(0.3 + r.rand() * 0.5, 0.3 + r.rand() * 0.5, 0./;"	v
boxes	heaps/h3d/col/SkinCollider.hx	/^	var boxes : Array<h3d.scene.Box> = [];$/;"	v
boxes	heaps/samples/Bounds.hx	/^	var boxes : Array<h2d.Bitmap>;$/;"	v
bp	heaps/h3d/scene/World.hx	/^					var bp = new h3d.prim.BigPrimitive(getStride(model), true);$/;"	v
bpp	heaps/h3d/mat/BigTexture.hx	/^		var bpp = @:privateAccess allPixels.bytesPerPixel;$/;"	v
bpp	heaps/h3d/mat/Texture.hx	/^		var bpp = @:privateAccess alpha.bytesPerPixel;$/;"	v
bpp	heaps/h3d/mat/TextureChannels.hx	/^		var bpp = @:privateAccess pixels.bytesPerPixel;$/;"	v
bpp	heaps/hxd/Pixels.hx	/^		var bpp = bytesPerPixel;$/;"	v
bpp	heaps/hxd/fmt/tiff/Reader.hx	/^		var bpp = Utils.getInt(f, BitsPerSample);$/;"	v
bpp	heaps/hxd/res/Image.hx	/^				var bpp = hxd.Pixels.calcStride(1, inf.pixelFormat);$/;"	v
bpp	heaps/hxd/res/Image.hx	/^			var bpp = f.readInt32();$/;"	v
bpp	heaps/hxd/snd/Data.hx	/^		var bpp = getBytesPerSample();$/;"	v
bpp	heaps/hxd/snd/Manager.hx	/^		var bpp = data.getBytesPerSample();$/;"	v
bpp	heaps/hxd/snd/OggData.hx	/^		var bpp = getBytesPerSample();$/;"	v
bpp	heaps/hxd/snd/WavData.hx	/^		var bpp = getBytesPerSample();$/;"	v
bppMask	heaps/hxd/res/BDFFont.hx	/^		var bppMask : Int = 0x80;$/;"	v
bppScale	heaps/hxd/res/BDFFont.hx	/^		var bppScale : Float = 255 \/ ((1 << bitsPerPixel) - 1);$/;"	v
bprim	heaps/h3d/scene/Graphics.hx	/^	var bprim : h3d.prim.BigPrimitive;$/;"	v
bps	heaps/hxd/snd/openal/Driver.hx	/^		var bps     = AL.getBufferi(buffer.inst, AL.BITS) * AL.getBufferi(buffer.inst, AL.CHANNELS) \//;"	v
br	heaps/h2d/Flow.hx	/^				var br = false;$/;"	v
br	heaps/h3d/mat/BigTexture.hx	/^	public var br : QuadTree;$/;"	v
breakChars	heaps/h2d/HtmlText.hx	/^			var breakChars = 0;$/;"	v
breakFound	heaps/h2d/Text.hx	/^				var breakFound = false;$/;"	v
bright	heaps/samples/AdjustColor.hx	/^	var bright = 0.;$/;"	v
brightness	heaps/samples/Pbr.hx	/^	var brightness : Float;$/;"	v
browse	heaps/hxd/File.hx	/^	public static function browse( onSelect : BrowseSelect -> Void, ?options : BrowseOptions ) {$/;"	f
browseAir	heaps/hxd/File.hx	/^	static function browseAir( onSelect : BrowseSelect -> Void, options : BrowseOptions, filters ) /;"	f
browseExpr	heaps/h3d/impl/VarBinding.hx	/^				function browseExpr( path : Array<String>, e : Expr ) {$/;"	f
browseVar	heaps/hxsl/SharedShader.hx	/^	function browseVar( v : TVar, ?path : String ) {$/;"	f
browserLoop	heaps/hxd/System.js.hx	/^	static function browserLoop() {$/;"	f
bt	heaps/h2d/ScaleGrid.hx	/^		var bt = borderTop, bb = borderBottom, bl = borderLeft, br = borderRight;$/;"	v
btex	heaps/h3d/scene/World.hx	/^		var btex = null;$/;"	v
btmp	heaps/h3d/pass/DirShadowMap.hx	/^			var btmp = autoZPlanes ? new h3d.col.Bounds() : null;$/;"	v
btn	heaps/h2d/domkit/Style.hx	/^				var btn = new Flow(treeRoot);$/;"	v
buf	heaps/h2d/Drawable.hx	/^		var buf = ctx.buffer;$/;"	v
buf	heaps/h2d/Object.hx	/^		var buf = ctx.buffer;$/;"	v
buf	heaps/h3d/impl/DirectXDriver.hx	/^				var buf = @:privateAccess buffers.buffers[i].buffer.vbuf.res;$/;"	v
buf	heaps/h3d/impl/DirectXDriver.hx	/^		var buf = Driver.getBackBuffer();$/;"	v
buf	heaps/h3d/impl/GlDriver.hx	/^			var buf = gl.createBuffer();$/;"	v
buf	heaps/h3d/impl/GlDriver.hx	/^		var buf : Float32Array = buf.getNative();$/;"	v
buf	heaps/h3d/impl/GlDriver.hx	/^		var buf = new Uint16Array(buf.getNative());$/;"	v
buf	heaps/h3d/impl/MemoryManager.hx	/^			var buf = buf;$/;"	v
buf	heaps/h3d/pass/Default.hx	/^		var buf = ctx.shaderBuffers, prevShader = null;$/;"	v
buf	heaps/h3d/prim/BigPrimitive.hx	/^		var buf : hl.BytesAccess<hxd.impl.Float32> = hl.Bytes.getArray(buf.getNative());$/;"	v
buf	heaps/h3d/prim/HMDModel.hx	/^		var buf = h3d.Buffer.ofFloats(v, 3);$/;"	v
buf	heaps/h3d/prim/HMDModel.hx	/^		var buf= lib.getBuffers(data, [new hxd.fmt.hmd.Data.GeometryFormat("position", DVec3)]);$/;"	v
buf	heaps/h3d/prim/Polygon.hx	/^		var buf = new hxd.FloatBuffer();$/;"	v
buf	heaps/h3d/scene/MeshBatch.hx	/^					var buf = p.instanceBuffers[index];$/;"	v
buf	heaps/h3d/scene/MeshBatch.hx	/^				var buf = p.buffers[index];$/;"	v
buf	heaps/h3d/scene/MeshBatch.hx	/^		var buf = batch.data;$/;"	v
buf	heaps/h3d/scene/World.hx	/^	public var buf : hxd.FloatBuffer;$/;"	v
buf	heaps/hxd/Perlin.hx	/^	var buf : flash.utils.ByteArray;$/;"	v
buf	heaps/hxd/fmt/fbx/Parser.hx	/^					var buf = bytes.sub(pos, arrayCompressedLen);$/;"	v
buf	heaps/hxd/fmt/fbx/Parser.hx	/^	var buf : String;$/;"	v
buf	heaps/hxd/fmt/hmd/Dump.hx	/^	var buf : StringBuf;$/;"	v
buf	heaps/hxd/fmt/hmd/Library.hx	/^		var buf = new GeometryBuffer();$/;"	v
buf	heaps/hxd/res/NanoJpeg.hx	/^	var buf : Int;$/;"	v
buf	heaps/hxd/snd/NativeChannel.hx	/^			var buf = buffers[bufPos];$/;"	v
buf	heaps/hxd/snd/NativeChannel.hx	/^		var buf = event.data;$/;"	v
buf	heaps/hxd/snd/webaudio/Driver.hx	/^		var buf : BufferPlayback = null;$/;"	v
buf	heaps/hxd/snd/webaudio/Driver.hx	/^		var buf = playbackPool.length != 0 ? playbackPool.pop() : new BufferPlayback();$/;"	v
buf	heaps/hxsl/GlslOut.hx	/^	var buf : StringBuf;$/;"	v
buf	heaps/hxsl/HlslOut.hx	/^	var buf : StringBuf;$/;"	v
buf	heaps/samples/ShaderAdvanced.hx	/^			var buf = new hxd.FloatBuffer();$/;"	v
buf	heaps/samples/ShaderAdvanced.hx	/^		var buf = new hxd.FloatBuffer();$/;"	v
bufCount	heaps/hxsl/HlslOut.hx	/^		var bufCount = 0;$/;"	v
bufPos	heaps/h2d/RenderContext.hx	/^	public var bufPos : Int;$/;"	v
bufPos	heaps/h3d/prim/BigPrimitive.hx	/^	var bufPos : Int = 0;$/;"	v
bufPos	heaps/hxd/snd/NativeChannel.hx	/^	var bufPos : Int;$/;"	v
bufRemap	heaps/h3d/scene/World.hx	/^			var bufRemap = new hxd.FloatBuffer(vertexCount*stride);$/;"	v
bufbits	heaps/hxd/res/NanoJpeg.hx	/^	var bufbits : Int;$/;"	v
buffer	heaps/h2d/RenderContext.hx	/^	public var buffer : hxd.FloatBuffer;$/;"	v
buffer	heaps/h2d/SpriteBatch.hx	/^	var buffer : h3d.Buffer;$/;"	v
buffer	heaps/h3d/Buffer.hx	/^	public var buffer : Buffer;$/;"	v
buffer	heaps/h3d/Buffer.hx	/^	public var buffer(default,null) : h3d.impl.ManagedBuffer;$/;"	v
buffer	heaps/h3d/col/PolygonBuffer.hx	/^	var buffer : haxe.ds.Vector<hxd.impl.Float32>;$/;"	v
buffer	heaps/h3d/impl/GlDriver.hx	/^		var buffer : ArrayBufferView = @:privateAccess pixels.bytes.b;$/;"	v
buffer	heaps/h3d/impl/GlDriver.hx	/^		var buffer : ArrayBufferView = switch( t.format ) {$/;"	v
buffer	heaps/h3d/impl/GlDriver.hx	/^		var buffer = @:privateAccess pixels.bytes.b;$/;"	v
buffer	heaps/h3d/parts/Particles.hx	/^		var buffer = h3d.Buffer.ofSubFloats(tmp, stride, Std.int(pos\/stride), [Quads, Dynamic, RawFor/;"	v
buffer	heaps/h3d/pass/DirShadowMap.hx	/^		var buffer = new haxe.io.BytesBuffer();$/;"	v
buffer	heaps/h3d/pass/DirShadowMap.hx	/^		var buffer = new haxe.io.BytesInput(bytes);$/;"	v
buffer	heaps/h3d/pass/PointShadowMap.hx	/^		var buffer = new haxe.io.BytesBuffer();$/;"	v
buffer	heaps/h3d/pass/PointShadowMap.hx	/^		var buffer = new haxe.io.BytesInput(bytes);$/;"	v
buffer	heaps/h3d/pass/SpotShadowMap.hx	/^		var buffer = new haxe.io.BytesBuffer();$/;"	v
buffer	heaps/h3d/pass/SpotShadowMap.hx	/^		var buffer = new haxe.io.BytesInput(bytes);$/;"	v
buffer	heaps/h3d/prim/HMDModel.hx	/^		var buffer = bufferCache.get(hxsl.Globals.allocID(alias.realName));$/;"	v
buffer	heaps/h3d/prim/Primitive.hx	/^	public var buffer : Buffer;$/;"	v
buffer	heaps/h3d/scene/Trail.hx	/^		var buffer = dprim.getBuffer((points.length - 1) * 2);$/;"	v
buffer	heaps/hxd/snd/Mp3Data.hx	/^	var buffer : haxe.io.Bytes;$/;"	v
buffer	heaps/hxd/snd/openal/Driver.hx	/^		var buffer = new BufferHandle();$/;"	v
buffer	heaps/hxd/snd/openal/Emulator.hx	/^			var buffer = source.buffers[bufferIndex++];$/;"	v
buffer	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var buffer : BufferHandle;$/;"	v
buffer	heaps/hxsl/Printer.hx	/^	var buffer : StringBuf;$/;"	v
buffer3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function buffer3f(buffer : Buffer, param : Int, value1 : F32, value2 : F32, value/;"	f
buffer3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function buffer3i(buffer : Buffer, param : Int, value1 : Int, value2 : Int, value/;"	f
bufferAliases	heaps/h3d/prim/HMDModel.hx	/^	var bufferAliases : Map<String,{ realName : String, offset : Int }> = new Map();$/;"	v
bufferCache	heaps/h3d/prim/MeshPrimitive.hx	/^	var bufferCache : Map<Int,h3d.Buffer.BufferOffset>;$/;"	v
bufferCount	heaps/h3d/impl/DirectXDriver.hx	/^	public var bufferCount : Int;$/;"	v
bufferCount	heaps/h3d/impl/MemoryManager.hx	/^	public var bufferCount(default,null) : Int = 0;$/;"	v
bufferCount	heaps/hxsl/RuntimeShader.hx	/^	public var bufferCount : Int;$/;"	v
bufferData	heaps/hxd/snd/openal/Emulator.hx	/^	public static function bufferData(buffer : Buffer, format : Int, data : Bytes, size : Int, freq/;"	f
bufferDirty	heaps/h2d/Graphics.hx	/^	var bufferDirty : Bool;$/;"	v
bufferFormat	heaps/h3d/impl/Stage3dDriver.hx	/^	public var bufferFormat : Int;$/;"	v
bufferHeight	heaps/h3d/impl/GlDriver.hx	/^	var bufferHeight : Int;$/;"	v
bufferIndex	heaps/h3d/scene/MeshBatch.hx	/^				var bufferIndex = ctx.drawPass.index & 0xFFFF;$/;"	v
bufferIndex	heaps/hxd/snd/openal/Emulator.hx	/^			var bufferIndex = 0;$/;"	v
bufferPool	heaps/hxd/snd/NativeChannel.hx	/^	static var bufferPool : Array<haxe.io.Float32Array> = new Array();$/;"	v
bufferPool	heaps/hxd/snd/webaudio/Context.hx	/^	static var bufferPool : Array<BufferPool>;$/;"	v
bufferSamples	heaps/hxd/snd/NativeChannel.hx	/^	public var bufferSamples(default, null) : Int;$/;"	v
bufferVertices	heaps/h2d/SpriteBatch.hx	/^		var bufferVertices = 0;$/;"	v
bufferWidth	heaps/h3d/impl/GlDriver.hx	/^	var bufferWidth : Int;$/;"	v
bufferf	heaps/hxd/snd/openal/Emulator.hx	/^	public static function bufferf(buffer : Buffer, param : Int, value  : F32) {$/;"	f
bufferfv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function bufferfv(buffer : Buffer, param : Int, values : Bytes) {$/;"	f
bufferi	heaps/hxd/snd/openal/Emulator.hx	/^	public static function bufferi(buffer : Buffer, param : Int, value  : Int) {$/;"	f
bufferiv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function bufferiv(buffer : Buffer, param : Int, values : Bytes) {$/;"	f
buffers	heaps/h2d/Graphics.hx	/^	var buffers : Array<{ buf : hxd.FloatBuffer, vbuf : h3d.Buffer, idx : hxd.IndexBuffer, ibuf : h/;"	v
buffers	heaps/h2d/RenderContext.hx	/^	var buffers : h3d.shader.Buffers;$/;"	v
buffers	heaps/h3d/impl/DirectXDriver.hx	/^	public var buffers = new hl.NativeArray<dx.Resource>(16);$/;"	v
buffers	heaps/h3d/impl/GlDriver.hx	/^	public var buffers : Array<Int>;$/;"	v
buffers	heaps/h3d/impl/MemoryManager.hx	/^	var buffers : Array<ManagedBuffer>;$/;"	v
buffers	heaps/h3d/pass/ScreenFx.hx	/^	var buffers : h3d.shader.Buffers;$/;"	v
buffers	heaps/h3d/prim/BigPrimitive.hx	/^	var buffers : Array<Buffer>;$/;"	v
buffers	heaps/h3d/prim/MeshPrimitive.hx	/^		var buffers = layouts.get(inputs.id);$/;"	v
buffers	heaps/h3d/scene/MeshBatch.hx	/^	public var buffers : Array<h3d.Buffer> = [];$/;"	v
buffers	heaps/h3d/scene/World.hx	/^	public var buffers : Map<Int, h3d.scene.Mesh>;$/;"	v
buffers	heaps/h3d/shader/Buffers.hx	/^	public var buffers : haxe.ds.Vector<h3d.Buffer>;$/;"	v
buffers	heaps/hxd/impl/CacheAllocator.hx	/^	var buffers = new Map<Int,Cache<h3d.Buffer>>();$/;"	v
buffers	heaps/hxd/snd/Manager.hx	/^	public var buffers : Array<Buffer>;$/;"	v
buffers	heaps/hxd/snd/NativeChannel.hx	/^	var buffers : Array<BufferHandle>;$/;"	v
buffers	heaps/hxd/snd/openal/Emulator.hx	/^	public var buffers : Array<Buffer> = [];$/;"	v
buffers	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var buffers : Array<BufferPlayback>;$/;"	v
buffers	heaps/hxsl/HlslOut.hx	/^		var buffers = [];$/;"	v
buffers	heaps/hxsl/RuntimeShader.hx	/^	public var buffers : AllocParam;$/;"	v
bufs	heaps/h3d/prim/Polygon.hx	/^		var bufs = getBuffers(engine);$/;"	v
build	heaps/h2d/ZGroup.hx	/^	public function build(spr : Object) {$/;"	f
build	heaps/h2d/domkit/InitComponents.hx	/^	public static function build() {$/;"	f
build	heaps/h3d/impl/VarBinding.hx	/^	public static function build() {$/;"	f
build	heaps/hxd/impl/BitsBuilder.hx	/^	public static function build() {$/;"	f
build	heaps/hxd/res/DynamicText.hx	/^	public static function build( file : String ) {$/;"	f
build	heaps/hxd/res/FileTree.hx	/^	public static function build( ?dir : String ) {$/;"	f
build	heaps/hxd/res/Font.hx	/^	public function build( size : Int, ?options ) : h2d.Font {$/;"	f
build	heaps/hxd/res/FontBuilder.hx	/^	function build() : h2d.Font {$/;"	f
build	heaps/hxd/res/FontBuilder.hx	/^	function build() {$/;"	f
build	heaps/hxsl/CacheFileBuilder.hx	/^	var build : CacheFileBuilder;$/;"	v
build	heaps/hxsl/Linker.hx	/^		function build(kind, name, a:Array<ShaderInfos> ) : TFunction {$/;"	f
buildDependency	heaps/hxsl/Linker.hx	/^	function buildDependency( s : ShaderInfos, v : AllocatedVar, isWritten : Bool ) {$/;"	f
buildDir	heaps/hxd/res/FileTree.hx	/^	function buildDir( d : FileTreeData ) : FileEntry {$/;"	f
buildFields	heaps/hxd/res/FileTree.hx	/^	public function buildFields() {$/;"	f
buildFields	heaps/hxsl/Macros.hx	/^	static function buildFields( shader : ShaderData, inits : Array<{ v : TVar, e : Ast.TExpr }>, p/;"	f
buildFieldsRec	heaps/hxd/res/FileTree.hx	/^	function buildFieldsRec( tree : FileTreeData, fields : Array<Field>, fident : Map<String,String/;"	f
buildFormat	heaps/h3d/scene/World.hx	/^	function buildFormat() {$/;"	f
buildGeom	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function buildGeom( geom : hxd.fmt.fbx.Geometry, skin : h3d.anim.Skin, dataOut : haxe.io.BytesO/;"	f
buildGlobals	heaps/hxsl/Macros.hx	/^	public static function buildGlobals() {$/;"	f
buildHierarchy	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function buildHierarchy() {$/;"	f
buildIntProperty	heaps/h2d/CdbLevel.hx	/^	public function buildIntProperty( name : String ) {$/;"	f
buildLive	heaps/hxsl/AgalOptim.hx	/^	function buildLive(check) {$/;"	f
buildNormalsDisplay	heaps/h3d/prim/Primitive.hx	/^	@:noCompletion public function buildNormalsDisplay() : Primitive {$/;"	f
buildRec	heaps/hxd/fmt/pak/Build.hx	/^	function buildRec( path : String ) {$/;"	f
buildRuntimeShader	heaps/hxsl/Cache.hx	/^	function buildRuntimeShader( vertex : ShaderData, fragment : ShaderData, paramVars ) {$/;"	f
buildShader	heaps/hxsl/Macros.hx	/^	public static function buildShader() {$/;"	f
buildSizes	heaps/h2d/HtmlText.hx	/^	function buildSizes( e : Xml, font : Font, metrics : Array<LineInfo>, splitNode:SplitNode ) {$/;"	f
buildStringProperty	heaps/h2d/CdbLevel.hx	/^	public function buildStringProperty( name : String ) {$/;"	f
buildTangents	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function buildTangents( geom : hxd.fmt.fbx.Geometry ) {$/;"	f
builder	heaps/hxsl/CacheFileBuilder.hx	/^		var builder = new CacheFileBuilder();$/;"	v
bursts	heaps/h3d/parts/Data.hx	/^	public var bursts : Array<{ time : Float, count : Int }>;$/;"	v
but	heaps/hxd/System.hl.hx	/^		var but = new hl.UI.Button(f, "Continue");$/;"	v
but	heaps/hxd/System.hl.hx	/^		var but = new hl.UI.Button(f, "Dismiss all");$/;"	v
but	heaps/hxd/System.hl.hx	/^		var but = new hl.UI.Button(f, "Exit");$/;"	v
but	heaps/samples/Pad.hx	/^			var but = buttons[k];$/;"	v
button	heaps/hxd/Event.hx	/^	public var button : Int = 0;$/;"	v
button	heaps/samples/domkit_res/style.css	/^button {$/;"	s
button text	heaps/samples/domkit_res/style.css	/^button text {$/;"	s
button.highlight	heaps/samples/domkit_res/style.css	/^button.highlight {$/;"	c
button:active	heaps/samples/domkit_res/style.css	/^button:active {$/;"	s
button:hover	heaps/samples/domkit_res/style.css	/^button:hover {$/;"	s
button:hover text	heaps/samples/domkit_res/style.css	/^button:hover text {$/;"	s
buttons	heaps/hxd/Pad.hx	/^	public var buttons : Array<Bool> = [];$/;"	v
buttons	heaps/samples/Pad.hx	/^	var buttons : Map<String,{ tf : h2d.Text, bg : h2d.Bitmap }>;$/;"	v
bx	heaps/h2d/col/Voronoi.hx	/^		var bx = cPoint.x,$/;"	v
bx	heaps/hxd/poly2tri/Node.hx	/^		var bx = this.prev.point.x - this.point.x;$/;"	v
bxMin	heaps/h2d/Mask.hx	/^		var bxMin = out.xMin, byMin = out.yMin, bxMax = out.xMax, byMax = out.yMax;$/;"	v
by	heaps/hxd/poly2tri/Node.hx	/^		var by = this.prev.point.y - this.point.y;$/;"	v
byID	heaps/hxsl/Cache.hx	/^	var byID : Map<String, RuntimeShader>;$/;"	v
byId	heaps/hxd/res/DynamicText.hx	/^			var byId = first != null && first.has.id;$/;"	v
byY	heaps/h2d/CdbLevel.hx	/^				var byY = [];$/;"	v
byte	heaps/hxd/Pixels.hx	/^				var byte = getChannelOffset(fmt,c);$/;"	v
byteArrayToBytes	heaps/hxd/ByteConversions.hx	/^	public static inline function byteArrayToBytes( v: flash.utils.ByteArray ) : haxe.io.Bytes {$/;"	f
byteInput	heaps/hxd/snd/Mp3Data.hx	/^		var byteInput = new haxe.io.BytesInput(bytes);$/;"	v
bytes	heaps/h3d/impl/DirectXDriver.hx	/^			var bytes = cacheFileData.get(shaderVersion + haxe.crypto.Md5.encode(code));$/;"	v
bytes	heaps/h3d/impl/DirectXDriver.hx	/^		var bytes = getBinaryPayload(shader.vertex, shader.code);$/;"	v
bytes	heaps/h3d/impl/DirectXDriver.hx	/^		var bytes = size << 4;$/;"	v
bytes	heaps/h3d/pass/DirShadowMap.hx	/^		var bytes = haxe.zip.Compress.run(staticTexture.capturePixels().bytes,9);$/;"	v
bytes	heaps/h3d/pass/PointShadowMap.hx	/^			var bytes = haxe.zip.Compress.run(staticTexture.capturePixels(i).bytes,9);$/;"	v
bytes	heaps/h3d/pass/SpotShadowMap.hx	/^		var bytes = haxe.zip.Compress.run(staticTexture.capturePixels().bytes,9);$/;"	v
bytes	heaps/h3d/prim/HMDModel.hx	/^		var bytes = entry.fetchBytes(dataPosition + data.indexPosition, size);$/;"	v
bytes	heaps/h3d/prim/HMDModel.hx	/^		var bytes = entry.fetchBytes(dataPosition + data.vertexPosition, size);$/;"	v
bytes	heaps/hxd/BitmapData.hx	/^		var bytes = pixels.bytes.getData();$/;"	v
bytes	heaps/hxd/File.hx	/^						var bytes = haxe.io.Bytes.alloc(fs.bytesAvailable);$/;"	v
bytes	heaps/hxd/File.hx	/^		var bytes = haxe.io.Bytes.alloc(fs.bytesAvailable);$/;"	v
bytes	heaps/hxd/Pixels.hx	/^			var bytes = @:privateAccess bytes.b;$/;"	v
bytes	heaps/hxd/Pixels.hx	/^		var bytes : hxd.impl.UncheckedBytes = bytes;$/;"	v
bytes	heaps/hxd/Pixels.hx	/^	public var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var bytes = new haxe.io.BytesInput(bytes);$/;"	v
bytes	heaps/hxd/fmt/bfnt/Writer.hx	/^		var bytes = haxe.io.Bytes.ofString(s);$/;"	v
bytes	heaps/hxd/fmt/blend/Data.hx	/^	var bytes: haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var bytes = sys.io.File.getBytes(outFile);$/;"	v
bytes	heaps/hxd/fmt/fbx/Parser.hx	/^	var bytes : Bytes;$/;"	v
bytes	heaps/hxd/fmt/hbson/Writer.hx	/^			var bytes = haxe.io.Bytes.ofString(str);$/;"	v
bytes	heaps/hxd/fmt/hmd/Dump.hx	/^		var bytes;$/;"	v
bytes	heaps/hxd/fmt/hmd/Writer.hx	/^		var bytes = header.getBytes();$/;"	v
bytes	heaps/hxd/fmt/tiff/Reader.hx	/^		var bytes = Utils.get(tif, StripByteCounts);$/;"	v
bytes	heaps/hxd/fs/BytesFileSystem.hx	/^		var bytes = getBytes(path);$/;"	v
bytes	heaps/hxd/fs/BytesFileSystem.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/fs/EmbedFileSystem.hx	/^		var bytes = (rawData.length * 6) >> 3;$/;"	v
bytes	heaps/hxd/fs/EmbedFileSystem.hx	/^	var bytes : flash.utils.ByteArray;$/;"	v
bytes	heaps/hxd/fs/EmbedFileSystem.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/fs/FileEntry.hx	/^		var bytes = TMP_BYTES;$/;"	v
bytes	heaps/hxd/fs/FileEntry.hx	/^		var bytes = fetchBytes(0, 4);$/;"	v
bytes	heaps/hxd/res/Any.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/res/Image.hx	/^							var bytes = asyncData == null ? entry.fetchBytes(pos, size) : asyncData;$/;"	v
bytes	heaps/hxd/res/Image.hx	/^				var bytes : hl.Bytes = bytes;$/;"	v
bytes	heaps/hxd/res/Image.hx	/^				var bytes = pixels.bytes;$/;"	v
bytes	heaps/hxd/res/Image.hx	/^			var bytes = entry.getBytes(); \/\/ using getTmpBytes cause bug in E2$/;"	v
bytes	heaps/hxd/res/Image.hx	/^			var bytes = entry.getBytes();$/;"	v
bytes	heaps/hxd/res/Image.hx	/^			var bytes;$/;"	v
bytes	heaps/hxd/res/NanoJpeg.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/res/Sound.hx	/^		var bytes = entry.getBytes();$/;"	v
bytes	heaps/hxd/res/TiledMap.hx	/^			var bytes = base.decodeBytes(bytes);$/;"	v
bytes	heaps/hxd/res/TiledMap.hx	/^			var bytes = haxe.io.Bytes.ofString(data);$/;"	v
bytes	heaps/hxd/snd/Manager.hx	/^		var bytes  = getTmpBytes(length);$/;"	v
bytes	heaps/hxd/snd/Manager.hx	/^		var bytes;$/;"	v
bytes	heaps/hxd/snd/Mp3Data.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/snd/OggData.hx	/^	var bytes : haxe.io.Bytes;$/;"	v
bytes	heaps/hxd/snd/openal/Driver.hx	/^		var bytes = getTmpBytes(24);$/;"	v
bytes	heaps/hxd/snd/openal/Driver.hx	/^		var bytes = getTmpBytes(4);$/;"	v
bytes	heaps/hxd/snd/openal/LowPassDriver.hx	/^		var bytes = driver.getTmpBytes(4);$/;"	v
bytes	heaps/hxd/snd/openal/ReverbDriver.hx	/^		var bytes = driver.getTmpBytes(4);$/;"	v
bytes	heaps/hxsl/CacheFile.hx	/^			var bytes = haxe.io.Bytes.ofString(str);$/;"	v
bytes	heaps/hxsl/CacheFileBuilder.hx	/^			var bytes = dx.Driver.compileShader(code, "", "main", (rd.vertex?"vs_":"ps_") + dxShaderVersi/;"	v
bytes	heaps/hxsl/Serializer.hx	/^		var bytes = haxe.io.Bytes.ofString(s);$/;"	v
bytes	heaps/samples/ShaderAdvanced.hx	/^		var bytes = haxe.io.Bytes.alloc(icount * 4);$/;"	v
bytesNeeded	heaps/hxd/snd/OggData.hx	/^		var bytesNeeded = sampleCount * bpp;$/;"	v
bytesPerPixel	heaps/hxd/Pixels.hx	/^	var bytesPerPixel : Int;$/;"	v
bytesToByteArray	heaps/hxd/ByteConversions.hx	/^	public static inline function bytesToByteArray( v: haxe.io.Bytes ) :  flash.utils.ByteArray {$/;"	f
c	heaps/h2d/Console.hx	/^			var c = commands.get(cmdName);$/;"	v
c	heaps/h2d/Console.hx	/^		var c = '';$/;"	v
c	heaps/h2d/Flow.hx	/^					var c = childAt(i);$/;"	v
c	heaps/h2d/Flow.hx	/^				var c = childAt(i);$/;"	v
c	heaps/h2d/Flow.hx	/^			var c = getChildAt(k);$/;"	v
c	heaps/h2d/Font.hx	/^			var c = glyphs.get(g);$/;"	v
c	heaps/h2d/Font.hx	/^		var c = glyphs.get(code);$/;"	v
c	heaps/h2d/Font.hx	/^		var c = new FontChar(t.clone(), width);$/;"	v
c	heaps/h2d/Layers.hx	/^			var c = children[pos];$/;"	v
c	heaps/h2d/Object.hx	/^			var c = children[0];$/;"	v
c	heaps/h2d/Object.hx	/^			var c = children[i--];$/;"	v
c	heaps/h2d/Object.hx	/^			var c = children[p];$/;"	v
c	heaps/h2d/Object.hx	/^		var c = Type.getClassName(Type.getClass(this));$/;"	v
c	heaps/h2d/col/Circle.hx	/^		var c = hxd.Math.distanceSq(p1.x - x, p1.y - y) - ray * ray;$/;"	v
c	heaps/h2d/col/IPolygon.hx	/^		var c = new hxd.clipper.Clipper();$/;"	v
c	heaps/h2d/col/IPolygon.hx	/^		var c = new hxd.clipper.Clipper.ClipperOffset();$/;"	v
c	heaps/h2d/col/IPolygons.hx	/^		var c = new hxd.clipper.Clipper();$/;"	v
c	heaps/h2d/col/IPolygons.hx	/^		var c = new hxd.clipper.Clipper.ClipperOffset();$/;"	v
c	heaps/h2d/col/Matrix.hx	/^		var c = m.c, d = m.d;$/;"	v
c	heaps/h2d/col/Matrix.hx	/^	public var c : Float;$/;"	v
c	heaps/h2d/col/Point.hx	/^		var c = Math.cos(angle);$/;"	v
c	heaps/h2d/col/Triangle.hx	/^	public var c : Point;$/;"	v
c	heaps/h2d/col/Voronoi.hx	/^					var c = new Cell(pointid, point);$/;"	v
c	heaps/h2d/domkit/BaseComponents.hx	/^				var c = parseColor(color);$/;"	v
c	heaps/h2d/domkit/BaseComponents.hx	/^				var c = parseColor(v);$/;"	v
c	heaps/h2d/domkit/BaseComponents.hx	/^			var c = parseColor(args[0]);$/;"	v
c	heaps/h2d/domkit/BaseComponents.hx	/^			var c = parseColor(c);$/;"	v
c	heaps/h2d/domkit/BaseComponents.hx	/^			var c = parseColor(color);$/;"	v
c	heaps/h3d/Camera.hx	/^		var c = 1 + 0.025 * speed;$/;"	v
c	heaps/h3d/Camera.hx	/^		var c = 1 - 0.025 * speed;$/;"	v
c	heaps/h3d/Camera.hx	/^		var c = new Camera(fovY, zoom, screenRatio, zNear, zFar, rightHanded);$/;"	v
c	heaps/h3d/Engine.hx	/^		var c = targetStack;$/;"	v
c	heaps/h3d/Engine.hx	/^		var c = targetTmp;$/;"	v
c	heaps/h3d/Matrix.hx	/^		var c = bits;$/;"	v
c	heaps/h3d/Vector.hx	/^		var c = (1 - Math.abs(2 * brightness - 1)) * saturation;$/;"	v
c	heaps/h3d/col/Bounds.hx	/^		var c = new Point(s.x,s.y,s.z);$/;"	v
c	heaps/h3d/col/Bounds.hx	/^		var c = p.nz;$/;"	v
c	heaps/h3d/col/Sphere.hx	/^		var c = (x * x + y * y + z * z) + (px * px + py * py + pz * pz) - 2 * (x * px + y * py + z * p/;"	v
c	heaps/h3d/impl/MemoryManager.hx	/^			var c = buffers[0], prev : ManagedBuffer = null;$/;"	v
c	heaps/h3d/parts/Emitter.hx	/^				var c = s.colors[s.colors.length - (1 + i)];$/;"	v
c	heaps/h3d/parts/GpuParticles.hx	/^					var c = volumeBounds.getCenter();$/;"	v
c	heaps/h3d/parts/GpuParticles.hx	/^			var c = ebounds.getCenter();$/;"	v
c	heaps/h3d/parts/Particles.hx	/^		var c = material.mainPass.getShader(h3d.shader.VertexColorAlpha);$/;"	v
c	heaps/h3d/pass/PassList.hx	/^		var c = current;$/;"	v
c	heaps/h3d/prim/Cube.hx	/^		var c : Cube = @:privateAccess engine.resCache.get(Cube);$/;"	v
c	heaps/h3d/prim/Cylinder.hx	/^		var c : Cylinder = @:privateAccess engine.resCache.get(Cylinder);$/;"	v
c	heaps/h3d/prim/ModelCache.hx	/^				var c = name.charAt(0);$/;"	v
c	heaps/h3d/prim/Polygon.hx	/^				var c = colors[k];$/;"	v
c	heaps/h3d/prim/Quads.hx	/^		var c = new UV(0, 0);$/;"	v
c	heaps/h3d/scene/Object.hx	/^			var c = c.clone();$/;"	v
c	heaps/h3d/scene/Object.hx	/^			var c = children[p];$/;"	v
c	heaps/h3d/scene/Object.hx	/^			var c = obj.getCollider();$/;"	v
c	heaps/h3d/scene/Sphere.hx	/^				var c = hxd.Math.cos(i \/ (nsegments - 1) * hxd.Math.PI * 2.0) * radius;$/;"	v
c	heaps/h3d/scene/World.hx	/^		var c = chunks[cid];$/;"	v
c	heaps/h3d/scene/World.hx	/^		var c = getChunk(mat.tx, mat.ty, true);$/;"	v
c	heaps/h3d/scene/World.hx	/^		var c = getChunk(x, y, true);$/;"	v
c	heaps/h3d/shader/Bloom.hx	/^			var c = texture.get(input.uv);$/;"	v
c	heaps/h3d/shader/Blur.hx	/^					var c = texture.get(uv);$/;"	v
c	heaps/h3d/shader/Texture.hx	/^			var c = texture.get(calculatedUV);$/;"	v
c	heaps/h3d/shader/Texture2.hx	/^			var c = texture.get(calculatedUV2);$/;"	v
c	heaps/hxd/Charset.hx	/^		var c : Null<Int> = code;$/;"	v
c	heaps/hxd/Cursor.hx	/^		var c = new CustomCursor([],0,0,0);$/;"	v
c	heaps/hxd/Key.hx	/^		var c = keyCode;$/;"	v
c	heaps/hxd/Pad.hx	/^					var c = p.d.getControlAt(i);$/;"	v
c	heaps/hxd/Pad.hx	/^			var c = @:privateAccess GameController.gctrlCount();$/;"	v
c	heaps/hxd/System.flash.hx	/^				var c = new flash.ui.MouseCursorData();$/;"	v
c	heaps/hxd/Window.hl.hx	/^			var c = e.keyCode & 0xFF;$/;"	v
c	heaps/hxd/clipper/Clipper.hx	/^          var c = new Clipper();$/;"	v
c	heaps/hxd/clipper/Clipper.hx	/^        var c = new Clipper();$/;"	v
c	heaps/hxd/earcut/Earcut.hx	/^					var c = splitPolygon(a, b);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var c = connect.get(parent);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var c = getObjectCurve(curves, model, "UV", animName);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var c = invConnect.get(child);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var c = getObjectCurve(curves, model, cn.getName(), animName);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var c = connect.get(node.getId());$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var c = curves.get(model.getId());$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var c = getChilds(node, nodeName);$/;"	v
c	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var c = invConnect.get(node.getId());$/;"	v
c	heaps/hxd/fmt/fbx/Filter.hx	/^			var c = f2.childs[i];$/;"	v
c	heaps/hxd/fmt/fbx/Parser.hx	/^					var c = nextChar();$/;"	v
c	heaps/hxd/fmt/fbx/Parser.hx	/^			var c = nextChar();$/;"	v
c	heaps/hxd/fmt/hmd/Library.hx	/^					var c = c;$/;"	v
c	heaps/hxd/fmt/hmd/Library.hx	/^			var c = b.addObject(o.name, 0);$/;"	v
c	heaps/hxd/fmt/spine/Library.hx	/^				var c = boneCurves.get(boneName);$/;"	v
c	heaps/hxd/fmt/tiff/Reader.hx	/^				var c = f.readByte();$/;"	v
c	heaps/hxd/fs/Convert.hx	/^				var c = r.imageData[x + y * w];$/;"	v
c	heaps/hxd/fs/FileConverter.hx	/^		var c = @:privateAccess Convert.converts.get(name);$/;"	v
c	heaps/hxd/fs/FileConverter.hx	/^		var c = configs.get(dir);$/;"	v
c	heaps/hxd/fs/LocalFileSystem.hx	/^		var c = directoryCache.get(baseDir);$/;"	v
c	heaps/hxd/impl/CacheAllocator.hx	/^			var c = buffers.get(b);$/;"	v
c	heaps/hxd/impl/CacheAllocator.hx	/^			var c = indexBuffers.get(b);$/;"	v
c	heaps/hxd/impl/CacheAllocator.hx	/^		var c = buffers.get(id);$/;"	v
c	heaps/hxd/impl/CacheAllocator.hx	/^		var c = indexBuffers.get(id);$/;"	v
c	heaps/hxd/impl/Properties.hx	/^		var c = Type.getClass(v);$/;"	v
c	heaps/hxd/net/Socket.hx	/^		var c = data[pos++];$/;"	v
c	heaps/hxd/net/SocketHost.hx	/^			var c = new SocketClient(this, s);$/;"	v
c	heaps/hxd/res/Atlas.hx	/^		var c = getContents().get(name);$/;"	v
c	heaps/hxd/res/DynamicText.hx	/^		var c = macro class {$/;"	v
c	heaps/hxd/res/Image.hx	/^						var c = r.imageData[p++];$/;"	v
c	heaps/hxd/res/Image.hx	/^					var c = r.imageData[i];$/;"	v
c	heaps/hxd/res/NanoJpeg.hx	/^				var c = comps[i];$/;"	v
c	heaps/hxd/res/NanoJpeg.hx	/^			var c = comps[0];$/;"	v
c	heaps/hxd/res/NanoJpeg.hx	/^			var c = comps[i];$/;"	v
c	heaps/hxd/snd/Manager.hx	/^			var c = channels;$/;"	v
c	heaps/hxd/snd/Manager.hx	/^			var c = s.channel;$/;"	v
c	heaps/hxd/snd/Manager.hx	/^		var c = channels;$/;"	v
c	heaps/hxd/snd/Manager.hx	/^		var c = new Channel();$/;"	v
c	heaps/hxd/snd/OggData.hx	/^			var c = new OggData(null);$/;"	v
c	heaps/hxsl/AgalOptim.hx	/^				var c = ncomps == 1 ? comps.pop() : comps.shift();$/;"	v
c	heaps/hxsl/AgalOut.hx	/^				var c = getConst(255);$/;"	v
c	heaps/hxsl/AgalOut.hx	/^			var c = getConsts([1, 1\/255, 1\/(255 * 255), 1\/(255 * 255 * 255)]);$/;"	v
c	heaps/hxsl/AgalOut.hx	/^			var c = getConsts([1, 255, 255 * 255, 255 * 255 * 255]);$/;"	v
c	heaps/hxsl/Cache.hx	/^		var c = INST;$/;"	v
c	heaps/hxsl/Cache.hx	/^		var c = linkCache;$/;"	v
c	heaps/hxsl/Cache.hx	/^		var c = new RuntimeShaderData();$/;"	v
c	heaps/hxsl/CacheFile.hx	/^				var c = f.readByte();$/;"	v
c	heaps/hxsl/CacheFile.hx	/^			var c = s.shader.consts;$/;"	v
c	heaps/hxsl/CacheFile.hx	/^		var c = linkCache;$/;"	v
c	heaps/hxsl/Dce.hx	/^			var c = channelVars[cid];$/;"	v
c	heaps/hxsl/DynamicShader.hx	/^		var c = shader.consts;$/;"	v
c	heaps/hxsl/Eval.hx	/^			var c = constants.get(v.id);$/;"	v
c	heaps/hxsl/Eval.hx	/^			var c = constants.get(vs.id);$/;"	v
c	heaps/hxsl/Eval.hx	/^			var c = evalExpr(c);$/;"	v
c	heaps/hxsl/Macros.hx	/^						var c = Context.getLocalClass();$/;"	v
c	heaps/hxsl/Macros.hx	/^			var c = c.get();$/;"	v
c	heaps/hxsl/Shader.hx	/^		var c = shader.consts;$/;"	v
c	heaps/hxsl/SharedShader.hx	/^				var c = new ShaderConst(v, pos, bits);$/;"	v
c	heaps/hxsl/SharedShader.hx	/^		var c = consts;$/;"	v
c	heaps/samples/Bounds.hx	/^			var c = colors[i];$/;"	v
c	heaps/samples/CollideCheck.hx	/^					var c = Std.int( -d * scale * 4 + 0x20 );$/;"	v
c	heaps/samples/CollideCheck.hx	/^					var c = Std.int( d * scale );$/;"	v
c	heaps/samples/Interactive.hx	/^			var c = 0.3 + rnd.rand() * 0.3;$/;"	v
c	heaps/samples/Interactive.hx	/^			var c = if( rnd.random(2) == 0 ) new h3d.prim.Cube() else new h3d.prim.Sphere(1, 30, 20);$/;"	v
c	heaps/samples/Interactive.hx	/^			var c = new h3d.prim.Cylinder(20, cradius, cheight);$/;"	v
c	heaps/samples/Interactive.hx	/^			var c = new h3d.prim.Sphere(0.5, 15, 10);$/;"	v
c	heaps/samples/Sao.hx	/^		var c = renderer;$/;"	v
c	heaps/samples/Sound.hx	/^			var c = new NoiseChannel();$/;"	v
c1x	heaps/h2d/KeyFrames.hx	/^			var c1x = curves[0].x;$/;"	v
c1y	heaps/h2d/KeyFrames.hx	/^			var c1y = curves[0].y;$/;"	v
c2	heaps/h2d/Font.hx	/^			var c2 = c.clone();$/;"	v
c2	heaps/h2d/Layers.hx	/^					var c2 = children[p];$/;"	v
c2x	heaps/h2d/KeyFrames.hx	/^			var c2x = curves[1].x;$/;"	v
c2y	heaps/h2d/KeyFrames.hx	/^			var c2y = curves[1].y;$/;"	v
ca	heaps/h2d/SpriteBatch.hx	/^				var ca = Math.cos(e.rotation), sa = Math.sin(e.rotation);$/;"	v
ca	heaps/h2d/TileGroup.hx	/^		var ca = Math.cos(r), sa = Math.sin(r);$/;"	v
cache	heaps/h3d/impl/DirectXDriver.hx	/^					var cache = new haxe.io.BytesInput(sys.io.File.getBytes(file));$/;"	v
cache	heaps/h3d/impl/TextureCache.hx	/^	var cache : Array<h3d.mat.Texture>;$/;"	v
cache	heaps/hxd/earcut/Earcut.hx	/^	var cache : EarNode;$/;"	v
cache	heaps/hxd/fs/FileConverter.hx	/^	var cache : Map<String,Array<{ out : String, time : Int, hash : String, ver : Null<Int> }>>;$/;"	v
cache	heaps/hxd/fs/FileInput.hx	/^	var cache : haxe.io.Bytes;$/;"	v
cache	heaps/hxd/fs/MultiFileSystem.hx	/^	var cache : Map<String, MultiFileEntry>;$/;"	v
cache	heaps/hxd/res/Loader.hx	/^	var cache : Map<String,Dynamic>;$/;"	v
cache	heaps/hxsl/CacheFileBuilder.hx	/^			var cache = new CustomCacheFile(this);$/;"	v
cache	heaps/samples/Interactive.hx	/^		var cache = new h3d.prim.ModelCache();$/;"	v
cache	heaps/samples/Skin.hx	/^	var cache : h3d.prim.ModelCache;$/;"	v
cache	heaps/tools/hxsl/Main.hx	/^			var cache = @:privateAccess new hxsl.Cache();$/;"	v
cacheFileData	heaps/h3d/impl/DirectXDriver.hx	/^	var cacheFileData : Map<String,haxe.io.Bytes>;$/;"	v
cacheLen	heaps/hxd/fs/FileInput.hx	/^	var cacheLen : Int = 0;$/;"	v
cachePos	heaps/hxd/fs/FileInput.hx	/^	var cachePos : Int = 0;$/;"	v
cached	heaps/h3d/mat/MaterialDatabase.hx	/^		var cached = db.get(model.entry.directory);$/;"	v
cachedAnimations	heaps/hxd/fmt/hmd/Library.hx	/^	var cachedAnimations : Map<String, h3d.anim.Animation>;$/;"	v
cachedBytes	heaps/hxd/snd/Manager.hx	/^	var cachedBytes   : haxe.io.Bytes;$/;"	v
cachedPassObjects	heaps/h3d/scene/RenderContext.hx	/^	var cachedPassObjects : Array<Renderer.PassObjects>;$/;"	v
cachedPos	heaps/h3d/scene/RenderContext.hx	/^	var cachedPos : Int;$/;"	v
cachedPrimitives	heaps/hxd/fmt/hmd/Library.hx	/^	var cachedPrimitives : Array<h3d.prim.HMDModel>;$/;"	v
cachedQueries	heaps/h3d/impl/Benchmark.hx	/^	var cachedQueries : QueryObject;$/;"	v
cachedShader	heaps/h3d/impl/Stage3dDriver.hx	/^		var cachedShader = null;$/;"	v
cachedShaderList	heaps/h3d/scene/RenderContext.hx	/^	var cachedShaderList : Array<hxsl.ShaderList>;$/;"	v
cachedSkin	heaps/hxd/fmt/hmd/Library.hx	/^	var cachedSkin : Map<String, h3d.anim.Skin>;$/;"	v
cachedStats	heaps/h3d/impl/Benchmark.hx	/^	var cachedStats : StatsObject;$/;"	v
calc	heaps/h2d/RenderContext.hx	/^			inline function calc(x:Float, y:Float) {$/;"	f
calcAbsPos	heaps/h2d/Interactive.hx	/^	override private function calcAbsPos()$/;"	f
calcAbsPos	heaps/h2d/Mask.hx	/^	override function calcAbsPos() {$/;"	f
calcAbsPos	heaps/h2d/Object.hx	/^	function calcAbsPos() {$/;"	f
calcAbsPos	heaps/h2d/ObjectFollower.hx	/^	override function calcAbsPos() {$/;"	f
calcAbsPos	heaps/h3d/parts/GpuParticles.hx	/^	override function calcAbsPos() {$/;"	f
calcAbsPos	heaps/h3d/scene/Object.hx	/^	function calcAbsPos() {$/;"	f
calcAbsPos	heaps/h3d/scene/Skin.hx	/^	override function calcAbsPos() {$/;"	f
calcAudibleVolume	heaps/hxd/snd/Channel.hx	/^	public function calcAudibleVolume( now : Float ) {$/;"	f
calcDataSize	heaps/hxd/Pixels.hx	/^	public static function calcDataSize( width : Int, height : Int, format : PixelFormat ) {$/;"	f
calcDone	heaps/h2d/Text.hx	/^	var calcDone:Bool;$/;"	v
calcHeight	heaps/h2d/Text.hx	/^	var calcHeight:Float;$/;"	v
calcInv	heaps/h3d/scene/MeshBatch.hx	/^		var calcInv = false;$/;"	v
calcLight	heaps/h3d/shader/AmbientLight.hx	/^		function calcLight( lightColor : Vec3 ) : Vec3 {$/;"	f
calcLighting	heaps/h3d/shader/DirLight.hx	/^		function calcLighting() : Vec3 {$/;"	f
calcLighting	heaps/h3d/shader/PointLight.hx	/^		function calcLighting( position : Vec3 ) : Vec3 {$/;"	f
calcRec	heaps/hxd/fmt/pak/Build.hx	/^		function calcRec(f:File) {$/;"	f
calcSizeHeight	heaps/h2d/Text.hx	/^	var calcSizeHeight:Float;$/;"	v
calcStride	heaps/hxd/Pixels.hx	/^	public static function calcStride( width : Int, format : PixelFormat ) {$/;"	f
calcTextWidth	heaps/h2d/Text.hx	/^	public function calcTextWidth( text : String ) {$/;"	f
calcValue	heaps/h2d/KeyFrames.hx	/^		function calcValue( index : Int ) : Float {$/;"	f
calcValues	heaps/h3d/pass/Blur.hx	/^	function calcValues() {$/;"	f
calcViewport	heaps/h2d/Scene.hx	/^		inline function calcViewport( horizontal : ScaleModeAlign, vertical : ScaleModeAlign, zoom : F/;"	f
calcWidth	heaps/h2d/Text.hx	/^	var calcWidth:Float;$/;"	v
calcXMin	heaps/h2d/Text.hx	/^	var calcXMin:Float;$/;"	v
calcYMin	heaps/h2d/Text.hx	/^	var calcYMin:Float;$/;"	v
calculatedHeight	heaps/h2d/Flow.hx	/^	public var calculatedHeight(default,null) : Int = 0;$/;"	v
calculatedHeight	heaps/h2d/Flow.hx	/^	var calculatedHeight : Float = 0.;$/;"	v
calculatedUV	heaps/h3d/shader/AlphaMap.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/Base2d.hx	/^		@var var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/GpuParticle.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/NormalMap.hx	/^        var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/Parallax.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/ScreenShader.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/SinusDeform.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/SpecularTexture.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/Texture.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/UVAnim.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/UVDelta.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/UVScroll.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/VolumeDecal.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/pbr/Lighting.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/pbr/PropsImport.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV	heaps/samples/ShaderAdvanced.hx	/^		var calculatedUV : Vec2;$/;"	v
calculatedUV2	heaps/h3d/shader/Texture2.hx	/^		var calculatedUV2 : Vec2;$/;"	v
calculatedWidth	heaps/h2d/Flow.hx	/^	public var calculatedWidth(default,null) : Int = 0;$/;"	v
calculatedWidth	heaps/h2d/Flow.hx	/^	var calculatedWidth : Float = 0.;$/;"	v
cam	heaps/h3d/scene/CameraController.hx	/^		var cam = getScene().camera;$/;"	v
cam	heaps/h3d/scene/CameraController.hx	/^		var cam = scene.camera;$/;"	v
cam	heaps/h3d/scene/Renderer.hx	/^		var cam = ctx.camera.m;$/;"	v
camCtrl	heaps/h3d/impl/Benchmark.hx	/^		var camCtrl = new h3d.scene.CameraController(s3d);$/;"	v
camDir	heaps/h3d/parts/GpuParticles.hx	/^					var camDir = ctx.camera.target.sub(ctx.camera.pos).normalized().clone();$/;"	v
camPos	heaps/h3d/parts/GpuParticles.hx	/^					var camPos = ctx.camera.pos;$/;"	v
camdist	heaps/samples/Sao.hx	/^		var camdist = 6 * wscale;$/;"	v
camera	heaps/h2d/Scene.hx	/^	public var camera(get, never) : Camera;$/;"	v
camera	heaps/h3d/parts/GpuParticles.hx	/^		var camera = ctx.camera;$/;"	v
camera	heaps/h3d/scene/RenderContext.hx	/^	public var camera : h3d.Camera;$/;"	v
camera	heaps/h3d/scene/Scene.hx	/^	public var camera : h3d.Camera;$/;"	v
camera	heaps/h3d/shader/BaseMesh.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/CubeMap.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/DirLight.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/LineShader.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/NormalMap.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/ParticleShader.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/PointLight.hx	/^		@global var camera : {$/;"	v
camera	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@global var camera : {$/;"	v
camera	heaps/samples/Camera2D.hx	/^	var camera : Camera;$/;"	v
cameraBounds	heaps/h3d/pass/DirShadowMap.hx	/^			var cameraBounds = new h3d.col.Bounds();$/;"	v
cameraCtrl	heaps/samples/Polygons.hx	/^	var cameraCtrl : h3d.scene.CameraController;$/;"	v
cameraInvViewProj	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var cameraInvViewProj : Mat4;$/;"	v
cameraInverseViewProj	heaps/h3d/shader/Blur.hx	/^		@param var cameraInverseViewProj : Mat4;$/;"	v
cameraInverseViewProj	heaps/h3d/shader/SAO.hx	/^		@ignore @param var cameraInverseViewProj : Mat4;$/;"	v
cameraInverseViewProj	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var cameraInverseViewProj : Mat4;$/;"	v
cameraPosition	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var cameraPosition : Vec3;$/;"	v
cameraPosition	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		@param var cameraPosition : Vec3;$/;"	v
cameraPositionMarker	heaps/samples/Camera2D.hx	/^	var cameraPositionMarker : h2d.Graphics;$/;"	v
cameraRotation	heaps/h3d/shader/GpuParticle.hx	/^		@param var cameraRotation : Mat3;$/;"	v
cameraStack	heaps/h2d/RenderContext.hx	/^	var cameraStack : Array<CameraStackEntry>;$/;"	v
cameraStackIndex	heaps/h2d/RenderContext.hx	/^	var cameraStackIndex : Int;$/;"	v
cameraToScene	heaps/h2d/Camera.hx	/^	public function cameraToScene( pt : h2d.col.Point ) {$/;"	f
cameraToScreen	heaps/h2d/Camera.hx	/^	public function cameraToScreen( pt : h2d.col.Point ) {$/;"	f
cameraView	heaps/h3d/shader/SAO.hx	/^		@ignore @param var cameraView : Mat3x4;$/;"	v
cameraXToScene	heaps/h2d/Camera.hx	/^	inline function cameraXToScene( mx : Float, my : Float ) : Float {$/;"	f
cameraXToScreen	heaps/h2d/Camera.hx	/^	inline function cameraXToScreen( mx : Float, my : Float ) : Float {$/;"	f
cameraYToScene	heaps/h2d/Camera.hx	/^	inline function cameraYToScene( mx : Float, my : Float ) : Float {$/;"	f
cameraYToScreen	heaps/h2d/Camera.hx	/^	inline function cameraYToScreen( mx : Float, my : Float ) : Float {$/;"	f
cameras	heaps/h2d/Scene.hx	/^	public var cameras(get, never) : haxe.ds.ReadOnlyArray<Camera>;$/;"	v
canEdit	heaps/h2d/Dropdown.hx	/^	public var canEdit(default,set) : Bool = true;$/;"	v
canEdit	heaps/h2d/TextInput.hx	/^	public var canEdit = true;$/;"	v
cancel	heaps/hxd/Event.hx	/^	public var cancel : Bool;$/;"	v
cancelEvents	heaps/h2d/Interactive.hx	/^	public var cancelEvents : Bool = false;$/;"	v
cancelEvents	heaps/h3d/scene/Interactive.hx	/^	public var cancelEvents : Bool = false;$/;"	v
canvas	heaps/h3d/impl/GlDriver.hx	/^	var canvas : js.html.CanvasElement;$/;"	v
canvas	heaps/hxd/BitmapData.hx	/^			var canvas = js.Browser.document.createCanvasElement();$/;"	v
canvas	heaps/hxd/BitmapData.hx	/^		var canvas = js.Browser.document.createCanvasElement();$/;"	v
canvas	heaps/hxd/System.js.hx	/^				var canvas = @:privateAccess hxd.Window.getInstance().canvas;$/;"	v
canvas	heaps/hxd/System.js.hx	/^		var canvas = @:privateAccess hxd.Window.getInstance().canvas;$/;"	v
canvas	heaps/hxd/Window.js.hx	/^	var canvas : js.html.CanvasElement;$/;"	v
canvas	heaps/tools/hxsl/Main.hx	/^	var canvas : js.html.CanvasElement;$/;"	v
canvasPos	heaps/hxd/Window.js.hx	/^	var canvasPos : { var width(default, never) : Float; var height(default, never) : Float; var le/;"	v
canvas_size	heaps/hxd/fmt/kframes/Data.hx	/^	var canvas_size : KFSize<Int>;$/;"	v
caps	heaps/hxd/res/Image.hx	/^			var caps = f.readInt32();$/;"	v
caps2	heaps/hxd/res/Image.hx	/^			var caps2 = f.readInt32();$/;"	v
captureBitmap	heaps/h2d/Scene.hx	/^	public function captureBitmap( ?target : Tile ) {$/;"	f
capturePixels	heaps/h3d/impl/DirectXDriver.hx	/^	override function capturePixels(tex:h3d.mat.Texture, layer:Int, mipLevel:Int, ?region:h2d.col.I/;"	f
capturePixels	heaps/h3d/impl/Driver.hx	/^	public function capturePixels( tex : h3d.mat.Texture, layer : Int, mipLevel : Int, ?region : h2/;"	f
capturePixels	heaps/h3d/impl/GlDriver.hx	/^	override function capturePixels(tex:h3d.mat.Texture, layer:Int, mipLevel:Int, ?region:h2d.col.I/;"	f
capturePixels	heaps/h3d/mat/Texture.hx	/^	public function capturePixels( face = 0, mipLevel = 0, ?region:h2d.col.IBounds ) : hxd.Pixels {$/;"	f
capturePixelsFlash	heaps/h3d/mat/Texture.hx	/^	function capturePixelsFlash() {$/;"	f
captureRenderBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function captureRenderBuffer( pixels : hxd.Pixels ) {$/;"	f
captureRenderBuffer	heaps/h3d/impl/Driver.hx	/^	public function captureRenderBuffer( pixels : hxd.Pixels ) {$/;"	f
captureRenderBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function captureRenderBuffer( pixels : hxd.Pixels ) {$/;"	f
captureRenderBuffer	heaps/h3d/impl/LogDriver.hx	/^	override function captureRenderBuffer( pixels : hxd.Pixels ) {$/;"	f
captureRenderBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function captureRenderBuffer( pixels : hxd.Pixels ) {$/;"	f
captureSubRenderBuffer	heaps/h3d/impl/GlDriver.hx	/^	function captureSubRenderBuffer( pixels : hxd.Pixels, x : Int, y : Int ) {$/;"	f
captureTexPixels	heaps/h3d/impl/DirectXDriver.hx	/^	function captureTexPixels( pixels: hxd.Pixels, tex:h3d.mat.Texture, layer:Int, mipLevel:Int, x /;"	f
caret	heaps/h2d/impl/BatchDrawState.hx	/^			var caret = 0;$/;"	v
cases	heaps/hxsl/Checker.hx	/^			var cases = [for( c in cases ) { values : [for( v in c.values ) typeWith(v, et.t)], expr : ty/;"	v
cases	heaps/hxsl/Eval.hx	/^			var cases = [for( c in cases ) { values : [for( v in c.values ) evalExpr(v)], expr : evalExpr/;"	v
castShadows	heaps/h3d/mat/Material.hx	/^	public var castShadows(default, set) : Bool;$/;"	v
cat	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cat = c.a == null ? null : c.a.t;$/;"	v
cat	heaps/hxsl/Checker.hx	/^			var cat = -1;$/;"	v
cav	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cav = c.a == null ? null : c.a.v;$/;"	v
cb	heaps/hxd/res/NanoJpeg.hx	/^					var cb = pcb[k2++] - 128;$/;"	v
cc	heaps/h2d/HtmlText.hx	/^						var cc = text.charCodeAt(k++);$/;"	v
cc	heaps/h2d/HtmlText.hx	/^				var cc = t.charCodeAt(i);$/;"	v
cc	heaps/h2d/HtmlText.hx	/^				var cc = text.charCodeAt(i);$/;"	v
cc	heaps/h2d/HtmlText.hx	/^			var cc = str.charCodeAt(splitNode.pos);$/;"	v
cc	heaps/h2d/Text.hx	/^					var cc = text.charCodeAt(k++);$/;"	v
cc	heaps/h2d/Text.hx	/^			var cc = t.charCodeAt(i);$/;"	v
cc	heaps/h2d/Text.hx	/^			var cc = text.charCodeAt(i);$/;"	v
cc	heaps/hxsl/Cache.hx	/^					var cc = name.charCodeAt(name.length - 1);$/;"	v
cc	heaps/samples/Lights.hx	/^			var cc = hxd.impl.Api.downcast(m.m.cullingCollider, h3d.col.Sphere);$/;"	v
ccur	heaps/h3d/shader/Blur.hx	/^				var ccur = texture.get(input.uv);$/;"	v
cdiff	heaps/h3d/shader/ColorKey.hx	/^			var cdiff = textureColor - colorKey;$/;"	v
cds	heaps/hxd/Window.hl.hx	/^			var cds = getCurrentDisplaySetting();$/;"	v
cdst	heaps/h3d/impl/GlDriver.hx	/^			var cdst = Pass.getBlendDst(bits);$/;"	v
cdst	heaps/h3d/impl/Stage3dDriver.hx	/^			var cdst = Pass.getBlendDst(bits);$/;"	v
cdx	heaps/hxd/poly2tri/Utils.hx	/^		var cdx = pc.x - pd.x;$/;"	v
cdx	heaps/hxd/poly2tri/Utils.hx	/^		var cdx = pc.x - pdx;$/;"	v
cdxady	heaps/hxd/poly2tri/Utils.hx	/^		var cdxady = cdx * ady;$/;"	v
cdxbdy	heaps/hxd/poly2tri/Utils.hx	/^		var cdxbdy = cdx * bdy;$/;"	v
cdy	heaps/hxd/poly2tri/Utils.hx	/^		var cdy = pc.y - pd.y;$/;"	v
cdy	heaps/hxd/poly2tri/Utils.hx	/^		var cdy = pc.y - pdy;$/;"	v
ce	heaps/h2d/Graphics.hx	/^		var ce = Math.cos(angleStart + angleLength);$/;"	v
ce1	heaps/hxd/poly2tri/Triangle.hx	/^		var ce1:Bool =  t.getConstrainedEdgeCCW( p);$/;"	v
ce2	heaps/hxd/poly2tri/Triangle.hx	/^		var ce2:Bool =  t.getConstrainedEdgeCW ( p);$/;"	v
ce3	heaps/hxd/poly2tri/Triangle.hx	/^		var ce3:Bool = ot.getConstrainedEdgeCCW(op);$/;"	v
ce4	heaps/hxd/poly2tri/Triangle.hx	/^		var ce4:Bool = ot.getConstrainedEdgeCW (op);$/;"	v
ceil	heaps/hxd/Math.hx	/^	public static inline function ceil( f : Float ) {$/;"	f
cellHeight	heaps/h3d/prim/Grid.hx	/^	public var cellHeight (default, null)  : Float;$/;"	v
cellWidth	heaps/h3d/prim/Grid.hx	/^	public var cellWidth (default, null) : Float;$/;"	v
cells	heaps/h2d/col/Voronoi.hx	/^	public var cells : Array<Cell>;$/;"	v
cells	heaps/h2d/col/Voronoi.hx	/^	var cells : Array<Cell>;$/;"	v
center	heaps/h2d/Tile.hx	/^	public function center():Tile {$/;"	f
center	heaps/h3d/col/ObjectCollider.hx	/^		var center = s.getCenter();$/;"	v
center	heaps/h3d/col/TransformCollider.hx	/^		var center = s.getCenter();$/;"	v
center	heaps/h3d/scene/CameraController.hx	/^		var center = bounds.getCenter();$/;"	v
center	heaps/samples/Domkit.hx	/^	var center : h2d.Flow;$/;"	v
center	heaps/samples/Helpers.hx	/^		var center = divisions \/ 2;$/;"	v
centroid	heaps/h2d/col/Polygon.hx	/^	public function centroid() {$/;"	f
cexpr	heaps/hxsl/Macros.hx	/^			var cexpr = [];$/;"	v
cfg	heaps/hxd/fs/FileConverter.hx	/^		var cfg : ConvertConfig = {$/;"	v
cfg	heaps/hxd/fs/FileConverter.hx	/^		var cfg = loadConfig(dirPos < 0 ? "" : path.substr(0,dirPos));$/;"	v
cgrp	heaps/h3d/scene/Object.hx	/^			var cgrp = hxd.impl.Api.downcast(c, h3d.col.Collider.GroupCollider);$/;"	v
ch	heaps/h2d/Flow.hx	/^			var ch = fillHeight ? scene.height : -1;$/;"	v
ch	heaps/h2d/domkit/Style.hx	/^		var ch = @:privateAccess obj.children;$/;"	v
ch	heaps/h3d/Matrix.hx	/^		var ch = (1 - cosA) \/ 3;$/;"	v
ch	heaps/hxd/fmt/blend/Data.hx	/^			var ch = read8();$/;"	v
ch	heaps/hxd/snd/Manager.hx	/^		var ch = channels;$/;"	v
chan	heaps/hxd/snd/openal/Emulator.hx	/^	public var chan : hxd.snd.NativeChannel;$/;"	v
change	heaps/hxd/System.hl.hx	/^			var change = currentCustomCursor.update(hxd.Timer.elapsedTime);$/;"	v
change	heaps/hxd/System.js.hx	/^			var change = currentCustomCursor.update(hxd.Timer.elapsedTime);$/;"	v
changeToBoxDemo	heaps/samples/Particles2d.hx	/^	function changeToBoxDemo() {$/;"	f
changeToConeDemo	heaps/samples/Particles2d.hx	/^	function changeToConeDemo() {$/;"	f
changeToDirectionAndDirectionAsAngleDemo	heaps/samples/Particles2d.hx	/^	function changeToDirectionAndDirectionAsAngleDemo() {$/;"	f
changeToDirectionDemo	heaps/samples/Particles2d.hx	/^	function changeToDirectionDemo() {$/;"	f
changeToPointAndDirectionAsAngleDemo	heaps/samples/Particles2d.hx	/^	function changeToPointAndDirectionAsAngleDemo() {$/;"	f
changeToPointDemo	heaps/samples/Particles2d.hx	/^	function changeToPointDemo() {$/;"	f
changed	heaps/h2d/Object.hx	/^		var changed = posChanged;$/;"	v
changed	heaps/h3d/impl/Benchmark.hx	/^		var changed = false;$/;"	v
changed	heaps/h3d/impl/Stage3dDriver.hx	/^		var changed = false;$/;"	v
changed	heaps/h3d/scene/Object.hx	/^		var changed = posChanged;$/;"	v
changed	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var changed = curFrame == null;$/;"	v
changed	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var changed = true;$/;"	v
changed	heaps/hxd/fmt/pak/Build.hx	/^			var changed = false;$/;"	v
changed	heaps/hxsl/AgalOptim.hx	/^	var changed : Bool;$/;"	v
channel	heaps/h3d/shader/SignedDistanceField.hx	/^		@const var channel : Int = 0;$/;"	v
channel	heaps/hxd/res/Sound.hx	/^	var channel : hxd.snd.Channel;$/;"	v
channel	heaps/hxd/snd/Manager.hx	/^	public var channel : Channel;$/;"	v
channel	heaps/hxd/snd/NativeChannel.hx	/^	var channel : ALChannel;$/;"	v
channel	heaps/hxd/snd/NativeChannel.hx	/^	var channel : flash.media.SoundChannel;$/;"	v
channel	heaps/hxsl/Eval.hx	/^			var channel = oldArgs[0];$/;"	v
channelGroup	heaps/hxd/snd/Channel.hx	/^	public var channelGroup(default, null) : ChannelGroup;$/;"	v
channelMode	heaps/hxsl/Eval.hx	/^			var channelMode = hxsl.Channel.createByIndex(i & 7);$/;"	v
channelVars	heaps/hxsl/Dce.hx	/^	var channelVars : Array<TVar>;$/;"	v
channels	heaps/h3d/mat/TextureChannels.hx	/^	var channels : Array<{ r : hxd.res.Image, c : hxd.Pixels.Channel }> = [];$/;"	v
channels	heaps/hxd/fmt/tiff/Reader.hx	/^		var channels = Utils.getInt(f, SamplesPerPixel);$/;"	v
channels	heaps/hxd/snd/Data.hx	/^	public var channels(default, null) : Int;$/;"	v
channels	heaps/hxd/snd/Manager.hx	/^	var channels : Channel;$/;"	v
channels	heaps/hxd/snd/webaudio/AudioTypes.hx	/^			var channels = [for (i in 0...buffer.inst.numberOfChannels) buffer.inst.getChannelData(i)];$/;"	v
channels	heaps/hxd/snd/webaudio/Context.hx	/^	public var channels : Int;$/;"	v
channels	heaps/hxsl/Globals.hx	/^	var channels : Array<Texture> = [];$/;"	v
char	heaps/h2d/HtmlText.hx	/^ 			var char = fnt.getChar(cc);$/;"	v
char	heaps/h3d/impl/DirectXDriver.hx	/^					var char = Std.parseInt(r.matched(2));$/;"	v
char	heaps/hxd/res/BDFFont.hx	/^		var char : BDFFontChar = null;$/;"	v
charCode	heaps/hxd/Event.hx	/^	public var charCode : Int;$/;"	v
charCode	heaps/hxd/Window.flash.hx	/^		var charCode = getCharCode(e);$/;"	v
chars	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var chars = xml.node.chars.elements;$/;"	v
charset	heaps/h2d/Font.hx	/^	public var charset : hxd.Charset;$/;"	v
charset	heaps/h2d/TextInput.hx	/^				var charset = hxd.Charset.getDefault();$/;"	v
check	heaps/hxsl/Checker.hx	/^	public function check( name : String, shader : Expr ) : ShaderData {$/;"	f
check	heaps/hxsl/Dce.hx	/^	function check( e : TExpr, writeTo : Array<VarDeps>, isAffected : Array<VarDeps> ) : Void {$/;"	f
check	heaps/hxsl/Macros.hx	/^						var check = new Checker();$/;"	v
check	heaps/hxsl/Printer.hx	/^	public static function check( s : ShaderData, ?from : Array<ShaderData> ) {$/;"	f
check	heaps/samples/ExtraTests.hx	/^	public static function check() {$/;"	f
checkAlloc	heaps/h3d/mat/Texture.hx	/^	function checkAlloc() {$/;"	f
checkBounds	heaps/h2d/Interactive.hx	/^	function checkBounds( e : hxd.Event ) {$/;"	f
checkBounds	heaps/h3d/col/SkinCollider.hx	/^	function checkBounds() {$/;"	f
checkBranches	heaps/hxsl/Dce.hx	/^	function checkBranches( e : TExpr ) {$/;"	f
checkConst	heaps/hxsl/Checker.hx	/^	function checkConst( e : TExpr ) {$/;"	f
checkData	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function checkData( t : { x : Array<Float>, y :Array<Float>, z:Array<Float> } ) {$/;"	f
checkError	heaps/h3d/impl/GlDriver.hx	/^		inline function checkError() {$/;"	f
checkEvents	heaps/hxd/SceneEvents.hx	/^	public function checkEvents() {$/;"	f
checkExpr	heaps/hxsl/Checker.hx	/^	function checkExpr( e : Expr, funs : Array<{ f : FunDecl, p : Position, inherit : Bool }>, isIm/;"	f
checkExpr	heaps/hxsl/Printer.hx	/^			function checkExpr( e : TExpr ) {$/;"	f
checkExpr	heaps/hxsl/Splitter.hx	/^	function checkExpr( e : TExpr ) {$/;"	f
checkFeature	heaps/h3d/impl/GlDriver.hx	/^	function checkFeature( f : Feature ) {$/;"	f
checkFiles	heaps/hxd/fs/LocalFileSystem.hx	/^	static function checkFiles() {$/;"	f
checkFocus	heaps/hxd/SceneEvents.hx	/^	function checkFocus() {$/;"	f
checkFocused	heaps/hxd/SceneEvents.hx	/^		var checkFocused = currentFocus == null;$/;"	v
checkFrame	heaps/hxd/impl/CacheAllocator.hx	/^	public function checkFrame() {$/;"	f
checkGC	heaps/hxd/impl/CacheAllocator.hx	/^	public function checkGC() {$/;"	f
checkJPG	heaps/hxd/fmt/pak/Build.hx	/^	public var checkJPG = false;$/;"	v
checkLength	heaps/hxsl/Checker.hx	/^		inline function checkLength(n,t) {$/;"	f
checkMipMapGen	heaps/h3d/mat/Texture.hx	/^	function checkMipMapGen(mipLevel,layer) {$/;"	f
checkMov	heaps/hxsl/AgalOptim.hx	/^	function checkMov( r1 : Reg, r2 : Reg ) {$/;"	f
checkMoved	heaps/hxd/SceneEvents.hx	/^		var checkMoved = !mouseCheckMove;$/;"	v
checkNearFar	heaps/h3d/col/Frustum.hx	/^	public var checkNearFar : Bool = true;$/;"	v
checkNext	heaps/hxd/fs/LocalFileSystem.hx	/^	static function checkNext() {$/;"	f
checkOGG	heaps/hxd/fmt/pak/Build.hx	/^	public var checkOGG = false;$/;"	v
checkOver	heaps/hxd/SceneEvents.hx	/^		var checkOver = false, fillOver = false, checkPush = false, cancelFocus = false, updateCursor /;"	v
checkPasses	heaps/h3d/scene/Scene.hx	/^	public var checkPasses = true;$/;"	v
checkPath	heaps/hxd/fs/LocalFileSystem.hx	/^	function checkPath( path : String ) {$/;"	f
checkPos	heaps/hxd/SceneEvents.hx	/^	var checkPos = new hxd.Event(ECheck);$/;"	v
checkReady	heaps/h2d/Video.hx	/^	function checkReady(e : js.html.Event) {$/;"	f
checkRec	heaps/hxsl/Cache.hx	/^			function checkRec( e : TExpr ) {$/;"	f
checkRec	heaps/hxsl/Cache.hx	/^			function checkRec( v : TVar ) {$/;"	f
checkResize	heaps/h2d/Scene.hx	/^	public function checkResize() {$/;"	f
checkResize	heaps/hxd/Window.js.hx	/^	function checkResize() {$/;"	f
checkSamplerRec	heaps/hxsl/Eval.hx	/^	function checkSamplerRec(t:Type) {$/;"	f
checkScene	heaps/h2d/Camera.hx	/^	inline function checkScene() {$/;"	f
checkSize	heaps/h3d/mat/Texture.hx	/^	function checkSize(width, height, mip) {$/;"	f
checkSize	heaps/h3d/scene/World.hx	/^		inline function checkSize(res:hxd.res.Image) {$/;"	f
checkTargetFormat	heaps/hxd/snd/Manager.hx	/^	function checkTargetFormat(dat : hxd.snd.Data, forceMono = false) {$/;"	f
checkText	heaps/h2d/Text.hx	/^	inline function checkText() {$/;"	f
checkTmp	heaps/hxd/res/FileTree.hx	/^	var checkTmp : Bool;$/;"	v
checkUpdate	heaps/h2d/ScaleGrid.hx	/^	function checkUpdate() {$/;"	f
checkUseful	heaps/hxsl/AgalOptim.hx	/^	function checkUseful( r : Reg, write : Bool ) {$/;"	f
checkValue	heaps/hxsl/AgalOptim.hx	/^	function checkValue( r : Reg, write : Bool ) {$/;"	f
checkVar	heaps/hxsl/Splitter.hx	/^	function checkVar( v : VarProps, vertex : Bool, vvars : Map<Int,VarProps>, p ) {$/;"	f
checkWrite	heaps/hxsl/Checker.hx	/^	function checkWrite( e : TExpr ) {$/;"	f
check_reload	heaps/hxd/System.hl.hx	/^	static function check_reload() return false;$/;"	f
checked	heaps/tools/hxsl/Main.hx	/^			var checked = checker.check("HxslShader", ast);$/;"	v
checkedScenes	heaps/h2d/domkit/Style.hx	/^		var checkedScenes = [];$/;"	v
checker	heaps/tools/hxsl/Main.hx	/^			var checker = new hxsl.Checker();$/;"	v
checkerTextureKeys	heaps/h3d/mat/Texture.hx	/^	static var checkerTextureKeys = new Map<Int,{}>();$/;"	v
checksum	heaps/hxd/fmt/pak/Data.hx	/^	public var checksum : Int;$/;"	v
cheight	heaps/samples/Interactive.hx	/^			var cheight = 1;$/;"	v
child	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var child = c.props[1].toInt();$/;"	v
childAt	heaps/h2d/Flow.hx	/^		inline function childAt(i: Int) {$/;"	f
childCount	heaps/h2d/domkit/Style.hx	/^			var childCount = 0;$/;"	v
childCount	heaps/hxd/clipper/Clipper.hx	/^	public var childCount(get, never) : Int;$/;"	v
children	heaps/h2d/Object.hx	/^	var children : Array<Object>;$/;"	v
children	heaps/h3d/scene/Object.hx	/^	var children : Array<Object>;$/;"	v
childs	heaps/hxd/clipper/Clipper.hx	/^	public var childs(default, null) : Array<PolyNode>;$/;"	v
childs	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var childs : Array<TmpObject>;$/;"	v
childs	heaps/hxd/fmt/fbx/Data.hx	/^	var childs : Array<FbxNode>;$/;"	v
childs	heaps/hxd/fmt/fbx/Parser.hx	/^		var childs : Array<FbxNode> = new Array();$/;"	v
childs	heaps/hxd/fmt/spine/Data.hx	/^	public var childs : Array<Bone>;$/;"	v
chn	heaps/hxd/snd/webaudio/Driver.hx	/^					var chn = buffer.inst.getChannelData(0);$/;"	v
chunkSize	heaps/h3d/scene/World.hx	/^	public var chunkSize(default,null) : Int;$/;"	v
chunks	heaps/h3d/scene/World.hx	/^	var chunks : Map<Int,WorldChunk>;$/;"	v
chunksBounds	heaps/h3d/scene/World.hx	/^	var chunksBounds : { xMin : Int, yMin : Int, xMax : Int, yMax : Int };$/;"	v
ci	heaps/hxd/res/Gradients.hx	/^			var ci = 0; \/\/ color index$/;"	v
cid	heaps/h3d/impl/LogDriver.hx	/^					var cid = Std.parseInt(r.matched(4)) << 2;$/;"	v
cid	heaps/h3d/impl/LogDriver.hx	/^					var cid = Std.parseInt(r.matched(4));$/;"	v
cid	heaps/h3d/impl/Stage3dDriver.hx	/^				var cid = Std.parseInt(r.matched(1)) << 2;$/;"	v
cid	heaps/h3d/scene/World.hx	/^		var cid = makeId(ix,iy);$/;"	v
cid	heaps/hxd/Pad.hx	/^					var cid = c.id;$/;"	v
cid	heaps/hxd/fmt/bfnt/FontParser.hx	/^							var cid = bytes.readInt32();$/;"	v
cid	heaps/hxd/res/NanoJpeg.hx	/^	public var cid : Int;$/;"	v
cid	heaps/hxsl/Checker.hx	/^				var cid = Std.int(idx \/ 3);$/;"	v
cin	heaps/hxd/res/NanoJpeg.hx	/^		var cin = new FastBytes(c.pixels);$/;"	v
circle	heaps/h2d/TileGroup.hx	/^	public inline function circle( x : Float, y : Float, ray : Float, size: Float, c : Int) {$/;"	f
circle	heaps/h2d/col/Voronoi.hx	/^		var circle = arc.circleEvent;$/;"	v
circle	heaps/h2d/col/Voronoi.hx	/^		var circle = beachsection.circleEvent,$/;"	v
circle	heaps/h3d/scene/Sphere.hx	/^		inline function circle(f) {$/;"	f
circleEvent	heaps/h2d/col/Voronoi.hx	/^		var circleEvent = this.circleEventJunkyard.pop();$/;"	v
circleEvent	heaps/h2d/col/Voronoi.hx	/^	public var circleEvent : CircleEvent;$/;"	v
circleEventJunkyard	heaps/h2d/col/Voronoi.hx	/^	var circleEventJunkyard : Array<CircleEvent>;$/;"	v
circleEvents	heaps/h2d/col/Voronoi.hx	/^	var circleEvents : RBTree<CircleEvent>;$/;"	v
circleShape	heaps/samples/Interactive2D.hx	/^	var circleShape : Circle;$/;"	v
ck	heaps/h3d/parts/Emitter.hx	/^		var ck = colorMap;$/;"	v
cl	heaps/hxd/fs/EmbedFileSystem.hx	/^		var cl = null;$/;"	v
cl	heaps/hxsl/CacheFile.hx	/^		var cl = Type.resolveClass(name);$/;"	v
cl	heaps/hxsl/Shader.hx	/^		var cl : Dynamic = std.Type.getClass(this);$/;"	v
clamp	heaps/hxd/Math.hx	/^	public static inline function clamp( f : Float, min = 0., max = 1. ) {$/;"	f
cleanCache	heaps/hxd/res/Loader.hx	/^	public function cleanCache() {$/;"	f
cleanCache	heaps/hxd/snd/Manager.hx	/^	public function cleanCache() {$/;"	f
cleanChunk	heaps/h3d/scene/World.hx	/^	function cleanChunk( c : WorldChunk ) {$/;"	f
cleanManagedBuffers	heaps/h3d/impl/MemoryManager.hx	/^	public function cleanManagedBuffers() {$/;"	f
cleanParts	heaps/h3d/parts/GpuParticles.hx	/^	function cleanParts( g : GpuPartGroup, pneeded : Int, checkMove = false ) {$/;"	f
cleanPasses	heaps/h3d/scene/MeshBatch.hx	/^	function cleanPasses() {$/;"	f
cleanRec	heaps/hxd/res/FileTree.hx	/^		function cleanRec(f:FileTreeData) {$/;"	f
cleanRuntime	heaps/hxsl/CacheFile.hx	/^	function cleanRuntime( r : RuntimeShader ) {$/;"	f
cleanRuntimeData	heaps/hxsl/CacheFile.hx	/^	function cleanRuntimeData(r:hxsl.RuntimeShader.RuntimeShaderData) {$/;"	f
cleanTextures	heaps/h3d/impl/MemoryManager.hx	/^	public function cleanTextures( force = true ) {$/;"	f
cleanVar	heaps/hxsl/Linker.hx	/^		function cleanVar( v : TVar ) {$/;"	f
cleanup	heaps/h3d/impl/Benchmark.hx	/^	function cleanup() {$/;"	f
cleanup	heaps/hxd/res/NanoJpeg.hx	/^	function cleanup() {$/;"	f
clear	heaps/h2d/Graphics.hx	/^	public function clear() {$/;"	f
clear	heaps/h2d/RenderContext.hx	/^	public function clear(color) {$/;"	f
clear	heaps/h2d/SpriteBatch.hx	/^	public function clear() {$/;"	f
clear	heaps/h2d/TileGroup.hx	/^	public function clear() : Void {$/;"	f
clear	heaps/h2d/TileGroup.hx	/^	public function clear() {$/;"	f
clear	heaps/h2d/ZGroup.hx	/^	public function clear(){$/;"	f
clear	heaps/h2d/impl/BatchDrawState.hx	/^	public function clear() {$/;"	f
clear	heaps/h3d/Engine.hx	/^	public function clear( ?color : Int, ?depth : Float, ?stencil : Int ) {$/;"	f
clear	heaps/h3d/impl/Benchmark.hx	/^	override function clear() {$/;"	f
clear	heaps/h3d/impl/DirectXDriver.hx	/^	override function clear(?color:h3d.Vector, ?depth:Float, ?stencil:Int) {$/;"	f
clear	heaps/h3d/impl/Driver.hx	/^	public function clear( ?color : h3d.Vector, ?depth : Float, ?stencil : Int ) {$/;"	f
clear	heaps/h3d/impl/GlDriver.hx	/^	override function clear( ?color : h3d.Vector, ?depth : Float, ?stencil : Int ) {$/;"	f
clear	heaps/h3d/impl/LogDriver.hx	/^	override function clear( ?color : h3d.Vector, ?depth : Float, ?stencil : Int ) {$/;"	f
clear	heaps/h3d/impl/Stage3dDriver.hx	/^	override function clear( ?color : h3d.Vector, ?depth : Float, ?stencil : Int ) {$/;"	f
clear	heaps/h3d/mat/Texture.hx	/^	public function clear( color : Int, alpha = 1., ?layer = -1 ) {$/;"	f
clear	heaps/h3d/parts/Emitter.hx	/^	override function clear() {$/;"	f
clear	heaps/h3d/parts/Particles.hx	/^	public function clear() {$/;"	f
clear	heaps/h3d/pass/PassList.hx	/^	public function clear() {$/;"	f
clear	heaps/h3d/pass/PointShadowMap.hx	/^	inline function clear( t : h3d.mat.Texture, ?layer = -1 ) {$/;"	f
clear	heaps/h3d/prim/BigPrimitive.hx	/^	public function clear() {$/;"	f
clear	heaps/h3d/scene/Graphics.hx	/^	public function clear() {$/;"	f
clear	heaps/h3d/scene/Renderer.hx	/^	inline function clear( ?color, ?depth, ?stencil ) {$/;"	f
clear	heaps/h3d/scene/Trail.hx	/^	public function clear() {$/;"	f
clear	heaps/hxd/BitmapData.hx	/^	public function clear( color : Int ) {$/;"	f
clear	heaps/hxd/Pixels.hx	/^	public function clear( color : Int, preserveMask = 0 ) {$/;"	f
clear	heaps/hxd/WaitEvent.hx	/^	public function clear() {$/;"	f
clear	heaps/hxd/clipper/Clipper.hx	/^	public function clear() {$/;"	f
clear	heaps/hxd/clipper/Clipper.hx	/^	public function clear()$/;"	f
clear	heaps/hxd/clipper/Clipper.hx	/^    public function clear() {$/;"	f
clear	heaps/hxd/poly2tri/Basin.hx	/^	public function clear()$/;"	f
clear	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function clear()$/;"	f
clear	heaps/hxsl/Cache.hx	/^	public static function clear() {$/;"	f
clear	heaps/samples/Particles2d.hx	/^	function clear():Void {$/;"	f
clearCache	heaps/hxd/fs/LocalFileSystem.hx	/^	public function clearCache() {$/;"	f
clearDelunayEdges	heaps/hxd/poly2tri/Triangle.hx	/^	public function clearDelunayEdges()$/;"	f
clearDepthColor	heaps/h3d/pass/PointShadowMap.hx	/^	var clearDepthColor = new h3d.Vector(1,1,1,1);$/;"	v
clearF	heaps/h3d/Engine.hx	/^	public function clearF( color : h3d.Vector, ?depth : Float, ?stencil : Int ) {$/;"	f
clearF	heaps/h3d/mat/Texture.hx	/^	public function clearF( r : Float = 0., g : Float = 0., b : Float = 0., a : Float = 0., layer =/;"	f
clearNeigbors	heaps/hxd/poly2tri/Triangle.hx	/^	public function clearNeigbors()$/;"	f
clearPreview	heaps/h2d/domkit/Style.hx	/^	function clearPreview() {$/;"	f
clearRZ	heaps/h2d/RenderContext.hx	/^	inline function clearRZ() {$/;"	f
clearReg	heaps/hxsl/AgalOptim.hx	/^			inline function clearReg() {$/;"	f
clearRenderZone	heaps/h2d/RenderContext.hx	/^	public inline function clearRenderZone() {$/;"	f
clickPos	heaps/h2d/Dropdown.hx	/^			var clickPos = dropdownList.localToGlobal(new h2d.col.Point(e.relX, e.relY));$/;"	v
clift	heaps/hxd/poly2tri/Utils.hx	/^		var clift = cdx * cdx + cdy * cdy;$/;"	v
clipBounds	heaps/h2d/Object.hx	/^	function clipBounds( ctx : RenderContext, bounds : h2d.col.Bounds, scaleX = 1., scaleY = 1. ) {$/;"	f
clipBounds	heaps/h2d/Scene.hx	/^	override function clipBounds(ctx:RenderContext, bounds:h2d.col.Bounds, scaleX = 1., scaleY = 1./;"	f
clipBounds	heaps/h3d/parts/GpuParticles.hx	/^	public var clipBounds : Bool				= false;$/;"	v
clipBounds	heaps/h3d/shader/GpuParticle.hx	/^		@const var clipBounds : Bool;$/;"	v
clipEdge	heaps/h2d/col/Voronoi.hx	/^	function clipEdge(edge:Edge, bbox:Bounds) {$/;"	f
clipEdges	heaps/h2d/col/Voronoi.hx	/^	function clipEdges(bbox:Bounds) {$/;"	f
clipRenderZone	heaps/h2d/RenderContext.hx	/^	public function clipRenderZone( x : Float, y : Float, w : Float, h : Float ) {$/;"	f
clipViewport	heaps/h2d/Camera.hx	/^	public var clipViewport : Bool;$/;"	v
clip_x0	heaps/hxd/BitmapData.hx	/^			var clip_x0 : Int;$/;"	v
clip_x1	heaps/hxd/BitmapData.hx	/^			var clip_x1 : Int;$/;"	v
clip_y0	heaps/hxd/BitmapData.hx	/^			var clip_y0 : Int;$/;"	v
clip_y1	heaps/hxd/BitmapData.hx	/^			var clip_y1 : Int;$/;"	v
clipperOp	heaps/h2d/col/IPolygon.hx	/^	function clipperOp( p : IPolygon, op, withHoles ) : IPolygons {$/;"	f
clipperOp	heaps/h2d/col/IPolygons.hx	/^	function clipperOp( p : IPolygons, op, withHoles ) : IPolygons {$/;"	f
clone	heaps/h2d/Font.hx	/^	public function clone() {$/;"	f
clone	heaps/h2d/Tile.hx	/^	public function clone() : Tile {$/;"	f
clone	heaps/h2d/col/Bounds.hx	/^	public inline function clone() : Bounds {$/;"	f
clone	heaps/h2d/col/IBounds.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h2d/col/IPoint.hx	/^	public inline function clone() : IPoint {$/;"	f
clone	heaps/h2d/col/Matrix.hx	/^	public function clone() {$/;"	f
clone	heaps/h2d/col/Point.hx	/^	public inline function clone() : Point {$/;"	f
clone	heaps/h2d/col/Polynomial.hx	/^	public function clone() {$/;"	f
clone	heaps/h2d/impl/PointApi.hx	/^	function clone() : Point;$/;"	f
clone	heaps/h3d/Buffer.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/Camera.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/Matrix.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/Quat.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/Vector.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/anim/Animation.hx	/^	function clone( ?a : Animation ) : Animation {$/;"	f
clone	heaps/h3d/anim/Animation.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/anim/BufferAnimation.hx	/^	override function clone() : AnimatedObject {$/;"	f
clone	heaps/h3d/anim/BufferAnimation.hx	/^	override function clone(?a:Animation) {$/;"	f
clone	heaps/h3d/anim/LinearAnimation.hx	/^	override function clone() : AnimatedObject {$/;"	f
clone	heaps/h3d/anim/LinearAnimation.hx	/^	override function clone(?a:Animation) {$/;"	f
clone	heaps/h3d/anim/SimpleBlend.hx	/^	override function clone(?a : Animation) : Animation {$/;"	f
clone	heaps/h3d/anim/Transition.hx	/^	override function clone(?a : Animation) : Animation {$/;"	f
clone	heaps/h3d/col/Bounds.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/col/Frustum.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/col/IPoint.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/col/Point.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/col/Polygon.hx	/^		var clone = new TriPlane();$/;"	v
clone	heaps/h3d/col/Polygon.hx	/^		var clone = new h3d.col.Polygon();$/;"	v
clone	heaps/h3d/col/Polygon.hx	/^	public function clone() : h3d.col.Polygon {$/;"	f
clone	heaps/h3d/col/Polygon.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/col/Ray.hx	/^	public inline function clone() {$/;"	f
clone	heaps/h3d/mat/BaseMaterial.hx	/^	public function clone( ?m : BaseMaterial ) : BaseMaterial {$/;"	f
clone	heaps/h3d/mat/Material.hx	/^	override function clone( ?m : BaseMaterial ) : BaseMaterial {$/;"	f
clone	heaps/h3d/mat/Pass.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/mat/PbrMaterial.hx	/^	override function clone( ?m : BaseMaterial ) : BaseMaterial {$/;"	f
clone	heaps/h3d/mat/Stencil.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/mat/Texture.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/mat/TextureArray.hx	/^	override function clone() {$/;"	f
clone	heaps/h3d/prim/UV.hx	/^	public function clone() {$/;"	f
clone	heaps/h3d/scene/Box.hx	/^	public override function clone( ?o : h3d.scene.Object ) : h3d.scene.Object {$/;"	f
clone	heaps/h3d/scene/Mesh.hx	/^	override function clone( ?o : Object ) : Object {$/;"	f
clone	heaps/h3d/scene/MultiMaterial.hx	/^	override function clone( ?o : Object ) {$/;"	f
clone	heaps/h3d/scene/Object.hx	/^	public function clone( ?o : Object ) : Object {$/;"	f
clone	heaps/h3d/scene/Scene.hx	/^	override function clone( ?o : Object ) {$/;"	f
clone	heaps/h3d/scene/Skin.hx	/^	override function clone( ?o : Object ) {$/;"	f
clone	heaps/h3d/scene/World.hx	/^	public function clone() : WorldMaterial {$/;"	f
clone	heaps/h3d/scene/pbr/DirLight.hx	/^	public override function clone( ?o : h3d.scene.Object ) : h3d.scene.Object {$/;"	f
clone	heaps/h3d/scene/pbr/PointLight.hx	/^	public override function clone( ?o : h3d.scene.Object ) : h3d.scene.Object {$/;"	f
clone	heaps/h3d/scene/pbr/SpotLight.hx	/^	public override function clone( ?o : h3d.scene.Object ) : h3d.scene.Object {$/;"	f
clone	heaps/hxd/BitmapData.hx	/^	public function clone() {$/;"	f
clone	heaps/hxd/Pixels.hx	/^	public function clone() {$/;"	f
clone	heaps/hxd/Worker.hx	/^	function clone() : Worker<T> {$/;"	f
clone	heaps/hxsl/RuntimeShader.hx	/^	public function clone( resetGID = false ) {$/;"	f
clone	heaps/hxsl/Shader.hx	/^	public function clone() : Shader {$/;"	f
clone	heaps/hxsl/ShaderList.hx	/^	public function clone() {$/;"	f
close	heaps/h2d/Dropdown.hx	/^	public function close() {$/;"	f
close	heaps/hxd/fs/FileInput.hx	/^	override function close() {$/;"	f
close	heaps/hxd/impl/Air3File.hx	/^	override function close() {$/;"	f
close	heaps/hxd/net/Socket.hx	/^	public function close() {$/;"	f
close	heaps/hxd/net/SocketHost.hx	/^	function close() {$/;"	f
closeCells	heaps/h2d/col/Voronoi.hx	/^	function closeCells(bbox:Bounds) {$/;"	f
closeDevice	heaps/hxd/snd/openal/Emulator.hx	/^	public static function closeDevice(device : Device) : Bool {$/;"	f
closeMe	heaps/h2d/col/Voronoi.hx	/^	public var closeMe : Bool;$/;"	v
closed	heaps/h2d/Graphics.hx	/^		var closed = p.x == prev.x && p.y == prev.y;$/;"	v
closed	heaps/h3d/scene/Graphics.hx	/^		var closed = p.x == prev.x && p.y == prev.y && p.z == prev.z;$/;"	v
closest	heaps/h2d/col/Polygon.hx	/^		var closest = null;$/;"	v
closestCommand	heaps/h2d/Console.hx	/^		var closestCommand = "";$/;"	v
closestProj	heaps/h2d/col/Polygon.hx	/^		var closestProj = null;$/;"	v
clpr	heaps/hxd/clipper/Clipper.hx	/^		var clpr = new Clipper();$/;"	v
cmd	heaps/h2d/Console.hx	/^			var cmd = tf.text;$/;"	v
cmd	heaps/h2d/Console.hx	/^		var cmd = commands.get(cmdName);$/;"	v
cmd	heaps/hxd/fs/Convert.hx	/^		var cmd = "oggenc";$/;"	v
cmd	heaps/hxd/fs/Convert.hx	/^	var cmd : String;$/;"	v
cmd	heaps/hxd/fs/FileConverter.hx	/^			var cmd = makeCommmand(Reflect.field(merge,f));$/;"	v
cmd	heaps/hxd/fs/FileConverter.hx	/^		var cmd : ConvertCommand = { conv : loadConvert(obj.convert) };$/;"	v
cmdName	heaps/h2d/Console.hx	/^		var cmdName = args[0];$/;"	v
cmp	heaps/h3d/impl/DirectXDriver.hx	/^			var cmp = Pass.getDepthTest(bits);$/;"	v
cmp	heaps/h3d/impl/GlDriver.hx	/^			var cmp = Pass.getDepthTest(bits);$/;"	v
cmp	heaps/h3d/impl/Stage3dDriver.hx	/^			var cmp = Pass.getDepthTest(bits);$/;"	v
cmp	heaps/h3d/pass/FXAA.hx	/^			var cmp = vec2(lumB, -lumB) > vec2(lumMin, -lumMax);$/;"	v
cmpPoints	heaps/hxd/poly2tri/Point.hx	/^	public static function cmpPoints(l:Point,r:Point)$/;"	f
cname	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cname = cn.getName();$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^			var cnt = PointCount(outRec.pts);$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^			var cnt:Int = PointCount(p);$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^		var cnt = childs.length;$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^		var cnt = pol.length;$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^		var cnt = poly.length;$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^        var cnt = m_IntersectList.length;$/;"	v
cnt	heaps/hxd/clipper/Clipper.hx	/^        var cnt = path.length;$/;"	v
cnt	heaps/hxd/snd/NativeChannel.hx	/^		var cnt = driver.getProcessedBuffers(src);$/;"	v
cnt	heaps/hxd/snd/webaudio/Driver.hx	/^		var cnt = 0;$/;"	v
cnx	heaps/hxd/fmt/fbx/Filter.hx	/^				var cnx = [];$/;"	v
code	heaps/h3d/impl/DirectXDriver.hx	/^			var code = new hxsl.HlslOut().run(s.data);$/;"	v
code	heaps/h3d/impl/GlDriver.hx	/^			var code = gl.checkFramebufferStatus(GL.FRAMEBUFFER);$/;"	v
code	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var code = parseCode(c.att.code);$/;"	v
code	heaps/hxd/fmt/blend/Data.hx	/^	public var code:String;$/;"	v
code	heaps/hxd/fmt/hbson/Reader.hx	/^		var code = input.readByte();$/;"	v
code	heaps/hxd/fs/Convert.hx	/^		var code = Sys.command(cmd, args);$/;"	v
code	heaps/hxd/res/BDFFont.hx	/^	public var code : Int;$/;"	v
code	heaps/hxd/res/NanoJpeg.hx	/^					var code = get(i);$/;"	v
code	heaps/hxsl/AgalOptim.hx	/^	var code : Array<Opcode>;$/;"	v
code	heaps/hxsl/AgalOut.hx	/^	var code : Array<Opcode>;$/;"	v
code	heaps/hxsl/CacheFileBuilder.hx	/^			var code = out.run(rd.data);$/;"	v
code	heaps/hxsl/RuntimeShader.hx	/^	public var code : String;$/;"	v
code	heaps/tools/hxsl/Main.hx	/^		var code = text.value;$/;"	v
codeLines	heaps/h3d/impl/GlDriver.hx	/^			var codeLines = shader.code.split("\\n");$/;"	v
codeLines	heaps/tools/hxsl/Main.hx	/^					var codeLines = code.split("\\n");$/;"	v
codePos	heaps/hxsl/AgalOptim.hx	/^	var codePos : Int;$/;"	v
codegen	heaps/tools/mikktspace/Makefile	/^codegen:$/;"	t
codes	heaps/tools/hxsl/Main.hx	/^	var codes : Map<Output,String>;$/;"	v
coefA	heaps/h3d/col/Capsule.hx	/^		var coefA = Q.dot(Q);$/;"	v
coefB	heaps/h3d/col/Capsule.hx	/^		var coefB = 2.0 * Q.dot(R);$/;"	v
coefC	heaps/h3d/col/Capsule.hx	/^		var coefC = R.dot(R) - (this.r * this.r);$/;"	v
col	heaps/h3d/col/SkinCollider.hx	/^	var col : PolygonBuffer;$/;"	v
col	heaps/h3d/col/SkinCollider.hx	/^	var col : SkinCollider;$/;"	v
col	heaps/h3d/pass/Shadows.hx	/^			var col = p.obj.cullingCollider;$/;"	v
col	heaps/h3d/prim/ModelCache.hx	/^				var col = cast(prim.getCollider(), h3d.col.Collider.OptimizedCollider);$/;"	v
col	heaps/h3d/scene/Object.hx	/^		var col = getGlobalCollider();$/;"	v
col	heaps/h3d/scene/Object.hx	/^		var col = getLocalCollider();$/;"	v
col	heaps/h3d/scene/Skin.hx	/^		var col = cast(primitive.getCollider(), h3d.col.Collider.OptimizedCollider);$/;"	v
col	heaps/h3d/scene/pbr/Renderer.hx	/^			var col = p.obj.cullingCollider;$/;"	v
col	heaps/samples/Interactive.hx	/^			var col = m.getBounds();$/;"	v
col	heaps/samples/Interactive.hx	/^			var col = new h3d.col.Capsule(p1, p2, cradius);$/;"	v
colWidth	heaps/h2d/Flow.hx	/^	public var colWidth(default, set) : Null<Int>;$/;"	v
colbits	heaps/hxd/res/Image.hx	/^					var colbits = f.readByte();$/;"	v
collect	heaps/hxsl/Linker.hx	/^	function collect( cur : ShaderInfos, out : Array<ShaderInfos>, vertex : Bool ) {$/;"	f
collectGlobals	heaps/hxsl/HlslOut.hx	/^	function collectGlobals( m : Map<TGlobal,Bool>, e : TExpr ) {$/;"	f
collectJoints	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		function collectJoints(j:h3d.anim.Skin.Joint) {$/;"	f
collide	heaps/h2d/CdbLevel.hx	/^		var collide = null;$/;"	v
collide	heaps/h3d/col/Bounds.hx	/^	public inline function collide( b : Bounds ) {$/;"	f
collide	heaps/h3d/col/Ray.hx	/^	public inline function collide( b : Bounds ) : Bool {$/;"	f
collide	heaps/h3d/parts/Data.hx	/^	public var collide : Bool;$/;"	v
collideBounds	heaps/h2d/col/Circle.hx	/^	public inline function collideBounds( b : Bounds ) : Bool {$/;"	f
collideCircle	heaps/h2d/col/Circle.hx	/^	public inline function collideCircle( c : Circle ) : Bool {$/;"	f
collideFrustum	heaps/h3d/col/Ray.hx	/^	public inline function collideFrustum( mvp : Matrix ) {$/;"	f
collideKill	heaps/h3d/parts/Data.hx	/^	public var collideKill : Bool;$/;"	v
collideOnAny	heaps/h2d/col/PixelsCollider.hx	/^	public var collideOnAny : Bool;$/;"	v
collidePart	heaps/h3d/parts/Collider.hx	/^	public function collidePart( p : Particle, normal : h3d.Vector ) : Bool;$/;"	f
collider	heaps/h3d/col/ObjectCollider.hx	/^	public var collider : Collider;$/;"	v
collider	heaps/h3d/col/TransformCollider.hx	/^	public var collider : Collider;$/;"	v
collider	heaps/h3d/parts/Emitter.hx	/^	public var collider : Collider;$/;"	v
collider	heaps/h3d/prim/HMDModel.hx	/^	var collider : h3d.col.Collider;$/;"	v
colliders	heaps/h3d/col/Collider.hx	/^	public var colliders : Array<Collider>;$/;"	v
colliders	heaps/h3d/prim/ModelCache.hx	/^			var colliders = [];$/;"	v
colliders	heaps/h3d/scene/Object.hx	/^		var colliders = [];$/;"	v
color	Main.hx	/^			var color:Int = Math.round(Math.random()*0xFFFFFF);$/;"	v
color	heaps/h2d/Drawable.hx	/^	public var color(default,default) : h3d.Vector;$/;"	v
color	heaps/h2d/Tile.hx	/^				var color : Int = b.getPixel(x + px, y + py);$/;"	v
color	heaps/h2d/domkit/BaseComponents.hx	/^		var color = transitionColor(bg1.color, bg2.color, v);$/;"	v
color	heaps/h2d/filter/Glow.hx	/^	public var color : Int;$/;"	v
color	heaps/h2d/filter/InnerGlow.hx	/^			var color = mix(src, glow, alpha);$/;"	v
color	heaps/h2d/filter/InnerGlow.hx	/^		@param var color : Vec3;$/;"	v
color	heaps/h2d/filter/InnerGlow.hx	/^	public var color : Int;$/;"	v
color	heaps/h2d/filter/Mask.hx	/^			var color = texture.get(input.uv);$/;"	v
color	heaps/h2d/filter/Outline.hx	/^	public var color(get, set) : Int;$/;"	v
color	heaps/h3d/impl/Benchmark.hx	/^				var color = new h3d.Vector();$/;"	v
color	heaps/h3d/impl/DirectXDriver.hx	/^						var color = h3d.mat.Defaults.loadingTextureColor;$/;"	v
color	heaps/h3d/impl/GlDriver.hx	/^						var color = h3d.mat.Defaults.loadingTextureColor;$/;"	v
color	heaps/h3d/impl/Stage3dDriver.hx	/^					var color = h3d.mat.Defaults.loadingTextureColor;$/;"	v
color	heaps/h3d/mat/Material.hx	/^	public var color(get, set) : Vector;$/;"	v
color	heaps/h3d/mat/Texture.hx	/^		var color = new h3d.Vector(r,g,b,a);$/;"	v
color	heaps/h3d/pass/Border.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/pass/ColorMatrix.hx	/^				var color = texture.get(input.uv);$/;"	v
color	heaps/h3d/pass/DefaultShadowMap.hx	/^	public var color : h3d.Vector;$/;"	v
color	heaps/h3d/pass/FXAA.hx	/^			var color : Vec4;$/;"	v
color	heaps/h3d/pass/Outline.hx	/^	public var color : Int;$/;"	v
color	heaps/h3d/scene/Box.hx	/^	public var color : Int;$/;"	v
color	heaps/h3d/scene/Light.hx	/^	public var color(get, set) : h3d.Vector;$/;"	v
color	heaps/h3d/scene/Sphere.hx	/^	public var color : Int;$/;"	v
color	heaps/h3d/scene/pbr/Environment.hx	/^			var color = vec3(0.);$/;"	v
color	heaps/h3d/shader/Base2d.hx	/^			var color : Vec4;$/;"	v
color	heaps/h3d/shader/Base2d.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/BaseMesh.hx	/^			var color : Vec4;$/;"	v
color	heaps/h3d/shader/BaseMesh.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/Blur.hx	/^				var color = vec4(0, 0, 0, 0);$/;"	v
color	heaps/h3d/shader/ColorAdd.hx	/^		@param var color : Vec3;$/;"	v
color	heaps/h3d/shader/ColorMult.hx	/^		@perInstance @param var color : Vec4;$/;"	v
color	heaps/h3d/shader/DirLight.hx	/^		@param var color : Vec3;$/;"	v
color	heaps/h3d/shader/FixedColor.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/GenTexture.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/GpuParticle.hx	/^		@param var color : Sampler2D;$/;"	v
color	heaps/h3d/shader/Outline.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/Outline2D.hx	/^		@param var color : Vec4;$/;"	v
color	heaps/h3d/shader/PointLight.hx	/^		@param var color : Vec3;$/;"	v
color	heaps/h3d/shader/VertexColor.hx	/^			var color : Vec3;$/;"	v
color	heaps/h3d/shader/VertexColorAlpha.hx	/^			var color : Vec4;$/;"	v
color	heaps/h3d/shader/pbr/Lighting.hx	/^					var color : Vec3;$/;"	v
color	heaps/h3d/shader/pbr/Slides.hx	/^			var color : Vec3;$/;"	v
color	heaps/h3d/shader/pbr/ToneMapping.hx	/^			var color = hdrColor;$/;"	v
color	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var color = colorTexture.get(calculatedUV);$/;"	v
color	heaps/hxd/fmt/fbx/Geometry.hx	/^		var color = root.get("LayerElementColor",true);$/;"	v
color	heaps/hxd/fmt/grd/Data.hx	/^	public var color    : Color;$/;"	v
color	heaps/hxd/fmt/grd/Reader.hx	/^			var color = Color.RGB(0, 0, 0);$/;"	v
color	heaps/hxd/fmt/spine/Data.hx	/^	public var color : h3d.Vector;$/;"	v
color	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var color : String;$/;"	v
color	heaps/hxd/fmt/spine/JsonData.hx	/^	var color : String;$/;"	v
color	heaps/hxd/impl/Properties.hx	/^						var color = Std.parseInt("0x" + v.substr(1));$/;"	v
color	heaps/hxd/res/Gradients.hx	/^				var color : h3d.Vector;$/;"	v
color	heaps/samples/FxView.hx	/^		@param var color : Vec3;$/;"	v
color	heaps/samples/Interactive.hx	/^			var color = new h3d.Vector(c, c * 0.6, c * 0.6);$/;"	v
color	heaps/samples/Interactive.hx	/^		var color = m.material.color.clone();$/;"	v
color	heaps/samples/MeshBatch.hx	/^	public var color : h3d.Vector;$/;"	v
color	heaps/samples/Network.hx	/^	@:s var color : Int;$/;"	v
color	heaps/samples/Pbr.hx	/^		var color = new h3d.Vector(1, 0, 0);$/;"	v
color	heaps/samples/Pbr.hx	/^	var color : h2d.Bitmap;$/;"	v
color	heaps/samples/Sao.hx	/^		var color = allocTarget("color");$/;"	v
color2	heaps/h3d/pass/ColorMatrix.hx	/^				var color2 = hasSecondMatrix ? apply(color,matrix2) : color;$/;"	v
colorAdd	heaps/h2d/Drawable.hx	/^	public var colorAdd(get, set) : Null<h3d.Vector>;$/;"	v
colorAdd	heaps/h3d/Matrix.hx	/^	public inline function colorAdd( c : Int ) {$/;"	f
colorBG	heaps/h2d/Tile.hx	/^		var colorBG = bmp.getPixel(bmp.width - 1, bmp.height - 1);$/;"	v
colorBits	heaps/h3d/Matrix.hx	/^	public function colorBits( bits : Int, blend : Float ) {$/;"	f
colorContrast	heaps/h3d/Matrix.hx	/^	public function colorContrast( contrast : Float ) {$/;"	f
colorGain	heaps/h3d/Matrix.hx	/^	public function colorGain( color : Int, alpha : Float ) {$/;"	f
colorGradient	heaps/h2d/Particles.hx	/^	public var colorGradient(default,set) : h3d.mat.Texture;$/;"	v
colorGradient	heaps/h3d/parts/GpuParticles.hx	/^	public var colorGradient : h3d.mat.Texture	= null;$/;"	v
colorHue	heaps/h3d/Matrix.hx	/^	public function colorHue( hue : Float ) {$/;"	f
colorID	heaps/h3d/pass/HardwarePick.hx	/^		@param var colorID : Vec4;$/;"	v
colorID	heaps/h3d/pass/HardwarePick.hx	/^	var colorID : Int;$/;"	v
colorKey	heaps/h2d/Drawable.hx	/^	public var colorKey(default, set) : Null<Int>;$/;"	v
colorKey	heaps/h3d/shader/ColorKey.hx	/^		@param var colorKey : Vec4;$/;"	v
colorLerp	heaps/hxd/Math.hx	/^	public static function colorLerp( c1 : Int, c2 : Int, k : Float ) {$/;"	f
colorLightness	heaps/h3d/Matrix.hx	/^	public function colorLightness( lightness : Float ) {$/;"	f
colorMap	heaps/h3d/parts/Emitter.hx	/^	var colorMap : ColorKey;$/;"	v
colorMask	heaps/h3d/mat/Pass.hx	/^	public var colorMask : Int;$/;"	v
colorMask	heaps/h3d/mat/PbrMaterial.hx	/^	var colorMask : Int;$/;"	v
colorMatrix	heaps/h2d/Drawable.hx	/^	public var colorMatrix(get, set) : Null<h3d.Matrix>;$/;"	v
colorMatrix	heaps/samples/ShaderAdvanced.hx	/^		@param var colorMatrix : Buffer<Vec4,4>;$/;"	v
colorSaturate	heaps/h3d/Matrix.hx	/^	public function colorSaturate( sat : Float ) {$/;"	f
colorSet	heaps/h3d/Matrix.hx	/^	public inline function colorSet( c : Int, alpha = 1. ) {$/;"	f
colorStop	heaps/hxd/fmt/grd/Data.hx	/^	public var colorStop : ColorStop;$/;"	v
colorStops	heaps/hxd/fmt/grd/Data.hx	/^	public var colorStops        : Array<ColorStop>;$/;"	v
colorTexture	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var colorTexture : Sampler2D;$/;"	v
colorUV	heaps/h3d/shader/GpuParticle.hx	/^		var colorUV : Vec2;$/;"	v
colors	heaps/h3d/impl/Benchmark.hx	/^	public var colors = new Array<Int>();$/;"	v
colors	heaps/h3d/parts/Data.hx	/^	public var colors : Null<Array<{ time : Float, color : Int }>>;$/;"	v
colors	heaps/h3d/prim/Polygon.hx	/^	public var colors : Array<Point>;$/;"	v
colors	heaps/hxd/fmt/fbx/Geometry.hx	/^		var colors = getColors();$/;"	v
colors	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var colors = geom.getColors();$/;"	v
colors	heaps/hxd/res/Gradients.hx	/^		var colors = new Array<{value : h3d.Vector, loc : Int}>();$/;"	v
colors	heaps/samples/Bounds.hx	/^	var colors = [0xFF0000 , 0x00FF00 , 0x0000FF, 0xFF00FF];$/;"	v
colors	heaps/samples/Flows.hx	/^		var colors = [0xff0000, 0x00ffff, 0xffffff, 0x00ff00, 0x0080ff, 0xff8000, 0x7000ff, 0xff00ff, /;"	v
colors	heaps/samples/PointLights.hx	/^		var colors = [0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFF00FF, 0xFFFF00, 0x00FFFF];$/;"	v
colors2	heaps/hxd/fmt/fbx/Geometry.hx	/^		var colors2 = g.getColors();$/;"	v
colsToRows	heaps/hxsl/AgalOut.hx	/^	function colsToRows( src : Reg, dst : Reg, t : Type ) {$/;"	f
command	heaps/hxd/fmt/pak/Build.hx	/^	function command( cmd : String, ?args : Array<String> ) {$/;"	f
command	heaps/hxd/fs/Convert.hx	/^	function command( cmd : String, args : Array<String> ) {$/;"	f
commandCount	heaps/h3d/impl/InstanceBuffer.hx	/^	public var commandCount(default, null) : Int;$/;"	v
commandNames	heaps/h2d/Console.hx	/^		var commandNames = commands.keys();$/;"	v
commands	heaps/h2d/Console.hx	/^	var commands : Map < String, { help : String, args : Array<ConsoleArgDesc>, callb : Dynamic } >/;"	v
commands	heaps/h3d/prim/Instanced.hx	/^	public var commands : h3d.impl.InstanceBuffer;$/;"	v
commonChannels	heaps/hxd/snd/Data.hx	/^		var commonChannels = channels < srcChannels ? channels : srcChannels;$/;"	v
commonFB	heaps/h3d/impl/GlDriver.hx	/^	var commonFB : Framebuffer;$/;"	v
commonVA	heaps/h3d/impl/GlDriver.hx	/^	var commonVA : VertexArray;$/;"	v
compare	heaps/hxsl/AgalOut.hx	/^		inline function compare(bop,e1,e2) {$/;"	f
compare	heaps/hxsl/Eval.hx	/^			inline function compare(callb:Int->Bool) {$/;"	f
compareX	heaps/hxd/earcut/Earcut.hx	/^	inline function compareX(a : EarNode, b : EarNode) {$/;"	f
compareY	heaps/hxd/clipper/Clipper.hx	/^	static function compareY(n1:IntersectNode, n2:IntersectNode) return n2.pt.y - n1.pt.y >= 0 ? 1 /;"	f
compile	heaps/h3d/impl/GlDriver.hx	/^		inline function compile(sh) {$/;"	f
compile	heaps/hxsl/AgalOut.hx	/^	public function compile( s : RuntimeShaderData, version ) : Data {$/;"	f
compile	heaps/hxsl/GlslOut.hx	/^	public static function compile( s : ShaderData ) {$/;"	f
compile	heaps/samples/Generator.hx	/^	static function compile() {$/;"	f
compile	heaps/tools/hxsl/Main.hx	/^			function compile(source,type) {$/;"	f
compileRuntimeShader	heaps/hxsl/Cache.hx	/^	function compileRuntimeShader( shaders : hxsl.ShaderList, batchMode : Bool ) {$/;"	f
compileRuntimeShader	heaps/hxsl/CacheFile.hx	/^	override function compileRuntimeShader(shaders:hxsl.ShaderList, batchMode) {$/;"	f
compileShader	heaps/h3d/impl/DirectXDriver.hx	/^	function compileShader( shader : hxsl.RuntimeShader.RuntimeShaderData, compileOnly = false ) {$/;"	f
compileShader	heaps/h3d/impl/GlDriver.hx	/^	function compileShader( glout : ShaderCompiler, shader : hxsl.RuntimeShader.RuntimeShaderData )/;"	f
compileShader	heaps/h3d/impl/Stage3dDriver.hx	/^	function compileShader( s : hxsl.RuntimeShader.RuntimeShaderData, usedTextures : Array<Bool> ) /;"	f
compileShader	heaps/h3d/pass/Base.hx	/^	public function compileShader( p : h3d.mat.Pass ) : hxsl.RuntimeShader {$/;"	f
compileShader	heaps/h3d/pass/Default.hx	/^	override function compileShader( p : h3d.mat.Pass ) {$/;"	f
compileShader	heaps/hxsl/CacheFileBuilder.hx	/^	public function compileShader( r : RuntimeShader, rd : RuntimeShader.RuntimeShaderData ) : Stri/;"	f
compileShaders	heaps/h3d/pass/ShaderManager.hx	/^	public function compileShaders( shaders : hxsl.ShaderList, batchMode : Bool = false ) {$/;"	f
compiledShader	heaps/h2d/RenderContext.hx	/^	var compiledShader : hxsl.RuntimeShader;$/;"	v
compiledSources	heaps/hxsl/CacheFile.hx	/^	var compiledSources : Map<String,{ vertex : String, fragment : String }> = new Map();$/;"	v
complementChars	heaps/hxd/Charset.hx	/^	static var complementChars : Map<Int,Bool> = {$/;"	v
comps	heaps/hxd/res/NanoJpeg.hx	/^	var comps : haxe.ds.Vector<Component>;$/;"	v
comps	heaps/hxsl/AgalOptim.hx	/^		var comps = [];$/;"	v
comps	heaps/hxsl/AgalOut.hx	/^		var comps = [for( o in out ) for( i in 0...h ) swiz(o, [COMPS[i]])];$/;"	v
comps	heaps/hxsl/Checker.hx	/^			var comps = [X, Y, Z, W];$/;"	v
compute	heaps/h2d/col/Voronoi.hx	/^	public function compute(points:Array<Point>, bbox:Bounds) {$/;"	f
compute	heaps/h3d/scene/pbr/Environment.hx	/^	public function compute() {$/;"	f
computeIrradLut	heaps/h3d/scene/pbr/Environment.hx	/^	static function computeIrradLut( t : h3d.mat.Texture ) {$/;"	f
computeIrradiance	heaps/h3d/scene/pbr/Environment.hx	/^	function computeIrradiance() {$/;"	f
computeLight	heaps/h3d/scene/LightSystem.hx	/^	public function computeLight( obj : h3d.scene.Object, shaders : hxsl.ShaderList ) : hxsl.Shader/;"	f
computeLight	heaps/h3d/scene/fwd/LightSystem.hx	/^	override function computeLight( obj : h3d.scene.Object, shaders : hxsl.ShaderList ) : hxsl.Shad/;"	f
computeLight	heaps/h3d/scene/pbr/LightSystem.hx	/^	override function computeLight( obj : h3d.scene.Object, shaders : hxsl.ShaderList ) : hxsl.Shad/;"	f
computeStatic	heaps/h3d/pass/DirShadowMap.hx	/^	override function computeStatic( passes : h3d.pass.PassList ) {$/;"	f
computeStatic	heaps/h3d/pass/PointShadowMap.hx	/^	override function computeStatic( passes : h3d.pass.PassList ) {$/;"	f
computeStatic	heaps/h3d/pass/Shadows.hx	/^	public function computeStatic( passes : h3d.pass.PassList ) {$/;"	f
computeStatic	heaps/h3d/pass/SpotShadowMap.hx	/^	override function computeStatic( passes : h3d.pass.PassList ) {$/;"	f
computeStatic	heaps/h3d/scene/Renderer.hx	/^	function computeStatic() {$/;"	f
computeStatic	heaps/h3d/scene/Scene.hx	/^	public function computeStatic() {$/;"	f
computeStatic	heaps/h3d/scene/pbr/Renderer.hx	/^	override function computeStatic() {$/;"	f
computingStatic	heaps/h3d/scene/RenderContext.hx	/^	public var computingStatic : Bool;$/;"	v
cond	heaps/hxsl/AgalOptim.hx	/^		inline function cond(a, b, op) {$/;"	f
cond	heaps/hxsl/Checker.hx	/^			var cond = typeWith(cond, TBool);$/;"	v
cond	heaps/hxsl/Eval.hx	/^			var cond = evalExpr(cond);$/;"	v
cond	heaps/hxsl/Eval.hx	/^			var cond = handleReturn(cond);$/;"	v
condenseWhite	heaps/h2d/HtmlText.hx	/^	public var condenseWhite(default,set) : Bool = true;$/;"	v
condenseWhite	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var condenseWhite : Bool;$/;"	v
conf	heaps/hxd/fs/FileConverter.hx	/^		var conf = Reflect.field(obj,"fs.convert."+configuration);$/;"	v
conf	heaps/samples/Pad.hx	/^		var conf = pad.config;$/;"	v
config	heaps/hxd/Pad.hx	/^	public var config : PadConfig = DEFAULT_CONFIG;$/;"	v
configs	heaps/hxd/fs/FileConverter.hx	/^	var configs : Map<String,ConvertConfig> = new Map();$/;"	v
configuration	heaps/hxd/fmt/pak/Build.hx	/^	var configuration : String;$/;"	v
configuration	heaps/hxd/fs/FileConverter.hx	/^	public var configuration(default,null) : String;$/;"	v
configurations	heaps/samples/templates/.vscode/launch.json	/^	"configurations": [$/;"	a
conjugate	heaps/h3d/Quat.hx	/^	public inline function conjugate() {$/;"	f
connect	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var connect : Map<Int,Array<Int>>;$/;"	v
connect	heaps/hxd/net/Socket.hx	/^	public function connect( host : String, port : Int, onConnect : Void -> Void ) {$/;"	f
connect	heaps/hxd/net/SocketHost.hx	/^	public function connect( host : String, port : Int, ?onConnect : Bool -> Void ) {$/;"	f
connectEdge	heaps/h2d/col/Voronoi.hx	/^	function connectEdge(edge:Edge, bbox:Bounds) {$/;"	f
connected	heaps/hxd/Pad.hx	/^	public var connected(default, null) = true;$/;"	v
connected	heaps/hxd/net/SocketHost.hx	/^	var connected = false;$/;"	v
console	heaps/samples/Input.hx	/^		var console = new h2d.Console(font, s2d);$/;"	v
constBits	heaps/hxsl/Shader.hx	/^	var constBits : Int;$/;"	v
constModified	heaps/hxsl/Shader.hx	/^	var constModified : Bool;$/;"	v
constants	heaps/hxsl/Eval.hx	/^	var constants : Map<Int,TExprDef>;$/;"	v
constantsToString	heaps/hxsl/Eval.hx	/^	function constantsToString() {$/;"	f
constrained_edge	heaps/hxd/poly2tri/EdgeEvent.hx	/^	public var constrained_edge:Edge;$/;"	v
constrained_edge	heaps/hxd/poly2tri/Triangle.hx	/^	public var constrained_edge:Array<Bool>;$/;"	v
constraint	heaps/h2d/Flow.hx	/^	public var constraint = true;$/;"	v
constraintHeight	heaps/h2d/Flow.hx	/^	var constraintHeight : Float = -1;$/;"	v
constraintSize	heaps/h2d/Flow.hx	/^	override function constraintSize( width, height ) {$/;"	f
constraintSize	heaps/h2d/Object.hx	/^	function constraintSize( maxWidth : Float, maxHeight : Float ) {$/;"	f
constraintSize	heaps/h2d/Text.hx	/^	override function constraintSize(width:Float, height:Float) {$/;"	f
constraintSize	heaps/h2d/TextInput.hx	/^	override function constraintSize(width:Float, height:Float) {$/;"	f
constraintWidth	heaps/h2d/Flow.hx	/^	var constraintWidth : Float = -1;$/;"	v
constraintWidth	heaps/h2d/Text.hx	/^	var constraintWidth:Float = -1;$/;"	v
constructor	heaps/h3d/impl/VarBinding.hx	/^		var constructor = null;$/;"	v
consts	heaps/hxsl/CacheFile.hx	/^			var consts = [];$/;"	v
consts	heaps/hxsl/Flatten.hx	/^	public var consts : Array<Float>;$/;"	v
consts	heaps/hxsl/RuntimeShader.hx	/^	public var consts : Array<Float>;$/;"	v
consts	heaps/hxsl/SharedShader.hx	/^	public var consts : ShaderConst;$/;"	v
constsToGlobal	heaps/hxsl/Cache.hx	/^	public var constsToGlobal : Bool;$/;"	v
consumed	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var consumed : Bool; \/\/ Node was played completely (ended event fired)$/;"	v
consumed	heaps/hxd/snd/webaudio/Driver.hx	/^		var consumed:Int = 0;$/;"	v
cont	heaps/hxd/res/Atlas.hx	/^			var cont = getContents().keys();$/;"	v
container	heaps/samples/domkit_res/style.css	/^container {$/;"	s
contains	heaps/h2d/Object.hx	/^	public function contains( o : Object ) {$/;"	f
contains	heaps/h2d/col/Bounds.hx	/^	public inline function contains( p : Point ) : Bool {$/;"	f
contains	heaps/h2d/col/Circle.hx	/^	public function contains( p : Point ) : Bool {$/;"	f
contains	heaps/h2d/col/Collider.hx	/^	public function contains( p : Point ) : Bool;$/;"	f
contains	heaps/h2d/col/IBounds.hx	/^	public inline function contains( p : IPoint ) : Bool {$/;"	f
contains	heaps/h2d/col/IPolygon.hx	/^	public function contains( p : Point, isConvex = false ) {$/;"	f
contains	heaps/h2d/col/IPolygons.hx	/^	public function contains( p : Point, isConvex = false ) {$/;"	f
contains	heaps/h2d/col/PixelsCollider.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h2d/col/Polygon.hx	/^	public function contains( p : Point, isConvex = false ) {$/;"	f
contains	heaps/h2d/col/PolygonCollider.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h2d/col/Polygons.hx	/^	public function contains( p : Point, isConvex = false ) {$/;"	f
contains	heaps/h2d/col/RoundRect.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h2d/col/Triangle.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/Bounds.hx	/^	public inline function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/Capsule.hx	/^	public inline function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/Collider.hx	/^	public function contains( p : Point ) : Bool;$/;"	f
contains	heaps/h3d/col/Collider.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/HeightMap.hx	/^	public inline function contains( pt : Point ) : Bool {$/;"	f
contains	heaps/h3d/col/ObjectCollider.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/Polygon.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/Polygon.hx	/^	public inline function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/PolygonBuffer.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/SkinCollider.hx	/^	public function contains(p) {$/;"	f
contains	heaps/h3d/col/Sphere.hx	/^	public inline function contains( p : Point ) {$/;"	f
contains	heaps/h3d/col/TransformCollider.hx	/^	public function contains( p : Point ) {$/;"	f
contains	heaps/h3d/scene/Object.hx	/^	public function contains( o : Object ) {$/;"	f
containsBounds	heaps/h3d/col/Bounds.hx	/^	public inline function containsBounds( b : Bounds ) {$/;"	f
containsEdgePoints	heaps/hxd/poly2tri/Triangle.hx	/^	public function containsEdgePoints(p1:Point, p2:Point):Bool$/;"	f
containsPoint	heaps/h2d/col/Segments.hx	/^	public function containsPoint( p : Point, isConvex : Bool ) {$/;"	f
containsPoint	heaps/hxd/poly2tri/Triangle.hx	/^	public function containsPoint(point:Point):Bool$/;"	f
containsSphere	heaps/h3d/col/Bounds.hx	/^	public inline function containsSphere( s : Sphere ) {$/;"	f
content	heaps/h2d/CdbLevel.hx	/^				var content = l.contents[pos++];$/;"	v
content	heaps/h2d/CdbLevel.hx	/^				var content = new h2d.TileGroup(l.tileset.tile);$/;"	v
content	heaps/h2d/CdbLevel.hx	/^				var content = null;$/;"	v
content	heaps/h2d/CdbLevel.hx	/^			var content = l.contents[pos++];$/;"	v
content	heaps/h2d/CdbLevel.hx	/^	public var content(get, never) : h2d.TileGroup;$/;"	v
content	heaps/h2d/Graphics.hx	/^	var content : GraphicsContent;$/;"	v
content	heaps/h2d/TileGroup.hx	/^	var content : TileLayerContent;$/;"	v
content	heaps/hxd/File.hx	/^		var content = try sys.io.File.getBytes(path) catch( e : Dynamic ) { if( onError != null ) onEr/;"	v
content	heaps/hxd/System.flash.hx	/^				var content = fs.readUTFBytes(fs.bytesAvailable);$/;"	v
content	heaps/hxd/fmt/pak/Data.hx	/^	public var content : Array<File>;$/;"	v
content	heaps/hxd/fmt/pak/FileSystem.hx	/^			var content : flash.display.Bitmap = cast loader.content;$/;"	v
content	heaps/hxd/fs/BytesFileSystem.hx	/^			var content : flash.display.Bitmap = cast loader.content;$/;"	v
content	heaps/hxd/fs/EmbedFileSystem.hx	/^			var content : flash.display.Bitmap = cast loader.content;$/;"	v
content	heaps/hxd/fs/FileConverter.hx	/^			var content = sys.io.File.getContent(propsFile);$/;"	v
content	heaps/hxd/fs/FileConverter.hx	/^		var content = hxd.File.getBytes(fullPath);$/;"	v
content	heaps/hxd/res/DynamicText.hx	/^		var content = null, x = null;$/;"	v
content	heaps/hxd/res/Embed.hx	/^			var content = haxe.crypto.Base64.encode(sys.io.File.getBytes(Context.resolvePath(file)));$/;"	v
content	heaps/samples/Generator.hx	/^			var content = sys.io.File.getContent(f);$/;"	v
contentChanged	heaps/h2d/Flow.hx	/^	override function contentChanged( s : Object ) {$/;"	f
contentChanged	heaps/h2d/Object.hx	/^	function contentChanged( s : Object ) {$/;"	f
contentHeight	heaps/h2d/Flow.hx	/^	var contentHeight : Float = 0.;$/;"	v
contentTile	heaps/h2d/ScaleGrid.hx	/^	var contentTile : h2d.Tile;$/;"	v
contentWidth	heaps/h2d/Flow.hx	/^	var contentWidth : Float = 0.;$/;"	v
contents	heaps/h2d/CdbLevel.hx	/^	public var contents : Array<h2d.TileGroup>;$/;"	v
contents	heaps/hxd/res/Atlas.hx	/^	var contents : Map<String,Array<{ t : h2d.Tile, width : Int, height : Int }>>;$/;"	v
context	heaps/hxd/poly2tri/Sweep.hx	/^	var context:SweepContext;$/;"	v
context	heaps/hxd/snd/openal/Driver.hx	/^	public var context  (default, null) : Context;$/;"	v
context	heaps/samples/Generator.hx	/^			var context = {$/;"	v
contour	heaps/hxd/clipper/Clipper.hx	/^	public var contour(get, never) : IPolygon;$/;"	v
contrast	heaps/samples/AdjustColor.hx	/^	var contrast = 0.;$/;"	v
contributors	heaps/haxelib.json	/^	"contributors" : ["ncannasse"],$/;"	a
conv	heaps/hxd/fs/FileConverter.hx	/^		var conv = null;$/;"	v
convert	heaps/hxd/Pixels.hx	/^	public function convert( target : PixelFormat ) {$/;"	f
convert	heaps/hxd/fs/Convert.hx	/^	override function convert() {$/;"	f
convert	heaps/hxd/fs/Convert.hx	/^	override public function convert()$/;"	f
convert	heaps/hxd/fs/Convert.hx	/^	public function convert() {$/;"	f
convert	heaps/hxd/fs/LocalFileSystem.hx	/^	public var convert(default,null) : FileConverter;$/;"	v
convertAndCache	heaps/hxd/fs/FileConverter.hx	/^	function convertAndCache( e : LocalFileSystem.LocalEntry, outFile : String, conv : Convert, par/;"	f
convertPoints	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function convertPoints( a : Array<Float> ) {$/;"	f
convertYupToZup	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function convertYupToZup( originalUpAxis : Int ) {$/;"	f
converts	heaps/hxd/fs/Convert.hx	/^	@:persistent static var converts = new Map<String,Array<Convert>>();$/;"	v
convexHull	heaps/h2d/col/IPolygon.hx	/^	public function convexHull() {$/;"	f
convexHull	heaps/h2d/col/Polygon.hx	/^	public function convexHull() {$/;"	f
cookie	heaps/h3d/scene/pbr/SpotLight.hx	/^	public var cookie : h3d.mat.Texture;$/;"	v
cookie	heaps/h3d/shader/pbr/Light.hx	/^				var cookie = cookieTex.get(posUV).rgba;$/;"	v
cookieTex	heaps/h3d/shader/pbr/Light.hx	/^		@param var cookieTex : Sampler2D;$/;"	v
cop	heaps/h3d/impl/GlDriver.hx	/^			var cop = Pass.getBlendOp(bits);$/;"	v
cop	heaps/h3d/impl/Stage3dDriver.hx	/^			var cop = Pass.getBlendOp(bits);$/;"	v
cop	heaps/hxsl/AgalOut.hx	/^				inline function cop(f) {$/;"	f
copy	heaps/h3d/pass/ScreenFx.hx	/^	function copy( src, dst ) {$/;"	f
copy	heaps/h3d/scene/Renderer.hx	/^	function copy( from, to, ?blend ) {$/;"	f
copyInner	heaps/hxd/Pixels.hx	/^	function copyInner() {$/;"	f
copyTexture	heaps/h3d/impl/DirectXDriver.hx	/^	override function copyTexture(from:h3d.mat.Texture, to:h3d.mat.Texture) {$/;"	f
copyTexture	heaps/h3d/impl/Driver.hx	/^	public function copyTexture( from : h3d.mat.Texture, to : h3d.mat.Texture ) {$/;"	f
copyToMatrix	heaps/hxsl/AgalOut.hx	/^	function copyToMatrix( args : Array<TExpr>, w : Int, h : Int ) {$/;"	f
corner	heaps/h2d/Graphics.hx	/^		inline function corner(x, y, angleStart) {$/;"	f
cos	heaps/h2d/Particles.hx	/^			var cos = Math.cos(rot);$/;"	v
cos	heaps/h2d/col/Bounds.hx	/^		var cos = Math.cos(angle);$/;"	v
cos	heaps/h2d/col/Matrix.hx	/^		var cos = Math.cos(angle);$/;"	v
cos	heaps/h3d/Matrix.hx	/^		var cos = Math.cos(a);$/;"	v
cos	heaps/h3d/Matrix.hx	/^		var cos = Math.cos(angle), sin = Math.sin(angle);$/;"	v
cos	heaps/h3d/Quat.hx	/^		var cos = (a \/ 2).cos();$/;"	v
cos	heaps/hxd/Math.hx	/^	public static inline function cos( f : Float ) {$/;"	f
cos	heaps/samples/Interactive2D.hx	/^		var cos = Math.cos(v);$/;"	v
cos1	heaps/h3d/Matrix.hx	/^		var cos1 = 1 - cos;$/;"	v
cosA	heaps/h2d/Particles.hx	/^				var cosA = Math.cos(a);$/;"	v
cosA	heaps/h3d/Matrix.hx	/^		var cosA = Math.cos(-hue);$/;"	v
cosA	heaps/hxd/clipper/Clipper.hx	/^			var cosA = (m_normals[k].x * m_normals[j].x + m_normals[j].y * m_normals[k].y);$/;"	v
cosHalfTheta	heaps/h3d/Quat.hx	/^		var cosHalfTheta = q1.dot(q2);$/;"	v
cosR	heaps/h3d/shader/DirShadow.hx	/^					var cosR = cos(rot);$/;"	v
cosT	heaps/h3d/scene/pbr/Environment.hx	/^			var cosT = sqrt((1 - p.y) \/ (1 + (a * a - 1) * p.y)).min(1.);$/;"	v
cosX	heaps/h3d/Quat.hx	/^		var cosX = ( ax * 0.5 ).cos();$/;"	v
cosY	heaps/h3d/Quat.hx	/^		var cosY = ( ay * 0.5 ).cos();$/;"	v
cosYZ	heaps/h3d/Quat.hx	/^		var cosYZ = cosY * cosZ;$/;"	v
cosZ	heaps/h3d/Quat.hx	/^		var cosZ = ( az * 0.5 ).cos();$/;"	v
cosineWeightedSampling	heaps/h3d/scene/pbr/Environment.hx	/^		function cosineWeightedSampling( p : Vec2, n : Vec3 ) : Vec3 {$/;"	f
count	heaps/h2d/Graphics.hx	/^		var count = pts.length;$/;"	v
count	heaps/h2d/KeyFrames.hx	/^			var count = 0;$/;"	v
count	heaps/h2d/TileGroup.hx	/^		var count = 0;$/;"	v
count	heaps/h2d/TileGroup.hx	/^	public function count() : Int {$/;"	f
count	heaps/h2d/impl/BatchDrawState.hx	/^	public var count : Int;$/;"	v
count	heaps/h3d/Buffer.hx	/^			var count = vertices + startVertice > cur.vertices ? cur.vertices - startVertice : vertices;$/;"	v
count	heaps/h3d/Buffer.hx	/^			var count = vertices > cur.vertices ? cur.vertices : vertices;$/;"	v
count	heaps/h3d/Buffer.hx	/^		var count = 0;$/;"	v
count	heaps/h3d/Indexes.hx	/^	public var count(default,null) : Int;$/;"	v
count	heaps/h3d/anim/Skin.hx	/^					var count = jointsDiff(p1, p2);$/;"	v
count	heaps/h3d/impl/Benchmark.hx	/^		var count = 0;$/;"	v
count	heaps/h3d/impl/GlDriver.hx	/^			var count = 1;$/;"	v
count	heaps/h3d/impl/ManagedBuffer.hx	/^	var count : Int;$/;"	v
count	heaps/h3d/parts/GpuParticles.hx	/^				var count = 0;$/;"	v
count	heaps/h3d/parts/GpuParticles.hx	/^				var count = g.currentParts;$/;"	v
count	heaps/h3d/parts/GpuParticles.hx	/^	public var count(get,never) : Int;$/;"	v
count	heaps/h3d/parts/Particles.hx	/^	public var count(default, null) : Int = 0;$/;"	v
count	heaps/h3d/pass/PassList.hx	/^	public inline function count() {$/;"	f
count	heaps/h3d/pass/ShaderManager.hx	/^			var count = v.length < len ? v.length : len;$/;"	v
count	heaps/h3d/prim/BigPrimitive.hx	/^		var count = 0;$/;"	v
count	heaps/h3d/prim/GeoSphere.hx	/^			var count = idx.length, np = p.length;$/;"	v
count	heaps/h3d/scene/Graphics.hx	/^		var count = pts.length;$/;"	v
count	heaps/h3d/scene/MeshBatch.hx	/^					var count = instanceCount - p.maxInstance * bufferIndex;$/;"	v
count	heaps/h3d/scene/MeshBatch.hx	/^				var count = instanceCount - start;$/;"	v
count	heaps/h3d/scene/pbr/Renderer.hx	/^			var count = ctx.engine.drawCalls;$/;"	v
count	heaps/h3d/scene/pbr/Renderer.hx	/^		var count = ctx.engine.drawCalls;$/;"	v
count	heaps/hxd/Pad.hx	/^			var count = flash.ui.GameInput.numDevices; \/\/ necessary to trigger added$/;"	v
count	heaps/hxd/clipper/Clipper.hx	/^		var count = pols.length;$/;"	v
count	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var count : Int = Std.int(length \/ 10);$/;"	v
count	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var count : Int = Std.int(length \/ 20);$/;"	v
count	heaps/hxd/fmt/blend/Data.hx	/^	public var count:Int;$/;"	v
count	heaps/hxd/fmt/fbx/Geometry.hx	/^				var count = colors.values.length >> 2;$/;"	v
count	heaps/hxd/fmt/fbx/Geometry.hx	/^			var count = uv.values.length >> 1;$/;"	v
count	heaps/hxd/fmt/fbx/Geometry.hx	/^		var count = 0, pos = 0;$/;"	v
count	heaps/hxd/fmt/fbx/Geometry.hx	/^		var count = 0;$/;"	v
count	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var count = 0;$/;"	v
count	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var count = 0, matPos = 0, stri = 0;$/;"	v
count	heaps/hxd/fmt/hmd/Library.hx	/^		var count = stride * a.frames + singleStride;$/;"	v
count	heaps/hxd/fmt/hmd/Reader.hx	/^		var count = i.readByte();$/;"	v
count	heaps/hxd/fmt/tiff/Reader.hx	/^				var count = f.readInt32();$/;"	v
count	heaps/hxd/fmt/tiff/Reader.hx	/^			var count = f.readUInt16();$/;"	v
count	heaps/hxd/fmt/tiff/Writer.hx	/^			var count = switch( t.value ) {$/;"	v
count	heaps/hxd/impl/BitsBuilder.hx	/^						var count = e.get().names.length;$/;"	v
count	heaps/hxd/res/NanoJpeg.hx	/^		var count = get(1);$/;"	v
count	heaps/hxd/snd/Data.hx	/^			var count = 0;$/;"	v
count	heaps/hxd/snd/Manager.hx	/^			var count = driver.getProcessedBuffers(s.handle);$/;"	v
count	heaps/hxd/snd/openal/Emulator.hx	/^			var count = 0;$/;"	v
count	heaps/hxd/snd/openal/Emulator.hx	/^		var count = out.length >> 1;$/;"	v
count	heaps/hxsl/Cache.hx	/^				var count = 0;$/;"	v
count	heaps/hxsl/Dce.hx	/^			var count = 0;$/;"	v
count	heaps/hxsl/Eval.hx	/^			var count = switch( channel.t ) { case TChannel(i): i; default: throw "assert"; };$/;"	v
count	heaps/hxsl/Flatten.hx	/^			var count = 1;$/;"	v
count	heaps/hxsl/HlslOut.hx	/^	public var count : Int;$/;"	v
count2	heaps/hxd/fmt/fbx/Geometry.hx	/^				var count2 = Std.int(g.getNormals().length \/ 3); \/\/ quick guess for vertex count$/;"	v
countBits	heaps/hxsl/Cache.hx	/^		var countBits = 16;$/;"	v
counts	heaps/hxd/res/NanoJpeg.hx	/^	var counts : haxe.ds.Vector<Int>;$/;"	v
cout	heaps/hxd/res/NanoJpeg.hx	/^		var cout = alloc((c.width * c.height) << 1);$/;"	v
cout	heaps/hxd/res/NanoJpeg.hx	/^		var cout = new FastBytes(out);$/;"	v
cp	heaps/hxd/fs/FileConverter.hx	/^		var cp = {};$/;"	v
cpos	heaps/hxsl/Macros.hx	/^			var cpos = consts.length;$/;"	v
cr	heaps/h2d/Camera.hx	/^				var cr = Math.cos(rotation);$/;"	v
cr	heaps/h2d/Object.hx	/^				var cr = Math.cos(rotation);$/;"	v
cr	heaps/h2d/Object.hx	/^			var cr, sr;$/;"	v
cr	heaps/h3d/prim/BigPrimitive.hx	/^		var cr = Math.cos(rotation);$/;"	v
cr	heaps/h3d/shader/ParticleShader.hx	/^			var cr = rot.cos();$/;"	v
cr	heaps/hxd/res/NanoJpeg.hx	/^					var cr = pcr[k3++] - 128;$/;"	v
cradius	heaps/samples/Interactive.hx	/^			var cradius = 0.5;$/;"	v
crc	heaps/hxd/Save.hx	/^			var crc = data.substr(data.length - 32);$/;"	v
create	heaps/h2d/domkit/BaseComponents.hx	/^	static function create( parent : h2d.Object ) {$/;"	f
create	heaps/h3d/mat/Material.hx	/^	public static function create( ?tex : h3d.mat.Texture ) {$/;"	f
create	heaps/hxd/Rand.hx	/^	public static function create() {$/;"	f
create	heaps/hxd/fs/EmbedFileSystem.hx	/^	public static macro function create( ?basePath : String, ?options : hxd.res.EmbedOptions ) {$/;"	f
createAdvancingFront	heaps/hxd/poly2tri/SweepContext.hx	/^	public function createAdvancingFront()$/;"	f
createBatchShader	heaps/hxsl/Cache.hx	/^	function createBatchShader( rt : RuntimeShader, shaders : hxsl.ShaderList ) : { shader : Shared/;"	f
createBatchShader	heaps/hxsl/CacheFile.hx	/^	override function createBatchShader( rt, shaders ) {$/;"	f
createBeachsection	heaps/h2d/col/Voronoi.hx	/^	function createBeachsection(point:Point) {$/;"	f
createBorderEdge	heaps/h2d/col/Voronoi.hx	/^	function createBorderEdge(lPoint, va, vb) {$/;"	f
createBuffer	heaps/hxd/snd/Driver.hx	/^	public function createBuffer         () : BufferHandle;$/;"	f
createBuffer	heaps/hxd/snd/openal/Driver.hx	/^	public function createBuffer() : BufferHandle {$/;"	f
createBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public function createBuffer () : BufferHandle {$/;"	f
createBuffers	heaps/h3d/scene/pbr/LightBuffer.hx	/^	function createBuffers() {$/;"	f
createColorStops	heaps/hxd/fmt/grd/Reader.hx	/^	function createColorStops(list : Array<Dynamic>, out : Array<ColorStop>) {$/;"	f
createContext	heaps/hxd/snd/openal/Emulator.hx	/^	public static function createContext(device  : Device, attrlist : Bytes) : Context {$/;"	f
createDefaultShadowMap	heaps/h3d/pass/PointShadowMap.hx	/^	override function createDefaultShadowMap() {$/;"	f
createDefaultShadowMap	heaps/h3d/pass/Shadows.hx	/^	function createDefaultShadowMap() {$/;"	f
createDirectory	heaps/hxd/File.hx	/^	public static function createDirectory( path : String ) {$/;"	f
createDummy	heaps/hxd/Pad.hx	/^	public static function createDummy() {$/;"	f
createEdge	heaps/h2d/col/Voronoi.hx	/^	function createEdge(lPoint, rPoint, va = null, vb = null) {$/;"	f
createEnv	heaps/h3d/scene/pbr/Renderer.hx	/^	function createEnv( t : h3d.mat.Texture ) {$/;"	f
createFlow	heaps/samples/Flows.hx	/^		function createFlow(parent:Object, color : Int, text : String, vAlign:FlowAlign, hAlign:FlowAl/;"	f
createFlow	heaps/samples/HtmlText.hx	/^		function createFlow(parent:Object) {$/;"	f
createFlow	heaps/samples/Text.hx	/^		function createFlow(parent:Object) {$/;"	f
createFlowSimple	heaps/samples/Flows.hx	/^		function createFlowSimple(parent:Object, x : Float, y : Float, size = 75) {$/;"	f
createFlowWithText	heaps/samples/Flows.hx	/^		function createFlowWithText(parent:Object, size : Int, vAlign: FlowAlign, hAlign : FlowAlign, /;"	f
createGradientStops	heaps/hxd/fmt/grd/Reader.hx	/^	function createGradientStops($/;"	f
createInstance	heaps/h3d/anim/Animation.hx	/^	public function createInstance( base : h3d.scene.Object ) {$/;"	f
createInstance	heaps/h3d/anim/SimpleBlend.hx	/^	override function createInstance( base ) {$/;"	f
createInteractive	heaps/h2d/HtmlText.hx	/^		inline function createInteractive() {$/;"	f
createJoints	heaps/h3d/col/SkinCollider.hx	/^	function createJoints() {$/;"	f
createLightSystem	heaps/h3d/mat/MaterialSetup.hx	/^	public function createLightSystem() : h3d.scene.LightSystem {$/;"	f
createLightSystem	heaps/h3d/mat/PbrMaterialSetup.hx	/^	override function createLightSystem() {$/;"	f
createMaterial	heaps/h3d/mat/MaterialSetup.hx	/^	public function createMaterial() {$/;"	f
createMaterial	heaps/h3d/mat/PbrMaterialSetup.hx	/^	override function createMaterial() : Material {$/;"	f
createRenderer	heaps/h3d/mat/MaterialSetup.hx	/^	public function createRenderer() : h3d.scene.Renderer {$/;"	f
createRenderer	heaps/h3d/mat/PbrMaterialSetup.hx	/^	override function createRenderer() : h3d.scene.Renderer {$/;"	f
createSkin	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function createSkin( hskins : Map<Int,h3d.anim.Skin>, hgeom : Map<Int,{$/;"	f
createSource	heaps/hxd/snd/Driver.hx	/^	public function createSource         () : SourceHandle;$/;"	f
createSource	heaps/hxd/snd/openal/Driver.hx	/^	public function createSource() : SourceHandle {$/;"	f
createSource	heaps/hxd/snd/webaudio/Driver.hx	/^	public function createSource () : SourceHandle {$/;"	f
createStaticTexture	heaps/h3d/pass/PointShadowMap.hx	/^	function createStaticTexture() : h3d.mat.Texture {$/;"	f
createStaticTexture	heaps/h3d/pass/SpotShadowMap.hx	/^	function createStaticTexture() : h3d.mat.Texture {$/;"	f
createText	heaps/samples/Flows.hx	/^		function createText(parent:Object, color : Int, text : String) {$/;"	f
createText	heaps/samples/HtmlText.hx	/^		function createText(parent:Object, str : String, align:Align) {$/;"	f
createText	heaps/samples/Text.hx	/^		function createText(parent:Object, str : String, align:Align, ?forceFont:h2d.Font) {$/;"	f
createTexture	heaps/hxd/res/Gradients.hx	/^	static function createTexture(grads : Array<Gradient>, twid : Int) {$/;"	f
createTextures	heaps/h3d/scene/pbr/Environment.hx	/^	function createTextures() {$/;"	f
createTitle	heaps/samples/Flows.hx	/^		function createTitle(text : String) {$/;"	f
createTransparencyStops	heaps/hxd/fmt/grd/Reader.hx	/^	function createTransparencyStops(list : Array<Dynamic>, out : Array<TransparencyStop>) {$/;"	f
createVertex	heaps/h2d/col/Voronoi.hx	/^	function createVertex(x, y) {$/;"	f
createWidget	heaps/samples/HtmlText.hx	/^		function createWidget(str:String, align:h2d.Text.Align) {$/;"	f
createWidget	heaps/samples/Text.hx	/^		function createWidget(str:String, align:h2d.Text.Align) {$/;"	f
cross	heaps/h2d/col/IPoint.hx	/^	public inline function cross( p : IPoint ) {$/;"	f
cross	heaps/h2d/col/Point.hx	/^	public inline function cross( p : Point ) {$/;"	f
cross	heaps/h3d/Vector.hx	/^	public inline function cross( v : Vector ) {$/;"	f
cross	heaps/h3d/col/FPoint.hx	/^	public inline function cross( p : FPoint ) {$/;"	f
cross	heaps/h3d/col/IPoint.hx	/^	public inline function cross( p : IPoint ) {$/;"	f
cross	heaps/h3d/col/Point.hx	/^	public inline function cross( p : Point ) {$/;"	f
crot	heaps/h3d/shader/GpuParticle.hx	/^			var crot = cos(rot), srot = sin(rot);$/;"	v
crt	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var crt = c.r == null ? [-1.] : c.r.t;$/;"	v
crx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var crx = c.r == null ? null : c.r.x;$/;"	v
cry	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cry = c.r == null ? null : c.r.y;$/;"	v
crz	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var crz = c.r == null ? null : c.r.z;$/;"	v
cs	heaps/h2d/Graphics.hx	/^		var cs = Math.cos(angleStart);$/;"	v
cs	heaps/hxsl/Cache.hx	/^			var cs = c.next.get(i.id);$/;"	v
cs	heaps/hxsl/CacheFile.hx	/^			var cs = c.next.get(i.id);$/;"	v
csize	heaps/samples/Helpers.hx	/^		var csize = size \/ divisions;$/;"	v
csrc	heaps/h3d/impl/GlDriver.hx	/^			var csrc = Pass.getBlendSrc(bits);$/;"	v
csrc	heaps/h3d/impl/Stage3dDriver.hx	/^			var csrc = Pass.getBlendSrc(bits);$/;"	v
cst	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cst = c.s == null ? [ -1.] : c.s.t;$/;"	v
cst	heaps/hxd/fs/LocalFileSystem.hx	/^			var cst = js.node.Fs.constants;$/;"	v
csup	heaps/hxsl/Macros.hx	/^						var csup = c.get().superClass;$/;"	v
csx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var csx = c.s == null ? null : c.s.x;$/;"	v
csy	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var csy = c.s == null ? null : c.s.y;$/;"	v
csz	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var csz = c.s == null ? null : c.s.z;$/;"	v
ct	heaps/h3d/pass/DirShadowMap.hx	/^			var ct = ctx.camera.target;$/;"	v
ct	heaps/hxd/res/FileTree.hx	/^			var ct : ComplexType = TPath({ pack : t, name : t.pop() });$/;"	v
ctt	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var ctt = c.t == null ? [-1.] : c.t.t;$/;"	v
ctx	heaps/h2d/Drawable.hx	/^			var ctx = getScene().ctx;$/;"	v
ctx	heaps/h2d/Scene.hx	/^	var ctx : RenderContext;$/;"	v
ctx	heaps/h2d/ZGroup.hx	/^	var ctx : RenderContext;$/;"	v
ctx	heaps/h3d/impl/DirectXDriver.hx	/^		var ctx = new ShaderContext(s);$/;"	v
ctx	heaps/h3d/impl/Stage3dDriver.hx	/^	var ctx : flash.display3D.Context3D;$/;"	v
ctx	heaps/h3d/impl/TextureCache.hx	/^	var ctx : h3d.impl.RenderContext;$/;"	v
ctx	heaps/h3d/impl/VulkanDriver.hx	/^	var ctx : sdl.Vulkan.VKContext;$/;"	v
ctx	heaps/h3d/pass/Base.hx	/^	var ctx : h3d.scene.RenderContext;$/;"	v
ctx	heaps/h3d/prim/ModelCache.hx	/^		var ctx = new hrt.prefab.Context();$/;"	v
ctx	heaps/h3d/scene/LightSystem.hx	/^	var ctx : RenderContext;$/;"	v
ctx	heaps/h3d/scene/MeshBatch.hx	/^				var ctx = scene.renderer.getPassByName(p.name);$/;"	v
ctx	heaps/h3d/scene/Renderer.hx	/^	var ctx : RenderContext;$/;"	v
ctx	heaps/h3d/scene/Scene.hx	/^	var ctx : RenderContext;$/;"	v
ctx	heaps/hxd/BitmapData.hx	/^		var ctx = canvas.getContext2d();$/;"	v
ctx	heaps/hxd/BitmapData.hx	/^	var ctx : js.html.CanvasRenderingContext2D;$/;"	v
ctx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var ctx = c.t == null ? null : c.t.x;$/;"	v
ctx	heaps/hxd/fmt/pak/FileSystem.hx	/^		var ctx = new flash.system.LoaderContext();$/;"	v
ctx	heaps/hxd/res/FontBuilder.hx	/^		var ctx = bmp.getContext2d();$/;"	v
ctx	heaps/hxd/snd/Mp3Data.hx	/^		var ctx = hxd.snd.webaudio.Context.get();$/;"	v
ctx	heaps/hxd/snd/NativeChannel.hx	/^		var ctx = hxd.snd.webaudio.Context.get();$/;"	v
ctx	heaps/hxd/snd/openal/Emulator.hx	/^	static var ctx : Context = null;$/;"	v
ctx	heaps/hxd/snd/webaudio/AudioTypes.hx	/^		var ctx = hxd.snd.webaudio.Context.get();$/;"	v
ctx	heaps/hxd/snd/webaudio/AudioTypes.hx	/^		var ctx = source.driver.ctx;$/;"	v
ctx	heaps/hxd/snd/webaudio/Context.hx	/^	static var ctx : AudioContext;$/;"	v
ctx	heaps/hxd/snd/webaudio/Driver.hx	/^	public var ctx : AudioContext;$/;"	v
ctx	heaps/hxsl/HlslOut.hx	/^		var ctx = new Samplers();$/;"	v
ctx	heaps/samples/FxView.hx	/^		var ctx = new hrt.prefab.Context();$/;"	v
ctx2	heaps/h3d/prim/ModelCache.hx	/^		var ctx2 = p.make(ctx);$/;"	v
cty	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cty = c.t == null ? null : c.t.y;$/;"	v
ctype	heaps/hxsl/Macros.hx	/^			var ctype : ComplexType = TPath({ name : type, pack : [] });$/;"	v
ctz	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var ctz = c.t == null ? null : c.t.z;$/;"	v
cube	heaps/samples/Helpers.hx	/^	var cube : Mesh;$/;"	v
cube	heaps/samples/MeshBatch.hx	/^		var cube = new h3d.prim.Cube(1,1,1,true);$/;"	v
cube	heaps/samples/Pbr.hx	/^		var cube = new h3d.prim.Cube(r,r,r);$/;"	v
cube	heaps/samples/Polygons.hx	/^		var cube = Cube.defaultUnitCube();$/;"	v
cube	heaps/samples/Quaternion.hx	/^	var cube : h3d.scene.Mesh;$/;"	v
cube	heaps/samples/ShaderAdvanced.hx	/^		var cube = h3d.prim.Cube.defaultUnitCube();$/;"	v
cube	heaps/samples/World.hx	/^		var cube = new h3d.prim.Cube(chunkSize, chunkSize, 0);$/;"	v
cubeDir	heaps/h3d/pass/Blur.hx	/^	var cubeDir = [ h3d.Matrix.L([0,0,-1,0, 0,-1,0,0, 1,0,0,0]),$/;"	v
cubeDir	heaps/h3d/pass/CubeCopy.hx	/^	var cubeDir = [ h3d.Matrix.L([0,0,-1,0, 0,-1,0,0, 1,0,0,0]),$/;"	v
cubeDir	heaps/h3d/pass/PointShadowMap.hx	/^	var cubeDir = [ h3d.Matrix.L([0,0,-1,0, 0,-1,0,0, 1,0,0,0]),$/;"	v
cubeDir	heaps/h3d/shader/Blur.hx	/^		@param var cubeDir : Mat3;$/;"	v
cubeMesh	heaps/samples/Polygons.hx	/^		var cubeMesh = new Mesh(cube, s3d);$/;"	v
cubeScaleFactor	heaps/h3d/scene/pbr/Environment.hx	/^		@param var cubeScaleFactor : Float;$/;"	v
cubeShader	heaps/samples/Pbr.hx	/^		var cubeShader = bg.material.mainPass.addShader(new h3d.shader.pbr.CubeLod(env.env));$/;"	v
cubeSize	heaps/h3d/scene/pbr/Environment.hx	/^		@param var cubeSize : Float;$/;"	v
cubeTexture	heaps/h3d/shader/Blur.hx	/^		@param var cubeTexture : SamplerCube;$/;"	v
cubebits	heaps/hxd/Pixels.hx	/^		var cubebits = 0x200 | 0x400 | (layerCount > 1 ? 0x800 : 0) | (layerCount > 2 ? 0x1000 : 0) | /;"	v
cubes	heaps/hxd/res/Image.hx	/^			var cubes = f.readInt32();$/;"	v
cubic	heaps/h3d/impl/GlDriver.hx	/^		var cubic = t.flags.has(Cube);$/;"	v
cubicCurveTo	heaps/h2d/Graphics.hx	/^	public function cubicCurveTo( bx : Float, by : Float, cx : Float, cy : Float, dx : Float, dy : /;"	f
cull	heaps/h3d/impl/GlDriver.hx	/^			var cull = Pass.getCulling(bits);$/;"	v
cullLights	heaps/h3d/scene/fwd/LightSystem.hx	/^	function cullLights() @:privateAccess  {$/;"	f
cullPasses	heaps/h3d/pass/Shadows.hx	/^	inline function cullPasses( passes : h3d.pass.PassList, f : h3d.col.Collider -> Bool ) {$/;"	f
cullPasses	heaps/h3d/scene/pbr/Renderer.hx	/^	inline function cullPasses( passes : h3d.pass.PassList, f : h3d.col.Collider -> Bool ) {$/;"	f
culled	heaps/h3d/scene/Object.hx	/^	public var culled(get, set) : Bool;$/;"	v
culling	heaps/h3d/mat/Material.hx	/^	var culling : Bool;$/;"	v
culling	heaps/h3d/mat/PbrMaterial.hx	/^	var culling : PbrCullingMode;$/;"	v
culling	heaps/h3d/scene/World.hx	/^	public var culling : Bool;$/;"	v
cullingCollider	heaps/h3d/scene/Object.hx	/^	public var cullingCollider(default, set) : h3d.col.Collider;$/;"	v
cullingCollider	heaps/h3d/scene/RenderContext.hx	/^	public var cullingCollider : h3d.col.Collider;$/;"	v
cullingColliderInherited	heaps/h3d/scene/Object.hx	/^	var cullingColliderInherited(get, set) : Bool;$/;"	v
cullingDistance	heaps/h3d/scene/fwd/Light.hx	/^	var cullingDistance : Float = -1;$/;"	v
cur	heaps/h2d/CdbLevel.hx	/^						var cur = tprops[o.obj.id + dx + dy * tileset.stride];$/;"	v
cur	heaps/h2d/KeyFrames.hx	/^		var cur = f.key_values[index];$/;"	v
cur	heaps/h2d/impl/BatchDrawState.hx	/^				var cur = tail;$/;"	v
cur	heaps/h3d/Buffer.hx	/^		var cur = this;$/;"	v
cur	heaps/h3d/impl/Benchmark.hx	/^		var cur = hxd.System.getCurrentLoop();$/;"	v
cur	heaps/h3d/impl/ManagedBuffer.hx	/^			var cur = allocHead, prev : Buffer = null;$/;"	v
cur	heaps/h3d/impl/NullDriver.hx	/^	var cur : hxsl.RuntimeShader;$/;"	v
cur	heaps/h3d/impl/Stage3dDriver.hx	/^				var cur = curTextures[i];$/;"	v
cur	heaps/h3d/impl/VulkanDriver.hx	/^	var cur : hxsl.RuntimeShader;$/;"	v
cur	heaps/h3d/mat/Pass.hx	/^		var cur = shaders;$/;"	v
cur	heaps/h3d/pass/PassList.hx	/^		var cur = current;$/;"	v
cur	heaps/h3d/pass/ScreenFx.hx	/^		var cur = shaders;$/;"	v
cur	heaps/h3d/scene/Skin.hx	/^		var cur = sk.allJoints[index];$/;"	v
cur	heaps/hxd/Save.hx	/^	static var cur = new Map<String,String>();$/;"	v
cur	heaps/hxd/SceneEvents.hx	/^		var cur : hxd.Cursor = defaultCursor;$/;"	v
cur	heaps/hxd/System.hl.hx	/^		var cur : Cursor;$/;"	v
cur	heaps/hxd/System.hl.hx	/^		var cur = h3d.Engine.getCurrent();$/;"	v
cur	heaps/hxd/Window.hl.hx	/^				var cur = @:privateAccess hxd.System.currentNativeCursor;$/;"	v
cur	heaps/hxd/Worker.hx	/^		var cur = flash.system.Worker.current;$/;"	v
cur	heaps/hxd/fmt/fbx/Data.hx	/^		var cur = [n];$/;"	v
cur	heaps/hxd/fmt/fbx/Data.hx	/^		var cur = n;$/;"	v
cur	heaps/hxd/fmt/pak/Loader.hx	/^	var cur : hxd.net.BinaryLoader;$/;"	v
cur	heaps/hxd/snd/openal/Emulator.hx	/^			var cur = source.currentSample;$/;"	v
cur	heaps/hxsl/Cache.hx	/^				var cur = vreal;$/;"	v
cur	heaps/samples/GpuParticles.hx	/^		var cur = @:privateAccess group.currentParts;$/;"	v
curA	heaps/h2d/Graphics.hx	/^	var curA : Float;$/;"	v
curA	heaps/h3d/scene/Graphics.hx	/^	var curA : Float;$/;"	v
curAttribs	heaps/h3d/impl/GlDriver.hx	/^	var curAttribs : Array<Bool> = new Array<Bool>();$/;"	v
curAttributes	heaps/h3d/impl/Stage3dDriver.hx	/^	var curAttributes : Int;$/;"	v
curB	heaps/h2d/Graphics.hx	/^	var curB : Float;$/;"	v
curB	heaps/h3d/scene/Graphics.hx	/^	var curB : Float;$/;"	v
curBuffer	heaps/h3d/impl/GlDriver.hx	/^	var curBuffer : h3d.Buffer;$/;"	v
curBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	var curBuffer : Buffer;$/;"	v
curClass	heaps/hxsl/Shader.hx	/^			var curClass : Dynamic = cl;$/;"	v
curCmd	heaps/h2d/Console.hx	/^	var curCmd:String;$/;"	v
curColor	heaps/h2d/TileGroup.hx	/^	var curColor : h3d.Vector;$/;"	v
curColor	heaps/h3d/shader/Outline2D.hx	/^			var curColor : Vec4;$/;"	v
curColorMask	heaps/h3d/impl/GlDriver.hx	/^	var curColorMask = -1;$/;"	v
curColorMask	heaps/h3d/impl/Stage3dDriver.hx	/^	var curColorMask = -1;$/;"	v
curDepth	heaps/h3d/shader/Parallax.hx	/^				var curDepth = heightMap.getLod(curUV,0.);$/;"	v
curFps	heaps/h3d/Engine.hx	/^			var curFps = 1. \/ delta;$/;"	v
curFrame	heaps/h2d/Anim.hx	/^	var curFrame : Float;$/;"	v
curFrame	heaps/h2d/KeyFrames.hx	/^	var curFrame : Float;$/;"	v
curFrame	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var curFrame = null;$/;"	v
curFun	heaps/hxsl/Checker.hx	/^	var curFun : TFunction;$/;"	v
curFun	heaps/hxsl/Eval.hx	/^	var curFun : TFunction;$/;"	v
curG	heaps/h2d/Graphics.hx	/^	var curG : Float;$/;"	v
curG	heaps/h3d/scene/Graphics.hx	/^	var curG : Float;$/;"	v
curH	heaps/hxd/Window.js.hx	/^	var curH : Int;$/;"	v
curHistoryState	heaps/h2d/TextInput.hx	/^	function curHistoryState() : TextHistoryElement {$/;"	f
curIndex	heaps/h2d/ZGroup.hx	/^	var curIndex : Int;$/;"	v
curIndexBuffer	heaps/h3d/impl/GlDriver.hx	/^	var curIndexBuffer : IndexBuffer;$/;"	v
curInstance	heaps/h3d/pass/ShaderManager.hx	/^		var curInstance = -1;$/;"	v
curInstance	heaps/hxsl/Linker.hx	/^	var curInstance : Int;$/;"	v
curInstanceValue	heaps/h3d/pass/ShaderManager.hx	/^		var curInstanceValue = null;$/;"	v
curLayerDepth	heaps/h3d/shader/Parallax.hx	/^				var curLayerDepth = 0.;$/;"	v
curLight	heaps/samples/Lights.hx	/^	var curLight : Int = 0;$/;"	v
curManagedBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	var curManagedBuffer : ManagedBuffer;$/;"	v
curMatBits	heaps/h3d/impl/GlDriver.hx	/^	var curMatBits : Int = -1;$/;"	v
curMatBits	heaps/h3d/impl/Stage3dDriver.hx	/^	var curMatBits : Int;$/;"	v
curMaterial	heaps/h3d/prim/HMDModel.hx	/^	var curMaterial : Int;$/;"	v
curMessage	heaps/hxd/Worker.hx	/^	var curMessage : { code : Int, count : Int, args : Array<Dynamic> };$/;"	v
curMouseX	heaps/hxd/Window.hl.hx	/^	var curMouseX = 0;$/;"	v
curMouseX	heaps/hxd/Window.js.hx	/^	var curMouseX : Float = 0.;$/;"	v
curMouseY	heaps/hxd/Window.hl.hx	/^	var curMouseY = 0;$/;"	v
curMouseY	heaps/hxd/Window.js.hx	/^	var curMouseY : Float = 0.;$/;"	v
curMultiBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	var curMultiBuffer : Array<Int>;$/;"	v
curObj	heaps/hxd/Save.hx	/^	static var curObj : String;$/;"	v
curOffset	heaps/h3d/scene/CameraController.hx	/^	var curOffset = new h3d.Vector();$/;"	v
curPart	heaps/h3d/parts/Emitter.hx	/^	var curPart : Particle;$/;"	v
curPass	heaps/h3d/scene/Scene.hx	/^		var curPass = ctx.passes;$/;"	v
curPos	heaps/h3d/scene/CameraController.hx	/^	var curPos = new h3d.Vector();$/;"	v
curR	heaps/h2d/Graphics.hx	/^	var curR : Float;$/;"	v
curR	heaps/h3d/scene/Graphics.hx	/^	var curR : Float = 0.;$/;"	v
curSample	heaps/hxd/snd/openal/Emulator.hx	/^			var curSample = source.currentSample;$/;"	v
curSamplerBits	heaps/h3d/impl/Stage3dDriver.hx	/^	var curSamplerBits : Array<Int>;$/;"	v
curShader	heaps/h3d/impl/GlDriver.hx	/^	var curShader : CompiledProgram;$/;"	v
curShader	heaps/h3d/impl/Stage3dDriver.hx	/^	var curShader : CompiledShader;$/;"	v
curShader	heaps/h3d/scene/MeshBatch.hx	/^			var curShader = shaders[p.instance];$/;"	v
curShader	heaps/hxsl/Linker.hx	/^	var curShader : ShaderInfos;$/;"	v
curShaders	heaps/h2d/RenderContext.hx	/^		var curShaders = currentShaders.next;$/;"	v
curStEnabled	heaps/h3d/impl/GlDriver.hx	/^	var curStEnabled : Bool = false;$/;"	v
curStMaskBits	heaps/h3d/impl/GlDriver.hx	/^	var curStMaskBits : Int = -1;$/;"	v
curStMaskBits	heaps/h3d/impl/Stage3dDriver.hx	/^	var curStMaskBits : Int;$/;"	v
curStOpBits	heaps/h3d/impl/GlDriver.hx	/^	var curStOpBits : Int = -1;$/;"	v
curStOpBits	heaps/h3d/impl/Stage3dDriver.hx	/^	var curStOpBits : Int;$/;"	v
curStack	heaps/hxd/impl/AllocPos.hx	/^		var curStack = haxe.CallStack.callStack();$/;"	v
curT	heaps/h3d/impl/GlDriver.hx	/^		var curT = null;$/;"	v
curT	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var curT = allTimes[0];$/;"	v
curTarget	heaps/h2d/RenderContext.hx	/^	var curTarget : h3d.mat.Texture;$/;"	v
curTarget	heaps/h3d/impl/GlDriver.hx	/^	var curTarget : h3d.mat.Texture;$/;"	v
curTargetLayer	heaps/h3d/impl/GlDriver.hx	/^	var curTargetLayer : Int;$/;"	v
curTargetMip	heaps/h3d/impl/GlDriver.hx	/^	var curTargetMip : Int;$/;"	v
curTargets	heaps/h3d/impl/GlDriver.hx	/^	var curTargets : Array<h3d.mat.Texture> = [];$/;"	v
curTexture	heaps/h3d/impl/DirectXDriver.hx	/^	var curTexture : h3d.mat.Texture;$/;"	v
curTextures	heaps/h3d/impl/Stage3dDriver.hx	/^	var curTextures : Array<h3d.mat.Texture>;$/;"	v
curTile	heaps/h2d/KeyFrames.hx	/^				var curTile = hxd.Math.iclamp( Std.int( (curFrame - l.from) * l.tiles.length \/ (l.to - l.fr/;"	v
curTime	heaps/h3d/impl/Benchmark.hx	/^		var curTime = 0.;$/;"	v
curTime	heaps/h3d/scene/Trail.hx	/^		var curTime = ctx.time;$/;"	v
curUV	heaps/h3d/shader/Parallax.hx	/^				var curUV = calculatedUV;$/;"	v
curW	heaps/hxd/Window.js.hx	/^	var curW : Int;$/;"	v
curWidth	heaps/h3d/impl/Benchmark.hx	/^	var curWidth : Int;$/;"	v
curX	heaps/h2d/TileGroup.hx	/^		var curX = 0., curY = 0.;$/;"	v
curX	heaps/h3d/scene/Graphics.hx	/^	var curX : Float = 0.;$/;"	v
curX	heaps/h3d/scene/Trail.hx	/^		var curX = absPos._41;$/;"	v
curY	heaps/h2d/CdbLevel.hx	/^				var curY = -1;$/;"	v
curY	heaps/h3d/scene/Graphics.hx	/^	var curY : Float = 0.;$/;"	v
curY	heaps/h3d/scene/Trail.hx	/^		var curY = absPos._42;$/;"	v
curZ	heaps/h3d/scene/Graphics.hx	/^	var curZ : Float = 0.;$/;"	v
curZ	heaps/h3d/scene/Trail.hx	/^		var curZ = absPos._43;$/;"	v
cureLocalIntersections	heaps/hxd/earcut/Earcut.hx	/^	function cureLocalIntersections(start:EarNode) {$/;"	f
curr	heaps/h2d/col/IPolygon.hx	/^		var curr = first;$/;"	v
curr	heaps/hxd/clipper/Clipper.hx	/^	public var curr(get, set) : IPoint;$/;"	v
currTime	heaps/hxd/snd/NativeChannel.hx	/^		var currTime : Float = ctx.currentTime;$/;"	v
currX	heaps/hxd/clipper/Clipper.hx	/^	public var currX : Int;$/;"	v
currY	heaps/hxd/clipper/Clipper.hx	/^	public var currY : Int;$/;"	v
currcnt	heaps/hxd/res/NanoJpeg.hx	/^				var currcnt = counts[codelen - 1];$/;"	v
current	heaps/h3d/mat/MaterialSetup.hx	/^	public static var current = new MaterialSetup("Default");$/;"	v
current	heaps/h3d/pass/PassList.hx	/^	var current : PassObject;$/;"	v
current	heaps/h3d/shader/GpuParticle.hx	/^			var current = props.init + props.delta * t;$/;"	v
current	heaps/hxd/Window.hl.hx	/^		var current = window.getCurrentMonitor();$/;"	v
current	heaps/hxd/snd/NativeChannel.hx	/^	var current : js.html.audio.AudioBufferSourceNode;$/;"	v
current	heaps/hxsl/AgalOut.hx	/^	var current : RuntimeShaderData;$/;"	v
currentAbsPose	heaps/h3d/scene/Skin.hx	/^	var currentAbsPose : Array<h3d.Matrix>;$/;"	v
currentAnimation	heaps/h3d/scene/Object.hx	/^	public var currentAnimation(default, null) : h3d.anim.Animation;$/;"	v
currentBlend	heaps/h2d/RenderContext.hx	/^	var currentBlend : BlendMode;$/;"	v
currentBlendState	heaps/h3d/impl/DirectXDriver.hx	/^	var currentBlendState : BlendState;$/;"	v
currentBounds	heaps/h3d/col/SkinCollider.hx	/^	var currentBounds : h3d.col.Bounds;$/;"	v
currentColorMask	heaps/h3d/impl/DirectXDriver.hx	/^	var currentColorMask = -1;$/;"	v
currentCustomCursor	heaps/hxd/System.hl.hx	/^	static var currentCustomCursor : hxd.Cursor.CustomCursor;$/;"	v
currentCustomCursor	heaps/hxd/System.js.hx	/^	static var currentCustomCursor:hxd.Cursor.CustomCursor;$/;"	v
currentDT	heaps/hxd/Timer.hx	/^	static var currentDT : Float = 1 \/ wantedFPS;$/;"	v
currentDepth	heaps/h3d/impl/DirectXDriver.hx	/^	var currentDepth : DepthBuffer;$/;"	v
currentDepthState	heaps/h3d/impl/DirectXDriver.hx	/^	var currentDepthState : DepthStencilState;$/;"	v
currentDivisor	heaps/h3d/impl/GlDriver.hx	/^	var currentDivisor : Array<Int> = [for( i in 0...32 ) 0];$/;"	v
currentDrag	heaps/hxd/SceneEvents.hx	/^	var currentDrag : { f : hxd.Event -> Void, onCancel : Void -> Void, ref : Null<Int> };$/;"	v
currentFade	heaps/hxd/snd/ChannelBase.hx	/^	var currentFade : { start : Float, duration : Float, startVolume : Float, targetVolume : Float,/;"	v
currentFlows	heaps/samples/Flows.hx	/^	var currentFlows : Array<Flow> = []; \/\/ removed when switching screen$/;"	v
currentFocus	heaps/hxd/SceneEvents.hx	/^	var currentFocus : Interactive;$/;"	v
currentFrame	heaps/h2d/Anim.hx	/^	public var currentFrame(get,set) : Float;$/;"	v
currentFrame	heaps/h2d/KeyFrames.hx	/^	public var currentFrame(get,set) : Float;$/;"	v
currentFrame	heaps/h3d/impl/Benchmark.hx	/^	var currentFrame : QueryObject;$/;"	v
currentFrame	heaps/hxd/impl/CacheAllocator.hx	/^	public var currentFrame = -1;$/;"	v
currentFrame	heaps/hxd/snd/Mp3Data.hx	/^	var currentFrame : Int;$/;"	v
currentIndex	heaps/h3d/impl/DirectXDriver.hx	/^	var currentIndex : IndexBuffer;$/;"	v
currentInstance	heaps/hxd/res/Loader.hx	/^	public static var currentInstance : Loader;$/;"	v
currentManager	heaps/h3d/scene/RenderContext.hx	/^	var currentManager : h3d.pass.ShaderManager;$/;"	v
currentMaterialBits	heaps/h3d/impl/DirectXDriver.hx	/^	var currentMaterialBits = -1;$/;"	v
currentModule	heaps/hxd/res/FileTree.hx	/^	var currentModule : String;$/;"	v
currentMonitorIndex	heaps/hxd/Window.hl.hx	/^	public var currentMonitorIndex(get,null) : Int;$/;"	v
currentNativeCursor	heaps/hxd/System.hl.hx	/^	static var currentNativeCursor : hxd.Cursor = Default;$/;"	v
currentNativeCursor	heaps/hxd/System.js.hx	/^	static var currentNativeCursor:hxd.Cursor;$/;"	v
currentObj	heaps/h2d/RenderContext.hx	/^	var currentObj : Drawable;$/;"	v
currentObjects	heaps/h2d/domkit/Style.hx	/^	var currentObjects : Array<h2d.Object> = [];$/;"	v
currentOutput	heaps/h3d/pass/ShaderManager.hx	/^	var currentOutput : hxsl.ShaderList;$/;"	v
currentOutput	heaps/tools/hxsl/Main.hx	/^	var currentOutput = GLSL;$/;"	v
currentPalette	heaps/h3d/scene/Skin.hx	/^	var currentPalette : Array<h3d.Matrix>;$/;"	v
currentParts	heaps/h3d/parts/GpuParticles.hx	/^	var currentParts = 0;$/;"	v
currentProps	heaps/h3d/mat/MaterialDatabase.hx	/^		var currentProps = material.props;$/;"	v
currentRasterState	heaps/h3d/impl/DirectXDriver.hx	/^	var currentRasterState : RasterState;$/;"	v
currentRelPose	heaps/h3d/scene/Skin.hx	/^	var currentRelPose : Array<h3d.Matrix>;$/;"	v
currentSample	heaps/hxd/snd/Mp3Data.hx	/^	var currentSample : Int;$/;"	v
currentSample	heaps/hxd/snd/OggData.hx	/^	var currentSample : Int;$/;"	v
currentSample	heaps/hxd/snd/openal/Emulator.hx	/^	public var currentSample : Int = 0;$/;"	v
currentSample	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var currentSample(get, never):Int;$/;"	v
currentScaleX	heaps/h2d/ScaleGrid.hx	/^	var currentScaleX = 1.;$/;"	v
currentScaleY	heaps/h2d/ScaleGrid.hx	/^	var currentScaleY = 1.;$/;"	v
currentShader	heaps/h3d/impl/DirectXDriver.hx	/^	var currentShader : CompiledShader;$/;"	v
currentShader	heaps/h3d/impl/LogDriver.hx	/^	var currentShader : hxsl.RuntimeShader;$/;"	v
currentShaders	heaps/h2d/RenderContext.hx	/^	var currentShaders : hxsl.ShaderList;$/;"	v
currentSkin	heaps/h3d/anim/Animation.hx	/^		var currentSkin : h3d.scene.Skin = null;$/;"	v
currentStats	heaps/h3d/impl/Benchmark.hx	/^	var currentStats : StatsObject;$/;"	v
currentStencilMaskBits	heaps/h3d/impl/DirectXDriver.hx	/^	var currentStencilMaskBits = -1;$/;"	v
currentStencilOpBits	heaps/h3d/impl/DirectXDriver.hx	/^	var currentStencilOpBits = -1;$/;"	v
currentStencilRef	heaps/h3d/impl/DirectXDriver.hx	/^	var currentStencilRef = 0;$/;"	v
currentStep	heaps/h3d/scene/pbr/Renderer.hx	/^	var currentStep : h3d.impl.RendererFX.Step;$/;"	v
currentTarget	heaps/h3d/scene/pbr/LightSystem.hx	/^		var currentTarget = ctx.engine.getCurrentTarget();$/;"	v
currentTargetLayer	heaps/h3d/Engine.hx	/^	var currentTargetLayer : Int;$/;"	v
currentTargetMip	heaps/h3d/Engine.hx	/^	var currentTargetMip : Int;$/;"	v
currentTargetResources	heaps/h3d/impl/DirectXDriver.hx	/^	var currentTargetResources = new hl.NativeArray<ShaderResourceView>(16);$/;"	v
currentTargetTex	heaps/h3d/Engine.hx	/^	var currentTargetTex : h3d.mat.Texture;$/;"	v
currentTargets	heaps/h3d/impl/DirectXDriver.hx	/^	var currentTargets = new hl.NativeArray<RenderTargetView>(16);$/;"	v
currentTex	heaps/hxd/impl/AsyncLoader.hx	/^	var currentTex : hxd.res.Image;$/;"	v
currentText	heaps/h2d/Text.hx	/^	var currentText : String;$/;"	v
currentTexture	heaps/h2d/impl/BatchDrawState.hx	/^	public var currentTexture(get, never) : h3d.mat.Texture;$/;"	v
currentTime	heaps/h3d/parts/GpuParticles.hx	/^	public var currentTime : Float = 0.;$/;"	v
currentVBuffers	heaps/h3d/impl/DirectXDriver.hx	/^	var currentVBuffers = new hl.NativeArray<dx.Resource>(16);$/;"	v
currentVolume	heaps/hxd/snd/ChannelBase.hx	/^	var currentVolume : Float; \/\/ global volume$/;"	v
cursor	heaps/h2d/Dropdown.hx	/^	var cursor : h2d.Bitmap;$/;"	v
cursor	heaps/h2d/Interactive.hx	/^	public var cursor(default,set) : Null<hxd.Cursor> = Button;$/;"	v
cursor	heaps/h3d/scene/Interactive.hx	/^	public var cursor(default,set) : Null<hxd.Cursor>;$/;"	v
cursor	heaps/hxd/SceneEvents.hx	/^	public var cursor(default, set) : hxd.Cursor;$/;"	v
cursor	heaps/samples/Network.hx	/^	public var cursor : Cursor;$/;"	v
cursorBlink	heaps/h2d/TextInput.hx	/^	var cursorBlink = 0.;$/;"	v
cursorBlinkTime	heaps/h2d/TextInput.hx	/^	public var cursorBlinkTime = 0.5;$/;"	v
cursorClient	heaps/samples/Network.hx	/^				var cursorClient = new Cursor(0x0000FF, uid);$/;"	v
cursorIndex	heaps/h2d/TextInput.hx	/^	public var cursorIndex : Int = -1;$/;"	v
cursorScroll	heaps/h2d/TextInput.hx	/^	var cursorScroll = 0;$/;"	v
cursorText	heaps/h2d/TextInput.hx	/^	var cursorText : String;$/;"	v
cursorTile	heaps/h2d/Slider.hx	/^	public var cursorTile : h2d.Tile;$/;"	v
cursorTile	heaps/h2d/TextInput.hx	/^	public var cursorTile : h2d.Tile;$/;"	v
cursorVisible	heaps/hxd/System.hl.hx	/^	static var cursorVisible = true;$/;"	v
cursorX	heaps/h2d/TextInput.hx	/^	var cursorX : Float;$/;"	v
cursorXIndex	heaps/h2d/TextInput.hx	/^	var cursorXIndex : Int;$/;"	v
cursorY	heaps/h2d/Flow.hx	/^					var cursorY = e.relY - scrollBarCursor.minHeight * 0.5;$/;"	v
cursors	heaps/samples/Cursor.hx	/^		var cursors : Array<hxd.Cursor> = [Default,Button,Move,TextInput,Hide,Custom(new hxd.Cursor.Cu/;"	v
curveName	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		function curveName(c) {$/;"	f
curveTo	heaps/h2d/Graphics.hx	/^	public function curveTo( bx : Float, by : Float, cx : Float, cy : Float) {$/;"	f
curves	heaps/h2d/KeyFrames.hx	/^			var curves = f.timing_curves[0];$/;"	v
curves	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var curves = namedConnect.get(cn.getId());$/;"	v
curves	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var curves = new Map();$/;"	v
curves	heaps/hxd/fmt/spine/Data.hx	/^	public var curves : Array<AnimationCurve>;$/;"	v
custom1	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var custom1 : Float;$/;"	v
custom1	heaps/h3d/shader/pbr/PropsImport.hx	/^		var custom1 : Float;$/;"	v
custom1	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var custom1 : Float;$/;"	v
custom1	heaps/h3d/shader/pbr/PropsValues.hx	/^		var custom1 : Float;$/;"	v
custom1	heaps/h3d/shader/pbr/Slides.hx	/^		var custom1 : Float;$/;"	v
custom1Value	heaps/h3d/shader/pbr/PropsTexture.hx	/^		@param var custom1Value : Float;$/;"	v
custom1Value	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var custom1Value : Float;$/;"	v
custom2	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var custom2 : Float;$/;"	v
custom2	heaps/h3d/shader/pbr/PropsImport.hx	/^		var custom2 : Float;$/;"	v
custom2	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var custom2 : Float;$/;"	v
custom2	heaps/h3d/shader/pbr/PropsValues.hx	/^		var custom2 : Float;$/;"	v
custom2	heaps/h3d/shader/pbr/Slides.hx	/^		var custom2 : Float;$/;"	v
custom2Value	heaps/h3d/shader/pbr/PropsTexture.hx	/^		@param var custom2Value : Float;$/;"	v
custom2Value	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var custom2Value : Float;$/;"	v
customCanvas	heaps/hxd/Window.js.hx	/^		var customCanvas = canvas != null;$/;"	v
customDepth	heaps/h3d/pass/DirShadowMap.hx	/^	var customDepth : Bool;$/;"	v
customDepth	heaps/h3d/pass/PointShadowMap.hx	/^	var customDepth : Bool;$/;"	v
customDepth	heaps/h3d/pass/SpotShadowMap.hx	/^	var customDepth : Bool;$/;"	v
customMeshInit	heaps/h3d/mat/MaterialSetup.hx	/^	public function customMeshInit( mesh : h3d.scene.Mesh ) {$/;"	f
customMipLevels	heaps/h3d/mat/Texture.hx	/^	var customMipLevels : Int;$/;"	v
cutSelection	heaps/h2d/TextInput.hx	/^	function cutSelection() {$/;"	f
cuv	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var cuv = c.uv;$/;"	v
cw	heaps/h2d/Flow.hx	/^			var cw = fillWidth ? scene.width : -1;$/;"	v
cw	heaps/h2d/Flow.hx	/^		var cw, ch;$/;"	v
cw	heaps/h3d/parts/GpuParticles.hx	/^				var cw = p.x * m._14 + p.y * m._24 + p.z * m._34 + m._44;$/;"	v
cw	heaps/hxd/Window.js.hx	/^		var cw = this.width, ch = this.height;$/;"	v
cwd	heaps/hxd/File.hx	/^				var cwd = Sys.getCwd();$/;"	v
cwd	heaps/samples/Generator.hx	/^		var cwd = Sys.getCwd();$/;"	v
cwd	heaps/samples/templates/.vscode/launch.json	/^			"cwd": "${workspaceRoot}",$/;"	s	object:configurations.0
cx	heaps/h2d/Interactive.hx	/^			var cx = width * 0.5, cy = height * 0.5;$/;"	v
cx	heaps/h2d/RenderContext.hx	/^			var cx = absX + tx * matA;$/;"	v
cx	heaps/h2d/col/Polygon.hx	/^		var cx = 0.;$/;"	v
cx	heaps/h3d/Matrix.hx	/^		var cx = Math.cos(x);$/;"	v
cx	heaps/h3d/scene/Trail.hx	/^			var cx = x1 - fa * (x2 - x0);$/;"	v
cx	heaps/h3d/scene/World.hx	/^	public var cx : Int;$/;"	v
cx	heaps/samples/Lights.hx	/^			var cx = (Math.random() - 0.5) * 20;$/;"	v
cxsy	heaps/h3d/Matrix.hx	/^		var cxsy = cx * sy;$/;"	v
cy	heaps/h2d/RenderContext.hx	/^			var cy = absY + ty * matD;$/;"	v
cy	heaps/h2d/col/Polygon.hx	/^		var cy = 0.;$/;"	v
cy	heaps/h3d/Matrix.hx	/^		var cy = Math.cos(y);$/;"	v
cy	heaps/h3d/Matrix.hx	/^		var cy = hxd.Math.sqrt(m._11 * m._11 + m._12 * m._12);$/;"	v
cy	heaps/h3d/scene/Trail.hx	/^			var cy = y1 - fa * (y2 - y0);$/;"	v
cy	heaps/h3d/scene/World.hx	/^	public var cy : Int;$/;"	v
cy	heaps/samples/Lights.hx	/^			var cy = (Math.random() - 0.5) * 20;$/;"	v
cyl	heaps/h3d/col/Capsule.hx	/^		var cyl = new h3d.prim.Cylinder(segW, r, dist, true);$/;"	v
cylMesh	heaps/h3d/col/Capsule.hx	/^		var cylMesh = new h3d.scene.Mesh(cyl);$/;"	v
cylinder	heaps/samples/Polygons.hx	/^		var cylinder = new Cylinder(16, 0.5);$/;"	v
cylinderMesh	heaps/samples/Polygons.hx	/^		var cylinderMesh = new Mesh(cylinder, s3d);$/;"	v
cz	heaps/h3d/Matrix.hx	/^		var cz = Math.cos(z);$/;"	v
cz	heaps/h3d/parts/GpuParticles.hx	/^				var cz = p.x * m._13 + p.y * m._23 + p.z * m._33 + m._43;$/;"	v
cz	heaps/h3d/scene/Trail.hx	/^			var cz = z1 - fa * (z2 - z0);$/;"	v
d	Laser.hx	/^		var d = HP.scene.width + HP.scene.height; \/\/ TODO: ? lol$/;"	v
d	heaps/h2d/Graphics.hx	/^				var d = lineSize * 0.5 \/ size;$/;"	v
d	heaps/h2d/Graphics.hx	/^			var d = i * step;$/;"	v
d	heaps/h2d/Graphics.hx	/^			var d = lineSize * 0.5 \/ size;$/;"	v
d	heaps/h2d/col/Circle.hx	/^		var d = b * b - 4 * a * c;$/;"	v
d	heaps/h2d/col/Circle.hx	/^		var d = dx * dx + dy * dy - ray * ray;$/;"	v
d	heaps/h2d/col/IPolygon.hx	/^			var d = distPointSeg(points[i], pfirst, plast);$/;"	v
d	heaps/h2d/col/Line.hx	/^		var d = (p1.x - p2.x) * (l.p1.y - l.p2.y) - (p1.y - p2.y) * (l.p1.x - l.p2.x);$/;"	v
d	heaps/h2d/col/Matrix.hx	/^	public var d : Float;$/;"	v
d	heaps/h2d/col/Polygon.hx	/^			var d = Math.distanceSq(x - r.px, y - r.py);$/;"	v
d	heaps/h2d/col/Polygon.hx	/^			var d = distPointSeg(points[i], pfirst, plast);$/;"	v
d	heaps/h2d/col/Segments.hx	/^			var d = s.distanceSq(p);$/;"	v
d	heaps/h2d/col/Voronoi.hx	/^			var d = p.distanceSq(e.getStartpoint());$/;"	v
d	heaps/h2d/col/Voronoi.hx	/^		var d = 2*(ax*cy-ay*cx);$/;"	v
d	heaps/h3d/Camera.hx	/^			var d = 1 \/ (bounds.zMax - bounds.zMin);$/;"	v
d	heaps/h3d/Vector.hx	/^			var d = max - min;$/;"	v
d	heaps/h3d/anim/Transition.hx	/^			var d = anim1.frameCount * r1 - anim2.frameCount * r2;$/;"	v
d	heaps/h3d/col/Collider.hx	/^			var d = c.rayIntersection(r, bestMatch);$/;"	v
d	heaps/h3d/col/HeightMap.hx	/^			var d = (dmin + dmax) * 0.5;$/;"	v
d	heaps/h3d/col/Plane.hx	/^		var d = distance(p);$/;"	v
d	heaps/h3d/col/Plane.hx	/^	var d : Float;$/;"	v
d	heaps/h3d/col/Polygon.hx	/^			var d = t.rayIntersection(r, bestMatch);$/;"	v
d	heaps/h3d/col/Polygon.hx	/^	var d : Float;$/;"	v
d	heaps/h3d/col/PolygonBuffer.hx	/^			var d = n.dot(p0);$/;"	v
d	heaps/h3d/col/Ray.hx	/^		var d = lx * p.nx + ly * p.ny + lz * p.nz;$/;"	v
d	heaps/h3d/col/Sphere.hx	/^		var d = b * b - 4 * a * c;$/;"	v
d	heaps/h3d/col/Sphere.hx	/^		var d = distanceSq(p);$/;"	v
d	heaps/h3d/impl/DirectXDriver.hx	/^		var d = b.b;$/;"	v
d	heaps/h3d/impl/LogDriver.hx	/^						var d = swiz.charCodeAt(1) - 'x'.code;$/;"	v
d	heaps/h3d/impl/LogDriver.hx	/^	var d : Driver;$/;"	v
d	heaps/h3d/impl/ManagedBuffer.hx	/^				var d = (align - (free.pos % align)) % align;$/;"	v
d	heaps/h3d/impl/Stage3dDriver.hx	/^					var d = swiz.charCodeAt(1) - 'x'.code;$/;"	v
d	heaps/h3d/parts/GpuParticles.hx	/^			var d = speed * (1 + speedIncr * life) * life + start;$/;"	v
d	heaps/h3d/parts/GpuParticles.hx	/^			var d = speed * (1 + speedIncr * life) * life;$/;"	v
d	heaps/h3d/parts/Particles.hx	/^				var d = hxd.Math.invSqrt(dx * dx + dy * dy + dz * dz);$/;"	v
d	heaps/h3d/pass/DirShadowMap.hx	/^							var d = r.distance(h3d.col.Plane.Z(zMax));$/;"	v
d	heaps/h3d/pass/SortByMaterial.hx	/^			var d = shaderIdMap[o1.shader.id] - shaderIdMap[o2.shader.id];$/;"	v
d	heaps/h3d/prim/Disc.hx	/^		var d : Disc = @:privateAccess engine.resCache.get(Disc);$/;"	v
d	heaps/h3d/prim/Quads.hx	/^		var d = new UV(1, 0);$/;"	v
d	heaps/h3d/scene/CameraController.hx	/^		var d = bounds.getMax().sub(center);$/;"	v
d	heaps/h3d/scene/Graphics.hx	/^			var d = lineSize * 0.5 \/ size;$/;"	v
d	heaps/h3d/scene/pbr/Environment.hx	/^			var d = input.uv * 2. - 1.;$/;"	v
d	heaps/h3d/scene/pbr/SpotLight.hx	/^	var d = new h3d.Vector();$/;"	v
d	heaps/h3d/shader/Blur.hx	/^					var d = (p - pcur).dot(p - pcur);$/;"	v
d	heaps/hxd/Pad.hx	/^	var d : GameController;$/;"	v
d	heaps/hxd/Pad.hx	/^	var d : flash.ui.GameInputDevice;$/;"	v
d	heaps/hxd/Pad.hx	/^	var d : js.html.Gamepad;$/;"	v
d	heaps/hxd/System.flash.hx	/^			var d : Dynamic = flash.Lib.current.loaderInfo.applicationDomain.getDefinition("flash.desktop/;"	v
d	heaps/hxd/clipper/Clipper.hx	/^                var d = (ip.x - pt.x) * (ipNext.y - pt.y) - (ipNext.x - pt.x) * (ip.y - pt.y);$/;"	v
d	heaps/hxd/clipper/Clipper.hx	/^                var d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);$/;"	v
d	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var d = getDepth(bones[i]);$/;"	v
d	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var d = defaultModelMatrixes.get(id);$/;"	v
d	heaps/hxd/fmt/fbx/HMDOut.hx	/^	var d : Data;$/;"	v
d	heaps/hxd/fmt/fbx/Parser.hx	/^		var d : Float = bytes.getDouble(pos);$/;"	v
d	heaps/hxd/fmt/grd/Reader.hx	/^		var d = new Data();$/;"	v
d	heaps/hxd/fmt/hmd/Dump.hx	/^		var d = new haxe.io.BytesInput(h.data);$/;"	v
d	heaps/hxd/fmt/hmd/Reader.hx	/^		var d = new Data();$/;"	v
d	heaps/hxd/res/FileTree.hx	/^				var d = tree.dirs.get(f);$/;"	v
d	heaps/hxd/snd/LoadingData.hx	/^		var d = snd.getData();$/;"	v
d	heaps/hxsl/Eval.hx	/^		var d : TExprDef = switch( e.e ) {$/;"	v
d	heaps/samples/CollideCheck.hx	/^				var d = dist(pt);$/;"	v
d	heaps/samples/Quaternion.hx	/^		var d = new h3d.Vector( Math.cos(time), Math.sin(time), Math.cos(time \/ 3) * 0.1);$/;"	v
d	heaps/samples/ShaderAdvanced.hx	/^		var d = engine.driver;$/;"	v
d0	heaps/h3d/shader/NoiseLib.hx	/^  var d0 = pos - p0;$/;"	v
d01	heaps/h3d/scene/Trail.hx	/^			var d01 = hxd.Math.distance(x1 - x0, y1 - y0, z1 - z0);$/;"	v
d1	heaps/h3d/col/Plane.hx	/^		var d1 = p1.sub(p0);$/;"	v
d1	heaps/h3d/col/Polygon.hx	/^			var d1 = new Point(t.d1x, t.d1y, t.d1z);$/;"	v
d1	heaps/h3d/col/Polygon.hx	/^		var d1 = new Point(d1x, d1y, d1z);$/;"	v
d1	heaps/h3d/col/Polygon.hx	/^		var d1 = p1.sub(p0);$/;"	v
d1	heaps/h3d/col/PolygonBuffer.hx	/^			var d1 = p1.sub(p0);$/;"	v
d1	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var d1 = l1.getAbsPos().getPosition().sub(cameraTarget).length();$/;"	v
d1	heaps/h3d/shader/NoiseLib.hx	/^  var d1 = pos - p1;$/;"	v
d12	heaps/h3d/scene/Trail.hx	/^			var d12 = hxd.Math.distance(x2 - x1, y2 - y1, z2 - z1);$/;"	v
d1x	heaps/h3d/col/Polygon.hx	/^	var d1x : Float;$/;"	v
d1y	heaps/h3d/col/Polygon.hx	/^	var d1y : Float;$/;"	v
d1z	heaps/h3d/col/Polygon.hx	/^	var d1z : Float;$/;"	v
d2	heaps/h3d/col/Plane.hx	/^		var d2 = p2.sub(p0);$/;"	v
d2	heaps/h3d/col/Polygon.hx	/^			var d2 = new Point(t.d2x, t.d2y, t.d2z);$/;"	v
d2	heaps/h3d/col/Polygon.hx	/^		var d2 = new Point(d2x, d2y, d2z);$/;"	v
d2	heaps/h3d/col/Polygon.hx	/^		var d2 = p2.sub(p0);$/;"	v
d2	heaps/h3d/col/PolygonBuffer.hx	/^			var d2 = p2.sub(p0);$/;"	v
d2	heaps/h3d/pass/DirShadowMap.hx	/^					var d2 = r.distance(h3d.col.Plane.Z(d?zMax:zMin));$/;"	v
d2	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var d2 = l2.getAbsPos().getPosition().sub(cameraTarget).length();$/;"	v
d2	heaps/h3d/shader/NoiseLib.hx	/^  var d2 = pos - p2;$/;"	v
d2	heaps/hxsl/AgalOptim.hx	/^			var d2 = r(d, true);$/;"	v
d2x	heaps/h3d/col/Polygon.hx	/^	var d2x : Float;$/;"	v
d2x	heaps/hxd/BitmapData.hx	/^			var d2x = dx << 1;		\/\/ double steps for bresenham$/;"	v
d2y	heaps/h3d/col/Polygon.hx	/^	var d2y : Float;$/;"	v
d2y	heaps/hxd/BitmapData.hx	/^			var d2y = dy << 1;$/;"	v
d2z	heaps/h3d/col/Polygon.hx	/^	var d2z : Float;$/;"	v
dMin	heaps/h3d/pass/DirShadowMap.hx	/^					var dMin = 1e9;$/;"	v
da	heaps/hxd/Math.hx	/^		var da = angle(b - a);$/;"	v
dat	heaps/hxd/res/NanoJpeg.hx	/^			var dat = pixels.getData();$/;"	v
dat	heaps/hxd/res/NanoJpeg.hx	/^		var dat = out.getData();$/;"	v
data	heaps/h2d/CdbLevel.hx	/^		var data = ldat.data.data.decode();$/;"	v
data	heaps/h2d/CdbLevel.hx	/^	public var data : LevelLayerData;$/;"	v
data	heaps/h2d/CdbLevel.hx	/^	var data : cdb.Types.TileLayer;$/;"	v
data	heaps/h2d/col/Polynomial.hx	/^	public var data : haxe.ds.Vector<haxe.ds.Vector<Float>>;$/;"	v
data	heaps/h3d/anim/BufferAnimation.hx	/^	var data : #if hl hl.BytesAccess<hl.F32> #else hxd.impl.TypedArray.Float32Array #end;$/;"	v
data	heaps/h3d/impl/DirectXDriver.hx	/^		var data = hl.Bytes.getArray(buf.getNative()).offset(bufPos<<2);$/;"	v
data	heaps/h3d/impl/DirectXDriver.hx	/^		var data = hl.Bytes.getArray(buffer.toData());$/;"	v
data	heaps/h3d/impl/GlDriver.hx	/^		var data = #if hl hl.Bytes.getArray(buf.getNative()) #else buf.getNative() #end;$/;"	v
data	heaps/h3d/impl/GlDriver.hx	/^		var data = [];$/;"	v
data	heaps/h3d/impl/InstanceBuffer.hx	/^	var data : Dynamic;$/;"	v
data	heaps/h3d/impl/Stage3dDriver.hx	/^		var data = buf.getNative();$/;"	v
data	heaps/h3d/impl/Stage3dDriver.hx	/^		var data = pixels.bytes.getData();$/;"	v
data	heaps/h3d/prim/HMDModel.hx	/^	var data : hxd.fmt.hmd.Data.Geometry;$/;"	v
data	heaps/h3d/scene/MeshBatch.hx	/^	public var data : hxd.FloatBuffer;$/;"	v
data	heaps/h3d/scene/World.hx	/^				var data = lib.getBuffers(geom, format.fmt, format.defaults, mid);$/;"	v
data	heaps/hxd/BitmapData.hx	/^		var data = ctx.getImageData(0, 0, w, h).data;$/;"	v
data	heaps/hxd/BitmapData.hx	/^	var data : BitmapInnerData;$/;"	v
data	heaps/hxd/File.hx	/^							var data = raw.substr(raw.indexOf(",")+1);$/;"	v
data	heaps/hxd/File.hx	/^					var data = sys.io.File.getBytes(path);$/;"	v
data	heaps/hxd/Save.hx	/^			var data = Reflect.field(getObj(name).data, "data");$/;"	v
data	heaps/hxd/Save.hx	/^		var data = haxe.Serializer.run(value);$/;"	v
data	heaps/hxd/Save.hx	/^		var data = saveData(val, checkSum);$/;"	v
data	heaps/hxd/Save.hx	/^		var data = saveData(val,checkSum);$/;"	v
data	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var data = {$/;"	v
data	heaps/hxd/fmt/fbx/Parser.hx	/^				var data = Bytes.alloc(len);$/;"	v
data	heaps/hxd/fmt/hdr/Reader.hx	/^			var data : hl.Bytes = data;$/;"	v
data	heaps/hxd/fmt/hdr/Reader.hx	/^		var data = haxe.io.Bytes.alloc(width * height * 4 * 4);$/;"	v
data	heaps/hxd/fmt/hmd/Data.hx	/^	public var data : String;$/;"	v
data	heaps/hxd/fmt/hmd/Data.hx	/^	public var data : haxe.io.Bytes;$/;"	v
data	heaps/hxd/fmt/hmd/Library.hx	/^					var data = entry.fetchBytes(dataPos, size);$/;"	v
data	heaps/hxd/fmt/hmd/Library.hx	/^				var data = entry.fetchBytes(dataPos, size);$/;"	v
data	heaps/hxd/fmt/hmd/Library.hx	/^			var data = getBuffers(geom, format, defaults);$/;"	v
data	heaps/hxd/fmt/hmd/Library.hx	/^		var data = getBuffers(geom, [$/;"	v
data	heaps/hxd/fmt/hmd/Library.hx	/^		var data = haxe.io.Bytes.alloc(count * 4);$/;"	v
data	heaps/hxd/fmt/kframes/Data.hx	/^	var data : Array<Float>;$/;"	v
data	heaps/hxd/fmt/pak/Build.hx	/^			var data = sys.io.File.getBytes(filePath);$/;"	v
data	heaps/hxd/fmt/tiff/Data.hx	/^	var data : Array<haxe.io.Bytes>;$/;"	v
data	heaps/hxd/fs/EmbedFileSystem.hx	/^		var data = f.embed(options);$/;"	v
data	heaps/hxd/fs/EmbedFileSystem.hx	/^	var data : Class<flash.utils.ByteArray>;$/;"	v
data	heaps/hxd/fs/EmbedFileSystem.hx	/^	var data : String;$/;"	v
data	heaps/hxd/net/Socket.hx	/^	var data : hl.Bytes;$/;"	v
data	heaps/hxd/net/Socket.hx	/^	var data : js.node.Buffer;$/;"	v
data	heaps/hxd/res/DynamicText.hx	/^						var data = [for( e in x.elements ) e];$/;"	v
data	heaps/hxd/res/Gradients.hx	/^		var data  = getData();$/;"	v
data	heaps/hxd/res/Gradients.hx	/^		var data = getData();$/;"	v
data	heaps/hxd/res/Gradients.hx	/^	var data : Data;$/;"	v
data	heaps/hxd/res/Image.hx	/^			var data = hxd.fmt.hdr.Reader.decode(entry.getBytes(), false);$/;"	v
data	heaps/hxd/res/Sound.hx	/^		var data = getData();$/;"	v
data	heaps/hxd/res/Sound.hx	/^	var data : hxd.snd.Data;$/;"	v
data	heaps/hxd/res/TiledMap.hx	/^			var data = StringTools.trim(l.node.data.innerData);$/;"	v
data	heaps/hxd/res/TiledMap.hx	/^			var data = [];$/;"	v
data	heaps/hxd/res/TiledMap.hx	/^		var data = entry.getText();$/;"	v
data	heaps/hxd/res/TiledMap.hx	/^	var data : Array<Int>;$/;"	v
data	heaps/hxd/snd/Data.hx	/^		var data = haxe.io.Bytes.alloc(bpp * samples);$/;"	v
data	heaps/hxd/snd/Data.hx	/^		var data = new WavData(null);$/;"	v
data	heaps/hxd/snd/Manager.hx	/^		var data   = snd.getData();$/;"	v
data	heaps/hxd/snd/Manager.hx	/^		var data = snd.getData();$/;"	v
data	heaps/hxd/snd/openal/Emulator.hx	/^				var data = buffer.data;$/;"	v
data	heaps/hxd/snd/openal/Emulator.hx	/^	public var data : haxe.ds.Vector<F32>;$/;"	v
data	heaps/hxsl/AgalOptim.hx	/^	var data : Data;$/;"	v
data	heaps/hxsl/Cache.hx	/^		var data = flat.flatten(s, kind, constsToGlobal);$/;"	v
data	heaps/hxsl/CacheFileBuilder.hx	/^					var data = try haxe.crypto.Base64.decode(s) catch( e : Dynamic ) continue;$/;"	v
data	heaps/hxsl/CacheFileBuilder.hx	/^			var data = sys.io.File.getBytes(tmpOut);$/;"	v
data	heaps/hxsl/RuntimeShader.hx	/^	public var data : Ast.ShaderData;$/;"	v
data	heaps/hxsl/SharedShader.hx	/^	public var data : ShaderData;$/;"	v
data	heaps/samples/Generator.hx	/^				var data = ~\/::([^:]+)::\/g.map(t.data, function(r) {$/;"	v
dataCurves	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var dataCurves = getChilds(cn, "AnimationCurve");$/;"	v
dataFormat	heaps/hxd/res/Image.hx	/^	public var dataFormat(default,null) : ImageFormat;$/;"	v
dataLen	heaps/h3d/impl/GlDriver.hx	/^		var dataLen = pixels.dataSize;$/;"	v
dataLen	heaps/hxd/res/Image.hx	/^				var dataLen = f.readInt32();$/;"	v
dataOffset	heaps/h3d/anim/BufferAnimation.hx	/^	public var dataOffset : Int;$/;"	v
dataOut	heaps/hxd/fmt/fbx/HMDOut.hx	/^	var dataOut : haxe.io.BytesOutput;$/;"	v
dataPasses	heaps/h3d/scene/MeshBatch.hx	/^	var dataPasses : BatchData;$/;"	v
dataPos	heaps/hxd/fmt/hdr/Reader.hx	/^			var dataPos = f.position;$/;"	v
dataPos	heaps/hxd/fmt/hmd/Library.hx	/^		var dataPos = header.dataPosition + a.dataPosition;$/;"	v
dataPos	heaps/hxd/fmt/hmd/Library.hx	/^		var dataPos = header.dataPosition + geom.indexPosition;$/;"	v
dataPosition	heaps/h3d/prim/HMDModel.hx	/^	var dataPosition : Int;$/;"	v
dataPosition	heaps/hxd/fmt/hmd/Data.hx	/^	public var dataPosition : DataPosition;$/;"	v
dataPosition	heaps/hxd/fmt/hmd/Data.hx	/^	public var dataPosition : Int;$/;"	v
dataPosition	heaps/hxd/fmt/pak/Data.hx	/^	public var dataPosition : Float;$/;"	v
dataRef	heaps/hxd/res/DynamicText.hx	/^						var dataRef = ref == null ? null : [for( e in ref.elements ) e];$/;"	v
dataSize	heaps/hxd/Pixels.hx	/^	public var dataSize(default,null) : Int;$/;"	v
dataSize	heaps/hxd/fmt/pak/Data.hx	/^	public var dataSize : Int;$/;"	v
database	heaps/h3d/mat/MaterialSetup.hx	/^	var database : MaterialDatabase;$/;"	v
db	heaps/h3d/mat/MaterialDatabase.hx	/^	var db : Map<String,{ v : Dynamic }> = new Map();$/;"	v
dbg	heaps/hxsl/Cache.hx	/^		var dbg = sys.io.File.write("shaders\/"+shaderId+"_dump.c");$/;"	v
dce	heaps/hxsl/Dce.hx	/^	public function dce( vertex : ShaderData, fragment : ShaderData ) {$/;"	f
dce	heaps/tools/hxsl/Main.hx	/^			var dce = new hxsl.Dce().dce(split.vertex, split.fragment);$/;"	v
dcpred	heaps/hxd/res/NanoJpeg.hx	/^	public var dcpred : Int;$/;"	v
dctabsel	heaps/hxd/res/NanoJpeg.hx	/^	public var dctabsel : Int;$/;"	v
dd	heaps/h2d/Dropdown.hx	/^	var dd : Dropdown;$/;"	v
dd	heaps/h3d/col/Bounds.hx	/^		var dd = a * (xMax + xMin) + b * (yMax + yMin) + c * (zMax + zMin);$/;"	v
ddsOut	heaps/hxd/Pixels.hx	/^		var ddsOut = haxe.io.Bytes.alloc(outSize);$/;"	v
ddx	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var ddx = worldPos - getWorlPos(screenPos + vec2(global.pixelSize.x, 0));$/;"	v
ddy	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var ddy = worldPos - getWorlPos(screenPos + vec2(0, global.pixelSize.y));$/;"	v
de1	heaps/hxd/poly2tri/Triangle.hx	/^		var de1:Bool =  t.getDelaunayEdgeCCW( p);$/;"	v
de2	heaps/hxd/poly2tri/Triangle.hx	/^		var de2:Bool =  t.getDelaunayEdgeCW ( p);$/;"	v
de3	heaps/hxd/poly2tri/Triangle.hx	/^		var de3:Bool = ot.getDelaunayEdgeCCW(op);$/;"	v
de4	heaps/hxd/poly2tri/Triangle.hx	/^		var de4:Bool = ot.getDelaunayEdgeCW (op);$/;"	v
debug	heaps/h2d/Flow.hx	/^	public var debug(default, set) : Bool;$/;"	v
debug	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var debug : Bool;$/;"	v
debug	heaps/h3d/Engine.hx	/^	public var debug(default, set) : Bool;$/;"	v
debug	heaps/h3d/impl/GlDriver.hx	/^	var debug : Bool;$/;"	v
debug	heaps/h3d/impl/LogDriver.hx	/^	public static function debug( f : Void -> Void ) {$/;"	f
debug	heaps/hxsl/AgalOptim.hx	/^	var debug : Bool;$/;"	v
debug	heaps/hxsl/Dce.hx	/^	inline function debug( msg : String, ?pos : haxe.PosInfos ) {$/;"	f
debug	heaps/hxsl/Linker.hx	/^	inline function debug( msg : String, ?pos : haxe.PosInfos ) {$/;"	f
debug	heaps/samples/Input.hx	/^	var debug : h2d.Text;$/;"	v
debugCheckError	heaps/h3d/impl/GlDriver.hx	/^	inline function debugCheckError() {$/;"	f
debugCompileShader	heaps/h3d/scene/Renderer.hx	/^	public function debugCompileShader( pass : h3d.mat.Pass ) {$/;"	f
debugCompileShader	heaps/h3d/scene/pbr/Renderer.hx	/^	override function debugCompileShader(pass:h3d.mat.Pass) {$/;"	f
debugCulling	heaps/h3d/scene/RenderContext.hx	/^	public var debugCulling : Bool;$/;"	v
debugDepth	heaps/hxsl/Linker.hx	/^	var debugDepth = 0;$/;"	v
debugDraw	heaps/h3d/impl/Stage3dDriver.hx	/^	function debugDraw( ibuf : IndexBuffer, startIndex : Int, ntriangles : Int ) {$/;"	f
debugGraphics	heaps/h2d/Flow.hx	/^	var debugGraphics : h2d.Graphics;$/;"	v
debugObj	heaps/h3d/scene/Interactive.hx	/^	var debugObj : Object;$/;"	v
debugPeer	heaps/hxd/Worker.hx	/^	var debugPeer : Worker<T>;$/;"	v
debugPushPos	heaps/h3d/scene/pbr/Renderer.hx	/^	var debugPushPos : { x : Float, y : Float }$/;"	v
debugShadowMapIndex	heaps/h3d/scene/pbr/Renderer.hx	/^	var debugShadowMapIndex = 0;$/;"	v
debugSource	heaps/h3d/impl/DirectXDriver.hx	/^	public var debugSource : String;$/;"	v
debugText	ra/hp/HP.hx	/^	public static var debugText:h2d.Text;$/;"	v
debugging	heaps/h3d/scene/Renderer.hx	/^	var debugging = false;$/;"	v
decalsOutput	heaps/h3d/scene/pbr/Renderer.hx	/^	var decalsOutput = new h3d.pass.Output("decals",[$/;"	v
decayHFRatio	heaps/hxd/snd/effect/Reverb.hx	/^	public var decayHFRatio      : Float; \/\/ [0.1, 2.0]$/;"	v
decayHFRatio	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var decayHFRatio      : Float;$/;"	v
decayTime	heaps/hxd/snd/effect/Reverb.hx	/^	public var decayTime         : Float; \/\/ [0.1, 20.0] s$/;"	v
decayTime	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var decayTime         : Float;$/;"	v
decl	heaps/hxsl/GlslOut.hx	/^	function decl( s : String ) {$/;"	f
decl	heaps/hxsl/HlslOut.hx	/^	function decl( s : String ) {$/;"	f
declMods	heaps/hxsl/HlslOut.hx	/^	function declMods() {$/;"	f
declVar	heaps/hxsl/Cache.hx	/^		function declVar( name, t, kind ) : TVar {$/;"	f
declVar	heaps/hxsl/HlslOut.hx	/^		function declVar(prefix:String, v : TVar ) {$/;"	f
decls	heaps/hxsl/GlslOut.hx	/^	var decls : Array<String>;$/;"	v
decls	heaps/hxsl/HlslOut.hx	/^	var decls : Array<String>;$/;"	v
decode	heaps/hxd/fmt/hdr/Reader.hx	/^	public static function decode( bytes : haxe.io.Bytes, sRGB : Bool ) : { width : Int, height : I/;"	f
decode	heaps/hxd/fmt/tiff/Reader.hx	/^	public static function decode( f : TifFile ) : hxd.Pixels {$/;"	f
decode	heaps/hxd/res/NanoJpeg.hx	/^	public static function decode( bytes : haxe.io.Bytes, ?filter, position : Int = 0, size : Int =/;"	f
decode	heaps/hxd/snd/Data.hx	/^	public function decode( out : haxe.io.Bytes, outPos : Int, sampleStart : Int, sampleCount : Int/;"	f
decode	heaps/hxd/snd/LoadingData.hx	/^	override function decode(out:haxe.io.Bytes, outPos:Int, sampleStart:Int, sampleCount:Int):Void /;"	f
decodeBuffer	heaps/hxd/snd/Data.hx	/^	function decodeBuffer( out : haxe.io.Bytes, outPos : Int, sampleStart : Int, sampleCount : Int /;"	f
decodeBuffer	heaps/hxd/snd/Mp3Data.hx	/^	override function decodeBuffer(out:haxe.io.Bytes, outPos:Int, sampleStart:Int, sampleCount:Int)/;"	f
decodeBuffer	heaps/hxd/snd/OggData.hx	/^	override function decodeBuffer(out:haxe.io.Bytes, outPos:Int, sampleStart:Int, sampleCount:Int)/;"	f
decodeBuffer	heaps/hxd/snd/WavData.hx	/^	override function decodeBuffer(out:haxe.io.Bytes, outPos:Int, sampleStart:Int, sampleCount:Int)/;"	f
decodeJPG	heaps/hxd/res/Image.hx	/^	static function decodeJPG( src : haxe.io.Bytes, width : Int, height : Int, requestedFmt : hxd.P/;"	f
decodePNG	heaps/hxd/res/Image.hx	/^	static function decodePNG( src : haxe.io.Bytes, width : Int, height : Int, requestedFmt : hxd.P/;"	f
decoded	heaps/hxd/snd/OggData.hx	/^	var decoded : haxe.io.Bytes;$/;"	v
decodedFirst	heaps/hxd/snd/OggData.hx	/^	var decodedFirst : Int;$/;"	v
decodedLast	heaps/hxd/snd/OggData.hx	/^	var decodedLast : Int;$/;"	v
decodedRate	heaps/hxd/snd/Mp3Data.hx	/^		var decodedRate = Std.int(ctx.sampleRate);$/;"	v
decref	heaps/h3d/prim/Instanced.hx	/^	override function decref() {$/;"	f
decref	heaps/h3d/prim/Primitive.hx	/^	public function decref():Void$/;"	f
def	heaps/h3d/anim/SmoothTransition.hx	/^	public var def : h3d.Matrix;$/;"	v
def	heaps/h3d/mat/PbrMaterial.hx	/^		var def = mainPass.getShader(h3d.shader.pbr.PropsValues);$/;"	v
def	heaps/h3d/scene/fwd/Renderer.hx	/^	var def(get, never) : h3d.pass.Base;$/;"	v
def	heaps/hxd/Window.hl.hx	/^		var def = getCurrentDisplaySetting(currentMonitorIndex, true);$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var def = getParent(d, "Deformer");$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var def = getParent(subDef, "Deformer");$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var def = c.def;$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var def = getChild(g, "Deformer", true);$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var def = switch( cname ) {$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var def = defaultModelMatrixes.get(id);$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var def = getChild(geom.getRoot(), "Deformer", true);$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var def = getDefaultMatrixes(model);$/;"	v
def	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var def : DefaultMatrixes;$/;"	v
def	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var def = getParent(subDef, "Deformer");$/;"	v
def	heaps/hxd/fmt/hmd/Library.hx	/^				var def = defaults == null ? null : defaults[i];$/;"	v
def	heaps/hxd/fmt/hmd/Library.hx	/^	public var def : h3d.Vector;$/;"	v
def	heaps/hxd/fmt/spine/Library.hx	/^	inline function def<T>( v : Null<T>, def : T ) {$/;"	f
def	heaps/hxd/fs/FileConverter.hx	/^		var def = Reflect.field(obj,"fs.convert");$/;"	v
def	heaps/hxd/res/FileTree.hx	/^		var def = macro class {$/;"	v
def	heaps/hxsl/CacheFile.hx	/^		var def = new NullShader();$/;"	v
def	heaps/hxsl/Checker.hx	/^			var def = def == null ? null : typeExpr(def, with);$/;"	v
def	heaps/hxsl/Checker.hx	/^			var def = switch( g ) {$/;"	v
def	heaps/hxsl/Eval.hx	/^			var def = def == null ? null : evalExpr(def, isVal);$/;"	v
def2	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var def2 = getChild(geom2.getRoot(), "Deformer", true);$/;"	v
defFormat	heaps/hxsl/Macros.hx	/^				var defFormat = macro throw $v{c.v.name} +"Channel is not set";$/;"	v
defMat	heaps/h3d/anim/Skin.hx	/^	public var defMat : h3d.Matrix; \/\/ the default bone matrix$/;"	v
defMat	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var defMat = defaultModelMatrixes.get(jModel.getId());$/;"	v
defNode	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var defNode = null;$/;"	v
defOverride	heaps/samples/Cursor.hx	/^		var defOverride = new hxd.BitmapData(10, 10);$/;"	v
defPart	heaps/h3d/parts/Data.hx	/^	public static var defPart = hxd.res.Embed.getResource("h3d\/parts\/default.png");$/;"	v
defPartAlpha	heaps/h3d/parts/Data.hx	/^	public static var defPartAlpha = hxd.res.Embed.getResource("h3d\/parts\/defaultAlpha.png");$/;"	v
defStencil	heaps/h3d/impl/GlDriver.hx	/^	var defStencil : Stencil;$/;"	v
defStencil	heaps/h3d/impl/Stage3dDriver.hx	/^	var defStencil : Stencil;$/;"	v
defSwiz	heaps/hxsl/AgalOut.hx	/^		var defSwiz = [X, Y, Z, W];$/;"	v
defSwiz	heaps/hxsl/AgalOut.hx	/^	function defSwiz( t : Type ) {$/;"	f
def_arc_tolerance	heaps/hxd/clipper/Clipper.hx	/^	private var def_arc_tolerance = 0.25;$/;"	v
defaultCfg	heaps/hxd/fs/FileConverter.hx	/^		var defaultCfg : Dynamic = {$/;"	v
defaultChar	heaps/h2d/Font.hx	/^	var defaultChar : FontChar;$/;"	v
defaultChar	heaps/hxd/fmt/bfnt/Reader.hx	/^				var defaultChar = i.readInt32();$/;"	v
defaultConfig	heaps/hxd/fs/FileConverter.hx	/^	var defaultConfig : ConvertConfig;$/;"	v
defaultCubeTexture	heaps/h3d/mat/Texture.hx	/^	public static function defaultCubeTexture() {$/;"	f
defaultCursor	heaps/hxd/SceneEvents.hx	/^	public var defaultCursor(default,set) : Cursor = Default;$/;"	v
defaultDepth	heaps/h3d/impl/DirectXDriver.hx	/^	var defaultDepth : DepthBuffer;$/;"	v
defaultDepth	heaps/h3d/impl/GlDriver.hx	/^	var defaultDepth : h3d.mat.DepthBuffer;$/;"	v
defaultDepth	heaps/h3d/impl/Stage3dDriver.hx	/^	var defaultDepth : h3d.mat.DepthBuffer;$/;"	v
defaultDepthBuffer	heaps/h3d/impl/TextureCache.hx	/^	var defaultDepthBuffer : h3d.mat.DepthBuffer;$/;"	v
defaultDepthInst	heaps/h3d/impl/DirectXDriver.hx	/^	var defaultDepthInst : h3d.mat.DepthBuffer;$/;"	v
defaultDiffuseBG	heaps/h3d/scene/World.hx	/^	var defaultDiffuseBG = 0;$/;"	v
defaultExt	heaps/hxd/res/FileTree.hx	/^	var defaultExt : { t : ComplexType, e : Expr };$/;"	v
defaultFile	heaps/hxd/File.hx	/^			var defaultFile = options.defaultPath;$/;"	v
defaultFormat	heaps/h3d/impl/TextureCache.hx	/^	public var defaultFormat : hxd.PixelFormat;$/;"	v
defaultForwardShader	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public var defaultForwardShader = new h3d.shader.pbr.DefaultForward();$/;"	v
defaultId	heaps/hxd/Window.hl.hx	/^		var defaultId = -1;$/;"	v
defaultKillAlphaThreshold	heaps/h3d/mat/Defaults.hx	/^	public static var defaultKillAlphaThreshold = 0.5;$/;"	v
defaultModelMatrixes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var defaultModelMatrixes : Map<Int,DefaultMatrixes>;$/;"	v
defaultNormalBG	heaps/h3d/scene/World.hx	/^	var defaultNormalBG = 0x8080FF;$/;"	v
defaultPass	heaps/h3d/scene/Renderer.hx	/^	var defaultPass : h3d.pass.Base;$/;"	v
defaultProps	heaps/h3d/mat/MaterialDatabase.hx	/^		var defaultProps = material.getDefaultProps();$/;"	v
defaultShadows	heaps/h3d/scene/pbr/Renderer.hx	/^			var defaultShadows : h3d.mat.Texture = ctx.getGlobal("mainLightShadowMap");$/;"	v
defaultSkin	heaps/hxd/fmt/spine/Library.hx	/^	public var defaultSkin : Skin;$/;"	v
defaultSmooth	heaps/h2d/RenderContext.hx	/^	public var defaultSmooth : Bool = false;$/;"	v
defaultSmooth	heaps/h2d/Scene.hx	/^	public var defaultSmooth(get, set) : Bool;$/;"	v
defaultSort	heaps/h3d/pass/Default.hx	/^	var defaultSort = new SortByMaterial().sort;$/;"	v
defaultSpecularBG	heaps/h3d/scene/World.hx	/^	var defaultSpecularBG = 0;$/;"	v
defaultTarget	heaps/h3d/impl/DirectXDriver.hx	/^	var defaultTarget : RenderTargetView;$/;"	v
defaultTransform	heaps/h3d/scene/Object.hx	/^	public var defaultTransform(default, set) : h3d.Matrix;$/;"	v
defaultUnitCube	heaps/h3d/prim/Cube.hx	/^	public static function defaultUnitCube() {$/;"	f
defaultUnitCylinder	heaps/h3d/prim/Cylinder.hx	/^	public static function defaultUnitCylinder(segs : Int = 16) {$/;"	f
defaultUnitDisc	heaps/h3d/prim/Disc.hx	/^	public static function defaultUnitDisc() {$/;"	f
defaultUnitSphere	heaps/h3d/prim/Sphere.hx	/^	public static function defaultUnitSphere() {$/;"	f
defaultUseScreenResolution	heaps/h2d/filter/Filter.hx	/^	public static var defaultUseScreenResolution:Bool = false;$/;"	v
defineFun	heaps/hxsl/Cache.hx	/^		function defineFun( kind : FunctionKind, vars : Array<Output> ) {$/;"	f
defined	heaps/hxd/res/Config.hx	/^	static function defined( name : String ) {$/;"	f
deformers	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var deformers = getParents(model, "Deformer");$/;"	v
defs	heaps/hxd/fmt/hmd/Library.hx	/^		var defs = [null];$/;"	v
degToRad	heaps/h3d/Camera.hx	/^			var degToRad = (Math.PI \/ 180);$/;"	v
degToRad	heaps/h3d/Camera.hx	/^		var degToRad = Math.PI \/ 180;$/;"	v
degToRad	heaps/hxd/Math.hx	/^	public static inline function degToRad( deg : Float) {$/;"	f
delaunay_edge	heaps/hxd/poly2tri/Triangle.hx	/^	public var delaunay_edge:Array<Bool>;$/;"	v
delay	heaps/h2d/Particles.hx	/^		var delay = rand() * life * (1 - g.emitSync) + g.emitDelay;$/;"	v
delay	heaps/h2d/Particles.hx	/^	public var delay : Float;$/;"	v
delay	heaps/h3d/parts/Data.hx	/^	public var delay : Float;$/;"	v
delay	heaps/hxd/Cursor.hx	/^		var delay : Float = frameDelay;$/;"	v
delete	heaps/h2d/SpriteBatch.hx	/^	function delete(e : BatchElement) {$/;"	f
delete	heaps/hxd/File.hx	/^	public static function delete( path : String ) {$/;"	f
deleteBuffers	heaps/hxd/snd/openal/Emulator.hx	/^	public static function deleteBuffers(n : Int, buffers : Bytes) {$/;"	f
deleteDepth	heaps/h3d/impl/MemoryManager.hx	/^	function deleteDepth( b : h3d.mat.DepthBuffer ) {$/;"	f
deleteIndexes	heaps/h3d/impl/MemoryManager.hx	/^	function deleteIndexes( i : Indexes ) {$/;"	f
deleteQuery	heaps/h3d/impl/Driver.hx	/^	public function deleteQuery( q : Query ) {$/;"	f
deleteQuery	heaps/h3d/impl/GlDriver.hx	/^	override function deleteQuery( q : Query ) {$/;"	f
deleteSources	heaps/hxd/snd/openal/Emulator.hx	/^	public static function deleteSources(n : Int, sources : Bytes) {$/;"	f
deleteTexture	heaps/h3d/impl/MemoryManager.hx	/^	function deleteTexture( t : h3d.mat.Texture ) {$/;"	f
delta	heaps/h2d/Flow.hx	/^		var delta = Std.int(v) - Std.int(scrollPosY);$/;"	v
delta	heaps/h3d/Engine.hx	/^		var delta = haxe.Timer.stamp() - lastTime;$/;"	v
delta	heaps/h3d/pass/FXAA.hx	/^		@param var delta : Vec2;$/;"	v
delta	heaps/h3d/scene/Trail.hx	/^		var delta = new h3d.col.Point(1, 0, 0);$/;"	v
delta	heaps/h3d/scene/fwd/PointLight.hx	/^			var delta = p.y * p.y - 4 * p.z * (p.x - lum * 128);$/;"	v
delta	heaps/h3d/shader/AnimatedTexture.hx	/^			var delta = vec2( frame % frameDivision.x, float(int(frame \/ frameDivision.x)) );$/;"	v
delta	heaps/h3d/shader/AnimatedTexture.hx	/^			var delta = vec2( nextFrame % frameDivision.x, float(int(nextFrame \/ frameDivision.x)) );$/;"	v
delta	heaps/h3d/shader/DirShadow.hx	/^					var delta = (depth + shadowBias).min(zMax) - zMax;$/;"	v
delta	heaps/h3d/shader/GpuParticle.hx	/^				var delta = vec2( frame % frameDivision.x, float(int(frame \/ frameDivision.x)) );$/;"	v
delta	heaps/h3d/shader/GpuParticle.hx	/^				var delta = vec2( nextFrame % frameDivision.x, float(int(nextFrame \/ frameDivision.x)) );$/;"	v
delta	heaps/h3d/shader/GpuParticle.hx	/^			var delta : Vec2;$/;"	v
delta	heaps/h3d/shader/Parallax.hx	/^				var delta = (viewNS.xy \/ viewNS.z) * amount \/ numLayers;$/;"	v
delta	heaps/h3d/shader/PointShadow.hx	/^					var delta = (depth + shadowBias).min(zMax) - zMax;$/;"	v
delta	heaps/h3d/shader/Shadow.hx	/^			var delta = (depth + shadow.bias).min(zMax) - zMax;$/;"	v
delta	heaps/h3d/shader/SpotShadow.hx	/^					var delta = (depth + shadowBias).min(zMax) - zMax;$/;"	v
delta	heaps/h3d/shader/UVAnim.hx	/^			var delta = vec2(1. \/ frameDivision, 1. \/ frameDivision) * vec2( frame % frameDivision, flo/;"	v
delta	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var delta = lightPos - transformedPosition;$/;"	v
delta	heaps/h3d/shader/pbr/Light.hx	/^			var delta = lightPos - transformedPosition;$/;"	v
delta	heaps/hxd/BitmapData.hx	/^				var delta = d2x - dy;$/;"	v
delta	heaps/hxd/BitmapData.hx	/^				var delta = d2y - dx;$/;"	v
delta	heaps/hxsl/AgalOut.hx	/^				var delta = 0;$/;"	v
deltaX	heaps/h3d/parts/GpuParticles.hx	/^	public var deltaX : Float;$/;"	v
deltaX	heaps/hxd/clipper/Clipper.hx	/^	public var deltaX : Int;$/;"	v
deltaY	heaps/h3d/parts/GpuParticles.hx	/^	public var deltaY : Float;$/;"	v
deltaY	heaps/hxd/clipper/Clipper.hx	/^	public var deltaY : Int;$/;"	v
denom	heaps/h3d/shader/pbr/BDRF.hx	/^			var denom = NdH * NdH * (alpha2 - 1.) + 1;$/;"	v
density	heaps/hxd/snd/effect/Reverb.hx	/^	public var density           : Float; \/\/ [0.0, 100.0] %$/;"	v
density	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var density           : Float;$/;"	v
dependedBy	heaps/h3d/impl/VarBinding.hx	/^	public var dependedBy : Array<Init>;$/;"	v
dependencies	heaps/haxelib.json	/^	"dependencies" : { "format" : "" }$/;"	o
dependsOn	heaps/h3d/impl/VarBinding.hx	/^	public var dependsOn : Array<Init>;$/;"	v
deps	heaps/hxsl/Dce.hx	/^	public var deps : Map<Int,VarDeps>;$/;"	v
deps	heaps/hxsl/Linker.hx	/^		var deps = [for( d in cur.deps.keys() ) d];$/;"	v
deps	heaps/hxsl/Linker.hx	/^	public var deps : Map<ShaderInfos, Bool>;$/;"	v
depth	heaps/h2d/ZGroup.hx	/^	public var depth : Float;$/;"	v
depth	heaps/h3d/impl/DirectXDriver.hx	/^		var depth = Driver.createTexture2d(depthDesc);$/;"	v
depth	heaps/h3d/impl/DirectXDriver.hx	/^		var depth = null;$/;"	v
depth	heaps/h3d/mat/Pass.hx	/^	public function depth( write, test ) {$/;"	f
depth	heaps/h3d/pass/DirShadowMap.hx	/^	var depth : h3d.mat.DepthBuffer;$/;"	v
depth	heaps/h3d/pass/PassObject.hx	/^	public var depth : Float;$/;"	v
depth	heaps/h3d/pass/PointShadowMap.hx	/^	var depth : h3d.mat.DepthBuffer;$/;"	v
depth	heaps/h3d/pass/SpotShadowMap.hx	/^	var depth : h3d.mat.DepthBuffer;$/;"	v
depth	heaps/h3d/scene/fwd/Renderer.hx	/^	public var depth : h3d.pass.Base = new DepthPass();$/;"	v
depth	heaps/h3d/shader/BaseMesh.hx	/^			var depth : Float;$/;"	v
depth	heaps/h3d/shader/BaseMesh.hx	/^		var depth : Float;$/;"	v
depth	heaps/h3d/shader/Blur.hx	/^			var depth = unpack(depthTexture.get(uv));$/;"	v
depth	heaps/h3d/shader/DirShadow.hx	/^						var depth = shadowMap.getLod(shadowUv + offset, 0);$/;"	v
depth	heaps/h3d/shader/DirShadow.hx	/^					var depth = shadowMap.get(screenToUv(shadowPos.xy));$/;"	v
depth	heaps/h3d/shader/DirShadow.hx	/^					var depth = shadowMap.get(shadowUv.xy);$/;"	v
depth	heaps/h3d/shader/PointShadow.hx	/^									var depth = shadowMap.getLod(dir + offset, 0).r * zFar;$/;"	v
depth	heaps/h3d/shader/PointShadow.hx	/^					var depth = shadowMap.getLod(dir, 0).r * zFar;$/;"	v
depth	heaps/h3d/shader/SAO.hx	/^			var depth = depthTexture.get(uv);$/;"	v
depth	heaps/h3d/shader/Shadow.hx	/^			var depth = shadow.map.get(screenToUv(shadowPos.xy));$/;"	v
depth	heaps/h3d/shader/SpotShadow.hx	/^								var depth = shadowMap.getLod(shadowUv + offset, 0);$/;"	v
depth	heaps/h3d/shader/SpotShadow.hx	/^					var depth = shadowMap.get(screenToUv(shadowScreenPos.xy));$/;"	v
depth	heaps/h3d/shader/SpotShadow.hx	/^					var depth = shadowMap.get(shadowUv.xy);$/;"	v
depth	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var depth = dirShadowMaps[index].get(shadowUv.xy).r;$/;"	v
depth	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var depth = pointShadowMaps[index].getLod(dir, 0).r * range;$/;"	v
depth	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var depth = spotShadowMaps[index].get(shadowUv.xy).r;$/;"	v
depth	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var depth : Float;$/;"	v
depth	heaps/h3d/shader/pbr/PropsImport.hx	/^		var depth : Float;$/;"	v
depth	heaps/h3d/shader/pbr/Slides.hx	/^		var depth : Float;$/;"	v
depth	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var depth = depthMap.get(screenToUv(screenPos));$/;"	v
depth	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var depth = depthMap.get(screenToUv(pos)).r;$/;"	v
depth	heaps/samples/Sao.hx	/^		var depth = allocTarget("depth");$/;"	v
depthBias	heaps/h2d/ObjectFollower.hx	/^	public var depthBias : Float = 0.;$/;"	v
depthBits	heaps/h3d/impl/DirectXDriver.hx	/^		var depthBits = bits & (Pass.depthWrite_mask | Pass.depthTest_mask);$/;"	v
depthBuffer	heaps/h3d/mat/Texture.hx	/^	public var depthBuffer : DepthBuffer;$/;"	v
depthCopy	heaps/h3d/scene/pbr/Renderer.hx	/^	var depthCopy = new h3d.pass.ScreenFx(new DepthCopy());$/;"	v
depthDesc	heaps/h3d/impl/DirectXDriver.hx	/^		var depthDesc = new Texture2dDesc();$/;"	v
depthFailOp	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var depthFailOp : PbrStencilOp;$/;"	v
depthMap	heaps/h2d/ZGroup.hx	/^	var depthMap : DepthMap;$/;"	v
depthMap	heaps/h3d/shader/VolumeDecal.hx	/^		@global var depthMap : Channel;$/;"	v
depthMap	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@global var depthMap : Channel;$/;"	v
depthMapId	heaps/h3d/scene/fwd/Renderer.hx	/^	var depthMapId : Int;$/;"	v
depthMask	heaps/h2d/ObjectFollower.hx	/^	public var depthMask : Bool = false;$/;"	v
depthSort	heaps/h3d/scene/Renderer.hx	/^	function depthSort( frontToBack, passes : h3d.pass.PassList ) {$/;"	f
depthStates	heaps/h3d/impl/DirectXDriver.hx	/^	var depthStates : Map<Int,{ def : DepthStencilState, stencils : Array<{ op : Int, mask : Int, s/;"	v
depthStencilFormat	heaps/h3d/impl/DirectXDriver.hx	/^	public var depthStencilFormat : dx.Format = D24_UNORM_S8_UINT;$/;"	v
depthTest	heaps/h2d/ZGroup.hx	/^	public var depthTest   : h3d.mat.Data.Compare;$/;"	v
depthTest	heaps/h3d/mat/PbrMaterial.hx	/^	var depthTest : PbrDepthTest;$/;"	v
depthTex	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var depthTex : Sampler2D;$/;"	v
depthTexture	heaps/h3d/scene/pbr/Renderer.hx	/^		@ignore @param var depthTexture : Channel;$/;"	v
depthTexture	heaps/h3d/shader/Blur.hx	/^		@param var depthTexture : Sampler2D;$/;"	v
depthTexture	heaps/h3d/shader/SAO.hx	/^		@ignore @param var depthTexture : Channel;$/;"	v
depthToDistance	heaps/h3d/Camera.hx	/^	public function depthToDistance( depth : Float ) {$/;"	f
depthView	heaps/h3d/impl/DirectXDriver.hx	/^		var depthView = Driver.createDepthStencilView(depth,depthStencilFormat);$/;"	v
depthWrite	heaps/h2d/ZGroup.hx	/^	public var depthWrite  : Bool;$/;"	v
depths	heaps/h3d/impl/DirectXDriver.hx	/^		var depths = depthStates.get(depthBits);$/;"	v
depths	heaps/h3d/impl/MemoryManager.hx	/^	var depths : Array<h3d.mat.DepthBuffer>;$/;"	v
deque	heaps/hxd/impl/AsyncLoader.hx	/^	var deque : sys.thread.Deque<hxd.res.Image>;$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^						var desc = new SamplerDesc();$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^			var desc = new DepthStencilDesc();$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^			var desc = new RasterizerDesc();$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^			var desc = new RenderTargetBlendDesc();$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^		var desc = "DirectX" + Driver.getSupportedVersion();$/;"	v
desc	heaps/h3d/impl/DirectXDriver.hx	/^		var desc = new Texture2dDesc();$/;"	v
descent	heaps/hxd/res/BDFFont.hx	/^	var descent : Int = -1;$/;"	v
description	heaps/haxelib.json	/^    "description" : "The GPU Game Framework",$/;"	s
dest	heaps/hxd/fs/Convert.hx	/^		var dest = converts.get(c.destExt);$/;"	v
destExt	heaps/hxd/fs/Convert.hx	/^	public var destExt(default,null) : String;$/;"	v
destination	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var destination : AudioNode;$/;"	v
destination	heaps/hxd/snd/webaudio/Context.hx	/^	public static var destination : AudioNode;$/;"	v
destination	heaps/hxd/snd/webaudio/Driver.hx	/^	public var destination(get, set) : AudioNode;$/;"	v
destroyBuffer	heaps/hxd/snd/Driver.hx	/^	public function destroyBuffer        (buffer : BufferHandle) : Void;$/;"	f
destroyBuffer	heaps/hxd/snd/openal/Driver.hx	/^	public function destroyBuffer(buffer : BufferHandle) : Void {$/;"	f
destroyBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public function destroyBuffer (buffer : BufferHandle) : Void {$/;"	f
destroyContext	heaps/hxd/snd/openal/Emulator.hx	/^	public static function destroyContext(context : Context) {$/;"	f
destroySource	heaps/hxd/snd/Driver.hx	/^	public function destroySource        (source : SourceHandle) : Void; $/;"	f
destroySource	heaps/hxd/snd/openal/Driver.hx	/^	public function destroySource(source : SourceHandle) : Void {$/;"	f
destroySource	heaps/hxd/snd/webaudio/Driver.hx	/^	public function destroySource (source : SourceHandle) : Void {$/;"	f
det	heaps/h2d/Object.hx	/^		var det = 1 \/ r;$/;"	v
det	heaps/h3d/Matrix.hx	/^		var det = m11 * _11 + m12 * _21 + m13 * _31 + m14 * _41;$/;"	v
det	heaps/h3d/Matrix.hx	/^		var det = m11 * _11 + m12 * _21 + m13 * _31;$/;"	v
det	heaps/h3d/col/PolygonBuffer.hx	/^			var det = e1.dot(p);$/;"	v
det	heaps/hxd/poly2tri/Utils.hx	/^		var det = alift * (bdxcdy - cdxbdy) + blift * ocad + clift * oabd;$/;"	v
detachBeachsection	heaps/h2d/col/Voronoi.hx	/^	function detachBeachsection(beachsection) {$/;"	f
detachCircleEvent	heaps/h2d/col/Voronoi.hx	/^	function detachCircleEvent(arc:Beachsection) {$/;"	f
detect	heaps/hxd/Pad.hx	/^	public static function detect(_) {}$/;"	f
detleft	heaps/hxd/poly2tri/Orientation.hx	/^		var detleft  = (pa.x - pc.x) * (pb.y - pc.y);$/;"	v
detright	heaps/hxd/poly2tri/Orientation.hx	/^		var detright = (pa.y - pc.y) * (pb.x - pc.x);$/;"	v
device	heaps/hxd/snd/openal/Driver.hx	/^	public var device   (default, null) : Device;$/;"	v
device	heaps/hxd/snd/openal/Emulator.hx	/^	public var device : Device;$/;"	v
diagram	heaps/h2d/col/Voronoi.hx	/^		var diagram = new Diagram();$/;"	v
dict	heaps/hxd/fmt/pak/FileSystem.hx	/^	var dict : Map<String,PakEntry>;$/;"	v
dict	heaps/hxd/res/FileTree.hx	/^		var dict = new Map();$/;"	v
diff	heaps/h3d/anim/Skin.hx	/^		var diff = 0;$/;"	v
diff	heaps/h3d/impl/GlDriver.hx	/^		var diff = bits ^ curMatBits;$/;"	v
diff	heaps/h3d/impl/Stage3dDriver.hx	/^		var diff = bits ^ curMatBits;$/;"	v
diff	heaps/h3d/shader/DirLight.hx	/^			var diff = transformedNormal.dot(-direction).max(0.);$/;"	v
diff	heaps/h3d/shader/PointLight.hx	/^			var diff : Float =  isAmbient ? 1. : transformedNormal.dot(dvec).max(0.);$/;"	v
diff	ra/hp/MathExtensions.hx	/^		    var diff:Int = b - a;$/;"	v
diffMask	heaps/h3d/impl/GlDriver.hx	/^		var diffMask = maskBits ^ curStMaskBits;$/;"	v
diffMask	heaps/h3d/impl/Stage3dDriver.hx	/^		var diffMask = maskBits ^ curStMaskBits;$/;"	v
diffOp	heaps/h3d/impl/GlDriver.hx	/^		var diffOp = opBits ^ curStOpBits;$/;"	v
diffOp	heaps/h3d/impl/Stage3dDriver.hx	/^		var diffOp  = opBits ^ curStOpBits;$/;"	v
diffSize	heaps/h3d/scene/pbr/Environment.hx	/^	public var diffSize : Int;$/;"	v
diffuse	heaps/h3d/scene/pbr/Environment.hx	/^	public var diffuse : h3d.mat.Texture;$/;"	v
diffuse	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var diffuse = albedoGamma \/ PI;$/;"	v
diffuse	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var diffuse = irrDiffuse.get(rotatedNormal).rgb * albedoGamma;$/;"	v
diffuse	heaps/h3d/shader/pbr/Lighting.hx	/^				var diffuse = albedo \/ PI;$/;"	v
diffuse	heaps/h3d/shader/pbr/Lighting.hx	/^				var diffuse = vec3(0.);$/;"	v
diffuseTexture	heaps/hxd/fmt/hmd/Data.hx	/^	public var diffuseTexture : Null<String>;$/;"	v
diffusion	heaps/hxd/snd/effect/Reverb.hx	/^	public var diffusion         : Float; \/\/ [0.0, 100.0] %$/;"	v
diffusion	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var diffusion         : Float;$/;"	v
digits	heaps/hxd/Math.hx	/^		var digits = Std.int(4 - std.Math.log(v) \/ std.Math.log(10));$/;"	v
dir	heaps/h3d/Quat.hx	/^		var dir = dir.normalized();$/;"	v
dir	heaps/h3d/col/Capsule.hx	/^		var dir = a.sub(b);$/;"	v
dir	heaps/h3d/impl/MacroHelper.hx	/^		var dir = haxe.macro.Context.definedValue("resourcesPath");$/;"	v
dir	heaps/h3d/parts/Particles.hx	/^				var dir = new h3d.Vector(Math.sin(p.rotation), 0, Math.cos(p.rotation)).cross(new h3d.Vector/;"	v
dir	heaps/h3d/pass/FXAA.hx	/^			var dir : Vec2;$/;"	v
dir	heaps/h3d/scene/LightSystem.hx	/^				var dir = l.getShadowDirection();$/;"	v
dir	heaps/h3d/scene/World.hx	/^		var dir = r.entry.directory;$/;"	v
dir	heaps/h3d/shader/BaseMesh.hx	/^			@var var dir : Vec3;$/;"	v
dir	heaps/h3d/shader/LineShader.hx	/^				var dir = input.normal * global.modelView.mat3(); \/\/ keep scale$/;"	v
dir	heaps/h3d/shader/MinMaxShader.hx	/^			var dir = vec3(uv , 1) * mat;$/;"	v
dir	heaps/h3d/shader/NormalMap.hx	/^			@var var dir : Vec3;$/;"	v
dir	heaps/h3d/shader/PointShadow.hx	/^					var dir = normalize(posToLight.xyz);$/;"	v
dir	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var dir = normalize(posToLight.xyz);$/;"	v
dir	heaps/h3d/shader/pbr/Slides.hx	/^						var dir = vec3(cos(phi)*cos(theta),sin(phi)*cos(theta),sin(theta));$/;"	v
dir	heaps/hxd/Res.hx	/^		var dir = haxe.macro.Context.definedValue("resourcesPath");$/;"	v
dir	heaps/hxd/clipper/Clipper.hx	/^		var dir : Direction = res.dir;$/;"	v
dir	heaps/hxd/fmt/blend/Data.hx	/^	public function dir(type:String):Array<String> {$/;"	f
dir	heaps/hxd/fmt/pak/Build.hx	/^						var dir = f.name == "" ? dir : dir+"\/"+f.name;$/;"	v
dir	heaps/hxd/fmt/pak/Build.hx	/^		var dir = resPath + (path == "" ? "" : "\/" + path);$/;"	v
dir	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> {$/;"	f
dir	heaps/hxd/fs/BytesFileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> {$/;"	f
dir	heaps/hxd/fs/EmbedFileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> {$/;"	f
dir	heaps/hxd/fs/FileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> ;$/;"	f
dir	heaps/hxd/fs/LocalFileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> {$/;"	f
dir	heaps/hxd/fs/MultiFileSystem.hx	/^	public function dir( path : String ) : Array<FileEntry> {$/;"	f
dir	heaps/hxd/impl/Air3File.hx	/^			var dir = app.nativePath;$/;"	v
dir	heaps/hxd/res/FileTree.hx	/^		var dir = basePath + "\/" + tree.relPath;$/;"	v
dir	heaps/hxd/res/Loader.hx	/^	public function dir( path : String ) : Array<Any> {$/;"	f
dir	heaps/samples/Generator.hx	/^				var dir = file.split("\/");$/;"	v
dir	heaps/samples/Generator.hx	/^			var dir = cwd+"\/"+f;$/;"	v
dir	heaps/samples/PointLights.hx	/^	var dir : h3d.scene.fwd.DirLight;$/;"	v
dir	heaps/samples/Sao.hx	/^		var dir = new h3d.scene.fwd.DirLight(new h3d.Vector( -0.3, -0.2, -1), s3d);$/;"	v
dir	heaps/samples/Shadows.hx	/^	var dir : h3d.scene.fwd.DirLight;$/;"	v
dir	heaps/samples/Skin.hx	/^		var dir = new DirLight(new h3d.Vector( -1, 3, -10), s3d);$/;"	v
dirLight	heaps/samples/Helpers.hx	/^		var dirLight = new DirLight( new Vector( 0.5, 0.5, -0.5 ), s3d );$/;"	v
dirLightCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var dirLightCount = 0;$/;"	v
dirLightCount	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var dirLightCount : Int;$/;"	v
dirLightStride	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var dirLightStride : Int;$/;"	v
dirLights	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var dirLights : Array<DirLight> = [];$/;"	v
dirLightsShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var dirLightsShadow : Array<DirLight> = [];$/;"	v
dirPos	heaps/hxd/fs/FileConverter.hx	/^		var dirPos = dir.lastIndexOf("\/");$/;"	v
dirPos	heaps/hxd/fs/FileConverter.hx	/^		var dirPos = path.lastIndexOf("\/");$/;"	v
dirReduce	heaps/h3d/pass/FXAA.hx	/^			var dirReduce = max((lumNW + lumNE + lumSW + lumSE) * (0.25 \/ 128), 1. \/ 8);$/;"	v
dirShadow	heaps/h3d/shader/DirShadow.hx	/^		var dirShadow : Float;$/;"	v
dirShadowCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var dirShadowCount = 0;$/;"	v
dirShadowMaps	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var dirShadowMaps : Array<Sampler2D, DIR_SHADOW_COUNT>;$/;"	v
direct	heaps/h3d/shader/pbr/Lighting.hx	/^				var direct = (diffuse * (1 - metalness) * (1 - F) + specular) * pbrLightColor * NdL;$/;"	v
directLighting	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function directLighting( lightColor : Vec3, lightDirection : Vec3) : Vec3 {$/;"	f
direction	heaps/h3d/shader/DirLight.hx	/^		@param var direction : Vec3;$/;"	v
direction	heaps/hxd/snd/Listener.hx	/^	public var direction : h3d.Vector;$/;"	v
direction	heaps/hxd/snd/effect/Spatialization.hx	/^	public var direction : h3d.Vector;$/;"	v
directory	heaps/hxd/fs/FileEntry.hx	/^	public var directory(get, never) : String;$/;"	v
directoryCache	heaps/hxd/fs/LocalFileSystem.hx	/^	var directoryCache : Map<String,Map<String,Bool>> = new Map();$/;"	v
dirs	heaps/hxd/res/FileTree.hx	/^	var dirs : Map<String, FileTreeData>;$/;"	v
dirty	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var dirty : Bool; \/\/ Playback was started - node no longer usable.$/;"	v
disable	heaps/hxd/snd/openal/Emulator.hx	/^	public static function disable(capability : Int) {}$/;"	f
disc	heaps/h3d/pass/PassList.hx	/^		var disc = discarded;$/;"	v
disc	heaps/samples/Polygons.hx	/^		var disc = new Disc(0.5, 16);$/;"	v
discMesh	heaps/samples/Polygons.hx	/^		var discMesh = new Mesh(disc, s3d);$/;"	v
discQueue	heaps/h3d/pass/PassList.hx	/^		var discQueue = lastDisc;$/;"	v
discTopCylinder	heaps/samples/Polygons.hx	/^		var discTopCylinder = new Disc(0.5, 16);$/;"	v
discTopCylinderMesh	heaps/samples/Polygons.hx	/^		var discTopCylinderMesh = new Mesh(discTopCylinder, s3d);$/;"	v
discardError	heaps/h3d/impl/GlDriver.hx	/^	inline function discardError() {$/;"	f
discarded	heaps/h3d/pass/PassList.hx	/^	var discarded : PassObject;$/;"	v
discriminant	heaps/h3d/col/Capsule.hx	/^		var discriminant = coefB * coefB - 4.0 * coefA * coefC;$/;"	v
discriminantSqrt	heaps/h3d/col/Capsule.hx	/^		var discriminantSqrt = Math.sqrt(discriminant);$/;"	v
dismissErrors	heaps/hxd/System.hl.hx	/^	static var dismissErrors = false;$/;"	v
disp	heaps/h2d/filter/Displacement.hx	/^	var disp = new h3d.pass.ScreenFx(new h3d.shader.Displacement());$/;"	v
disp	heaps/samples/Filters.hx	/^	var disp : h2d.Tile;$/;"	v
dispX	heaps/h2d/filter/Displacement.hx	/^	public var dispX : Float;$/;"	v
dispY	heaps/h2d/filter/Displacement.hx	/^	public var dispY : Float;$/;"	v
dispatchEvent	heaps/h2d/Scene.hx	/^	public function dispatchEvent( event : hxd.Event, to : hxd.SceneEvents.Interactive ) {$/;"	f
dispatchEvent	heaps/h3d/scene/Scene.hx	/^	public function dispatchEvent( event : hxd.Event, to : hxd.SceneEvents.Interactive ) {$/;"	f
dispatchEvent	heaps/hxd/SceneEvents.hx	/^	public function dispatchEvent( e : Event, to : Interactive ) : Void;$/;"	f
dispatchListeners	heaps/h2d/Scene.hx	/^	public function dispatchListeners( event : hxd.Event ) {$/;"	f
dispatchListeners	heaps/h3d/scene/Scene.hx	/^	public function dispatchListeners(event:hxd.Event) {$/;"	f
dispatchListeners	heaps/hxd/SceneEvents.hx	/^	function dispatchListeners( event : hxd.Event ) {$/;"	f
dispatchListeners	heaps/hxd/SceneEvents.hx	/^	public function dispatchListeners( e : Event ) : Void;$/;"	f
displaced	heaps/h3d/shader/Outline2D.hx	/^			var displaced : Vec2;$/;"	v
displacement	heaps/h3d/shader/Displacement.hx	/^		@param var displacement : Vec2;$/;"	v
display	heaps/tools/hxsl/Main.hx	/^	var display : js.html.Element;$/;"	v
displayMode	heaps/h3d/scene/pbr/Renderer.hx	/^	public var displayMode : DisplayMode = Pbr;$/;"	v
displayMode	heaps/hxd/Window.flash.hx	/^	public var displayMode(get, set) : DisplayMode;$/;"	v
displayMode	heaps/hxd/Window.hl.hx	/^	public var displayMode(get, set) : DisplayMode;$/;"	v
displayMode	heaps/hxd/Window.hx	/^	public var displayMode(get, set) : DisplayMode;$/;"	v
displayMode	heaps/hxd/Window.js.hx	/^	public var displayMode(get, set) : DisplayMode;$/;"	v
displayName	heaps/h3d/mat/MaterialSetup.hx	/^	public var displayName(default,null) : String;$/;"	v
dispose	heaps/h2d/Font.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h2d/Graphics.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h2d/RenderContext.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h2d/Scene.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h2d/Tile.hx	/^	public function dispose() : Void {$/;"	f
dispose	heaps/h2d/TileGroup.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h2d/Video.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/Buffer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/Engine.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/Indexes.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/Benchmark.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/DirectXDriver.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/impl/Driver.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/InstanceBuffer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/LogDriver.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/impl/ManagedBuffer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/MemoryManager.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/RenderContext.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/impl/RendererFX.hx	/^	public function dispose() : Void;$/;"	f
dispose	heaps/h3d/impl/Stage3dDriver.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/impl/TextureCache.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/mat/BigTexture.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/mat/DepthBuffer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/mat/Texture.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/pass/Base.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/pass/Border.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/pass/DirShadowMap.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/pass/HardwarePick.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/pass/PointShadowMap.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/pass/ScreenFx.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/pass/Shadows.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/pass/SpotShadowMap.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/prim/BigPrimitive.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/prim/DynamicPrimitive.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/prim/Instanced.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/prim/MeshPrimitive.hx	/^	override public function dispose() {$/;"	f
dispose	heaps/h3d/prim/ModelCache.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/prim/Primitive.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/LightSystem.hx	/^	public function dispose(){$/;"	f
dispose	heaps/h3d/scene/Renderer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/Scene.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/World.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/pbr/Environment.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function dispose() {$/;"	f
dispose	heaps/h3d/scene/pbr/LightSystem.hx	/^	override function dispose() {$/;"	f
dispose	heaps/h3d/scene/pbr/Renderer.hx	/^	override function dispose() {$/;"	f
dispose	heaps/hxd/App.hx	/^	function dispose() {$/;"	f
dispose	heaps/hxd/BitmapData.hx	/^	public inline function dispose() {$/;"	f
dispose	heaps/hxd/Cursor.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/Key.hx	/^	public static function dispose() {$/;"	f
dispose	heaps/hxd/Pixels.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/SceneEvents.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/Window.js.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fmt/hmd/Library.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fs/BytesFileSystem.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fs/EmbedFileSystem.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fs/FileSystem.hx	/^	public function dispose() : Void;$/;"	f
dispose	heaps/hxd/fs/LocalFileSystem.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/fs/MultiFileSystem.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/net/SocketHost.hx	/^	override function dispose() {$/;"	f
dispose	heaps/hxd/res/FontBuilder.hx	/^	public static function dispose() {$/;"	f
dispose	heaps/hxd/res/Loader.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/res/Sound.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/snd/Driver.hx	/^	public function dispose () : Void;$/;"	f
dispose	heaps/hxd/snd/Manager.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/snd/openal/Driver.hx	/^	public function dispose() : Void {$/;"	f
dispose	heaps/hxd/snd/openal/Emulator.hx	/^	public function dispose() {$/;"	f
dispose	heaps/hxd/snd/webaudio/Driver.hx	/^	public function dispose () : Void {$/;"	f
disposeBuffer	heaps/hxd/impl/Allocator.hx	/^	public function disposeBuffer( b : h3d.Buffer ) {$/;"	f
disposeBuffer	heaps/hxd/impl/CacheAllocator.hx	/^	override function disposeBuffer(b:h3d.Buffer) {$/;"	f
disposeDepthBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function disposeDepthBuffer(b:h3d.mat.DepthBuffer) @:privateAccess {$/;"	f
disposeDepthBuffer	heaps/h3d/impl/Driver.hx	/^	public function disposeDepthBuffer( b : h3d.mat.DepthBuffer ) {$/;"	f
disposeDepthBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function disposeDepthBuffer( b : h3d.mat.DepthBuffer ) {$/;"	f
disposeFloats	heaps/hxd/impl/Allocator.hx	/^	public function disposeFloats( f : hxd.FloatBuffer ) {$/;"	f
disposeIndexBuffer	heaps/hxd/impl/Allocator.hx	/^	public function disposeIndexBuffer( i : h3d.Indexes ) {$/;"	f
disposeIndexBuffer	heaps/hxd/impl/CacheAllocator.hx	/^	override function disposeIndexBuffer( i : h3d.Indexes ) {$/;"	f
disposeIndexes	heaps/h3d/impl/DirectXDriver.hx	/^	override function disposeIndexes(i:IndexBuffer) {$/;"	f
disposeIndexes	heaps/h3d/impl/Driver.hx	/^	public function disposeIndexes( i : IndexBuffer ) {$/;"	f
disposeIndexes	heaps/h3d/impl/GlDriver.hx	/^	override function disposeIndexes( i : IndexBuffer ) {$/;"	f
disposeIndexes	heaps/h3d/impl/LogDriver.hx	/^	override function disposeIndexes( i : IndexBuffer ) {$/;"	f
disposeIndexes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function disposeIndexes( i : IndexBuffer ) {$/;"	f
disposeIndexes	heaps/hxd/impl/Allocator.hx	/^	public function disposeIndexes( i : hxd.IndexBuffer ) {$/;"	f
disposeInstanceBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function disposeInstanceBuffer(b:InstanceBuffer) {$/;"	f
disposeInstanceBuffer	heaps/h3d/impl/Driver.hx	/^	public function disposeInstanceBuffer( b : h3d.impl.InstanceBuffer ) {$/;"	f
disposeInstanceBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function disposeInstanceBuffer(b:InstanceBuffer) {$/;"	f
disposeLocalMinimaList	heaps/hxd/clipper/Clipper.hx	/^	function disposeLocalMinimaList()$/;"	f
disposeTexture	heaps/h3d/impl/DirectXDriver.hx	/^	override function disposeTexture( t : h3d.mat.Texture ) {$/;"	f
disposeTexture	heaps/h3d/impl/Driver.hx	/^	public function disposeTexture( t : h3d.mat.Texture ) {$/;"	f
disposeTexture	heaps/h3d/impl/GlDriver.hx	/^	override function disposeTexture( t : h3d.mat.Texture ) {$/;"	f
disposeTexture	heaps/h3d/impl/LogDriver.hx	/^	override function disposeTexture( t : h3d.mat.Texture ) {$/;"	f
disposeTexture	heaps/h3d/impl/Stage3dDriver.hx	/^	override function disposeTexture( t : h3d.mat.Texture ) {$/;"	f
disposeVertexes	heaps/h3d/impl/DirectXDriver.hx	/^	override function disposeVertexes(v:VertexBuffer) {$/;"	f
disposeVertexes	heaps/h3d/impl/Driver.hx	/^	public function disposeVertexes( v : VertexBuffer ) {$/;"	f
disposeVertexes	heaps/h3d/impl/GlDriver.hx	/^	override function disposeVertexes( v : VertexBuffer ) {$/;"	f
disposeVertexes	heaps/h3d/impl/LogDriver.hx	/^	override function disposeVertexes( v : VertexBuffer ) {$/;"	f
disposeVertexes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function disposeVertexes( v : VertexBuffer ) {$/;"	f
disposed	heaps/hxd/impl/CacheAllocator.hx	/^	public var disposed : Array<T> = [];$/;"	v
dist	heaps/h2d/col/IPolygon.hx	/^			var dist = C * C + D * D;$/;"	v
dist	heaps/h2d/col/Polygon.hx	/^				var dist = s.distanceSq(pt);$/;"	v
dist	heaps/h2d/col/Polygon.hx	/^			var dist = C * C + D * D;$/;"	v
dist	heaps/h3d/col/Capsule.hx	/^		var dist = a.distance(b);$/;"	v
dist	heaps/h3d/col/HeightMap.hx	/^		var dist = step;$/;"	v
dist	heaps/h3d/pass/DirShadowMap.hx	/^				var dist = d?minDist:maxDist;$/;"	v
dist	heaps/h3d/scene/CameraController.hx	/^		var dist = targetDistance;$/;"	v
dist	heaps/h3d/scene/Trail.hx	/^			var dist = d01;$/;"	v
dist	heaps/h3d/scene/Trail.hx	/^		var dist = prev == null ? 0 : hxd.Math.distanceSq(prev.x - curX, prev.y - curY, prev.z - curZ)/;"	v
dist	heaps/h3d/shader/GpuParticle.hx	/^			var dist = vec2(size.x * crot - size.y * srot, size.x * srot + size.y * crot);$/;"	v
dist	heaps/h3d/shader/PointLight.hx	/^			var dist = dist2.sqrt();$/;"	v
dist	heaps/h3d/shader/pbr/Light.hx	/^			var dist = delta.dot(delta);$/;"	v
dist	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var dist = d.rotate == null ? rlen : d.rotate.sub(rot).length();$/;"	v
dist	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var dist = d.trans == null ? tlen : d.trans.sub(trans).length();$/;"	v
dist	heaps/hxd/snd/effect/Spatialization.hx	/^		var dist = Manager.get().listener.position.distance(position);$/;"	v
dist	heaps/hxsl/AgalOptim.hx	/^	inline function dist( a : Reg, b : Reg ) {$/;"	f
dist	heaps/samples/Base3D.hx	/^		var dist = 5;$/;"	v
dist2	heaps/h3d/scene/Trail.hx	/^			var dist2 = hxd.Math.distanceSq(p1.x - p0.x, p1.y - p0.y, p1.z - p0.z);$/;"	v
dist2	heaps/h3d/shader/PointLight.hx	/^			var dist2 = dvec.dot(dvec);$/;"	v
distPointSeg	heaps/h2d/col/IPolygon.hx	/^		inline function distPointSeg(p0:IPoint, p1:IPoint, p2:IPoint) {$/;"	f
distPointSeg	heaps/h2d/col/Polygon.hx	/^		inline function distPointSeg(p0:Point, p1:Point, p2:Point) {$/;"	f
distSq	heaps/h2d/col/Polygon.hx	/^			var distSq = proj.distanceSq(pt);$/;"	v
distSqrd	heaps/hxd/clipper/Clipper.hx	/^        var distSqrd = distance * distance;$/;"	v
distance	heaps/h2d/col/Bounds.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h2d/col/IPoint.hx	/^	public inline function distance( p : IPoint ) : Float {$/;"	f
distance	heaps/h2d/col/Line.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h2d/col/Point.hx	/^	public inline function distance( p : Point ) : Float {$/;"	f
distance	heaps/h2d/col/Polygon.hx	/^	public function distance(pt : Point, ?outside : Bool) {$/;"	f
distance	heaps/h2d/col/RoundRect.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h2d/col/Segment.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h2d/col/Segments.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h2d/filter/DropShadow.hx	/^	public var distance : Float;$/;"	v
distance	heaps/h2d/impl/PointApi.hx	/^	function distance( p : Point ) : Float;$/;"	f
distance	heaps/h3d/Vector.hx	/^	public inline function distance( v : Vector ) {$/;"	f
distance	heaps/h3d/col/IPoint.hx	/^	public inline function distance( p : IPoint ) {$/;"	f
distance	heaps/h3d/col/Plane.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h3d/col/Point.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h3d/col/Ray.hx	/^	public inline function distance( p : Plane ) : Float {$/;"	f
distance	heaps/h3d/col/Seg.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h3d/col/Sphere.hx	/^	public inline function distance( p : Point ) {$/;"	f
distance	heaps/h3d/scene/CameraController.hx	/^		var distance = distance;$/;"	v
distance	heaps/h3d/scene/CameraController.hx	/^	public var distance(get, never) : Float;$/;"	v
distance	heaps/h3d/shader/Outline.hx	/^		@param var distance : Float;$/;"	v
distance	heaps/h3d/shader/SignedDistanceField.hx	/^			var distance : Float;$/;"	v
distance	heaps/hxd/Math.hx	/^	public static inline function distance( dx : Float, dy : Float, dz = 0. ) {$/;"	f
distanceCenterSq	heaps/h2d/col/RoundRect.hx	/^	public inline function distanceCenterSq( p : Point ) {$/;"	f
distanceModel	heaps/hxd/snd/openal/Emulator.hx	/^	public static function distanceModel(distanceModel : Int) {}$/;"	f
distanceSq	heaps/h2d/col/Bounds.hx	/^	 public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h2d/col/Circle.hx	/^	public inline function distanceSq( p : Point ) : Float {$/;"	f
distanceSq	heaps/h2d/col/IPoint.hx	/^	public inline function distanceSq( p : IPoint ) : Int {$/;"	f
distanceSq	heaps/h2d/col/Line.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h2d/col/Point.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h2d/col/Polygon.hx	/^	public function distanceSq(pt : Point, ?outside : Bool) {$/;"	f
distanceSq	heaps/h2d/col/Segment.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h2d/col/Segments.hx	/^	public function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h2d/impl/PointApi.hx	/^	function distanceSq( p : Point ) : Unit;$/;"	f
distanceSq	heaps/h3d/Vector.hx	/^	public inline function distanceSq( v : Vector ) {$/;"	f
distanceSq	heaps/h3d/col/IPoint.hx	/^	public inline function distanceSq( p : IPoint ) {$/;"	f
distanceSq	heaps/h3d/col/Point.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h3d/col/Seg.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/h3d/col/Sphere.hx	/^	public inline function distanceSq( p : Point ) {$/;"	f
distanceSq	heaps/hxd/Math.hx	/^	public static inline function distanceSq( dx : Float, dy : Float, dz = 0. ) {$/;"	f
distanceToCam	heaps/h3d/parts/GpuParticles.hx	/^	public var distanceToCam(default, set) : Float	= 0;$/;"	v
distanceToDepth	heaps/h3d/Camera.hx	/^	public function distanceToDepth( dist : Float ) {$/;"	f
distortion	heaps/h3d/shader/pbr/Distortion.hx	/^		@param var distortion : Sampler2D;$/;"	v
distortionVal	heaps/h3d/shader/pbr/Distortion.hx	/^			var distortionVal = distortion.get(calculatedUV).rg;$/;"	v
div	heaps/hxd/res/Embed.hx	/^			var div = js.Browser.document.createDivElement();$/;"	v
divisor	heaps/h3d/impl/GlDriver.hx	/^	public var divisor : Int;$/;"	v
dl	heaps/h2d/Text.hx	/^		var dl = font.lineHeight + lineSpacing;$/;"	v
dl	heaps/h3d/scene/pbr/DirLight.hx	/^		var dl = o == null ? new DirLight(null) : cast o;$/;"	v
dl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var dl = Std.downcast(l, DirLight);$/;"	v
dl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var dl = dirLightsShadow[li];$/;"	v
dl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var dl = dirLights[li];$/;"	v
dl	heaps/hxd/Pixels.hx	/^		var dl = 0;$/;"	v
dm	heaps/hxd/Window.hl.hx	/^			var dm = getBestDisplayMode(windowWidth, windowHeight, framerate != null ? framerate : cds.fr/;"	v
dmax	heaps/h2d/col/Delaunay.hx	/^		var dmax = (dx > dy) ? dx : dy;$/;"	v
dmax	heaps/h2d/col/IPolygon.hx	/^		var dmax = 0.;$/;"	v
dmax	heaps/h2d/col/Polygon.hx	/^		var dmax = 0.;$/;"	v
dmax	heaps/h3d/col/HeightMap.hx	/^		var dmax = dist;$/;"	v
dmin	heaps/h2d/col/Polygon.hx	/^		var dmin = -1.;$/;"	v
dmin	heaps/h2d/col/Segments.hx	/^		var dmin = 1e20, smin = null;$/;"	v
dmin	heaps/h2d/col/Segments.hx	/^		var dmin = 1e20;$/;"	v
dmin	heaps/h3d/col/HeightMap.hx	/^		var dmin = dist - step;$/;"	v
dn0	heaps/h3d/shader/NoiseLib.hx	/^  var dn0 = t4.x * g0 + dt0 * w.x;$/;"	v
dn1	heaps/h3d/shader/NoiseLib.hx	/^  var dn1 = t4.y * g1 + dt1 * w.y;$/;"	v
dn2	heaps/h3d/shader/NoiseLib.hx	/^  var dn2 = t4.z * g2 + dt2 * w.z;$/;"	v
dna	heaps/hxd/fmt/blend/Data.hx	/^		var dna = ds.dna;$/;"	v
dna	heaps/hxd/fmt/blend/Data.hx	/^	public var dna:Dna;$/;"	v
dnaName	heaps/hxd/fmt/blend/Data.hx	/^			var dnaName = dna.names[nameIndex];$/;"	v
doBlur	heaps/h3d/pass/DirShadowMap.hx	/^		var doBlur = blur.radius > 0 && (mode != Mixed || !ctx.computingStatic);$/;"	v
doCall	heaps/h2d/Console.hx	/^	function doCall( callb : Dynamic, vargs : Array<Dynamic> ) {$/;"	f
doDiscard	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var doDiscard : Bool = true;$/;"	v
doEmbedFont	heaps/hxd/res/Embed.hx	/^	public static function doEmbedFont( name : String, file : String, chars : String ) {$/;"	f
doFill	heaps/h2d/Graphics.hx	/^	var doFill : Bool;$/;"	v
doFlushTarget	heaps/h3d/Engine.hx	/^	function doFlushTarget() {$/;"	f
doIntersect	heaps/h2d/col/Bounds.hx	/^	public inline function doIntersect( b : Bounds ) {$/;"	f
doIntersect	heaps/h2d/col/IBounds.hx	/^	public inline function doIntersect( b : IBounds ) {$/;"	f
doMiter	heaps/hxd/clipper/Clipper.hx	/^   inline function doMiter(j : Int, k : Int, r : Float)$/;"	f
doOffset	heaps/hxd/clipper/Clipper.hx	/^	function doOffset(delta : Float) {$/;"	f
doOverride	heaps/samples/Cursor.hx	/^		var doOverride = false;$/;"	v
doRender	heaps/h2d/Graphics.hx	/^	public function doRender( ctx : h2d.RenderContext ) {$/;"	f
doRender	heaps/h2d/TileGroup.hx	/^	public inline function doRender(ctx : RenderContext, min, len) {$/;"	f
doRound	heaps/hxd/clipper/Clipper.hx	/^   inline function doRound(j : Int, k : Int)$/;"	f
doSquare	heaps/hxd/clipper/Clipper.hx	/^    inline function doSquare(j : Int, k : Int)$/;"	f
doUnion	heaps/h2d/col/Bounds.hx	/^	public inline function doUnion( b : Bounds ) {$/;"	f
doUnion	heaps/h2d/col/IBounds.hx	/^	public inline function doUnion( b : IBounds ) {$/;"	f
doc	heaps/h2d/HtmlText.hx	/^		var doc : Xml;$/;"	v
doc	heaps/h2d/HtmlText.hx	/^		var doc = parseText(text);$/;"	v
doc	heaps/hxd/Window.js.hx	/^		var doc = js.Browser.document;$/;"	v
doc	heaps/hxd/res/FileTree.hx	/^			var doc = if ( f.ext == "png" || f.ext == "jpg" || f.ext == "jpeg" || f.ext == "gif" )$/;"	v
doc	heaps/tools/hxsl/Main.hx	/^		var doc = js.Browser.document;$/;"	v
dom	heaps/h2d/Object.hx	/^	public var dom : domkit.Properties<h2d.Object>;$/;"	v
dom	heaps/h2d/domkit/Style.hx	/^		var dom = obj.dom;$/;"	v
done	heaps/h3d/mat/BigTexture.hx	/^	public function done() {$/;"	f
done	heaps/h3d/scene/RenderContext.hx	/^	public function done() {$/;"	f
done	heaps/h3d/scene/World.hx	/^	public function done() {$/;"	f
done	heaps/hxd/snd/OggData.hx	/^	public function done() {$/;"	f
dopplerFactor	heaps/hxd/snd/openal/Emulator.hx	/^	public static function dopplerFactor(value : F32) {}$/;"	f
dopplerVelocity	heaps/hxd/snd/openal/Emulator.hx	/^	public static function dopplerVelocity(value : F32) {}$/;"	f
dot	heaps/h2d/col/IPoint.hx	/^	public inline function dot( p : IPoint ) : Int {$/;"	f
dot	heaps/h2d/col/IPolygon.hx	/^			var dot = A * C + B * D;$/;"	v
dot	heaps/h2d/col/Point.hx	/^	public inline function dot( p : Point ) : Float {$/;"	f
dot	heaps/h2d/col/Polygon.hx	/^			var dot = A * C + B * D;$/;"	v
dot	heaps/h2d/impl/PointApi.hx	/^	function dot( p : Point ) : Unit;$/;"	f
dot	heaps/h3d/Quat.hx	/^	public inline function dot( q : Quat ) {$/;"	f
dot	heaps/h3d/Vector.hx	/^	public inline function dot( v : Vector ) {$/;"	f
dot	heaps/h3d/anim/BufferAnimation.hx	/^					var dot = q1x * q2x + q1y * q2y + q1z * q2z + q1w * q2w;$/;"	v
dot	heaps/h3d/anim/LinearAnimation.hx	/^				var dot = f1.qx * f2.qx + f1.qy * f2.qy + f1.qz * f2.qz + f1.qw * f2.qw;$/;"	v
dot	heaps/h3d/col/FPoint.hx	/^	public inline function dot( p : FPoint ) {$/;"	f
dot	heaps/h3d/col/IPoint.hx	/^	public inline function dot( p : IPoint ) {$/;"	f
dot	heaps/h3d/col/Point.hx	/^	public inline function dot( p : Point ) {$/;"	f
dot00	heaps/h3d/col/Polygon.hx	/^	var dot00 : Float;$/;"	v
dot01	heaps/h3d/col/Polygon.hx	/^	var dot01 : Float;$/;"	v
dot02	heaps/h3d/col/Polygon.hx	/^		var dot02 = d1x * v2.x + d1y * v2.y + d1z * v2.z;$/;"	v
dot11	heaps/h3d/col/Polygon.hx	/^	var dot11 : Float;$/;"	v
dot12	heaps/h3d/col/Polygon.hx	/^		var dot12 = d2x * v2.x + d2y * v2.y + d2z * v2.z;$/;"	v
dot3	heaps/h3d/Vector.hx	/^	@:noCompletion public inline function dot3( v : Vector ) {$/;"	f
dot4	heaps/h3d/Vector.hx	/^	public inline function dot4( v : Vector ) {$/;"	f
double	heaps/hxd/Perlin.hx	/^	inline function double( index : Int ) : Float {$/;"	f
doublePi	heaps/h3d/shader/Outline2D.hx	/^			var doublePi = 6.28318530717958647692528;$/;"	v
doubles	heaps/hxd/fmt/fbx/Parser.hx	/^				var doubles:Array<Float> = new Array();$/;"	v
downcast	heaps/hxd/impl/Api.hx	/^	public static inline function downcast<T:{},S:T>( value : T, c : Class<S> ) : S {$/;"	f
dp	heaps/h3d/prim/Sphere.hx	/^		var dp = Math.PI * 2 \/ segsW;$/;"	v
dp	heaps/h3d/shader/DirShadow.hx	/^			 var dp = dot(vec4(v), vec4(12.9898,78.233,45.164,94.673));$/;"	v
dp	heaps/h3d/shader/SpotShadow.hx	/^			 var dp = dot(vec4(v), vec4(12.9898,78.233,45.164,94.673));$/;"	v
dprim	heaps/h3d/scene/Trail.hx	/^	var dprim : h3d.prim.DynamicPrimitive;$/;"	v
dr	heaps/h3d/col/Polygon.hx	/^		var dr = r.lx * nx + r.ly * ny + r.lz * nz;$/;"	v
draw	heaps/h2d/Anim.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h2d/Bitmap.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h2d/Dropdown.hx	/^	override function draw(ctx) {$/;"	f
draw	heaps/h2d/Graphics.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/HtmlText.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/Interactive.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h2d/Object.hx	/^	function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h2d/Particles.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/Slider.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/SpriteBatch.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h2d/Text.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/TextInput.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/TileGroup.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/Video.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h2d/filter/AbstractMask.hx	/^	override function draw( ctx : RenderContext, input : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Ambient.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Bloom.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Blur.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/ColorMatrix.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Displacement.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/DropShadow.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Filter.hx	/^	public function draw( ctx : RenderContext, input : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Glow.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Group.hx	/^	override function draw( ctx : RenderContext, input : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/InnerGlow.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Mask.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Nothing.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h2d/filter/Outline.hx	/^	override function draw(ctx : RenderContext, t : h2d.Tile) {$/;"	f
draw	heaps/h2d/filter/Shader.hx	/^	override function draw( ctx : RenderContext, t : h2d.Tile ) {$/;"	f
draw	heaps/h3d/impl/DirectXDriver.hx	/^	override function draw(ibuf:IndexBuffer, startIndex:Int, ntriangles:Int) {$/;"	f
draw	heaps/h3d/impl/Driver.hx	/^	public function draw( ibuf : IndexBuffer, startIndex : Int, ntriangles : Int ) {$/;"	f
draw	heaps/h3d/impl/GlDriver.hx	/^	override function draw( ibuf : IndexBuffer, startIndex : Int, ntriangles : Int ) {$/;"	f
draw	heaps/h3d/impl/LogDriver.hx	/^	override function draw( ibuf : IndexBuffer, startIndex : Int, ntriangles : Int ) {$/;"	f
draw	heaps/h3d/impl/Stage3dDriver.hx	/^	override function draw( ibuf : IndexBuffer, startIndex : Int, ntriangles : Int ) {$/;"	f
draw	heaps/h3d/parts/Emitter.hx	/^	override function draw( ctx : h3d.scene.RenderContext ) {$/;"	f
draw	heaps/h3d/parts/GpuParticles.hx	/^	override function draw( ctx : h3d.scene.RenderContext ) {$/;"	f
draw	heaps/h3d/parts/Particles.hx	/^	override function draw( ctx : h3d.scene.RenderContext ) {$/;"	f
draw	heaps/h3d/pass/Base.hx	/^	public function draw( passes : PassList, ?sort : h3d.pass.PassList -> Void ) {$/;"	f
draw	heaps/h3d/pass/Default.hx	/^	override function draw( passes : h3d.pass.PassList, ?sort : h3d.pass.PassList -> Void ) {$/;"	f
draw	heaps/h3d/pass/DefaultShadowMap.hx	/^	override function draw( passes, ?sort ) {$/;"	f
draw	heaps/h3d/pass/DirShadowMap.hx	/^	override function draw( passes, ?sort ) {$/;"	f
draw	heaps/h3d/pass/HardwarePick.hx	/^	override function draw(passes:h3d.pass.PassList,?sort) {$/;"	f
draw	heaps/h3d/pass/PointShadowMap.hx	/^	override function draw( passes : h3d.pass.PassList, ?sort ) {$/;"	f
draw	heaps/h3d/pass/SpotShadowMap.hx	/^	override function draw( passes : h3d.pass.PassList, ?sort ) {$/;"	f
draw	heaps/h3d/scene/Graphics.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h3d/scene/Mesh.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h3d/scene/MeshBatch.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h3d/scene/MultiMaterial.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h3d/scene/Object.hx	/^	function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h3d/scene/Renderer.hx	/^	function draw( name : String ) {$/;"	f
draw	heaps/h3d/scene/Skin.hx	/^	override function draw( ctx : RenderContext ) {$/;"	f
draw	heaps/h3d/scene/Trail.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h3d/scene/fwd/Renderer.hx	/^	override function draw( passes, ?sort ) {$/;"	f
draw	heaps/h3d/scene/pbr/PointLight.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/h3d/scene/pbr/Renderer.hx	/^	override function draw( name : String ) {$/;"	f
draw	heaps/h3d/scene/pbr/SpotLight.hx	/^	override function draw(ctx:RenderContext) {$/;"	f
draw	heaps/hxd/BitmapData.hx	/^	public function draw( x : Int, y : Int, src : BitmapData, srcX : Int, srcY : Int, width : Int, /;"	f
drawCalls	heaps/h3d/Engine.hx	/^	public var drawCalls(default, null) : Int;$/;"	v
drawCalls	heaps/h3d/impl/Benchmark.hx	/^	public var drawCalls : Int;$/;"	v
drawCircle	heaps/h2d/Graphics.hx	/^	public function drawCircle( cx : Float, cy : Float, radius : Float, nsegments = 0 ) {$/;"	f
drawContent	heaps/h2d/Object.hx	/^	function drawContent( ctx : RenderContext ) {$/;"	f
drawContent	heaps/h2d/Scene.hx	/^	override function drawContent(ctx:RenderContext)$/;"	f
drawEllipse	heaps/h2d/Graphics.hx	/^	public function drawEllipse( cx : Float, cy : Float, radiusX : Float, radiusY : Float, rotation/;"	f
drawEmissiveDecals	heaps/h3d/scene/pbr/Renderer.hx	/^	function drawEmissiveDecals( passName : String ) {$/;"	f
drawFiltered	heaps/h2d/Drawable.hx	/^	override function drawFiltered(ctx:RenderContext, tile:Tile) {$/;"	f
drawFiltered	heaps/h2d/Object.hx	/^	function drawFiltered( ctx : RenderContext, tile : h2d.Tile ) {$/;"	f
drawFilters	heaps/h2d/Object.hx	/^	function drawFilters( ctx : RenderContext ) {$/;"	f
drawGenTexture	heaps/h3d/mat/Texture.hx	/^	static function drawGenTexture( t : h3d.mat.Texture, color : Int, mode : Int ) {$/;"	f
drawImplTo	heaps/h2d/Scene.hx	/^	function drawImplTo( s : Object, texs : Array<h3d.mat.Texture>, ?outputs : Array<hxsl.Output> )/;"	f
drawIndexed	heaps/h2d/impl/BatchDrawState.hx	/^	public function drawIndexed( ctx : RenderContext, buffer : Buffer, indices : Indexes, offset : /;"	f
drawIndirectDiffuse	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var drawIndirectDiffuse : Bool;$/;"	v
drawIndirectSpecular	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var drawIndirectSpecular : Bool;$/;"	v
drawInstanced	heaps/h3d/impl/DirectXDriver.hx	/^	override function drawInstanced(ibuf:IndexBuffer, commands:InstanceBuffer) {$/;"	f
drawInstanced	heaps/h3d/impl/Driver.hx	/^	public function drawInstanced( ibuf : IndexBuffer, commands : h3d.impl.InstanceBuffer ) {$/;"	f
drawInstanced	heaps/h3d/impl/GlDriver.hx	/^	override function drawInstanced( ibuf : IndexBuffer, commands : InstanceBuffer ) {$/;"	f
drawLaser	Laser.hx	/^	public function drawLaser() {$/;"	f
drawLayer	heaps/h2d/Layers.hx	/^	function drawLayer( ctx : RenderContext, layer : Int ) {$/;"	f
drawLayer	heaps/h2d/RenderContext.hx	/^	function drawLayer( layer : Int ) {$/;"	f
drawLayer	heaps/samples/Tiled.hx	/^	function drawLayer(map:TiledMapData, tiles:h2d.Tile, layer:Int, size:Int) {$/;"	f
drawLine	Laser.hx	/^	private function drawLine(x:Float, y:Float, x2:Float, y2:Float) {$/;"	f
drawLine	heaps/h3d/scene/Graphics.hx	/^	public inline function drawLine( p1 : h3d.col.Point, p2 : h3d.col.Point ) {$/;"	f
drawMode	heaps/h3d/impl/GlDriver.hx	/^	var drawMode : Int;$/;"	v
drawObject	heaps/h3d/pass/Default.hx	/^	function drawObject( p : h3d.pass.PassObject ) {$/;"	f
drawObject	heaps/h3d/pass/HardwarePick.hx	/^	override function drawObject(p) {$/;"	f
drawOrder	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var drawOrder : String;$/;"	v
drawOrder	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var drawOrder : Dynamic;$/;"	v
drawPass	heaps/h3d/scene/RenderContext.hx	/^	public var drawPass : h3d.pass.PassObject;$/;"	v
drawPasses	heaps/h3d/scene/LightSystem.hx	/^	public var drawPasses : Int = 0;$/;"	v
drawPbrDecals	heaps/h3d/scene/pbr/Renderer.hx	/^	function drawPbrDecals( passName : String ) {$/;"	f
drawPie	heaps/h2d/Graphics.hx	/^	public function drawPie( cx : Float, cy : Float, radius : Float, angleStart:Float, angleLength:/;"	f
drawPieInner	heaps/h2d/Graphics.hx	/^	public function drawPieInner( cx : Float, cy : Float, radius : Float, innerRadius : Float, angl/;"	f
drawQuads	heaps/h2d/impl/BatchDrawState.hx	/^	public function drawQuads( ctx : RenderContext, buffer : Buffer, offset = 0, length = -1 ) {$/;"	f
drawRec	heaps/h2d/Flow.hx	/^	override function drawRec(ctx:RenderContext) {$/;"	f
drawRec	heaps/h2d/Mask.hx	/^	override function drawRec( ctx : h2d.RenderContext ) @:privateAccess {$/;"	f
drawRec	heaps/h2d/Object.hx	/^	function drawRec( ctx : RenderContext ) {$/;"	f
drawRec	heaps/h2d/ObjectFollower.hx	/^	override function drawRec(ctx:RenderContext) {$/;"	f
drawRec	heaps/h2d/TextInput.hx	/^	override function drawRec(ctx:RenderContext) {$/;"	f
drawRec	heaps/h2d/ZGroup.hx	/^	override function drawRec(ctx:RenderContext) {$/;"	f
drawRec	heaps/samples/Mask.hx	/^	override function drawRec(ctx:RenderContext)$/;"	f
drawRect	heaps/h2d/Graphics.hx	/^	public function drawRect( x : Float, y : Float, w : Float, h : Float ) {$/;"	f
drawRectanglePie	heaps/h2d/Graphics.hx	/^	public function drawRectanglePie( cx : Float, cy : Float, width : Float, height : Float, angleS/;"	f
drawRoundedRect	heaps/h2d/Graphics.hx	/^	public function drawRoundedRect( x : Float, y : Float, w : Float, h : Float, radius : Float, ns/;"	f
drawScaled	heaps/hxd/BitmapData.hx	/^	public function drawScaled( x : Int, y : Int, width : Int, height : Int, src : BitmapData, srcX/;"	f
drawScene	heaps/h2d/RenderContext.hx	/^	public function drawScene() {$/;"	f
drawScreenLights	heaps/h3d/scene/pbr/LightSystem.hx	/^	public function drawScreenLights( r : h3d.scene.Renderer, lightPass : h3d.pass.ScreenFx<Dynamic/;"	f
drawShadows	heaps/h3d/scene/pbr/LightSystem.hx	/^	public function drawShadows( light : Light, passes : h3d.pass.PassList ) {$/;"	f
drawShadows	heaps/h3d/scene/pbr/Renderer.hx	/^	function drawShadows( ls : LightSystem ) {$/;"	f
drawShape	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function drawShape(g:flash.display.Graphics)$/;"	f
drawTile	heaps/h2d/Graphics.hx	/^	public function drawTile( x : Float, y : Float, tile : h2d.Tile ) {$/;"	f
drawTile	heaps/h2d/RenderContext.hx	/^	public function drawTile( obj : h2d.Drawable, tile : h2d.Tile ) {$/;"	f
drawTo	heaps/h2d/Object.hx	/^	public function drawTo( t : h3d.mat.Texture ) {$/;"	f
drawToTextures	heaps/h2d/Object.hx	/^	public function drawToTextures( texs : Array<h3d.mat.Texture>, outputs : Array<hxsl.Output> ) {$/;"	f
drawTriangles	heaps/h3d/Engine.hx	/^	public var drawTriangles(default, null) : Int;$/;"	v
drawWith	heaps/h2d/SpriteBatch.hx	/^	function drawWith( ctx:RenderContext, obj : Drawable ) {$/;"	f
drawWith	heaps/h2d/TileGroup.hx	/^	function drawWith( ctx:RenderContext, obj : Drawable ) {$/;"	f
driver	heaps/h3d/Engine.hx	/^	public var driver(default,null) : h3d.impl.Driver;$/;"	v
driver	heaps/h3d/impl/Benchmark.hx	/^	var driver : h3d.impl.Driver;$/;"	v
driver	heaps/h3d/impl/DirectXDriver.hx	/^	var driver : DriverInstance;$/;"	v
driver	heaps/h3d/impl/GlDriver.hx	/^		var driver = getDriverName(false).toLowerCase();$/;"	v
driver	heaps/h3d/impl/InstanceBuffer.hx	/^	var driver : h3d.impl.Driver;$/;"	v
driver	heaps/h3d/impl/LogDriver.hx	/^		var driver = engine.driver;$/;"	v
driver	heaps/h3d/impl/MemoryManager.hx	/^	var driver : Driver;$/;"	v
driver	heaps/hxd/snd/Effect.hx	/^	var driver     : EffectDriver<Dynamic>;$/;"	v
driver	heaps/hxd/snd/Manager.hx	/^	var driver   : Driver;$/;"	v
driver	heaps/hxd/snd/NativeChannel.hx	/^	var driver : Driver;$/;"	v
driver	heaps/hxd/snd/openal/LowPassDriver.hx	/^	var driver : Driver;$/;"	v
driver	heaps/hxd/snd/openal/ReverbDriver.hx	/^	var driver    : Driver;$/;"	v
driver	heaps/hxd/snd/openal/SpatializationDriver.hx	/^	var driver : Driver;$/;"	v
driver	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var driver : Driver;$/;"	v
driverName	heaps/h3d/Engine.hx	/^	public function driverName(details=false) {$/;"	f
dropMatrix	heaps/h2d/HtmlText.hx	/^	var dropMatrix : h3d.shader.ColorMatrix;$/;"	v
dropShadow	heaps/h2d/Text.hx	/^	public var dropShadow : { dx : Float, dy : Float, color : Int, alpha : Float };$/;"	v
dropdownLayer	heaps/h2d/Dropdown.hx	/^	public var dropdownLayer : Int = 0;$/;"	v
dropdownList	heaps/h2d/Dropdown.hx	/^	public var dropdownList : Flow;$/;"	v
drsqr	heaps/h2d/col/Delaunay.hx	/^			var drsqr = dx * dx + dy * dy;$/;"	v
dryFilter	heaps/hxd/snd/openal/ReverbDriver.hx	/^	var dryFilter : LowPass;$/;"	v
dryGain	heaps/hxd/snd/openal/ReverbDriver.hx	/^	var dryGain   : Float;$/;"	v
ds	heaps/h3d/parts/Emitter.hx	/^		var ds = speed * dt;$/;"	v
ds	heaps/h3d/prim/Cylinder.hx	/^		var ds = Math.PI * 2 \/ segs;$/;"	v
ds	heaps/hxd/fmt/blend/Data.hx	/^					var ds = new DnaStruct();$/;"	v
ds	heaps/hxd/fmt/blend/Data.hx	/^		var ds = getStruct(dna, typeIndex);$/;"	v
ds	heaps/hxd/fmt/blend/Data.hx	/^	public var ds:DnaStruct;$/;"	v
dshader	heaps/h3d/pass/DirShadowMap.hx	/^	var dshader : h3d.shader.DirShadow;$/;"	v
dshader	heaps/h3d/scene/fwd/DirLight.hx	/^	var dshader : h3d.shader.DirLight;$/;"	v
dst	heaps/h2d/filter/Bloom.hx	/^		var dst = ctx.textures.allocTileTarget("dest", t);$/;"	v
dst	heaps/hxd/res/Image.hx	/^		var dst = haxe.io.Bytes.alloc(width * height * 4);$/;"	v
dst	heaps/hxd/res/Image.hx	/^		var dst = haxe.io.Bytes.alloc(width * height * pxsize);$/;"	v
dst	heaps/hxsl/AgalOptim.hx	/^						var dst = dst.clone();$/;"	v
dst	heaps/hxsl/AgalOptim.hx	/^				var dst : Reg = op.getParameters()[0];$/;"	v
dst	heaps/hxsl/AgalOptim.hx	/^				var dst = dst.clone();$/;"	v
dst	heaps/hxsl/AgalOut.hx	/^					var dst = dst.clone();$/;"	v
dstP	heaps/hxd/Pixels.hx	/^			var dstP = (x + yflip(dy + y) * this.width) * bpp + offset;$/;"	v
dstPath	heaps/hxd/fs/Convert.hx	/^	public var dstPath : String;$/;"	v
dt	heaps/h2d/Console.hx	/^			var dt = haxe.Timer.stamp() - lastLogTime;$/;"	v
dt	heaps/h3d/impl/Benchmark.hx	/^					var dt = prev.value - q.value;$/;"	v
dt	heaps/h3d/scene/CameraController.hx	/^		var dt = hxd.Math.min(1, 1 - Math.pow(smooth, ctx.elapsedTime * 60));$/;"	v
dt	heaps/h3d/scene/Object.hx	/^			var dt = ctx.elapsedTime;$/;"	v
dt	heaps/hxd/App.hx	/^		var dt = hxd.Timer.dt; \/\/ fetch again in case it's been modified in update()$/;"	v
dt	heaps/hxd/Timer.hx	/^	public static var dt : Float = 1 \/ wantedFPS;$/;"	v
dt	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var dt = t - curT;$/;"	v
dt	heaps/hxd/snd/ChannelBase.hx	/^			var dt = now - f.start;$/;"	v
dt	ra/hp/HP.hx	/^	public static var dt(get, default):Float;$/;"	v
dt0	heaps/h3d/shader/NoiseLib.hx	/^  var dt0 = vec2(dtdx.x, dtdy.x) * 4.0 * t3.x;$/;"	v
dt1	heaps/h3d/shader/NoiseLib.hx	/^  var dt1 = vec2(dtdx.y, dtdy.y) * 4.0 * t3.y;$/;"	v
dt2	heaps/h3d/shader/NoiseLib.hx	/^  var dt2 = vec2(dtdx.z, dtdy.z) * 4.0 * t3.z;$/;"	v
dtdx	heaps/h3d/shader/NoiseLib.hx	/^  var dtdx = -2.0 * vec3(d0.x, d1.x, d2.x);$/;"	v
dtdy	heaps/h3d/shader/NoiseLib.hx	/^  var dtdy = -2.0 * vec3(d0.y, d1.y, d2.y);$/;"	v
du	heaps/h3d/mat/BigTexture.hx	/^	public var du : Float;$/;"	v
dummy	heaps/hxd/res/FontBuilder.hx	/^		var dummy = js.Browser.document.createElement('div');$/;"	v
dummyText	heaps/hxd/res/FontBuilder.hx	/^		var dummyText = js.Browser.document.createTextNode(chars);$/;"	v
dump	heaps/hxd/fmt/hmd/Dump.hx	/^		var dump = toString(hmd);$/;"	v
dump	heaps/hxd/fmt/hmd/Dump.hx	/^	public function dump( h : Data ) : String {$/;"	f
dumpShader	heaps/h3d/impl/DirectXDriver.hx	/^		function dumpShader(s:hxsl.RuntimeShader.RuntimeShaderData) {$/;"	f
dupShaders	heaps/hxsl/Linker.hx	/^		var dupShaders = new Map();$/;"	v
dups	heaps/hxd/clipper/Clipper.hx	/^		var dups:OutPt = null;$/;"	v
duration	heaps/h3d/anim/SmoothTarget.hx	/^	public var duration : Float;$/;"	v
duration	heaps/h3d/anim/SmoothTransition.hx	/^	var duration : Float;$/;"	v
duration	heaps/h3d/parts/GpuParticles.hx	/^	public var duration(default, null) : Float = 0.;$/;"	v
duration	heaps/h3d/scene/Trail.hx	/^	public var duration : Float = 0.5;$/;"	v
duration	heaps/hxd/snd/Channel.hx	/^	public var duration(default, null) : Float;$/;"	v
duration	heaps/hxd/snd/Data.hx	/^	public var duration(get, never) : Float;$/;"	v
duration	heaps/hxd/snd/openal/Emulator.hx	/^	public var duration : Float;$/;"	v
dv	heaps/h2d/Particles.hx	/^		var dv = Math.pow(1 + group.speedIncr, et);$/;"	v
dv	heaps/h3d/mat/BigTexture.hx	/^	public var dv : Float;$/;"	v
dvec	heaps/h3d/shader/PointLight.hx	/^			var dvec = lightPosition - position;$/;"	v
dx	heaps/h2d/Font.hx	/^		var dx = x - offsetX;$/;"	v
dx	heaps/h2d/Interactive.hx	/^			var dx = (e.relX - cx) \/ cx;$/;"	v
dx	heaps/h2d/Interactive.hx	/^		var dx = e.relX - i.absX;$/;"	v
dx	heaps/h2d/KeyFrames.hx	/^			var dx = x1 - x0;$/;"	v
dx	heaps/h2d/Particles.hx	/^		var dx = Std.int(t.width \/ frameDivisionX);$/;"	v
dx	heaps/h2d/Particles.hx	/^	public var dx(default, set) : Int 			= 0;$/;"	v
dx	heaps/h2d/ScaleGrid.hx	/^			var dx = innerWidth - rw * unscaledInnerTileWidth;$/;"	v
dx	heaps/h2d/Scene.hx	/^			var dx = ex - i.absX;$/;"	v
dx	heaps/h2d/Scene.hx	/^			var dx = x - i.absX;$/;"	v
dx	heaps/h2d/Scene.hx	/^		var dx = event.relX - i.absX;$/;"	v
dx	heaps/h2d/Scene.hx	/^		var dx = screenXToViewport(window.mouseX) - absX;$/;"	v
dx	heaps/h2d/Slider.hx	/^			var dx = getDx();$/;"	v
dx	heaps/h2d/Tile.hx	/^	public var dx : Float;$/;"	v
dx	heaps/h2d/TileGroup.hx	/^		var dx = (t.dx + hx) * sx, dy = (t.dy + hy) * sy;$/;"	v
dx	heaps/h2d/TileGroup.hx	/^		var dx = (t.dx + hx) * sx, dy = t.dy * sy;$/;"	v
dx	heaps/h2d/TileGroup.hx	/^		var dx = t.dx * sx, dy = (t.dy + hy) * sy;$/;"	v
dx	heaps/h2d/TileGroup.hx	/^		var dx = t.dx * sx, dy = t.dy * sy;$/;"	v
dx	heaps/h2d/col/Bounds.hx	/^		var dx = (xMax - xMin) * 0.5 * v;$/;"	v
dx	heaps/h2d/col/Bounds.hx	/^		var dx = p.x < xMin ? xMin - p.x : p.x > xMax ? p.x - xMax : 0.;$/;"	v
dx	heaps/h2d/col/Bounds.hx	/^		var dx = xMax - xMin;$/;"	v
dx	heaps/h2d/col/Circle.hx	/^		var dx = p.x - x;$/;"	v
dx	heaps/h2d/col/Circle.hx	/^		var dx = p2.x - p1.x;$/;"	v
dx	heaps/h2d/col/Circle.hx	/^		var dx = x - c.x;$/;"	v
dx	heaps/h2d/col/Delaunay.hx	/^			var dx = p2.x - xc;$/;"	v
dx	heaps/h2d/col/Delaunay.hx	/^		var dx = xmax - xmin;$/;"	v
dx	heaps/h2d/col/IPoint.hx	/^		var dx = x - p.x;$/;"	v
dx	heaps/h2d/col/IPolygon.hx	/^			var dx = p0.x - xx;$/;"	v
dx	heaps/h2d/col/Line.hx	/^		var dx = p2.x - p1.x;$/;"	v
dx	heaps/h2d/col/Point.hx	/^		var dx = x - p.x;$/;"	v
dx	heaps/h2d/col/Polygon.hx	/^			var dx = p0.x - xx;$/;"	v
dx	heaps/h2d/col/RoundRect.hx	/^		var dx = hseg * Math.cos(rotation);$/;"	v
dx	heaps/h2d/col/RoundRect.hx	/^	var dx : Float;$/;"	v
dx	heaps/h2d/col/Segment.hx	/^	public var dx : Float;$/;"	v
dx	heaps/h2d/filter/DropShadow.hx	/^		var dx = Math.round(Math.cos(angle) * distance);$/;"	v
dx	heaps/h3d/Camera.hx	/^		var dx = 0, dy = 0, dz = 0;$/;"	v
dx	heaps/h3d/Vector.hx	/^		var dx = v.x - x;$/;"	v
dx	heaps/h3d/col/Bounds.hx	/^		var dx = (xMax - xMin) * 0.5 * v;$/;"	v
dx	heaps/h3d/col/Bounds.hx	/^		var dx = xMax - xMin;$/;"	v
dx	heaps/h3d/col/IPoint.hx	/^		var dx = p.x - x;$/;"	v
dx	heaps/h3d/col/Point.hx	/^		var dx = p.x - x;$/;"	v
dx	heaps/h3d/col/Ray.hx	/^		var dx = 1 \/ lx;$/;"	v
dx	heaps/h3d/col/Sphere.hx	/^		var dx = p.x - x;$/;"	v
dx	heaps/h3d/parts/GpuParticles.hx	/^			var dx = size.x * max + d;$/;"	v
dx	heaps/h3d/parts/Particle.hx	/^	public var dx : Float;$/;"	v
dx	heaps/h3d/parts/Particles.hx	/^				var dx = p.x - prev.x;$/;"	v
dx	heaps/hxd/BitmapData.hx	/^		var dx = x1 - x0;$/;"	v
dx	heaps/hxd/clipper/Clipper.hx	/^		var dx : Float = (pt2.x - pt1.x);$/;"	v
dx	heaps/hxd/clipper/Clipper.hx	/^		var dx = Math.tan(Math.atan2(m_sinA, m_normals[k].x * m_normals[j].x + m_normals[k].y * m_norm/;"	v
dx	heaps/hxd/clipper/Clipper.hx	/^	public var dx : Float;$/;"	v
dx	heaps/hxd/clipper/Clipper.hx	/^          var dx = pt1.x - pt2.x;$/;"	v
dx	heaps/hxd/poly2tri/SweepContext.hx	/^		var dx = Constants.kAlpha * (xmax - xmin);$/;"	v
dx	heaps/hxd/poly2tri/SweepContext.hx	/^		var dx = Math.ceil(dx);$/;"	v
dx	heaps/hxd/res/Atlas.hx	/^		var dx = 0, dy = 0;$/;"	v
dx1	heaps/h2d/Drawable.hx	/^		var dx1 = tw * matA;$/;"	v
dx1	heaps/h2d/Object.hx	/^		var dx1 = tw * matA;$/;"	v
dx10h	heaps/hxd/Pixels.hx	/^		var dx10h = layerCount > 1 && !isCubeMap;$/;"	v
dx1n	heaps/hxd/clipper/Clipper.hx	/^		var dx1n = Math.abs(GetDx(btmPt1.pt, p.pt));$/;"	v
dx1p	heaps/hxd/clipper/Clipper.hx	/^		var dx1p = Math.abs(GetDx(btmPt1.pt, p.pt));$/;"	v
dx2	heaps/h2d/Drawable.hx	/^		var dx2 = th * matC;$/;"	v
dx2	heaps/h2d/Object.hx	/^		var dx2 = th * matC;$/;"	v
dx2n	heaps/hxd/clipper/Clipper.hx	/^		var dx2n = Math.abs(GetDx(btmPt2.pt, p.pt));$/;"	v
dx2p	heaps/hxd/clipper/Clipper.hx	/^		var dx2p = Math.abs(GetDx(btmPt2.pt, p.pt));$/;"	v
dxInitDone	heaps/hxsl/CacheFileBuilder.hx	/^	public var dxInitDone = false;$/;"	v
dxShaderVersion	heaps/hxsl/CacheFileBuilder.hx	/^	public var dxShaderVersion = "5_0";$/;"	v
dxgi	heaps/hxd/res/Image.hx	/^				var dxgi = f.readInt32(); \/\/ DXGI_FORMAT_xxxx value$/;"	v
dxt	heaps/hxd/res/Image.hx	/^				var dxt = (fourCC >>> 24) - "0".code;$/;"	v
dy	heaps/h2d/Font.hx	/^		var dy = y - offsetY;$/;"	v
dy	heaps/h2d/HtmlText.hx	/^			var dy = metrics[sizePos].baseLine - font.baseLine;$/;"	v
dy	heaps/h2d/Interactive.hx	/^			var dy = (e.relY - cy) \/ cy;$/;"	v
dy	heaps/h2d/Interactive.hx	/^		var dy = e.relY - i.absY;$/;"	v
dy	heaps/h2d/Particles.hx	/^		var dy = Std.int(t.height \/ frameDivisionY);$/;"	v
dy	heaps/h2d/Particles.hx	/^	public var dy(default, set) : Int 			= 0;$/;"	v
dy	heaps/h2d/ScaleGrid.hx	/^			var dy = innerHeight - rh * unscaledInnerTileHeight;$/;"	v
dy	heaps/h2d/Scene.hx	/^			var dy = ey - i.absY;$/;"	v
dy	heaps/h2d/Scene.hx	/^			var dy = y - i.absY;$/;"	v
dy	heaps/h2d/Scene.hx	/^		var dy = event.relY - i.absY;$/;"	v
dy	heaps/h2d/Scene.hx	/^		var dy = screenYToViewport(window.mouseY) - absY;$/;"	v
dy	heaps/h2d/Tile.hx	/^	public var dy : Float;$/;"	v
dy	heaps/h2d/col/Bounds.hx	/^		var dy = (yMax - yMin) * 0.5 * v;$/;"	v
dy	heaps/h2d/col/Bounds.hx	/^		var dy = p.y < yMin ? yMin - p.y : p.y > yMax ? p.y - yMax : 0.;$/;"	v
dy	heaps/h2d/col/Bounds.hx	/^		var dy = yMax - yMin;$/;"	v
dy	heaps/h2d/col/Circle.hx	/^		var dy = p.y - y;$/;"	v
dy	heaps/h2d/col/Circle.hx	/^		var dy = p2.y - p1.y;$/;"	v
dy	heaps/h2d/col/Circle.hx	/^		var dy = y - c.y;$/;"	v
dy	heaps/h2d/col/Delaunay.hx	/^			var dy = p2.y - yc;$/;"	v
dy	heaps/h2d/col/Delaunay.hx	/^		var dy = ymax - ymin;$/;"	v
dy	heaps/h2d/col/IPoint.hx	/^		var dy = y - p.y;$/;"	v
dy	heaps/h2d/col/IPolygon.hx	/^			var dy = p0.y - yy;$/;"	v
dy	heaps/h2d/col/Line.hx	/^		var dy = p2.y - p1.y;$/;"	v
dy	heaps/h2d/col/Point.hx	/^		var dy = y - p.y;$/;"	v
dy	heaps/h2d/col/Polygon.hx	/^			var dy = p0.y - yy;$/;"	v
dy	heaps/h2d/col/RoundRect.hx	/^		var dy = hseg * Math.sin(rotation);$/;"	v
dy	heaps/h2d/col/RoundRect.hx	/^	var dy : Float;$/;"	v
dy	heaps/h2d/col/Segment.hx	/^	public var dy : Float;$/;"	v
dy	heaps/h2d/filter/DropShadow.hx	/^		var dy = Math.round(Math.sin(angle) * distance);$/;"	v
dy	heaps/h3d/Vector.hx	/^		var dy = v.y - y;$/;"	v
dy	heaps/h3d/col/Bounds.hx	/^		var dy = (yMax - yMin) * 0.5 * v;$/;"	v
dy	heaps/h3d/col/Bounds.hx	/^		var dy = yMax - yMin;$/;"	v
dy	heaps/h3d/col/IPoint.hx	/^		var dy = p.y - y;$/;"	v
dy	heaps/h3d/col/Point.hx	/^		var dy = p.y - y;$/;"	v
dy	heaps/h3d/col/Ray.hx	/^		var dy = 1 \/ ly;$/;"	v
dy	heaps/h3d/col/Sphere.hx	/^		var dy = p.y - y;$/;"	v
dy	heaps/h3d/parts/GpuParticles.hx	/^			var dy = size.y * max + d;$/;"	v
dy	heaps/h3d/parts/Particle.hx	/^	public var dy : Float;$/;"	v
dy	heaps/h3d/parts/Particles.hx	/^				var dy = p.y - prev.y;$/;"	v
dy	heaps/hxd/BitmapData.hx	/^		var dy = y1 - y0;$/;"	v
dy	heaps/hxd/clipper/Clipper.hx	/^		var dy : Float = (pt2.y - pt1.y);$/;"	v
dy	heaps/hxd/clipper/Clipper.hx	/^          var dy = pt1.y - pt2.y;$/;"	v
dy	heaps/hxd/poly2tri/SweepContext.hx	/^		var dy = Constants.kAlpha * (ymax - ymin);$/;"	v
dy	heaps/hxd/poly2tri/SweepContext.hx	/^		var dy = Math.ceil(dy);$/;"	v
dy1	heaps/h2d/Drawable.hx	/^		var dy1 = tw * matB;$/;"	v
dy1	heaps/h2d/Object.hx	/^		var dy1 = tw * matB;$/;"	v
dy2	heaps/h2d/Drawable.hx	/^		var dy2 = th * matD;$/;"	v
dy2	heaps/h2d/Object.hx	/^		var dy2 = th * matD;$/;"	v
dynCullingEnable	heaps/samples/Lights.hx	/^	var dynCullingEnable = true;$/;"	v
dz	heaps/h3d/Vector.hx	/^		var dz = v.z - z;$/;"	v
dz	heaps/h3d/col/Bounds.hx	/^		var dz = (zMax - zMin) * 0.5 * v;$/;"	v
dz	heaps/h3d/col/Bounds.hx	/^		var dz = zMax - zMin;$/;"	v
dz	heaps/h3d/col/IPoint.hx	/^		var dz = p.z - z;$/;"	v
dz	heaps/h3d/col/Point.hx	/^		var dz = p.z - z;$/;"	v
dz	heaps/h3d/col/Ray.hx	/^		var dz = 1 \/ lz;$/;"	v
dz	heaps/h3d/col/Sphere.hx	/^		var dz = p.z - z;$/;"	v
dz	heaps/h3d/parts/GpuParticles.hx	/^			var dz = size.z * max + d;$/;"	v
dz	heaps/h3d/parts/Particle.hx	/^	public var dz : Float;$/;"	v
dz	heaps/h3d/parts/Particles.hx	/^				var dz = p.z - prev.z;$/;"	v
e	heaps/h2d/CdbLevel.hx	/^				var e = new LevelObjectInstance();$/;"	v
e	heaps/h2d/Graphics.hx	/^		var e = 0.01; \/\/ see #776$/;"	v
e	heaps/h2d/HtmlText.hx	/^						var e = font.getChar(cc);$/;"	v
e	heaps/h2d/Scene.hx	/^		var e = h3d.Engine.getCurrent();$/;"	v
e	heaps/h2d/SpriteBatch.hx	/^			var e = first;$/;"	v
e	heaps/h2d/SpriteBatch.hx	/^		var e = first;$/;"	v
e	heaps/h2d/SpriteBatch.hx	/^	var e : BatchElement;$/;"	v
e	heaps/h2d/Text.hx	/^					var e = font.getChar(cc);$/;"	v
e	heaps/h2d/Text.hx	/^			var e = font.getChar(cc);$/;"	v
e	heaps/h2d/ZGroup.hx	/^		var e = first;$/;"	v
e	heaps/h2d/ZGroup.hx	/^		var e = map.get(spr);$/;"	v
e	heaps/h3d/impl/DirectXDriver.hx	/^					var e = new LayoutElement();$/;"	v
e	heaps/h3d/impl/TextureCache.hx	/^		var e = h3d.Engine.getCurrent();$/;"	v
e	heaps/h3d/impl/VarBinding.hx	/^				var e = initExpr([f.name], e, false);$/;"	v
e	heaps/h3d/mat/BigTexture.hx	/^		var e = new BigTextureElement(this, q, q.x \/ size, q.y \/ size, tsize.width \/ size, tsize.he/;"	v
e	heaps/h3d/mat/BigTexture.hx	/^		var e = new BigTextureElement(this, q, q.x \/ size, q.y \/ size, width \/ size, height \/ size/;"	v
e	heaps/h3d/mat/Texture.hx	/^		var e = h3d.Engine.getCurrent();$/;"	v
e	heaps/h3d/scene/Trail.hx	/^				var e = new TrailElement();$/;"	v
e	heaps/h3d/scene/Trail.hx	/^		var e = null;$/;"	v
e	heaps/h3d/scene/pbr/Environment.hx	/^		var e : Environment = @:privateAccess engine.resCache.get(Environment);$/;"	v
e	heaps/hxd/SceneEvents.hx	/^					var e = overList.pop();$/;"	v
e	heaps/hxd/SceneEvents.hx	/^		var e = new hxd.Event(EFocus);$/;"	v
e	heaps/hxd/System.flash.hx	/^		var e = h3d.Engine.getCurrent();$/;"	v
e	heaps/hxd/Window.flash.hx	/^		var e = new Event(EPush, mouseX, mouseY);$/;"	v
e	heaps/hxd/Window.flash.hx	/^		var e = new Event(ERelease, mouseX, mouseY);$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^				var e = lb.nextInAEL;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^			var e = GetNextInAEL(horzEdge, dir);$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^			var e = lm.leftBound;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^		var e = eStart;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^		var e = edge.prevInAEL;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^		var e = m_ActiveEdges;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^		var e, prevE : TEdge;$/;"	v
e	heaps/hxd/clipper/Clipper.hx	/^		var e:TEdge = m_ActiveEdges;$/;"	v
e	heaps/hxd/earcut/Earcut.hx	/^			var e = i == holes.length - 1 ? points.length : holes[i + 1];$/;"	v
e	heaps/hxd/fmt/hdr/Reader.hx	/^					var e = exps[scanLine.get(x+width*3)];$/;"	v
e	heaps/hxd/fmt/hmd/Reader.hx	/^					var e = new AnimationEvent();$/;"	v
e	heaps/hxd/fs/LocalFileSystem.hx	/^		var e = null;$/;"	v
e	heaps/hxd/fs/MultiFileSystem.hx	/^				var e = f.get(path);$/;"	v
e	heaps/hxd/res/DynamicText.hx	/^							var e = elements[i];$/;"	v
e	heaps/hxd/snd/ChannelBase.hx	/^			var e = hxd.impl.Api.downcast(e, etype);$/;"	v
e	heaps/hxd/snd/Manager.hx	/^				var e = c.bindedEffects[i];$/;"	v
e	heaps/hxd/snd/Manager.hx	/^		var e = usedEffects;$/;"	v
e	heaps/hxd/snd/openal/ReverbDriver.hx	/^		var e = hxd.impl.Api.downcast(e, hxd.snd.effect.Reverb);$/;"	v
e	heaps/hxd/snd/openal/SpatializationDriver.hx	/^		var e = hxd.impl.Api.downcast(e, hxd.snd.effect.Spatialization);$/;"	v
e	heaps/hxsl/AgalOut.hx	/^				var e = expr(a);$/;"	v
e	heaps/hxsl/AgalOut.hx	/^				var e = expr(e);$/;"	v
e	heaps/hxsl/Cache.hx	/^				var e = makeOutExpr(args[args.length - 1 - i], rem - (args.length - 1 - i));$/;"	v
e	heaps/hxsl/Checker.hx	/^						var e = specialGlobal(g, eg, args, e.pos);$/;"	v
e	heaps/hxsl/Checker.hx	/^						var e = unifyCallParams(eg, args, variants, e.pos);$/;"	v
e	heaps/hxsl/Checker.hx	/^					var e = typeExpr(args[i], Value);$/;"	v
e	heaps/hxsl/Checker.hx	/^					var e = typeExpr(v.expr, v.type == null ? Value : With(v.type));$/;"	v
e	heaps/hxsl/Checker.hx	/^					var e = unifyCallParams(e1, args, variants, e.pos);$/;"	v
e	heaps/hxsl/Checker.hx	/^				var e = el.shift();$/;"	v
e	heaps/hxsl/Checker.hx	/^			var e = e1 == null ? null : typeWith(e1, curFun.ret);$/;"	v
e	heaps/hxsl/Checker.hx	/^			var e = typeExpr(e, with);$/;"	v
e	heaps/hxsl/Checker.hx	/^		var e = typeExpr(e, With(t));$/;"	v
e	heaps/hxsl/Dce.hx	/^				var e = mapExpr(e, isVar);$/;"	v
e	heaps/hxsl/Dce.hx	/^			var e = mapExpr(e, true);$/;"	v
e	heaps/hxsl/Eval.hx	/^					var e = args[i];$/;"	v
e	heaps/hxsl/Eval.hx	/^				var e = el[i++];$/;"	v
e	heaps/hxsl/Eval.hx	/^				var e = evalExpr(el[i], isVal);$/;"	v
e	heaps/hxsl/Eval.hx	/^				var e = handleReturn(evalExpr(f.expr,false), true);$/;"	v
e	heaps/hxsl/Eval.hx	/^			var e = evalExpr(e);$/;"	v
e	heaps/hxsl/Eval.hx	/^			var e = evalExpr(e, isVal);$/;"	v
e	heaps/hxsl/Eval.hx	/^			var e = switch( it.e ) {$/;"	v
e	heaps/hxsl/Flatten.hx	/^				var e = read(0, pos);$/;"	v
e	heaps/hxsl/Flatten.hx	/^			var e = read(0, pos);$/;"	v
e	heaps/hxsl/Serializer.hx	/^			var e = readExpr();$/;"	v
e	heaps/hxsl/Serializer.hx	/^		var e : TExprDef = switch( k ) {$/;"	v
e	heaps/hxsl/Splitter.hx	/^					var e = { e : TBinop(OpAssign, { e : TVar(nv), t : nv.type, p : p }, { e : TVar(v), t : v.t/;"	v
e	heaps/tools/hxsl/Main.hx	/^			var e = new hscript.Macro({ file : "hxsl", min : 0, max : code.length }).convert(expr);$/;"	v
e1	heaps/h3d/col/PolygonBuffer.hx	/^			var e1 = p1.sub(p0);$/;"	v
e1	heaps/hxsl/Checker.hx	/^				var e1 = typeExpr(e1, Value);$/;"	v
e1	heaps/hxsl/Checker.hx	/^			var e1 = typeExpr(e1, Value);$/;"	v
e1	heaps/hxsl/Checker.hx	/^			var e1 = typeExpr(e1, with);$/;"	v
e1	heaps/hxsl/Eval.hx	/^			var e1 = evalExpr(e1);$/;"	v
e1	heaps/hxsl/Linker.hx	/^				var e1 = mapExprVar(e1);$/;"	v
e1Contributing	heaps/hxd/clipper/Clipper.hx	/^		var e1Contributing = (e1.outIdx >= 0);$/;"	v
e1FillType	heaps/hxd/clipper/Clipper.hx	/^		var e1FillType, e2FillType, e1FillType2, e2FillType2;$/;"	v
e1Wc	heaps/hxd/clipper/Clipper.hx	/^		var e1Wc, e2Wc;$/;"	v
e1Wc2	heaps/hxd/clipper/Clipper.hx	/^			var e1Wc2, e2Wc2;$/;"	v
e2	heaps/h3d/col/PolygonBuffer.hx	/^			var e2 = p2.sub(p0);$/;"	v
e2	heaps/hxd/clipper/Clipper.hx	/^				var e2 = e.prevInAEL;$/;"	v
e2	heaps/hxd/clipper/Clipper.hx	/^			var e2 = ProcessBound(locMin.rightBound, !leftBoundIsForward);$/;"	v
e2	heaps/hxd/clipper/Clipper.hx	/^		var e2 : TEdge;$/;"	v
e2	heaps/hxd/clipper/Clipper.hx	/^		var e2 = e.prevInAEL;$/;"	v
e2	heaps/hxsl/Checker.hx	/^			var e2 = e2 == null ? null : typeExpr(e2, with);$/;"	v
e2	heaps/hxsl/Checker.hx	/^			var e2 = typeExpr(e2, With(TInt));$/;"	v
e2	heaps/hxsl/Checker.hx	/^			var e2 = typeExpr(e2, With(e1.t));$/;"	v
e2	heaps/hxsl/Clone.hx	/^		var e2 : TExpr = e.map(texpr);$/;"	v
e2	heaps/hxsl/Eval.hx	/^			var e2 = evalExpr(e2);$/;"	v
e2	heaps/hxsl/Eval.hx	/^			var e2;$/;"	v
e2	heaps/hxsl/GlslOut.hx	/^			var e2 = {$/;"	v
e2	heaps/hxsl/HlslOut.hx	/^			var e2 = {$/;"	v
e2	heaps/hxsl/Linker.hx	/^				var e2 = mapExprVar(e2);$/;"	v
e2	heaps/hxsl/MacroParser.hx	/^			var e2 = parseExpr(e);$/;"	v
e2Contributing	heaps/hxd/clipper/Clipper.hx	/^		var e2Contributing = (e2.outIdx >= 0);$/;"	v
eLastHorz	heaps/hxd/clipper/Clipper.hx	/^		var eLastHorz = horzEdge;$/;"	v
eMaxPair	heaps/hxd/clipper/Clipper.hx	/^				var eMaxPair = GetMaximaPair(e);$/;"	v
eMaxPair	heaps/hxd/clipper/Clipper.hx	/^		var eMaxPair = GetMaximaPair(e);$/;"	v
eMaxPair	heaps/hxd/clipper/Clipper.hx	/^		var eMaxPair = null;$/;"	v
eMin	heaps/hxd/clipper/Clipper.hx	/^		var eMin = null;$/;"	v
eNext	heaps/hxd/clipper/Clipper.hx	/^				var eNext = GetNextInAEL(e, dir); \/\/saves eNext for later$/;"	v
eNext	heaps/hxd/clipper/Clipper.hx	/^				var eNext = e.nextInAEL;$/;"	v
eNext	heaps/hxd/clipper/Clipper.hx	/^				var eNext = e.nextInSEL;$/;"	v
eNext	heaps/hxd/clipper/Clipper.hx	/^				var eNext = horzEdge.nextInAEL;$/;"	v
eNext	heaps/hxd/clipper/Clipper.hx	/^        var eNext = e.nextInAEL;$/;"	v
eNextHorz	heaps/hxd/clipper/Clipper.hx	/^							var eNextHorz = m_SortedEdges;$/;"	v
ePrev	heaps/hxd/clipper/Clipper.hx	/^					var ePrev = e.prevInAEL;$/;"	v
ePrev	heaps/hxd/clipper/Clipper.hx	/^				var ePrev = e.prevInAEL;$/;"	v
ePrev	heaps/hxd/clipper/Clipper.hx	/^				var ePrev = horzEdge.prevInAEL;$/;"	v
eStart	heaps/hxd/clipper/Clipper.hx	/^		var eStart = edges[0];$/;"	v
eStop	heaps/hxd/clipper/Clipper.hx	/^		var eStop = eStart;$/;"	v
ear	heaps/h2d/Graphics.hx	/^			var ear = EARCUT;$/;"	v
earcutLinked	heaps/hxd/earcut/Earcut.hx	/^	function earcutLinked(ear:EarNode, pass = 0) {$/;"	f
earr	heaps/hxsl/Flatten.hx	/^			var earr = [for( i in 0...len ) { var a = new Alloc(a.g, a.t, a.pos + stride * i, stride); ac/;"	v
ease	heaps/hxd/Math.hx	/^	public inline static function ease(a:Float, b:Float, k:Float, easing:Float) {$/;"	f
easeFactor	heaps/hxd/Math.hx	/^	public inline static function easeFactor( k : Float, easing : Float ) {$/;"	f
easing	heaps/h3d/anim/SmoothTarget.hx	/^	public var easing : Float = 0.;$/;"	v
ebounds	heaps/h3d/parts/GpuParticles.hx	/^		var ebounds = null, calcEmit = null, partCount = 0, partAlloc = this.partAlloc;$/;"	v
ebounds	heaps/h3d/parts/GpuParticles.hx	/^	var ebounds : h3d.col.Bounds;$/;"	v
ebuffer	heaps/hxsl/Cache.hx	/^		var ebuffer = { e : TVar(vbuffer), p : pos, t : vbuffer.type };$/;"	v
ecode	heaps/hxsl/CacheFileBuilder.hx	/^			var ecode = p.exitCode();$/;"	v
econd	heaps/hxsl/Dce.hx	/^			var econd = mapExpr(econd, isVar);$/;"	v
econd	heaps/hxsl/Eval.hx	/^			var econd = evalExpr(econd);$/;"	v
econsts	heaps/hxsl/Flatten.hx	/^	var econsts : TExpr;$/;"	v
ed	heaps/hxsl/Ast.hx	/^		var ed = switch( e.e ) {$/;"	v
ed	heaps/hxsl/Checker.hx	/^		var ed = switch( e.expr ) {$/;"	v
ed	heaps/hxsl/MacroParser.hx	/^		var ed : Ast.ExprDef = switch( e.expr ) {$/;"	v
edge	heaps/h2d/col/Voronoi.hx	/^		var edge = new Edge(lPoint, null);$/;"	v
edge	heaps/h2d/col/Voronoi.hx	/^		var edge = new Edge(lPoint, rPoint);$/;"	v
edge	heaps/h2d/col/Voronoi.hx	/^	public var edge : Edge;$/;"	v
edge0	heaps/hxsl/AgalOut.hx	/^			var edge0 = expr(e0);$/;"	v
edge1	heaps/hxd/clipper/Clipper.hx	/^	public var edge1 : TEdge;$/;"	v
edge1	heaps/hxsl/AgalOut.hx	/^			var edge1 = expr(e1);$/;"	v
edge2	heaps/hxd/clipper/Clipper.hx	/^	public var edge2 : TEdge;$/;"	v
edgeEventByEdge	heaps/hxd/poly2tri/Sweep.hx	/^	public function edgeEventByEdge(edge:Edge, node:Node)$/;"	f
edgeEventByPoints	heaps/hxd/poly2tri/Sweep.hx	/^	public function edgeEventByPoints(ep:Point, eq:Point, triangle:Triangle, point:Point)$/;"	f
edgeIndex	heaps/hxd/poly2tri/Triangle.hx	/^	public function edgeIndex(p1:Point, p2:Point):Int$/;"	f
edge_event	heaps/hxd/poly2tri/SweepContext.hx	/^	public var edge_event:EdgeEvent;$/;"	v
edge_index	heaps/hxd/poly2tri/Sweep.hx	/^		var edge_index:Int;$/;"	v
edge_list	heaps/hxd/poly2tri/Point.hx	/^	public var edge_list(get, null):Array<Edge>;$/;"	v
edge_list	heaps/hxd/poly2tri/Point.hx	/^	public var edge_list(get_edge_list, null):Array<Edge>;$/;"	v
edge_list	heaps/hxd/poly2tri/SweepContext.hx	/^	public var edge_list:Array<Edge>;$/;"	v
edges	heaps/h2d/col/Voronoi.hx	/^		var edges = this.edges,$/;"	v
edges	heaps/h2d/col/Voronoi.hx	/^	public var edges : Array<Edge>;$/;"	v
edges	heaps/h2d/col/Voronoi.hx	/^	var edges : Array<Edge>;$/;"	v
edges	heaps/hxd/clipper/Clipper.hx	/^		var edges = [];$/;"	v
edges	heaps/hxd/fmt/spine/JsonData.hx	/^	var edges : Array<Int>;$/;"	v
edit	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var edit : Bool;$/;"	v
editProps	heaps/h3d/mat/Material.hx	/^	override function editProps() {$/;"	f
editProps	heaps/h3d/mat/PbrMaterial.hx	/^	override function editProps() {$/;"	f
editProps	heaps/h3d/scene/pbr/Renderer.hx	/^	override function editProps() {$/;"	f
editProps	heaps/hxd/impl/AnyProps.hx	/^	public function editProps() {$/;"	f
ee	heaps/h2d/domkit/Style.hx	/^			var ee = e;$/;"	v
eelse	heaps/hxsl/Dce.hx	/^			var eelse = eelse == null ? null : mapExpr(eelse, isVar);$/;"	v
ef	heaps/hxsl/Checker.hx	/^				var ef = fieldAccess(e1, f, with, e.pos);$/;"	v
ef	heaps/hxsl/Checker.hx	/^			var ef = fieldAccess(e1, f, with, e.pos);$/;"	v
ef	heaps/hxsl/Checker.hx	/^		var ef = switch( e.t ) {$/;"	v
effect	heaps/samples/DrawingTiles.hx	/^	public var effect : Int;$/;"	v
effectGC	heaps/hxd/snd/Manager.hx	/^	var effectGC          : Array<Effect>;$/;"	v
effectToAuxiliarySend	heaps/hxd/snd/openal/AudioTypes.hx	/^	var effectToAuxiliarySend : Map<Effect, Int>;$/;"	v
effects	heaps/h3d/scene/Renderer.hx	/^	public var effects : Array<h3d.impl.RendererFX> = [];$/;"	v
effects	heaps/hxd/snd/ChannelBase.hx	/^	public var effects        : Array<Effect> = [];$/;"	v
eg	heaps/hxsl/Checker.hx	/^					var eg = { e : TGlobal(g), t : TFun(variants), p : e1.p };$/;"	v
eh	heaps/hxd/Window.hl.hx	/^		var eh = null;$/;"	v
eid	heaps/h2d/col/Voronoi.hx	/^		var eid = 0;$/;"	v
eif	heaps/hxsl/Eval.hx	/^			var eif = handleReturn(eif, isFinal);$/;"	v
einit	heaps/hxsl/Checker.hx	/^				var einit = null;$/;"	v
el	heaps/hxd/fs/FileConverter.hx	/^				var el = f.toLowerCase().split(",");$/;"	v
el	heaps/hxd/fs/MultiFileSystem.hx	/^		var el = [];$/;"	v
el	heaps/hxd/fs/MultiFileSystem.hx	/^	var el : Array<FileEntry>;$/;"	v
el	heaps/hxsl/Checker.hx	/^			var el = [for( e in el ) typeExpr(e, Value)];$/;"	v
el	heaps/hxsl/Checker.hx	/^			var el = el.copy(), tl = [];$/;"	v
el2	heaps/hxsl/GlslOut.hx	/^			var el2 = el.copy();$/;"	v
el2	heaps/hxsl/HlslOut.hx	/^			var el2 = el.copy();$/;"	v
elapsed	heaps/hxd/snd/webaudio/AudioTypes.hx	/^		var elapsed = shiftTime - starts;$/;"	v
elapsedTime	heaps/h3d/impl/RenderContext.hx	/^	public var elapsedTime : Float;$/;"	v
elapsedTime	heaps/hxd/Timer.hx	/^	public static var elapsedTime(default,null) = 0.;$/;"	v
element	heaps/hxd/Window.js.hx	/^	var element : js.html.EventTarget;$/;"	v
elements	heaps/h2d/HtmlText.hx	/^	var elements : Array<Object> = [];$/;"	v
elements	heaps/h3d/scene/World.hx	/^	public var elements : Array<WorldElement>;$/;"	v
elements	heaps/hxd/res/DynamicText.hx	/^						var elements : Array<Dynamic> = sub;$/;"	v
eliminateConditionals	heaps/hxsl/Eval.hx	/^	public var eliminateConditionals : Bool;$/;"	v
eliminateHole	heaps/hxd/earcut/Earcut.hx	/^	function eliminateHole(hole, root) {$/;"	f
eliminateHoles	heaps/hxd/earcut/Earcut.hx	/^	@:generic function eliminateHoles < T: { x:Float, y:Float } > (points : Array<T>, holes : Array/;"	f
elt	heaps/h2d/Flow.hx	/^	var elt : Object;$/;"	v
elt	heaps/hxd/Window.js.hx	/^		var elt : Dynamic = doc.documentElement;$/;"	v
emat	heaps/hxsl/Flatten.hx	/^				var emat = switch( e.e ) { case TCall(e, _): e; default: throw "assert"; };$/;"	v
embed	heaps/hxd/res/FileTree.hx	/^	public function embed(options:EmbedOptions) {$/;"	f
embedFont	heaps/hxd/res/Embed.hx	/^	public macro static function embedFont( file : String, ?chars : String, ?skipErrors : Bool ) {$/;"	f
embedRec	heaps/hxd/res/FileTree.hx	/^	function embedRec( tree : FileTreeData, basePath : String, fs : hxd.fs.LocalFileSystem ) {$/;"	f
embedTypes	heaps/hxd/res/FileTree.hx	/^	var embedTypes : Array<String>;$/;"	v
emissive	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var emissive : Float;$/;"	v
emissive	heaps/h3d/scene/World.hx	/^	public var emissive : Null<Float>;$/;"	v
emissive	heaps/h3d/scene/pbr/Renderer.hx	/^	var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/GammaCorrect.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/PropsImport.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/PropsValues.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/Slides.hx	/^		var emissive : Float;$/;"	v
emissive	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var emissive : Float;$/;"	v
emissiveDecalsOutput	heaps/h3d/scene/pbr/Renderer.hx	/^	var emissiveDecalsOutput = new h3d.pass.Output("emissiveDecal",[$/;"	v
emissivePower	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var emissivePower : Float;$/;"	v
emissivePower	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var emissivePower : Float;$/;"	v
emissiveStrength	heaps/h3d/shader/pbr/StrengthValues.hx	/^		@param var emissiveStrength : Float;$/;"	v
emissiveStrength	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var emissiveStrength : Float;$/;"	v
emissiveValue	heaps/h3d/shader/pbr/PropsTexture.hx	/^		@param var emissiveValue : Float;$/;"	v
emissiveValue	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var emissiveValue : Float;$/;"	v
emit	heaps/h2d/Drawable.hx	/^		inline function emit(v:Float) buf[pos++] = v;$/;"	f
emit	heaps/h2d/Object.hx	/^		inline function emit(v:Float) buf[pos++] = v;$/;"	f
emit	heaps/h3d/mat/PbrMaterial.hx	/^		var emit = props == null || props.emissive == null ? 0 : props.emissive;$/;"	v
emit	heaps/h3d/mat/PbrMaterial.hx	/^		var emit = props.emissive == null ? 0 : props.emissive;$/;"	v
emit	heaps/h3d/parts/GpuParticles.hx	/^	override function emit( ctx : h3d.scene.RenderContext ) {$/;"	f
emit	heaps/h3d/scene/Light.hx	/^	override function emit(ctx:RenderContext) {$/;"	f
emit	heaps/h3d/scene/Mesh.hx	/^	override function emit( ctx : RenderContext ) {$/;"	f
emit	heaps/h3d/scene/MeshBatch.hx	/^	override function emit(ctx:RenderContext) {$/;"	f
emit	heaps/h3d/scene/MultiMaterial.hx	/^	override function emit( ctx : RenderContext ) {$/;"	f
emit	heaps/h3d/scene/Object.hx	/^	function emit( ctx : RenderContext ) {$/;"	f
emit	heaps/h3d/scene/RenderContext.hx	/^	public inline function emit( mat : h3d.mat.Material, obj, index = 0 ) {$/;"	f
emit	heaps/h3d/scene/Skin.hx	/^	override function emit( ctx : RenderContext ) {$/;"	f
emit	heaps/h3d/scene/fwd/DirLight.hx	/^	override function emit(ctx) {$/;"	f
emit	heaps/h3d/scene/fwd/PointLight.hx	/^	override function emit(ctx) {$/;"	f
emit	heaps/h3d/scene/pbr/Decal.hx	/^	override function emit( ctx : RenderContext ) {$/;"	f
emit	heaps/h3d/scene/pbr/DirLight.hx	/^	override function emit(ctx:RenderContext) {$/;"	f
emit	heaps/h3d/scene/pbr/PointLight.hx	/^	override function emit(ctx:RenderContext) {$/;"	f
emit	heaps/h3d/scene/pbr/SpotLight.hx	/^	override function emit(ctx:RenderContext) {$/;"	f
emitAngle	heaps/h2d/Particles.hx	/^	public var emitAngle(default, set) : Float 	= -0.5;$/;"	v
emitAngle	heaps/h3d/parts/GpuParticles.hx	/^	public var emitAngle(default,set) : Float 	= 1.5;$/;"	v
emitCount	heaps/h3d/parts/Emitter.hx	/^	var emitCount : Float;$/;"	v
emitDelay	heaps/h2d/Particles.hx	/^	public var emitDelay(default, set) : Float	= 0;$/;"	v
emitDelay	heaps/h3d/parts/GpuParticles.hx	/^	public var emitDelay(default, set) : Float	= 0;$/;"	v
emitDirectionAsAngle	heaps/h2d/Particles.hx	/^	public var emitDirectionAsAngle(default, set) : Bool = false;$/;"	v
emitDist	heaps/h2d/Particles.hx	/^	public var emitDist(default, set) : Float	= 50.;$/;"	v
emitDist	heaps/h3d/parts/GpuParticles.hx	/^	public var emitDist(default, set) : Float	= 1.;$/;"	v
emitDistY	heaps/h2d/Particles.hx	/^	public var emitDistY(default, set) : Float	= 50.;$/;"	v
emitEvent	heaps/hxd/SceneEvents.hx	/^	function emitEvent( event : hxd.Event ) {$/;"	f
emitFromShell	heaps/h3d/parts/Data.hx	/^	public var emitFromShell : Bool;$/;"	v
emitInstance	heaps/h3d/scene/MeshBatch.hx	/^	public function emitInstance() {$/;"	f
emitLight	heaps/h3d/scene/RenderContext.hx	/^	public function emitLight( l : Light ) {$/;"	f
emitLocal	heaps/h3d/parts/Data.hx	/^	public var emitLocal : Bool;$/;"	v
emitLoop	heaps/h2d/Particles.hx	/^	public var emitLoop(default, set) : Bool 	= true;$/;"	v
emitLoop	heaps/h3d/parts/GpuParticles.hx	/^	public var emitLoop(default, set) : Bool 	= true;$/;"	v
emitMain	heaps/hxsl/HlslOut.hx	/^	function emitMain( expr : TExpr ) {$/;"	f
emitMode	heaps/h2d/Particles.hx	/^	public var emitMode(default, set):PartEmitMode = Point;$/;"	v
emitMode	heaps/h3d/parts/GpuParticles.hx	/^	public var emitMode(default, set):GpuEmitMode = Point;$/;"	v
emitOnBorder	heaps/h3d/parts/GpuParticles.hx	/^	public var emitOnBorder(default, set) : Bool = false;$/;"	v
emitPart	heaps/h3d/parts/GpuParticles.hx	/^	public function emitPart( rnd : hxd.Rand, pt : GpuPart, absPos : h3d.Matrix ) {$/;"	f
emitParticle	heaps/h3d/parts/Particles.hx	/^	function emitParticle( ?p ) {$/;"	f
emitPass	heaps/h3d/scene/RenderContext.hx	/^	public function emitPass( pass : h3d.mat.Pass, obj : h3d.scene.Object ) @:privateAccess {$/;"	f
emitRate	heaps/h3d/parts/Data.hx	/^	public var emitRate : Value;$/;"	v
emitRec	heaps/h3d/scene/Object.hx	/^	function emitRec( ctx : RenderContext ) {$/;"	f
emitStartDist	heaps/h2d/Particles.hx	/^	public var emitStartDist(default, set) : Float = 0.;$/;"	v
emitStartDist	heaps/h3d/parts/GpuParticles.hx	/^	public var emitStartDist(default, set) : Float = 0.;$/;"	v
emitSync	heaps/h2d/Particles.hx	/^	public var emitSync(default, set) : Float	= 0;$/;"	v
emitSync	heaps/h3d/parts/GpuParticles.hx	/^	public var emitSync(default, set) : Float	= 0;$/;"	v
emitTile	heaps/h2d/Drawable.hx	/^	override function emitTile( ctx : RenderContext, tile : Tile ) {$/;"	f
emitTile	heaps/h2d/Object.hx	/^	function emitTile( ctx : RenderContext, tile : h2d.Tile ) {$/;"	f
emitTrail	heaps/h3d/parts/Data.hx	/^	public var emitTrail : Bool;$/;"	v
emitTrail	heaps/h3d/parts/Particles.hx	/^	public var emitTrail : Bool;$/;"	v
emitterPos	heaps/h3d/parts/GpuParticles.hx	/^					var emitterPos = camPos.add(offset);$/;"	v
empty	heaps/h2d/SpriteBatch.hx	/^	var empty : Bool;$/;"	v
empty	heaps/h2d/Tile.hx	/^		var empty = true;$/;"	v
empty	heaps/h2d/col/Bounds.hx	/^	public inline function empty() {$/;"	f
empty	heaps/h2d/col/IBounds.hx	/^	public inline function empty() {$/;"	f
empty	heaps/h3d/col/Bounds.hx	/^	public inline function empty() {$/;"	f
empty	heaps/h3d/impl/Stage3dDriver.hx	/^	var empty : flash.utils.ByteArray;$/;"	v
emptyMat	heaps/h3d/mat/MaterialSetup.hx	/^	var emptyMat : h3d.mat.Material;$/;"	v
emptyPasses	heaps/h3d/scene/Renderer.hx	/^	var emptyPasses = new h3d.pass.PassList();$/;"	v
emptyTile	heaps/hxd/fs/Convert.hx	/^	var emptyTile : h2d.Tile;$/;"	v
enable	heaps/h2d/CheckBox.hx	/^	public var enable(default,set) : Bool = true;$/;"	v
enable	heaps/h2d/Particles.hx	/^	public var enable(default, set) : Bool = true;$/;"	v
enable	heaps/h2d/filter/Filter.hx	/^	@:isVar public var enable(get,set) = true;$/;"	v
enable	heaps/h3d/impl/Benchmark.hx	/^	public var enable(default,set) : Bool;$/;"	v
enable	heaps/h3d/parts/GpuParticles.hx	/^	public var enable = true;$/;"	v
enable	heaps/h3d/shader/DirShadow.hx	/^		@const var enable : Bool;$/;"	v
enable	heaps/h3d/shader/PointShadow.hx	/^		@const var enable : Bool;$/;"	v
enable	heaps/h3d/shader/SpotShadow.hx	/^		@const var enable : Bool;$/;"	v
enable	heaps/hxd/snd/openal/Emulator.hx	/^	public static function enable(capability : Int) {}$/;"	f
enableDraw	heaps/h3d/impl/Stage3dDriver.hx	/^	var enableDraw : Bool;$/;"	v
enableFXAA	heaps/h3d/scene/pbr/Renderer.hx	/^	var enableFXAA = true;$/;"	v
enableForward	heaps/h3d/scene/pbr/Light.hx	/^	public var enableForward : Bool = true;$/;"	v
enableInteractive	heaps/h2d/Flow.hx	/^	public var enableInteractive(default, set) : Bool;$/;"	v
enableNormalMaps	heaps/h3d/scene/World.hx	/^	public var enableNormalMaps = false;$/;"	v
enablePhysicalMouse	heaps/hxd/SceneEvents.hx	/^	public var enablePhysicalMouse = true;$/;"	v
enableRetargeting	heaps/h3d/scene/Skin.hx	/^	public var enableRetargeting : Bool = true;$/;"	v
enableRightButton	heaps/h2d/Interactive.hx	/^	public var enableRightButton : Bool = false;$/;"	v
enableRightButton	heaps/h3d/scene/Interactive.hx	/^	public var enableRightButton : Bool = false;$/;"	v
enableSky	heaps/h3d/scene/fwd/Renderer.hx	/^	public var enableSky : Bool = false;$/;"	v
enableSound	heaps/hxd/net/SocketHost.hx	/^	public var enableSound : Bool = true;$/;"	v
enableSpecular	heaps/h3d/scene/World.hx	/^	public var enableSpecular = false;$/;"	v
enableSpecular	heaps/h3d/scene/fwd/Light.hx	/^	public var enableSpecular(get, set) : Bool;$/;"	v
enableSpecular	heaps/h3d/shader/DirLight.hx	/^		@const var enableSpecular : Bool;$/;"	v
enableSpecular	heaps/h3d/shader/PointLight.hx	/^		@const var enableSpecular : Bool;$/;"	v
enableStencil	heaps/h3d/mat/PbrMaterial.hx	/^	var enableStencil : Bool;$/;"	v
enabled	heaps/h3d/impl/RendererFX.hx	/^	public var enabled : Bool;$/;"	v
enabled	heaps/h3d/pass/Shadows.hx	/^	public var enabled(default,set) : Bool = true;$/;"	v
enabled	heaps/hxd/impl/AsyncLoader.hx	/^	public var enabled = true;$/;"	v
encoding	heaps/hxd/res/BDFFont.hx	/^		var encoding : Int = -1;$/;"	v
end	heaps/h2d/RenderContext.hx	/^	public function end() {$/;"	f
end	heaps/h2d/TextInput.hx	/^		var end = cursorIndex + selectionRange.length;$/;"	v
end	heaps/h3d/Engine.hx	/^	public function end() {$/;"	f
end	heaps/h3d/anim/Animation.hx	/^			var end = endFrame();$/;"	v
end	heaps/h3d/impl/Benchmark.hx	/^	public function end() {$/;"	f
end	heaps/h3d/impl/DirectXDriver.hx	/^					var end = Std.parseInt(r.matched(3));$/;"	v
end	heaps/h3d/impl/DirectXDriver.hx	/^			var end = code.indexOf("#", bin);$/;"	v
end	heaps/h3d/impl/Driver.hx	/^	public function end() {$/;"	f
end	heaps/h3d/impl/GlDriver.hx	/^	override function end() {$/;"	f
end	heaps/h3d/impl/LogDriver.hx	/^	override function end() {$/;"	f
end	heaps/h3d/impl/ManagedBuffer.hx	/^		var end = b.position + nvert;$/;"	v
end	heaps/h3d/impl/RendererFX.hx	/^	public function end( r : h3d.scene.Renderer, step : Step ) : Void;$/;"	f
end	heaps/h3d/scene/pbr/Renderer.hx	/^	function end() {$/;"	f
end	heaps/hxd/fmt/hdr/Reader.hx	/^					var end = width * 4;$/;"	v
end	heaps/hxd/snd/Manager.hx	/^		var end = start + STREAM_BUFFER_SAMPLE_COUNT;$/;"	v
end	heaps/hxd/snd/Manager.hx	/^	public var end        : Int = 0;$/;"	v
end	heaps/hxd/snd/Mp3Data.hx	/^			var end = startEnd & ((1 << 12) - 1);$/;"	v
endFill	heaps/h2d/Graphics.hx	/^	public function endFill() {$/;"	f
endFrame	heaps/h3d/anim/Animation.hx	/^	function endFrame() {$/;"	f
endFrame	heaps/h3d/anim/BufferAnimation.hx	/^	override function endFrame() {$/;"	f
endFrame	heaps/h3d/anim/LinearAnimation.hx	/^	override function endFrame() {$/;"	f
endHandler	heaps/h2d/Video.hx	/^	function endHandler(e : js.html.Event) {$/;"	f
endPbr	heaps/h3d/scene/pbr/Renderer.hx	/^	function endPbr() {$/;"	f
endQuery	heaps/h3d/impl/Driver.hx	/^	public function endQuery( q : Query ) {$/;"	f
endQuery	heaps/h3d/impl/GlDriver.hx	/^	override function endQuery( q : Query ) {$/;"	f
endTags	heaps/hxd/fmt/tiff/Writer.hx	/^		var endTags = pos + tags.length * 12 + 4;$/;"	v
endX	heaps/h2d/Flow.hx	/^			var endX = cw - (paddingRight + borderRight);$/;"	v
endY	heaps/h2d/Flow.hx	/^			var endY : Int = ch - (paddingBottom + borderBottom);$/;"	v
ends	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var ends : Float;$/;"	v
endtype	heaps/hxd/clipper/Clipper.hx	/^	var endtype : EndType;$/;"	v
enew	heaps/hxd/res/DynamicText.hx	/^								var enew = applyText(path, e, data[i], dataRef == null ? null : dataRef[i], onMissing);$/;"	v
engine	heaps/h2d/Scene.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h2d/SpriteBatch.hx	/^		var engine = ctx.engine;$/;"	v
engine	heaps/h2d/impl/BatchDrawState.hx	/^		var engine = ctx.engine;$/;"	v
engine	heaps/h3d/Camera.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/impl/Benchmark.hx	/^	var engine : h3d.Engine;$/;"	v
engine	heaps/h3d/impl/LogDriver.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/impl/RenderContext.hx	/^	public var engine : h3d.Engine;$/;"	v
engine	heaps/h3d/impl/TextureCache.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/mat/Texture.hx	/^			var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/mat/Texture.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/pass/Copy.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/pass/CubeCopy.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/pass/ScreenFx.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/pass/ScreenFx.hx	/^	var engine(get,never) : h3d.Engine;$/;"	v
engine	heaps/h3d/prim/Cube.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/prim/Cylinder.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/prim/Disc.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/prim/Instanced.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/prim/Plane2D.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/prim/Sphere.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/scene/Interactive.hx	/^			var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/scene/Scene.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/scene/pbr/Environment.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/h3d/scene/pbr/SpotLight.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/hxd/App.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/hxd/App.hx	/^	public var engine(default,null) : h3d.Engine;$/;"	v
engine	heaps/hxd/fs/LocalFileSystem.hx	/^		var engine = h3d.Engine.getCurrent(); \/\/ hide$/;"	v
engine	heaps/hxd/res/DefaultFont.hx	/^		var engine = h3d.Engine.getCurrent();$/;"	v
engine	heaps/hxsl/CacheFile.hx	/^				var engine = h3d.Engine.getCurrent();$/;"	v
ent	heaps/hxd/fmt/pak/FileSystem.hx	/^		var ent = dict.get(path);$/;"	v
entries	heaps/hxd/res/Loader.hx	/^		var entries = fs.dir(path);$/;"	v
entry	heaps/h2d/RenderContext.hx	/^		var entry = cameraStack[cameraStackIndex++];$/;"	v
entry	heaps/h2d/RenderContext.hx	/^		var entry = targetsStack[targetsStackIndex++];$/;"	v
entry	heaps/h3d/prim/HMDModel.hx	/^		var entry = lib.resource.entry;$/;"	v
entry	heaps/hxd/fmt/hmd/Library.hx	/^		var entry = resource.entry;$/;"	v
entry	heaps/hxd/fmt/pak/Build.hx	/^			var entry = try fs.get(path) catch( e : hxd.res.NotFound ) return null;$/;"	v
entry	heaps/hxd/fs/FileConverter.hx	/^		var entry = cache.get(e.file);$/;"	v
entry	heaps/hxd/fs/FileInput.hx	/^	var entry : FileEntry;$/;"	v
entry	heaps/hxd/res/Loader.hx	/^			var entry = fs.get(path);$/;"	v
entry	heaps/hxd/res/Resource.hx	/^	public var entry(default,null) : hxd.fs.FileEntry;$/;"	v
entry	heaps/hxsl/Linker.hx	/^		var entry = new ShaderInfos("<entry>", false);$/;"	v
enumValue	heaps/hxd/Worker.hx	/^	var enumValue : Enum<T>;$/;"	v
env	heaps/h3d/scene/pbr/Environment.hx	/^		var env = new h3d.mat.Texture(source.height, source.height, [Cube, Target], hxd.Pixels.isFloat/;"	v
env	heaps/h3d/scene/pbr/Environment.hx	/^	public var env(get,null) : h3d.mat.Texture;$/;"	v
env	heaps/h3d/scene/pbr/Renderer.hx	/^	public var env : Environment;$/;"	v
env	heaps/samples/Pbr.hx	/^	var env : h3d.scene.pbr.Environment;$/;"	v
envBRDF	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var envBRDF = irrLut.get(vec2(roughness, NdV));$/;"	v
envBRDF	heaps/h3d/shader/pbr/Lighting.hx	/^					var envBRDF = irrLut.get(vec2(roughness, NdV));$/;"	v
envColor	heaps/h3d/scene/pbr/Environment.hx	/^					var envColor = gammaCorrect(min(envMap.get(l).rgb, hdrMax));$/;"	v
envMap	heaps/h3d/scene/pbr/Environment.hx	/^		@param var envMap : SamplerCube;$/;"	v
envMap	heaps/samples/Pbr.hx	/^		var envMap = new h3d.mat.Texture(512, 512, [Cube]);$/;"	v
envSpec	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var envSpec = textureLod(irrSpecular, rotatedReflecVec, roughness * irrSpecularLevels).rgb;$/;"	v
envSpec	heaps/h3d/shader/pbr/Lighting.hx	/^					var envSpec = getEnvSpecular(reflectVec, roughness);$/;"	v
envelop	heaps/h3d/anim/Skin.hx	/^	var envelop : Array<Array<Influence>>;$/;"	v
eof	heaps/hxd/impl/Air3File.hx	/^	public function eof() {$/;"	f
eoffset	heaps/hxsl/Cache.hx	/^		var eoffset = { e : TVar(voffset), p : pos, t : voffset.type };$/;"	v
ep	heaps/h2d/col/Voronoi.hx	/^			var ep = e.getStartpoint();$/;"	v
epath	heaps/h3d/impl/VarBinding.hx	/^			var epath : Expr = { expr : EConst(CIdent(path.shift())), pos : expr.pos };$/;"	v
epath	heaps/hxd/res/DynamicText.hx	/^		var epath : Expr = { expr : EConst(CIdent(path.shift())), pos : pos };$/;"	v
epath	heaps/hxd/res/FileTree.hx	/^			var epath = { expr : EConst(CString(f.relPath)), pos : pos };$/;"	v
epsi	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var epsi = highPrecision ? 0 : 1e-3;$/;"	v
epsilon	heaps/h2d/col/Voronoi.hx	/^	var epsilon : Float;$/;"	v
epsilon	heaps/h3d/shader/SAO.hx	/^			var epsilon = 0.01;$/;"	v
epsilon	heaps/h3d/shader/pbr/Light.hx	/^			var epsilon = angleFallOff - angle;$/;"	v
equal	heaps/h3d/Matrix.hx	/^	public function equal( other : Matrix ) {$/;"	f
equalWithepsilon	heaps/h2d/col/Voronoi.hx	/^	inline function equalWithepsilon(a:Float,b:Float) return abs(a-b)<epsilon;$/;"	f
equals	heaps/h2d/col/Delaunay.hx	/^	public inline function equals(e:DelaunayEdge) {$/;"	f
equals	heaps/h2d/col/IPoint.hx	/^	public inline function equals( other : IPoint ) : Bool {$/;"	f
equals	heaps/h2d/col/Point.hx	/^	public inline function equals( other : Point ) : Bool {$/;"	f
equals	heaps/h2d/impl/PointApi.hx	/^	function equals( other : Point ) : Bool;$/;"	f
equals	heaps/h3d/Vector.hx	/^	public inline function equals( v : Vector ) {$/;"	f
equals	heaps/h3d/col/IPoint.hx	/^	public inline function equals( other : IPoint ) : Bool {$/;"	f
equals	heaps/h3d/col/Point.hx	/^	public inline function equals( other : Point ) : Bool {$/;"	f
equals	heaps/hxd/clipper/Clipper.hx	/^	inline function equals(pt1 : IPoint, pt2 : IPoint) {$/;"	f
equals	heaps/hxd/earcut/Earcut.hx	/^	inline function equals(p1:EarNode, p2:EarNode) {$/;"	f
equals	heaps/hxd/poly2tri/Point.hx	/^	public inline function equals(that:Point):Bool$/;"	f
equiToCube	heaps/h3d/scene/pbr/Environment.hx	/^	public static function equiToCube( source : h3d.mat.Texture, ?threshold = 1.0, ?scale = 1.0 ) {$/;"	f
erase	heaps/hxd/impl/BitsBuilder.hx	/^				var erase = ~(mask << offset);$/;"	v
err	heaps/h3d/impl/GlDriver.hx	/^			var err = gl.getError();$/;"	v
err	heaps/h3d/impl/GlDriver.hx	/^		var err = gl.getError();$/;"	v
err	heaps/hxd/System.hl.hx	/^		var err = try Std.string(e) catch( _ : Dynamic ) "????";$/;"	v
err	heaps/hxd/snd/openal/Driver.hx	/^		var err = AL.getError();$/;"	v
error	heaps/h3d/impl/GlDriver.hx	/^		var error = gl.getError();$/;"	v
error	heaps/hxd/fmt/fbx/Parser.hx	/^	function error( msg : String ) : Dynamic {$/;"	f
error	heaps/hxd/net/SocketHost.hx	/^	override function error(msg:String) {$/;"	f
error	heaps/hxsl/CacheFileBuilder.hx	/^			var error = p.stderr.readAll().toString();$/;"	v
error	heaps/hxsl/Checker.hx	/^	function error( msg : String, pos : Position ) : Dynamic {$/;"	f
error	heaps/hxsl/Linker.hx	/^	function error( msg : String, p : Position ) : Dynamic {$/;"	f
error	heaps/hxsl/MacroParser.hx	/^	function error( msg : String, pos : Position ) : Dynamic {$/;"	f
error	heaps/tools/hxsl/Main.hx	/^	var error : js.html.Element;$/;"	v
errorColor	heaps/h2d/Console.hx	/^	var errorColor = 0xC00000;$/;"	v
errorHandler	heaps/h2d/Video.hx	/^	function errorHandler(e : js.html.Event) {$/;"	f
errored	heaps/samples/Generator.hx	/^		var errored = [];$/;"	v
errors	heaps/h2d/domkit/Style.hx	/^	var errors : Array<String>;$/;"	v
errorsText	heaps/h2d/domkit/Style.hx	/^	var errorsText : h2d.Text;$/;"	v
esize	heaps/h2d/HtmlText.hx	/^				var esize = g.width + g.getKerningOffset(prevChar);$/;"	v
esize	heaps/h2d/Text.hx	/^			var esize = e.width + e.getKerningOffset(prevChar);$/;"	v
esize	heaps/h2d/Text.hx	/^			var esize = e.width + offs;$/;"	v
estimateWait	heaps/h3d/impl/Benchmark.hx	/^	public var estimateWait = false;$/;"	v
et	heaps/h2d/Console.hx	/^		var et = haxe.macro.Context.typeExpr(callb);$/;"	v
et	heaps/h3d/anim/Animation.hx	/^			var et = speed == 0 ? 0 : (end - frame) \/ (speed * sampling);$/;"	v
et	heaps/h3d/impl/Benchmark.hx	/^			var et = hxd.Math.abs(time - s.time);$/;"	v
et	heaps/h3d/parts/Emitter.hx	/^		var et = (time - old) * s.globalLife;$/;"	v
et	heaps/hxsl/Checker.hx	/^				var et = typeExpr(e, ew);$/;"	v
et	heaps/hxsl/Checker.hx	/^			var et = typeExpr(e, Value);$/;"	v
ev	heaps/h3d/anim/Animation.hx	/^			var ev = events[i];$/;"	v
ev	heaps/hxd/Window.flash.hx	/^			var ev = new Event(ETextInput, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(EKeyDown, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(EKeyUp, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(EMove, e.localX, e.localY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(EPush, e.localX, e.localY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(ERelease, e.localX, e.localY);$/;"	v
ev	heaps/hxd/Window.flash.hx	/^		var ev = new Event(EWheel, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.hl.hx	/^				var ev = new Event(EKeyUp);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(EKeyDown, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(EKeyUp, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(EPush, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(ERelease, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(EReleaseOutside, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(ETextInput, mouseX, mouseY);$/;"	v
ev	heaps/hxd/Window.js.hx	/^		var ev = new Event(EWheel, mouseX, mouseY);$/;"	v
eval	heaps/h3d/parts/Data.hx	/^	public static inline function eval( v : Value, time : Float, r : Randomized, p : Particle ) : F/;"	f
eval	heaps/h3d/parts/Emitter.hx	/^	inline function eval(v) {$/;"	f
eval	heaps/h3d/parts/Particle.hx	/^	public inline function eval( v : Data.Value, time : Float ) {$/;"	f
eval	heaps/hxsl/Eval.hx	/^	public function eval( s : ShaderData ) : ShaderData {$/;"	f
eval	heaps/hxsl/SharedShader.hx	/^		var eval = new hxsl.Eval();$/;"	v
evalCall	heaps/hxsl/Eval.hx	/^	function evalCall( g : TGlobal, args : Array<TExpr>, oldArgs : Array<TExpr>, pos : Position ) {$/;"	f
evalConst	heaps/hxsl/Ast.hx	/^	public static function evalConst( e : TExpr ) : Dynamic {$/;"	f
evalExpr	heaps/hxsl/Eval.hx	/^	function evalExpr( e : TExpr, isVal = true ) : TExpr {$/;"	f
evaluateDirLight	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluateDirLight( index : Int ) : Vec3 {$/;"	f
evaluateDirShadow	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluateDirShadow( index : Int ) : Float {$/;"	f
evaluateLighting	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluateLighting() : Vec3 {$/;"	f
evaluatePointLight	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluatePointLight( index : Int ) : Vec3 {$/;"	f
evaluatePointShadow	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluatePointShadow( index : Int ) : Float {$/;"	f
evaluateSpotLight	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluateSpotLight( index : Int ) : Vec3 {$/;"	f
evaluateSpotShadow	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function evaluateSpotShadow( index : Int ) : Float {$/;"	f
event	heaps/hxd/Window.flash.hx	/^	public function event( e : hxd.Event ) : Void {$/;"	f
event	heaps/hxd/Window.hl.hx	/^	public function event( e : hxd.Event ) : Void {$/;"	f
event	heaps/hxd/Window.hx	/^	public function event( e : hxd.Event ) : Void {$/;"	f
event	heaps/hxd/Window.js.hx	/^	public function event( e : hxd.Event ) : Void {$/;"	f
event	heaps/samples/Flows.hx	/^	var event = new hxd.WaitEvent();$/;"	v
event	heaps/samples/Network.hx	/^	public var event : hxd.WaitEvent;$/;"	v
eventListeners	heaps/h2d/Scene.hx	/^	var eventListeners : Array< hxd.Event -> Void >;$/;"	v
eventListeners	heaps/h3d/scene/Scene.hx	/^	var eventListeners : Array<hxd.Event -> Void>;$/;"	v
eventRecycle	heaps/hxd/System.hl.hx	/^		var eventRecycle = [];$/;"	v
eventTargets	heaps/hxd/Window.flash.hx	/^	var eventTargets : List<Event -> Void>;$/;"	v
eventTargets	heaps/hxd/Window.hl.hx	/^	var eventTargets : List<Event -> Void>;$/;"	v
eventTargets	heaps/hxd/Window.hx	/^	var eventTargets : List<Event -> Void>;$/;"	v
eventTargets	heaps/hxd/Window.js.hx	/^	var eventTargets : List<Event -> Void>;$/;"	v
eventToLocal	heaps/h2d/Interactive.hx	/^	function eventToLocal( e : hxd.Event ) {$/;"	f
events	heaps/h2d/Scene.hx	/^	var events : hxd.SceneEvents;$/;"	v
events	heaps/h3d/anim/Animation.hx	/^	public var events(default, null) : Array<Array<String>>;$/;"	v
events	heaps/h3d/scene/Scene.hx	/^	var events : hxd.SceneEvents;$/;"	v
events	heaps/hxd/fmt/hmd/Data.hx	/^	public var events : Null<Array<AnimationEvent>>;$/;"	v
events	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var events : Dynamic;$/;"	v
ew	heaps/hxsl/Checker.hx	/^				var ew = switch( e.expr ) {$/;"	v
ex	heaps/h2d/Scene.hx	/^		var ex = event.relX;$/;"	v
exc	heaps/hxd/System.hl.hx	/^		var exc = Std.downcast(e, haxe.Exception);$/;"	v
except	heaps/hxd/fmt/fbx/Parser.hx	/^	function except( except : Token ) {$/;"	f
excludePath	heaps/hxd/fmt/pak/Build.hx	/^	public var excludePath : Array<String> = [];$/;"	v
excludedExt	heaps/hxd/fmt/pak/Build.hx	/^	public var excludedExt : Array<String> = [];$/;"	v
exePath	heaps/hxd/fs/LocalFileSystem.hx	/^		var exePath = Sys.executablePath().split("\\\\").join("\/").split("\/");$/;"	v
exePath	heaps/hxd/fs/LocalFileSystem.hx	/^		var exePath = null;$/;"	v
exePath	heaps/hxd/fs/LocalFileSystem.hx	/^		var exePath = pr == null ? null : pr.split("\\\\").join("\/").split("\/");$/;"	v
execTime	heaps/h2d/col/Voronoi.hx	/^	public var execTime : Float;$/;"	v
execute	heaps/hxd/clipper/Clipper.hx	/^	public function execute(clipType:ClipType, ?subjFillType, ?clipFillType)$/;"	f
execute	heaps/hxd/clipper/Clipper.hx	/^    public function execute(delta : Float) {$/;"	f
exists	heaps/hxd/File.hx	/^	public static function exists( path : String ) : Bool {$/;"	f
exists	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function exists( name : String ) {$/;"	f
exists	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function exists( path : String ) {$/;"	f
exists	heaps/hxd/fs/BytesFileSystem.hx	/^	override function exists( name : String ) : Bool return false;$/;"	f
exists	heaps/hxd/fs/BytesFileSystem.hx	/^	public function exists( path : String ) {$/;"	f
exists	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function exists( name : String ) {$/;"	f
exists	heaps/hxd/fs/EmbedFileSystem.hx	/^	public function exists( path : String ) {$/;"	f
exists	heaps/hxd/fs/FileEntry.hx	/^	public function exists( name : String ) : Bool return false;$/;"	f
exists	heaps/hxd/fs/FileSystem.hx	/^	public function exists( path : String ) : Bool;$/;"	f
exists	heaps/hxd/fs/LocalFileSystem.hx	/^	override function exists( name : String ) {$/;"	f
exists	heaps/hxd/fs/LocalFileSystem.hx	/^	public function exists( path : String ) {$/;"	f
exists	heaps/hxd/fs/LocalFileSystem.hx	/^	public function exists(path:String) {$/;"	f
exists	heaps/hxd/fs/MultiFileSystem.hx	/^	override function exists( name : String ) : Bool {$/;"	f
exists	heaps/hxd/fs/MultiFileSystem.hx	/^	public function exists( path : String ) : Bool {$/;"	f
exists	heaps/hxd/res/Loader.hx	/^	public function exists( path : String ) : Bool {$/;"	f
exit	heaps/hxd/System.flash.hx	/^	public static function exit() : Void {$/;"	f
exit	heaps/hxd/System.hl.hx	/^	public static function exit() : Void {$/;"	f
exit	heaps/hxd/System.hx	/^	public static function exit() : Void {$/;"	f
exit	heaps/hxd/System.js.hx	/^	public static function exit() : Void {$/;"	f
exp	heaps/hxd/Math.hx	/^		var exp = pow(10,digits);$/;"	v
exp	heaps/hxd/fmt/hdr/Reader.hx	/^			var exp = Std.parseFloat(exp);$/;"	v
exp	heaps/hxd/fmt/hdr/Reader.hx	/^		var exp = keys.get("EXPOSURE");$/;"	v
expandStream	heaps/h3d/impl/GlDriver.hx	/^	function expandStream(needed:Int) {$/;"	f
expectedBytesPerLine	heaps/hxd/res/BDFFont.hx	/^		var expectedBytesPerLine : Int = 0;$/;"	v
expectedDist	heaps/h3d/scene/CameraController.hx	/^			var expectedDist = targetDistance;$/;"	v
expectedLines	heaps/hxd/res/BDFFont.hx	/^		var expectedLines : Int = 0;$/;"	v
exposure	heaps/h3d/scene/pbr/Renderer.hx	/^	public var exposure(get,set) : Float;$/;"	v
exposure	heaps/h3d/scene/pbr/Renderer.hx	/^	var exposure : Float;$/;"	v
exposure	heaps/h3d/shader/pbr/ToneMapping.hx	/^	public var exposure(default,set) : Float;$/;"	v
exposure	heaps/hxd/fmt/hdr/Reader.hx	/^		var exposure = 1.0;$/;"	v
exposureExp	heaps/h3d/shader/pbr/ToneMapping.hx	/^		@param var exposureExp : Float;$/;"	v
expr	heaps/h3d/impl/VarBinding.hx	/^	public var expr : Expr;$/;"	v
expr	heaps/hxd/impl/BitsBuilder.hx	/^				var expr = switch( t ) {$/;"	v
expr	heaps/hxd/res/FileTree.hx	/^			var expr = { expr : EConst(CIdent(t[0])), pos : pos };$/;"	v
expr	heaps/hxsl/AgalOut.hx	/^	function expr( e : TExpr ) : Reg {$/;"	f
expr	heaps/hxsl/Ast.hx	/^	var expr : Expr;$/;"	v
expr	heaps/hxsl/Ast.hx	/^	var expr : Null<Expr>;$/;"	v
expr	heaps/hxsl/Ast.hx	/^	var expr : TExpr;$/;"	v
expr	heaps/hxsl/HlslOut.hx	/^			var expr = switch( args[0].e ) {$/;"	v
expr	heaps/hxsl/Linker.hx	/^			var expr = { e : TBlock(exprs), t : TVoid, p : exprs.length == 0 ? null : exprs[0].p };$/;"	v
expr	heaps/samples/Generator.hx	/^					var expr = new hscript.Parser().parseString(script);$/;"	v
expr	heaps/tools/hxsl/Main.hx	/^			var expr = parser.parseString(code);$/;"	v
exprIds	heaps/hxsl/GlslOut.hx	/^	var exprIds = 0;$/;"	v
exprIds	heaps/hxsl/HlslOut.hx	/^	var exprIds = 0;$/;"	v
exprString	heaps/hxsl/Printer.hx	/^	public function exprString( e : TExpr ) {$/;"	f
exprValues	heaps/hxsl/GlslOut.hx	/^	var exprValues : Array<String>;$/;"	v
exprValues	heaps/hxsl/HlslOut.hx	/^	var exprValues : Array<String>;$/;"	v
exprs	heaps/hxsl/Cache.hx	/^		var exprs = [];$/;"	v
exprs	heaps/hxsl/Linker.hx	/^			var exprs = [];$/;"	v
exprs	heaps/hxsl/Macros.hx	/^		var exprs = [];$/;"	v
exps	heaps/hxd/fmt/hdr/Reader.hx	/^		var exps = [for( e in 0...256 ) Math.pow(Math.pow(2,e-128) \/ (256 * exposure), gammaCorrect)]/;"	v
ext	heaps/hxd/fmt/fbx/HMDOut.hx	/^						var ext = path.split(".").pop();$/;"	v
ext	heaps/hxd/fmt/pak/Build.hx	/^			var ext = path.split("\/").pop().split(".").pop().toLowerCase();$/;"	v
ext	heaps/hxd/fs/Convert.hx	/^		var ext = srcPath.split(".").pop();$/;"	v
ext	heaps/hxd/fs/FileConverter.hx	/^		var ext = e.extension;$/;"	v
ext	heaps/hxd/fs/FileConverter.hx	/^		var ext = name.split(".").pop().toLowerCase();$/;"	v
ext	heaps/hxd/res/FileTree.hx	/^				var ext = extParts.join(".").toLowerCase();$/;"	v
extParts	heaps/hxd/res/FileTree.hx	/^				var extParts = f.split(".");$/;"	v
extension	heaps/h3d/impl/GlDriver.hx	/^			var extension:js.html.webgl.extension.ANGLEInstancedArrays =  cast gl.getExtension("ANGLE_ins/;"	v
extension	heaps/hxd/fs/FileEntry.hx	/^	public var extension(get, never) : String;$/;"	v
extensions	heaps/hxd/File.hx	/^				var extensions = [];$/;"	v
extensions	heaps/hxd/res/Config.hx	/^	public static var extensions = [$/;"	v
extensions	heaps/hxd/res/FileTree.hx	/^	var extensions : Map<String,{ t : ComplexType, e : Expr }>;$/;"	v
extra	heaps/h3d/scene/World.hx	/^				var extra = model.stride - 8;$/;"	v
extra	heaps/hxd/fs/EmbedFileSystem.hx	/^		var extra = "";$/;"	v
extraChannels	heaps/hxd/snd/Data.hx	/^		var extraChannels  = channels - commonChannels;$/;"	v
extraConfigs	heaps/hxd/fs/FileConverter.hx	/^	static var extraConfigs:Array<Dynamic> = [];$/;"	v
extraDepthInst	heaps/h3d/impl/DirectXDriver.hx	/^	var extraDepthInst : h3d.mat.DepthBuffer;$/;"	v
extraShaders	heaps/h3d/scene/RenderContext.hx	/^	public var extraShaders : hxsl.ShaderList;$/;"	v
extract	heaps/hxsl/Cache.hx	/^			var extract = switch( v.type ) {$/;"	v
extractInt	heaps/hxd/fmt/bfnt/FontParser.hx	/^			inline function extractInt() : Int {$/;"	f
extractInt	heaps/hxd/res/BDFFont.hx	/^	inline function extractInt( s : String ) : Int {$/;"	f
extractRec	heaps/hxd/fmt/pak/Build.hx	/^				function extractRec(f:hxd.fmt.pak.Data.File, dir) {$/;"	f
extractStr	heaps/hxd/res/BDFFont.hx	/^	inline function extractStr( p : Array<String> ) : String {$/;"	f
extractVar	heaps/hxsl/Cache.hx	/^		function extractVar( v : AllocParam ) {$/;"	f
ey	heaps/h2d/Scene.hx	/^		var ey = event.relY;$/;"	v
f	heaps/h2d/Console.hx	/^				var f = Std.parseFloat(v);$/;"	v
f	heaps/h2d/Font.hx	/^		var f = new Font(name, size);$/;"	v
f	heaps/h2d/HtmlText.hx	/^		var f = defaultLoadFont(name);$/;"	v
f	heaps/h2d/Scene.hx	/^		var f = events.getFocus();$/;"	v
f	heaps/h2d/domkit/BaseComponents.hx	/^				var f = new h2d.filter.ColorMatrix();$/;"	v
f	heaps/h2d/domkit/BaseComponents.hx	/^				var f = new h2d.filter.Outline(s, c);$/;"	v
f	heaps/h2d/domkit/BaseComponents.hx	/^		var f = new h3d.Vector();$/;"	v
f	heaps/h3d/Engine.hx	/^			var f = delta \/ .5;$/;"	v
f	heaps/h3d/anim/Animation.hx	/^		var f = Std.int(frame);$/;"	v
f	heaps/h3d/anim/BufferAnimation.hx	/^		var f = new BufferObject(objName, offset);$/;"	v
f	heaps/h3d/anim/LinearAnimation.hx	/^		var f = new LinearObject(objName);$/;"	v
f	heaps/h3d/col/Frustum.hx	/^		var f = new Frustum();$/;"	v
f	heaps/h3d/impl/ManagedBuffer.hx	/^		var f = freeList;$/;"	v
f	heaps/h3d/impl/MemoryManager.hx	/^				var f = b.freeList;$/;"	v
f	heaps/h3d/impl/Stage3dDriver.hx	/^		var f = @:privateAccess b.freeList;$/;"	v
f	heaps/h3d/impl/VarBinding.hx	/^				var f = path.shift();$/;"	v
f	heaps/h3d/parts/Emitter.hx	/^			var f = p.eval(state.frame, p.time) % 1;$/;"	v
f	heaps/h3d/parts/Particles.hx	/^				var f = frames[p.frame];$/;"	v
f	heaps/h3d/scene/Renderer.hx	/^			var f = Std.downcast(f, cl);$/;"	v
f	heaps/h3d/shader/SAO.hx	/^			var f = max(radius2 - vv, 0.0) \/ radius2;$/;"	v
f	heaps/hxd/File.hx	/^			var f = new flash.net.FileReference();$/;"	v
f	heaps/hxd/File.hx	/^		var f : flash.filesystem.File = lastBrowseDir;$/;"	v
f	heaps/hxd/File.hx	/^		var f = flash.filesystem.File.applicationDirectory;$/;"	v
f	heaps/hxd/File.hx	/^		var f = getRelPath(path);$/;"	v
f	heaps/hxd/File.hx	/^		var f = new flash.net.URLLoader();$/;"	v
f	heaps/hxd/System.flash.hx	/^				var f : Dynamic = Type.createInstance(flash.Lib.current.loaderInfo.applicationDomain.getDefi/;"	v
f	heaps/hxd/System.hl.hx	/^		var f = new hl.UI.WinLog("Uncaught Exception", 500, 400);$/;"	v
f	heaps/hxd/WaitEvent.hx	/^			var f = updateList[i];$/;"	v
f	heaps/hxd/Window.hl.hx	/^		var f = [];$/;"	v
f	heaps/hxd/clipper/Clipper.hx	/^		var f = 1 \/ Math.distance(dx, dy);$/;"	v
f	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var f = new h3d.anim.LinearAnimation.LinearFrame();$/;"	v
f	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var f = o.frames[fid];$/;"	v
f	heaps/hxd/fmt/fbx/Parser.hx	/^		var f : Float = bytes.getFloat(pos);$/;"	v
f	heaps/hxd/fmt/hdr/Reader.hx	/^		var f = new haxe.io.BytesInput(bytes);$/;"	v
f	heaps/hxd/fmt/hmd/Library.hx	/^					var f = new h3d.anim.LinearAnimation.LinearFrame();$/;"	v
f	heaps/hxd/fmt/hmd/Library.hx	/^			var f = format[i];$/;"	v
f	heaps/hxd/fmt/pak/Build.hx	/^			var f = args.shift();$/;"	v
f	heaps/hxd/fmt/pak/Build.hx	/^		var f = new File();$/;"	v
f	heaps/hxd/fmt/pak/Build.hx	/^		var f = sys.io.File.write(outFile);$/;"	v
f	heaps/hxd/fmt/pak/FileSystem.hx	/^		var f = dict.get(path);$/;"	v
f	heaps/hxd/fmt/pak/FileSystem.hx	/^		var f = files[pakFile];$/;"	v
f	heaps/hxd/fmt/pak/FileSystem.hx	/^		var f = new Data.File();$/;"	v
f	heaps/hxd/fmt/pak/Loader.hx	/^			var f = try sys.io.File.read(name) catch( e : Dynamic ) {$/;"	v
f	heaps/hxd/fmt/pak/Reader.hx	/^		var f = new File();$/;"	v
f	heaps/hxd/fmt/tiff/Reader.hx	/^	var f : FileInput;$/;"	v
f	heaps/hxd/fmt/tiff/Writer.hx	/^	var f : haxe.io.Output;$/;"	v
f	heaps/hxd/fs/Convert.hx	/^			var f = sys.io.File.read(srcPath);$/;"	v
f	heaps/hxd/fs/Convert.hx	/^		var f : Dynamic = Reflect.field(params, name);$/;"	v
f	heaps/hxd/fs/EmbedFileSystem.hx	/^		var f = new hxd.res.FileTree(basePath);$/;"	v
f	heaps/hxd/fs/EmbedFileSystem.hx	/^		var f = open(path);$/;"	v
f	heaps/hxd/fs/LocalFileSystem.hx	/^		var f = cast(f, LocalEntry);$/;"	v
f	heaps/hxd/fs/LocalFileSystem.hx	/^		var f = open(path);$/;"	v
f	heaps/hxd/fs/LocalFileSystem.hx	/^		var f = sys.FileSystem.fullPath(baseDir + path);$/;"	v
f	heaps/hxd/fs/LocalFileSystem.hx	/^		var f = sys.io.File.read(file);$/;"	v
f	heaps/hxd/fs/MultiFileSystem.hx	/^		var f = cache.get(path);$/;"	v
f	heaps/hxd/fs/MultiFileSystem.hx	/^		var f = new MultiFileEntry(this,el);$/;"	v
f	heaps/hxd/impl/Air3File.hx	/^		var f = getRelPath(path);$/;"	v
f	heaps/hxd/impl/CacheAllocator.hx	/^		var f = b.flags;$/;"	v
f	heaps/hxd/net/Socket.hx	/^	inline function f() if( autoFlush ) s.flush();$/;"	f
f	heaps/hxd/res/FileTree.hx	/^			var f = buildDir(d);$/;"	v
f	heaps/hxd/res/FileTree.hx	/^			var f = try fs.get(file.relPath) catch( e : hxd.res.NotFound ) continue; \/\/ convert and fil/;"	v
f	heaps/hxd/res/FontBuilder.hx	/^		var f = FONTS.get(key);$/;"	v
f	heaps/hxd/res/Gradients.hx	/^		var f : Float; var p : Float; var q : Float; var t : Float;$/;"	v
f	heaps/hxd/res/Image.hx	/^		var f = entry.open();$/;"	v
f	heaps/hxd/snd/Channel.hx	/^			var f = currentFade;$/;"	v
f	heaps/hxd/snd/ChannelBase.hx	/^			var f = currentFade;$/;"	v
f	heaps/hxd/snd/openal/Emulator.hx	/^				var f = data.getFloat(i << 2);$/;"	v
f	heaps/hxsl/Cache.hx	/^			var f : TFunction = {$/;"	v
f	heaps/hxsl/Cache.hx	/^		var f : TFunction = {$/;"	v
f	heaps/hxsl/CacheFile.hx	/^		var f = new haxe.io.BytesInput(sys.io.File.getBytes(file));$/;"	v
f	heaps/hxsl/CacheFile.hx	/^		var f = new haxe.io.BytesInput(sys.io.File.getBytes(sourceFile));$/;"	v
f	heaps/hxsl/CacheFileBuilder.hx	/^			var f = args.shift();$/;"	v
f	heaps/hxsl/Checker.hx	/^							var f = null;$/;"	v
f	heaps/hxsl/Checker.hx	/^			var f : TFunction = {$/;"	v
f	heaps/hxsl/Eval.hx	/^				var f = funMap.get(v);$/;"	v
f	heaps/hxsl/GlslOut.hx	/^		var f = s.funs[0];$/;"	v
f	heaps/hxsl/HlslOut.hx	/^		var f = s.funs[0];$/;"	v
f	heaps/hxsl/Macros.hx	/^				var f : Field = {$/;"	v
f	heaps/samples/HtmlText.hx	/^			var f = createText(flow, "short text", Align.Right);$/;"	v
f	heaps/samples/SampleApp.hx	/^		var f = new h2d.Flow(fui);$/;"	v
f	heaps/samples/Sound.hx	/^			var f = new h2d.Flow(fui);$/;"	v
f	heaps/samples/Text.hx	/^			var f = createText(flow, "short text", Align.Right);$/;"	v
f0	heaps/h3d/anim/Animation.hx	/^			var f0 = Std.int(frame);$/;"	v
f0	heaps/h3d/shader/NoiseLib.hx	/^  var f0 = fract(uv);$/;"	v
f1	heaps/h2d/Object.hx	/^			var f1 = ctx.baseShader.filterMatrixA;$/;"	v
f1	heaps/h2d/RenderContext.hx	/^			var f1 = baseShader.filterMatrixA;$/;"	v
f1	heaps/h2d/Scene.hx	/^			var f1 = ctx.baseShader.filterMatrixA;$/;"	v
f1	heaps/h3d/anim/Animation.hx	/^			var f1 = Std.int(frame + dt * speed * sampling);$/;"	v
f1	heaps/h3d/anim/LinearAnimation.hx	/^			var f1 = o.frames[frame1], f2 = o.frames[frame2];$/;"	v
f1	heaps/samples/HtmlText.hx	/^			var f1 = createFlow(flow);$/;"	v
f1	heaps/samples/Text.hx	/^			var f1 = createFlow(flow);$/;"	v
f2	heaps/h2d/Object.hx	/^			var f2 = ctx.baseShader.filterMatrixB;$/;"	v
f2	heaps/h2d/RenderContext.hx	/^			var f2 = baseShader.filterMatrixB;$/;"	v
f2	heaps/h2d/Scene.hx	/^			var f2 = ctx.baseShader.filterMatrixB;$/;"	v
f2	heaps/hxd/fmt/fbx/Filter.hx	/^		var f2 = filterRec(f, ignoreList, 0);$/;"	v
f2	heaps/hxd/fmt/fbx/Filter.hx	/^		var f2 = {$/;"	v
f2	heaps/hxd/fmt/pak/Build.hx	/^				var f2 = null;$/;"	v
f2	heaps/hxsl/Eval.hx	/^			var f2 : TFunction = {$/;"	v
f2	heaps/hxsl/Macros.hx	/^				var f2 : Field = {$/;"	v
f2	heaps/samples/HtmlText.hx	/^			var f2 = createFlow(flow);$/;"	v
f2	heaps/samples/Text.hx	/^			var f2 = createFlow(flow);$/;"	v
f2b	heaps/hxd/Math.hx	/^	public static inline function f2b( v:Float ) : Int {$/;"	f
f32	heaps/hxd/snd/webaudio/Driver.hx	/^				var f32 = new hxd.impl.TypedArray.Float32Array(data.getData());$/;"	v
fa	heaps/h2d/RenderContext.hx	/^			var fa = baseShader.filterMatrixA;$/;"	v
fa	heaps/h3d/scene/Trail.hx	/^			var fa = smoothness * d01 \/ (d01 + d12);$/;"	v
fabs	heaps/h2d/col/Delaunay.hx	/^	static inline function fabs(a:Float) {$/;"	f
face	heaps/h3d/impl/GlDriver.hx	/^		var face = cubic ? CUBE_FACES[side] : GL.TEXTURE_2D;$/;"	v
face	heaps/h3d/impl/GlDriver.hx	/^		var face = cubic ? CUBE_FACES[side] : t.flags.has(IsArray) ? GL.TEXTURE_2D_ARRAY : GL.TEXTURE_/;"	v
faceColors	heaps/samples/CubeTexture.hx	/^		var faceColors = [0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0x00FFFF, 0xFF00FF];$/;"	v
faceCount	heaps/h3d/pass/Blur.hx	/^		var faceCount = isCube ? 6 : 1;$/;"	v
faceMask	heaps/h3d/pass/PointShadowMap.hx	/^	public var faceMask(default, null) : haxe.EnumFlags<CubeFaceFlag>;$/;"	v
faceMatrix	heaps/h3d/scene/pbr/Environment.hx	/^		@param var faceMatrix : Mat3;$/;"	v
factor	heaps/h3d/shader/PointLight.hx	/^			var factor = 1 \/ vec3(dist, dist2, dist * dist2).dot(params);$/;"	v
fadeDistance	heaps/hxd/snd/effect/Spatialization.hx	/^	public var fadeDistance : Null<Float>;$/;"	v
fadeEnd	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var fadeEnd : Float;$/;"	v
fadeFactor	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var fadeFactor : Float;$/;"	v
fadeIn	heaps/h2d/Particles.hx	/^	public var fadeIn : Float					= 0.2;$/;"	v
fadeIn	heaps/h3d/parts/GpuParticles.hx	/^	public var fadeIn : Float					= 0.2;$/;"	v
fadeIn	heaps/h3d/shader/GpuParticle.hx	/^		@param var fadeIn : Float;$/;"	v
fadeOut	heaps/h2d/Particles.hx	/^	public var fadeOut : Float					= 0.8;$/;"	v
fadeOut	heaps/h3d/parts/GpuParticles.hx	/^	public var fadeOut : Float					= 0.8;$/;"	v
fadeOut	heaps/h3d/shader/GpuParticle.hx	/^		@param var fadeOut : Float;$/;"	v
fadePower	heaps/h2d/Particles.hx	/^	public var fadePower : Float				= 1;$/;"	v
fadePower	heaps/h3d/parts/GpuParticles.hx	/^	public var fadePower : Float				= 1;$/;"	v
fadePower	heaps/h3d/shader/GpuParticle.hx	/^		@param var fadePower : Float;$/;"	v
fadePower	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var fadePower : Float;$/;"	v
fadeStart	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var fadeStart : Float;$/;"	v
fadeTo	heaps/hxd/snd/ChannelBase.hx	/^	public function fadeTo( volume : Float, ?time = 1., ?onEnd ) {$/;"	f
fading	heaps/h2d/Anim.hx	/^	public var fading : Bool = false;$/;"	v
fail	heaps/h3d/anim/Skin.hx	/^			var fail = false;$/;"	v
fake	heaps/h2d/Dropdown.hx	/^	var fake : Fake;$/;"	v
fallOff	heaps/h3d/scene/pbr/SpotLight.hx	/^	public var fallOff : Float;$/;"	v
fallOff	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var fallOff = fallOffInfo.x;$/;"	v
fallOff	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var fallOff = lightInfos[i+3].g;$/;"	v
fallOff	heaps/h3d/shader/pbr/Light.hx	/^			var fallOff = fallOffInfo.x;$/;"	v
fallOff	heaps/h3d/shader/pbr/Light.hx	/^		@param var fallOff : Float;$/;"	v
fallOffInfo	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var fallOffInfo = spotLightIntensity(delta, lightDir, range, invRange4, fallOff, angle);$/;"	v
fallOffInfo	heaps/h3d/shader/pbr/Light.hx	/^			var fallOffInfo =  spotLightIntensity(delta, spotDir, range, invLightRange4, fallOff, angle);$/;"	v
fallOffInfoAngle	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var fallOffInfoAngle = fallOffInfo.y;$/;"	v
fallOffInfoAngle	heaps/h3d/shader/pbr/Light.hx	/^			var fallOffInfoAngle = fallOffInfo.y;$/;"	v
fallback	heaps/hxd/fmt/bfnt/FontParser.hx	/^		var fallback = glyphs.get(0xFFFD); \/\/ <?>$/;"	v
fallback	heaps/hxd/res/BDFFont.hx	/^		var fallback = font.glyphs.get( 0xFFFD ); \/\/ <?>$/;"	v
falloff	heaps/h3d/shader/pbr/Light.hx	/^			var falloff = saturate(1 - dist*dist * invRange4);$/;"	v
fastGet	heaps/hxsl/Globals.hx	/^	public inline function fastGet( id : Int ) : Dynamic {$/;"	f
fastSet	heaps/hxsl/Globals.hx	/^	public inline function fastSet( id : Int, v : Dynamic ) {$/;"	f
fastTriangulate	heaps/h2d/col/Polygon.hx	/^	public function fastTriangulate() {$/;"	f
fb	heaps/h2d/RenderContext.hx	/^			var fb = baseShader.filterMatrixB;$/;"	v
fbbHeight	heaps/hxd/res/BDFFont.hx	/^	var fbbHeight : Int = -1;$/;"	v
fbuf	heaps/hxd/snd/NativeChannel.hx	/^	var fbuf : haxe.io.Bytes;$/;"	v
fbx	heaps/hxd/fs/Convert.hx	/^		var fbx = try hxd.fmt.fbx.Parser.parse(srcBytes) catch( e : Dynamic ) throw Std.string(e) + " /;"	v
fbxVersion	heaps/hxd/fmt/fbx/Parser.hx	/^	var fbxVersion:Int;$/;"	v
fbytes	heaps/hxd/Pixels.hx	/^			var fbytes = this.bytes;$/;"	v
fc	heaps/h2d/HtmlText.hx	/^					var fc = font.getChar(cc);$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^							var fc = glyphs.get(bytes.readInt32());$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^							var fc = new h2d.Font.FontChar(t, bytes.readInt16());$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var fc = glyphs.get(second);$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var fc = new h2d.Font.FontChar(t, xadvance);$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var fc = new h2d.Font.FontChar(t, Std.parseInt(c.att.width));$/;"	v
fc	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var fc = new h2d.Font.FontChar(t, Std.parseInt(c.att.xadvance));$/;"	v
fc	heaps/hxd/res/BDFFont.hx	/^			var fc = new h2d.Font.FontChar( t, d.stride );$/;"	v
fctGenerationScreen	heaps/samples/Flows.hx	/^	var fctGenerationScreen : Array<Void -> Void> = []; \/\/ list of functions generating screen$/;"	v
fdata	heaps/h3d/impl/Stage3dDriver.hx	/^		var fdata = cachedShader.fragment.getData();$/;"	v
feature_animations	heaps/hxd/fmt/kframes/Data.hx	/^	var feature_animations : Array<KFAnimation>;$/;"	v
feature_id	heaps/hxd/fmt/kframes/Data.hx	/^	var feature_id : Int;$/;"	v
features	heaps/h3d/impl/GlDriver.hx	/^	var features : Map<Feature,Bool> = new Map();$/;"	v
features	heaps/hxd/fmt/kframes/Data.hx	/^	var features : Array<KFFeature>;$/;"	v
fetch	heaps/hxd/fs/FileInput.hx	/^	public function fetch( dataSize:Int = 256 ) {$/;"	f
fetchBytes	heaps/hxd/fs/FileEntry.hx	/^	public function fetchBytes( pos, len ) : haxe.io.Bytes {$/;"	f
ffd	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var ffd : Dynamic;$/;"	v
ffrom	heaps/hxd/Direction.hx	/^	public static inline function ffrom(dx:Int, dy:Int) {$/;"	f
ffun	heaps/hxsl/Splitter.hx	/^		var ffun = null, fvars = new Map();$/;"	v
fget	heaps/hxd/impl/BitsBuilder.hx	/^				var fget = null;$/;"	v
fget	heaps/hxd/res/FileTree.hx	/^			var fget : Field = {$/;"	v
fget	heaps/hxsl/Macros.hx	/^				var fget : Field = {$/;"	v
fgl	heaps/tools/hxsl/Main.hx	/^			var fgl = compile(fragmentSource, GL.FRAGMENT_SHADER);$/;"	v
fid	heaps/hxd/fs/LocalFileSystem.hx	/^			var fid = js.node.Fs.openSync(w.file, cast (cst.O_RDONLY | cst.O_EXCL | 0x10000000));$/;"	v
fid	heaps/hxd/res/Image.hx	/^				var fid = String.fromCharCode(fourCC&0xFF)+String.fromCharCode((fourCC>>8)&0xFF)+String.from/;"	v
field	heaps/hxd/impl/BitsBuilder.hx	/^			var field : String = null;$/;"	v
field	heaps/hxd/impl/BitsBuilder.hx	/^			var field = f.field;$/;"	v
field	heaps/hxd/res/FileTree.hx	/^			var field : Field = {$/;"	v
field	heaps/hxd/res/FileTree.hx	/^			var field = { e : macro loader.loadCache($epath, ${ftype.e}), t : ftype.t, doc: doc };$/;"	v
fieldAccess	heaps/hxsl/Checker.hx	/^	function fieldAccess( e : TExpr, f : String, with : WithType, pos : Position ) : FieldAccess {$/;"	f
fieldCount	heaps/hxd/fmt/blend/Data.hx	/^					var fieldCount = read16();$/;"	v
fieldNames	heaps/hxd/fmt/blend/Data.hx	/^	public var fieldNames:Array<Int>; \/\/ Index in dna.names$/;"	v
fieldTypes	heaps/hxd/fmt/blend/Data.hx	/^	public var fieldTypes:Array<Int>; \/\/ Index in dna.types$/;"	v
fields	heaps/h3d/impl/MacroHelper.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	heaps/h3d/impl/VarBinding.hx	/^		var fields = haxe.macro.Context.getBuildFields();$/;"	v
fields	heaps/hxd/fmt/blend/Data.hx	/^		var fields:Array<String> = [];$/;"	v
fields	heaps/hxd/fmt/hbson/Writer.hx	/^			var fields = Reflect.fields(value);$/;"	v
fields	heaps/hxd/fs/EmbedFileSystem.hx	/^		var fields = Reflect.fields(r);$/;"	v
fields	heaps/hxd/impl/BitsBuilder.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	heaps/hxd/res/DynamicText.hx	/^				var fields = new Array<Field>();$/;"	v
fields	heaps/hxd/res/DynamicText.hx	/^			var fields = new Array<Field>();$/;"	v
fields	heaps/hxd/res/DynamicText.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	heaps/hxd/res/DynamicText.hx	/^		var fields = new Map();$/;"	v
fields	heaps/hxd/res/FileTree.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	heaps/hxsl/DynamicShader.hx	/^	public var fields : Array<String>;$/;"	v
fields	heaps/hxsl/Macros.hx	/^			var fields = [];$/;"	v
fields	heaps/hxsl/Macros.hx	/^		var fields = Context.getBuildFields();$/;"	v
fields	heaps/hxsl/Macros.hx	/^		var fields = new Array<Field>();$/;"	v
file	heaps/h2d/CdbLevel.hx	/^	var file(default, never) : String;$/;"	v
file	heaps/h3d/impl/Stage3dDriver.hx	/^		var file = SHADER_CACHE_PATH;$/;"	v
file	heaps/h3d/mat/MaterialDatabase.hx	/^		var file = getFilePath(material.model);$/;"	v
file	heaps/h3d/mat/MaterialDatabase.hx	/^		var file = getFilePath(model);$/;"	v
file	heaps/hxd/File.hx	/^				var file : js.html.File = e.target.files[0];$/;"	v
file	heaps/hxd/File.hx	/^		var file = getRelPath(path);$/;"	v
file	heaps/hxd/Res.hx	/^			var file = $v{file};$/;"	v
file	heaps/hxd/fmt/hmd/Dump.hx	/^		var file = Sys.args()[0];$/;"	v
file	heaps/hxd/fmt/pak/FileSystem.hx	/^	var file : Data.File;$/;"	v
file	heaps/hxd/fs/LocalFileSystem.hx	/^	var file : String;$/;"	v
file	heaps/hxd/res/Atlas.hx	/^			var file = hxd.res.Loader.currentInstance.load(basePath + line).toTile();$/;"	v
file	heaps/hxd/res/Embed.hx	/^		var file = Context.resolvePath(file);$/;"	v
file	heaps/hxsl/CacheFile.hx	/^	var file : String;$/;"	v
file	heaps/samples/Generator.hx	/^				var file = path+"\/"+f;$/;"	v
file	heaps/samples/Generator.hx	/^				var file = t.file.split("__name").join(name);$/;"	v
file	heaps/samples/templates/.vscode/tasks.json	/^			"file": "::name::_hl.hxml"$/;"	s	object:tasks.2
file	heaps/samples/templates/.vscode/tasks.json	/^			"file": "::name::_js.hxml"$/;"	s	object:tasks.1
file	heaps/samples/templates/.vscode/tasks.json	/^			"file": "::name::_swf.hxml"$/;"	s	object:tasks.3
fileCache	heaps/hxd/fs/LocalFileSystem.hx	/^	var fileCache = new Map<String,{r:LocalEntry}>();$/;"	v
fileName	heaps/hxd/File.hx	/^	var fileName : String;$/;"	v
fileName	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var fileName : String;$/;"	v
fileName	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var fileName = tmp+"\/mikktspace_data"+Date.now().getTime()+"_"+Std.random(0x1000000)+".bin";$/;"	v
filePath	heaps/hxd/fmt/fbx/HMDOut.hx	/^	var filePath : String;$/;"	v
filePath	heaps/hxd/fmt/pak/Build.hx	/^			var filePath = fs.getAbsolutePath(entry);$/;"	v
filePrefix	heaps/h2d/KeyFrames.hx	/^	var filePrefix : String;$/;"	v
files	heaps/hxd/fmt/pak/FileSystem.hx	/^	var files : Array<{ path : String, inputs : Array<FileInput> }>;$/;"	v
files	heaps/hxd/fs/LocalFileSystem.hx	/^		var files = sys.FileSystem.readDirectory(baseDir + path);$/;"	v
files	heaps/hxd/res/FileTree.hx	/^	var files : Map<String, { relPath : String, fullPath : String, file : String, ident : String, n/;"	v
filesToCheck	heaps/hxd/fs/LocalFileSystem.hx	/^		var filesToCheck = Math.ceil(WATCH_LIST.length \/ 60);$/;"	v
fill	heaps/h3d/pass/ShaderManager.hx	/^		inline function fill(buf:h3d.shader.Buffers.ShaderBuffers, s:hxsl.RuntimeShader.RuntimeShaderD/;"	f
fill	heaps/hxd/BitmapData.hx	/^	public function fill( x : Int, y : Int, width : Int, height : Int, color : Int ) {$/;"	f
fill	heaps/hxd/poly2tri/Sweep.hx	/^	public function fill(node:Node)$/;"	f
fill	heaps/hxd/snd/NativeChannel.hx	/^	inline function fill( buffer : js.html.audio.AudioBuffer ) {$/;"	f
fillAdvancingFront	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillAdvancingFront(n:Node)$/;"	f
fillArc	heaps/h2d/TileGroup.hx	/^	public inline function fillArc( x : Float, y : Float, ray : Float, c : Int, start: Float, end: /;"	f
fillBasin	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillBasin(node:Node)$/;"	f
fillBasinReq	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillBasinReq(node:Node)$/;"	f
fillCircle	heaps/h2d/TileGroup.hx	/^	public inline function fillCircle( x : Float, y : Float, radius : Float, c : Int) {$/;"	f
fillEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillEdgeEvent(edge:Edge, node:Node)$/;"	f
fillFloats	heaps/h3d/scene/pbr/LightBuffer.hx	/^	inline function fillFloats( b : hxd.FloatBuffer, f1 : Float, f2 : Float, f3 : Float, f4 : Float/;"	f
fillGlobals	heaps/h3d/pass/ShaderManager.hx	/^	public function fillGlobals( buf : h3d.shader.Buffers, s : hxsl.RuntimeShader ) {$/;"	f
fillHeight	heaps/h2d/Flow.hx	/^	public var fillHeight(default,set) : Bool = false;$/;"	v
fillHeight	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var fillHeight: Bool;$/;"	v
fillLeftAboveEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillLeftAboveEdgeEvent(edge:Edge, node:Node)$/;"	f
fillLeftBelowEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillLeftBelowEdgeEvent(edge:Edge, node:Node)$/;"	f
fillLeftConcaveEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillLeftConcaveEdgeEvent(edge:Edge, node:Node)$/;"	f
fillLeftConvexEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillLeftConvexEdgeEvent(edge:Edge, node:Node)$/;"	f
fillLights	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function fillLights (lights : Array<Light>, shadows : Bool) {$/;"	f
fillParams	heaps/h3d/pass/ShaderManager.hx	/^	public function fillParams( buf : h3d.shader.Buffers, s : hxsl.RuntimeShader, shaders : hxsl.Sh/;"	f
fillRec	heaps/h3d/pass/ShaderManager.hx	/^	function fillRec( v : Dynamic, type : hxsl.Ast.Type, out : #if hl hl.BytesAccess<hl.F32> #else /;"	f
fillRightAboveEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillRightAboveEdgeEvent(edge:Edge, node:Node)$/;"	f
fillRightBelowEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillRightBelowEdgeEvent(edge:Edge, node:Node)$/;"	f
fillRightConcaveEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillRightConcaveEdgeEvent(edge:Edge, node:Node)$/;"	f
fillRightConvexEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function fillRightConvexEdgeEvent(edge:Edge, node:Node)$/;"	f
fillSoundBuffer	heaps/hxd/snd/Manager.hx	/^	function fillSoundBuffer(buf : Buffer, dat : hxd.snd.Data, forceMono = false) {$/;"	f
fillVector	heaps/h3d/scene/pbr/LightBuffer.hx	/^	inline function fillVector( b : hxd.FloatBuffer, v : h3d.Vector, i : Int ) {$/;"	f
fillWidth	heaps/h2d/Flow.hx	/^	public var fillWidth(default,set) : Bool = false;$/;"	v
fillWidth	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var fillWidth: Bool;$/;"	v
filter	heaps/h2d/Object.hx	/^	public var filter(default,set) : h2d.filter.Filter;$/;"	v
filter	heaps/h3d/impl/GlDriver.hx	/^				var filter = Type.enumIndex(t.filter);$/;"	v
filter	heaps/h3d/mat/Texture.hx	/^	public var filter(default,set) : Filter;$/;"	v
filter	heaps/h3d/pass/PassList.hx	/^	public inline function filter( f : PassObject -> Bool ) {$/;"	f
filter	heaps/hxd/fmt/fbx/Filter.hx	/^	public function filter( f : FbxNode ) : FbxNode {$/;"	f
filter	heaps/hxd/fmt/pak/Build.hx	/^	function filter( root : File, old : File ) {$/;"	f
filter	heaps/hxd/res/NanoJpeg.hx	/^	var filter : Filter;$/;"	v
filterMatrixA	heaps/h3d/shader/Base2d.hx	/^		@param var filterMatrixA : Vec3;$/;"	v
filterMatrixB	heaps/h3d/shader/Base2d.hx	/^		@param var filterMatrixB : Vec3;$/;"	v
filterPasses	heaps/h3d/pass/Shadows.hx	/^	function filterPasses( passes : h3d.pass.PassList ) {$/;"	f
filterPoints	heaps/hxd/earcut/Earcut.hx	/^	function filterPoints(start:EarNode, end:EarNode=null) {$/;"	f
filterRec	heaps/hxd/fmt/fbx/Filter.hx	/^	function filterRec( f : FbxNode, match : Array<Array<String>>, index : Int ) {$/;"	f
filterStack	heaps/h2d/RenderContext.hx	/^	var filterStack : Array<FilterStack>;$/;"	v
filterStackIndex	heaps/h2d/RenderContext.hx	/^	var filterStackIndex : Int;$/;"	v
filters	heaps/h2d/filter/Group.hx	/^	var filters : Array<Filter>;$/;"	v
filters	heaps/hxd/File.hx	/^			var filters = options.fileTypes == null ? null : [for( o in options.fileTypes ) new flash.net/;"	v
finalTile	heaps/h2d/Object.hx	/^		var finalTile = h2d.Tile.fromTexture(t);$/;"	v
finalizationPolygon	heaps/hxd/poly2tri/Sweep.hx	/^	public function finalizationPolygon()$/;"	f
finalize	heaps/h3d/impl/Stage3dDriver.hx	/^	function finalize( driver : Stage3dDriver ) {$/;"	f
finalizeInteractive	heaps/h2d/HtmlText.hx	/^		inline function finalizeInteractive() {$/;"	f
find	heaps/h2d/Object.hx	/^	public function find<T>( f : Object -> Null<T> ) : Null<T> {$/;"	f
find	heaps/h3d/scene/Object.hx	/^	public function find<T>( f : Object -> Null<T> ) : Null<T> {$/;"	f
findAll	heaps/h2d/Object.hx	/^	public function findAll<T>( f : Object -> Null<T>, ?arr : Array<T> ) : Array<T> {$/;"	f
findAll	heaps/h3d/scene/Object.hx	/^	public function findAll<T>( f : Object -> Null<T>, ?arr : Array<T> ) : Array<T> {$/;"	f
findBest	heaps/h3d/mat/BigTexture.hx	/^	function findBest( q : QuadTree, w : Int, h : Int ) {$/;"	f
findClosestPoint	heaps/h2d/col/Polygon.hx	/^	public function findClosestPoint(pt : h2d.col.Point, maxDist : Float) {$/;"	f
findHoleBridge	heaps/hxd/earcut/Earcut.hx	/^	function findHoleBridge(hole : EarNode, root : EarNode) {$/;"	f
findPos	heaps/hxd/res/DynamicText.hx	/^	static function findPos( pos : { file : String, content : String, pos : Position }, str : Strin/;"	f
finits	heaps/hxsl/Splitter.hx	/^		var finits = [];$/;"	v
first	heaps/h2d/Graphics.hx	/^		var first = true, sign = false;$/;"	v
first	heaps/h2d/SpriteBatch.hx	/^	var first : BatchElement;$/;"	v
first	heaps/h2d/ZGroup.hx	/^	var first    : DepthEntry;$/;"	v
first	heaps/h2d/col/IPolygon.hx	/^		var first = 0;$/;"	v
first	heaps/h3d/impl/DirectXDriver.hx	/^			var first = -1;$/;"	v
first	heaps/hxd/earcut/Earcut.hx	/^		var first = node;$/;"	v
first	heaps/hxd/fmt/bfnt/FontParser.hx	/^							var first = bytes.readInt32();$/;"	v
first	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var first = 0, second = 0, advance = 0;$/;"	v
first	heaps/hxd/fmt/blend/Data.hx	/^		var first  = bytes.get(pos + 3);$/;"	v
first	heaps/hxd/fmt/blend/Data.hx	/^		var first = bytes.get(pos + 0);$/;"	v
first	heaps/hxd/fmt/blend/Data.hx	/^        var first = bytes.get(pos + 0);$/;"	v
first	heaps/hxd/res/DynamicText.hx	/^			var first = x.elements.hasNext() ? x.elements.next() : null;$/;"	v
first	heaps/hxd/res/DynamicText.hx	/^			var first = x.elements.next();$/;"	v
first	heaps/hxsl/GlslOut.hx	/^			var first = true;$/;"	v
first	heaps/hxsl/HlslOut.hx	/^			var first = true;$/;"	v
first	heaps/hxsl/Printer.hx	/^				var first = true;$/;"	v
first	heaps/hxsl/Printer.hx	/^			var first = true;$/;"	v
first	heaps/hxsl/Printer.hx	/^		var first = true;$/;"	v
firstCircleEvent	heaps/h2d/col/Voronoi.hx	/^	var firstCircleEvent : CircleEvent;$/;"	v
firstFramePos	heaps/hxd/fmt/hmd/Dump.hx	/^			var firstFramePos = 0;$/;"	v
firstLeft	heaps/hxd/clipper/Clipper.hx	/^	public var firstLeft : OutRec;$/;"	v
firstLeft	heaps/hxd/clipper/Clipper.hx	/^              var firstLeft = ParseFirstLeft(outRec.firstLeft);$/;"	v
firstNode	heaps/hxd/fmt/fbx/Parser.hx	/^			var firstNode = parseBinaryNode(getVersionedInt32());$/;"	v
firstPart	heaps/h3d/parts/GpuParticles.hx	/^		var firstPart = g.nparts;$/;"	v
firstPlay	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var firstPlay : Bool;$/;"	v
firstShader	heaps/h3d/impl/GlDriver.hx	/^	var firstShader = true;$/;"	v
firstX	heaps/h2d/TileGroup.hx	/^		var firstX = Math.NEGATIVE_INFINITY;$/;"	v
firstX	heaps/h2d/col/IPolygon.hx	/^		var firstX = points[first].x;$/;"	v
firstY	heaps/h2d/TileGroup.hx	/^		var firstY = Math.NEGATIVE_INFINITY;$/;"	v
fixOrientations	heaps/hxd/clipper/Clipper.hx	/^    function fixOrientations()$/;"	f
fixed	heaps/hxd/System.hl.hx	/^		var fixed = haxe.macro.Compiler.getDefine("windowFixed") == "1";$/;"	v
fixedBuffer	heaps/h2d/RenderContext.hx	/^	var fixedBuffer : h3d.Buffer;$/;"	v
fixedColor	heaps/h3d/pass/HardwarePick.hx	/^	var fixedColor = new FixedColor();$/;"	v
fixedColor	heaps/h3d/shader/Blur.hx	/^		@param var fixedColor : Vec4;$/;"	v
fixedPosition	heaps/h3d/scene/Object.hx	/^	public var fixedPosition(get, set) : Bool;$/;"	v
fl	heaps/h2d/domkit/BaseComponents.hx	/^			var fl = [for( v in vl ) parseFilter(v)];$/;"	v
fl	heaps/h2d/domkit/Style.hx	/^				var fl = new h2d.Flow();$/;"	v
fl	heaps/h2d/domkit/Style.hx	/^			var fl = hxd.impl.Api.downcast(errorsText.parent, h2d.Flow);$/;"	v
fl	heaps/h2d/domkit/Style.hx	/^		var fl = Std.downcast(obj, h2d.Flow);$/;"	v
fl	heaps/h3d/impl/Benchmark.hx	/^			var fl = new h2d.Flow(this);$/;"	v
fl	heaps/hxd/fmt/fbx/Data.hx	/^			var fl = new Array<Float>();$/;"	v
fl	heaps/hxd/fmt/hmd/Library.hx	/^					var fl = new haxe.ds.Vector(a.frames);$/;"	v
fl	heaps/hxd/fmt/hmd/Library.hx	/^				var fl = new haxe.ds.Vector(a.frames);$/;"	v
fl	heaps/hxd/fmt/hmd/Library.hx	/^				var fl = new haxe.ds.Vector(a.frames*2);$/;"	v
fl	heaps/hxd/fmt/hmd/Library.hx	/^				var fl = new haxe.ds.Vector<h3d.anim.LinearAnimation.LinearFrame>(frameCount);$/;"	v
fl	heaps/hxd/fs/FileConverter.hx	/^			var fl = Reflect.fields(cmd.params);$/;"	v
flag	heaps/hxsl/AgalOptim.hx	/^	var flag : Bool;$/;"	v
flags	heaps/h3d/Buffer.hx	/^	public var flags(default, null) : haxe.EnumFlags<BufferFlag>;$/;"	v
flags	heaps/h3d/impl/GlDriver.hx	/^					var flags = TFILTERS[mip][filter];$/;"	v
flags	heaps/h3d/impl/ManagedBuffer.hx	/^	public var flags(default, null) : haxe.EnumFlags<Buffer.BufferFlag>;$/;"	v
flags	heaps/h3d/impl/MemoryManager.hx	/^						var flags = [];$/;"	v
flags	heaps/h3d/impl/MemoryManager.hx	/^			var flags : Array<h3d.Buffer.BufferFlag> = null;$/;"	v
flags	heaps/h3d/impl/MemoryManager.hx	/^			var flags = [];$/;"	v
flags	heaps/h3d/impl/TextureCache.hx	/^		var flags : Array<h3d.mat.Data.TextureFlags> = [Target];$/;"	v
flags	heaps/h3d/mat/Pass.hx	/^	var flags : Int;$/;"	v
flags	heaps/h3d/mat/Texture.hx	/^		var flags = [];$/;"	v
flags	heaps/h3d/mat/Texture.hx	/^	public var flags(default, null) : haxe.EnumFlags<TextureFlags>;$/;"	v
flags	heaps/h3d/prim/Polygon.hx	/^		var flags : Array<h3d.Buffer.BufferFlag> = [];$/;"	v
flags	heaps/h3d/prim/Quads.hx	/^		var flags : Array<h3d.Buffer.BufferFlag> = [Quads];$/;"	v
flags	heaps/h3d/prim/RawPrimitive.hx	/^		var flags : Array<h3d.Buffer.BufferFlag> = [];$/;"	v
flags	heaps/h3d/scene/Object.hx	/^	var flags : ObjectFlags;$/;"	v
flags	heaps/hxd/Pixels.hx	/^	public var flags: haxe.EnumFlags<Flags>;$/;"	v
flags	heaps/hxd/fmt/hmd/Data.hx	/^	public var flags : haxe.EnumFlags<AnimationFlag>;$/;"	v
flags	heaps/hxd/fmt/hmd/Dump.hx	/^				var flags = [];$/;"	v
flags	heaps/hxd/fmt/hmd/Reader.hx	/^			var flags = i.readByte();$/;"	v
flags	heaps/hxd/fmt/pak/Reader.hx	/^		var flags = i.readByte();$/;"	v
flags	heaps/hxd/fmt/pak/Writer.hx	/^		var flags = 0;$/;"	v
flags	heaps/hxd/impl/CacheAllocator.hx	/^		var flags = f.has(RawFormat) ? (f.has(Quads) ? RawQuads : RawFormat) : (f.has(UniformBuffer) ?/;"	v
flags	heaps/hxd/res/Image.hx	/^		var flags : Array<h3d.mat.Data.TextureFlags> = [NoAlloc];$/;"	v
flags	heaps/hxd/res/Image.hx	/^	public var flags(default,null) : haxe.EnumFlags<ImageInfoFlag>;$/;"	v
flags	heaps/hxsl/AgalOut.hx	/^			var flags = [TIgnoreSampler];$/;"	v
flashVersion	heaps/h3d/impl/Stage3dDriver.hx	/^	var flashVersion : Float;$/;"	v
flat	heaps/hxsl/Cache.hx	/^		var flat = new Flatten();$/;"	v
flatten	heaps/hxsl/Flatten.hx	/^	public function flatten( s : ShaderData, kind : FunctionKind, constsToGlobal : Bool ) : ShaderD/;"	f
flattenShader	heaps/hxsl/Cache.hx	/^	function flattenShader( s : ShaderData, kind : FunctionKind, params : Map<Int,{ instance:Int, i/;"	f
flip	heaps/h2d/CdbLevel.hx	/^	public var flip : Bool;$/;"	v
flipEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function flipEdgeEvent(ep:Point, eq:Point, t:Triangle, p:Point)$/;"	f
flipScanEdgeEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function flipScanEdgeEvent(ep:Point, eq:Point, flip_triangle:Triangle, t:Triangle, p:Poi/;"	f
flipX	heaps/h2d/Tile.hx	/^	public function flipX() : Void {$/;"	f
flipX	heaps/hxd/fmt/spine/Data.hx	/^	public var flipX : Bool;$/;"	v
flipX	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var flipX : Array<{ time : Float, x : Bool }>;$/;"	v
flipX	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var flipX : Bool;$/;"	v
flipY	heaps/h2d/RenderContext.hx	/^		var flipY = curTarget != null ? -targetFlipY : -baseFlipY;$/;"	v
flipY	heaps/h2d/RenderContext.hx	/^		var flipY = t == null ? -baseFlipY : -targetFlipY;$/;"	v
flipY	heaps/h2d/Tile.hx	/^	public function flipY() : Void {$/;"	f
flipY	heaps/h3d/shader/ScreenShader.hx	/^		@param var flipY : Float;$/;"	v
flipY	heaps/hxd/fmt/spine/Data.hx	/^	public var flipY : Bool;$/;"	v
flipY	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var flipY : Array<{ time : Float, y : Bool }>;$/;"	v
flipY	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var flipY : Bool;$/;"	v
floats	heaps/hxd/fmt/fbx/Parser.hx	/^				var floats : Array<Float> = null;$/;"	v
floats	heaps/hxd/fmt/fbx/Parser.hx	/^				var floats:Array<Float> = new Array();$/;"	v
floats	heaps/hxsl/DynamicShader.hx	/^	var floats = new Array<Float>();$/;"	v
floor	heaps/hxd/Math.hx	/^	public static inline function floor( f : Float ) {$/;"	f
floor	heaps/samples/Lights.hx	/^		var floor = new h3d.scene.Mesh(prim, s3d);$/;"	v
floor	heaps/samples/Sao.hx	/^		var floor = new h3d.prim.Grid(40,40,0.25,0.25);$/;"	v
floor	heaps/samples/Shadows.hx	/^		var floor = new h3d.prim.Cube(10, 10, 0.1);$/;"	v
flow	heaps/h2d/domkit/Style.hx	/^		var flow = Std.downcast(obj, h2d.Flow);$/;"	v
flow	heaps/samples/Flows.hx	/^					var flow = createFlowSimple(s2d, xoffset, yoffset);$/;"	v
flow	heaps/samples/Flows.hx	/^				var flow = generateFlowThreeChilds(FlowAlign.Left);$/;"	v
flow	heaps/samples/Flows.hx	/^			var flow = createFlowSimple(s2d, xoffset, yoffset);$/;"	v
flow	heaps/samples/Flows.hx	/^			var flow = new Flow(parent);$/;"	v
flow	heaps/samples/Flows.hx	/^			var flow;$/;"	v
flow	heaps/samples/HtmlText.hx	/^			var flow = createFlow(s2d);$/;"	v
flow	heaps/samples/HtmlText.hx	/^			var flow = new Flow(parent);$/;"	v
flow	heaps/samples/HtmlText.hx	/^		var flow = createFlow(s2d);$/;"	v
flow	heaps/samples/Pad.hx	/^	var flow : h2d.Flow;$/;"	v
flow	heaps/samples/Text.hx	/^			var flow = createFlow(s2d);$/;"	v
flow	heaps/samples/Text.hx	/^			var flow = new Flow(parent);$/;"	v
flow	heaps/samples/Text.hx	/^		var flow = createFlow(s2d);$/;"	v
flush	heaps/h2d/Graphics.hx	/^	function flush() {$/;"	f
flush	heaps/h2d/Graphics.hx	/^	public function flush() {$/;"	f
flush	heaps/h2d/RenderContext.hx	/^	public inline function flush() {$/;"	f
flush	heaps/h2d/SpriteBatch.hx	/^	function flush() {$/;"	f
flush	heaps/h2d/TileGroup.hx	/^	public inline function flush() {$/;"	f
flush	heaps/h3d/mat/BigTexture.hx	/^	function flush() {$/;"	f
flush	heaps/h3d/prim/BigPrimitive.hx	/^	public function flush() {$/;"	f
flush	heaps/h3d/prim/DynamicPrimitive.hx	/^	public function flush() {$/;"	f
flush	heaps/h3d/scene/Graphics.hx	/^	function flush() {$/;"	f
flush	heaps/hxd/net/Socket.hx	/^	override function flush() {$/;"	f
flushFill	heaps/h2d/Graphics.hx	/^	function flushFill( i0 ) {$/;"	f
flushLine	heaps/h2d/Graphics.hx	/^	function flushLine( start ) {$/;"	f
flushLine	heaps/h3d/scene/Graphics.hx	/^	function flushLine() {$/;"	f
flushTarget	heaps/h3d/Engine.hx	/^	inline function flushTarget() {$/;"	f
flushing	heaps/h3d/prim/BigPrimitive.hx	/^	var flushing : Bool;$/;"	v
fmt	heaps/h3d/impl/LogDriver.hx	/^			function fmt( shader : hxsl.RuntimeShader.RuntimeShaderData ) {$/;"	f
fmt	heaps/h3d/impl/Stage3dDriver.hx	/^				var fmt = switch( v.type ) {$/;"	v
fmt	heaps/h3d/impl/Stage3dDriver.hx	/^		function fmt( agal, data : hxsl.RuntimeShader.RuntimeShaderData ) {$/;"	f
fmt	heaps/h3d/impl/Stage3dDriver.hx	/^		var fmt = switch( t.format ) {$/;"	v
fmt	heaps/hxd/Math.hx	/^	public static function fmt( v : Float ) {$/;"	f
fmt	heaps/hxd/Pixels.hx	/^		var fmt = ref.format;$/;"	v
fmt	heaps/hxd/fmt/hmd/Dump.hx	/^		inline function fmt(v) return hxd.Math.fmt(v);$/;"	f
fmt	heaps/hxd/res/FontBuilder.hx	/^		var fmt = tf.defaultTextFormat;$/;"	v
fmt	heaps/hxd/res/Image.hx	/^		var fmt = inf.pixelFormat;$/;"	v
fmtStr	heaps/hxd/res/Image.hx	/^					var fmtStr = inf.pixelFormat.match(S3TC(_)) ? "DXT" : inf.dataFormat.getName();$/;"	v
fnt	heaps/h2d/HtmlText.hx	/^			var fnt = splitNode.font;$/;"	v
fnt	heaps/hxd/res/DefaultFont.hx	/^		var fnt : h2d.Font = engine.resCache.get(DefaultFont);$/;"	v
fnt	heaps/samples/Pad.hx	/^		var fnt = hxd.Res.customFont.toFont();$/;"	v
focus	heaps/h2d/Interactive.hx	/^	public function focus() {$/;"	f
focus	heaps/h2d/TextInput.hx	/^	public function focus() {$/;"	f
focus	heaps/h3d/scene/Interactive.hx	/^	public function focus() {$/;"	f
focus	heaps/hxd/SceneEvents.hx	/^	public function focus( i : Interactive ) {$/;"	f
focusLost	heaps/hxd/SceneEvents.hx	/^	var focusLost = new hxd.Event(EFocusLost);$/;"	v
focused	heaps/hxd/Window.js.hx	/^	var focused : Bool;$/;"	v
follow	heaps/h2d/Camera.hx	/^	public var follow : h2d.Object;$/;"	v
follow	heaps/h2d/ObjectFollower.hx	/^	public var follow : h3d.scene.Object;$/;"	v
follow	heaps/h3d/Camera.hx	/^	public var follow : { pos : h3d.scene.Object, target : h3d.scene.Object };$/;"	v
follow	heaps/h3d/scene/Object.hx	/^	public var follow(default, set) : Object;$/;"	v
follow	heaps/hxd/fmt/hmd/Data.hx	/^	public var follow : Null<String>;$/;"	v
followCamera	heaps/samples/Camera2D.hx	/^	var followCamera : Camera;$/;"	v
followObject	heaps/h2d/ObjectFollower.hx	/^	function followObject() {$/;"	f
followPoint	heaps/samples/Camera2D.hx	/^	var followPoint : Graphics;$/;"	v
followPositionOnly	heaps/h3d/scene/Object.hx	/^	public var followPositionOnly(get, set) : Bool;$/;"	v
followRotation	heaps/h2d/Camera.hx	/^	public var followRotation : Bool = false;$/;"	v
followVisibility	heaps/h2d/ObjectFollower.hx	/^	public var followVisibility = false;$/;"	v
followX	heaps/samples/Camera2D.hx	/^		var followX = s2d.width * .5;$/;"	v
followY	heaps/samples/Camera2D.hx	/^		var followY = s2d.height * .5;$/;"	v
font	heaps/h2d/HtmlText.hx	/^	var font : h2d.Font;$/;"	v
font	heaps/h2d/Text.hx	/^	public var font(default, set) : Font;$/;"	v
font	heaps/h3d/impl/Benchmark.hx	/^	public var font : h2d.Font;$/;"	v
font	heaps/hxd/fmt/bfnt/FontParser.hx	/^		var font : h2d.Font = new h2d.Font(null, 0);$/;"	v
font	heaps/hxd/fmt/bfnt/Reader.hx	/^		var font : h2d.Font = null;$/;"	v
font	heaps/hxd/fs/Convert.hx	/^		var font = hxd.fmt.bfnt.FontParser.parse(srcBytes, srcPath, resolveTile);$/;"	v
font	heaps/hxd/res/BDFFont.hx	/^	var font : h2d.Font;$/;"	v
font	heaps/hxd/res/BitmapFont.hx	/^		var font : h2d.Font = hxd.fmt.bfnt.FontParser.parse(entry.getBytes(), entry.path, resolveSdfTi/;"	v
font	heaps/hxd/res/BitmapFont.hx	/^	var font : h2d.Font;$/;"	v
font	heaps/hxd/res/Font.hx	/^		var font = Type.createInstance(fontClass, []);$/;"	v
font	heaps/hxd/res/FontBuilder.hx	/^	var font : h2d.Font;$/;"	v
font	heaps/samples/Base2D.hx	/^		var font = hxd.Res.customFont.toFont();$/;"	v
font	heaps/samples/Flows.hx	/^		var font = hxd.res.DefaultFont.get();$/;"	v
font	heaps/samples/HtmlText.hx	/^				var font = hxd.res.DefaultFont.get().clone();$/;"	v
font	heaps/samples/HtmlText.hx	/^		var font = hxd.res.DefaultFont.get();$/;"	v
font	heaps/samples/Input.hx	/^		var font = hxd.res.DefaultFont.get();$/;"	v
font	heaps/samples/SampleApp.hx	/^		var font = getFont();$/;"	v
font	heaps/samples/Text.hx	/^		var font = hxd.res.DefaultFont.get();$/;"	v
fontClass	heaps/hxd/res/Font.hx	/^		var fontClass : Class<flash.text.Font> = cast Type.resolveClass("_R_" + ~\/[^A-Za-z0-9_]\/g.re/;"	v
fontInfo	heaps/h2d/HtmlText.hx	/^				var fontInfo = lineFont();$/;"	v
fontInfo	heaps/h2d/HtmlText.hx	/^			var fontInfo = lineFont();$/;"	v
fop	heaps/hxsl/Eval.hx	/^			inline function fop(callb:Float->Float->Float) {$/;"	f
force	heaps/h3d/parts/Data.hx	/^	public var force : Null<ValueXYZ>;$/;"	v
forceCamSync	heaps/h2d/Scene.hx	/^		var forceCamSync = posChanged;$/;"	v
forceDeviceError	heaps/h3d/impl/DirectXDriver.hx	/^	public function forceDeviceError() {$/;"	f
forceLineBreak	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var forceLineBreak : Bool;$/;"	v
forcePlay	heaps/hxd/snd/NativeChannel.hx	/^	inline function forcePlay() {$/;"	f
format	heaps/h3d/impl/GlDriver.hx	/^		var format = switch( b.format ) {$/;"	v
format	heaps/h3d/mat/DepthBuffer.hx	/^	public var format(default, null) : DepthFormat;$/;"	v
format	heaps/h3d/mat/Texture.hx	/^	public var format(default, null) : TextureFormat;$/;"	v
format	heaps/h3d/pass/Shadows.hx	/^	var format : hxd.PixelFormat;$/;"	v
format	heaps/h3d/scene/World.hx	/^		var format = buildFormat();$/;"	v
format	heaps/haxelib.json	/^	"dependencies" : { "format" : "" }$/;"	s	object:dependencies
format	heaps/hxd/Pixels.hx	/^	public var format(get,never) : PixelFormat;$/;"	v
format	heaps/hxd/fmt/hmd/Data.hx	/^	public var format : GeometryDataFormat;$/;"	v
format	heaps/hxd/fmt/hmd/Library.hx	/^		var format = [$/;"	v
format	heaps/hxd/fs/Convert.hx	/^		var format = getParam("format");$/;"	v
format	heaps/hxd/snd/OggData.hx	/^		var format = switch( sampleFormat ) {$/;"	v
formatBytes	heaps/hxd/snd/Data.hx	/^	public static inline function formatBytes(format:SampleFormat) {$/;"	f
formatHxsl	heaps/tools/hxsl/Main.hx	/^	function formatHxsl( e : hxsl.Ast.ShaderData ) {$/;"	f
formatVersion	heaps/hxd/fmt/kframes/Data.hx	/^	var formatVersion : String;$/;"	v
forward	heaps/h3d/Camera.hx	/^	public function forward(speed = 1.) {$/;"	f
forward	heaps/h3d/scene/pbr/LightSystem.hx	/^                var forward = Std.downcast(s, h3d.shader.pbr.DefaultForward);$/;"	v
forward	heaps/samples/Camera2D.hx	/^		var forward = followPoint.rotation - Math.PI * .5;$/;"	v
forwardMode	heaps/h3d/scene/pbr/LightSystem.hx	/^	public var forwardMode = false;$/;"	v
found	heaps/h2d/Console.hx	/^				var found = false;$/;"	v
found	heaps/h2d/filter/Shader.hx	/^		var found = false;$/;"	v
found	heaps/h3d/scene/Scene.hx	/^		var found = null;$/;"	v
found	heaps/h3d/scene/pbr/LightSystem.hx	/^			var found = false;$/;"	v
found	heaps/hxd/Pixels.hx	/^			var found = false;$/;"	v
found	heaps/hxd/fmt/bfnt/Writer.hx	/^			var found = false;$/;"	v
found	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var found = false;$/;"	v
found	heaps/hxd/fmt/fbx/Data.hx	/^			var found = false;$/;"	v
found	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var found : Null<Int> = null;$/;"	v
found	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var found = false;$/;"	v
found	heaps/hxd/fmt/hmd/Library.hx	/^			var found = false;$/;"	v
found	heaps/hxd/fmt/pak/Build.hx	/^				var found = false;$/;"	v
found	heaps/hxd/res/BDFFont.hx	/^		var found : Bool = false;$/;"	v
found	heaps/hxsl/AgalOptim.hx	/^		var found : Null<Int> = null, reservedMask = 0, foundUsage = 10;$/;"	v
found	heaps/hxsl/AgalOut.hx	/^			var found = -1;$/;"	v
found	heaps/hxsl/AgalOut.hx	/^			var found = true;$/;"	v
found	heaps/hxsl/Checker.hx	/^			var found = null;$/;"	v
found	heaps/hxsl/Flatten.hx	/^			var found = true;$/;"	v
found	heaps/hxsl/Linker.hx	/^		var found = !isWritten;$/;"	v
foundGlobals	heaps/hxsl/HlslOut.hx	/^		var foundGlobals = new Map();$/;"	v
fourBonesByVertex	heaps/h3d/shader/SkinBase.hx	/^		@const @param var fourBonesByVertex = false;$/;"	v
fourBonesByVertex	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var fourBonesByVertex = false;$/;"	v
fourCC	heaps/hxd/res/Image.hx	/^			var fourCC = f.readInt32();$/;"	v
fourth	heaps/hxd/fmt/blend/Data.hx	/^		var fourth = bytes.get(pos + 0);$/;"	v
fov	heaps/h3d/scene/CameraController.hx	/^	function fov(delta) {$/;"	f
fov	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var fov = c.fov == null ? null : new haxe.ds.Vector(numFrames);$/;"	v
fov	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var fov : { t : Array<Float>, v : Array<Float> };$/;"	v
fov	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var fov = 45., ratio = 16 \/ 9;$/;"	v
fovTan	heaps/h3d/shader/SAO.hx	/^		@ignore @param var fovTan : Float;$/;"	v
fovX	heaps/h3d/Camera.hx	/^		var fovX = halfFovX * 2 \/ degToRad;$/;"	v
fovX	heaps/h3d/scene/pbr/Environment.hx	/^			var fovX = PI * 2;$/;"	v
fovXtoY	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					inline function fovXtoY(v:Float) {$/;"	f
fovY	heaps/h3d/Camera.hx	/^	public var fovY : Float;$/;"	v
fovY	heaps/h3d/scene/CameraController.hx	/^	public var fovY(get, never) : Float;$/;"	v
fovY	heaps/h3d/scene/pbr/Environment.hx	/^			var fovY = PI;$/;"	v
fovY	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var fovY = 2 * Math.atan( Math.tan(fov * 0.5 * Math.PI \/ 180) \/ ratio ) * 180 \/ Math.PI;$/;"	v
fovZoomAmount	heaps/h3d/scene/CameraController.hx	/^	public var fovZoomAmount = 1.1;$/;"	v
fp	heaps/h2d/Flow.hx	/^		var fp = getProperties(s);$/;"	v
fp	heaps/hxsl/Splitter.hx	/^				var fp = new VarProps(nv);$/;"	v
fpath	heaps/hxd/fmt/pak/Build.hx	/^				var fpath = path == "" ? name : path+"\/"+name;$/;"	v
fpos	heaps/h3d/Camera.hx	/^			var fpos = follow.pos.localToGlobal();$/;"	v
fpos	heaps/hxd/res/DynamicText.hx	/^		var fpos = { file : fullPath, content : content.toLowerCase(), pos : pos };$/;"	v
fps	heaps/h3d/Engine.hx	/^	public var fps(get, never) : Float;$/;"	v
fps	heaps/hxd/Timer.hx	/^	public static function fps() : Float {$/;"	f
fpsLimit	heaps/hxd/System.js.hx	/^	public static var fpsLimit = -1;$/;"	v
frag	heaps/hxsl/CacheFile.hx	/^			var frag : Vec4;$/;"	v
fragment	heaps/h2d/Particles.hx	/^		function fragment() {$/;"	f
fragment	heaps/h2d/filter/InnerGlow.hx	/^		function fragment() {$/;"	f
fragment	heaps/h2d/filter/Mask.hx	/^		function fragment() {$/;"	f
fragment	heaps/h2d/filter/Shader.hx	/^			function fragment() {$/;"	f
fragment	heaps/h3d/impl/DirectXDriver.hx	/^			var fragment = compileShader(shader.fragment);$/;"	v
fragment	heaps/h3d/impl/DirectXDriver.hx	/^	public var fragment : ShaderContext;$/;"	v
fragment	heaps/h3d/impl/GlDriver.hx	/^	public var fragment : CompiledShader;$/;"	v
fragment	heaps/h3d/impl/Stage3dDriver.hx	/^		var fragment = compileShader(shader.fragment, []).agal;$/;"	v
fragment	heaps/h3d/pass/Border.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/pass/ColorMatrix.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/pass/Copy.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/pass/CubeCopy.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/pass/FXAA.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/pass/HardwarePick.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/scene/pbr/Environment.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/scene/pbr/Renderer.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/AlphaChannel.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/AlphaMap.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/AlphaMult.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/AmbientLight.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/AnimatedTexture.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Base2d.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/BaseMesh.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Bloom.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Blur.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Buffers.hx	/^	public var fragment : ShaderBuffers;$/;"	v
fragment	heaps/h3d/shader/ColorAdd.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/ColorKey.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/ColorMatrix.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/ColorMult.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/CubeMap.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/DirLight.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/DirShadow.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Displacement.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/FixedColor.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/GenTexture.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/GpuParticle.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/KillAlpha.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/MinMaxShader.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/NormalMap.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Outline.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Outline2D.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Parallax.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/PointLight.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/PointShadow.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/SAO.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Shadow.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/SignedDistanceField.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/SinusDeform.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/SpecularTexture.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/SpotShadow.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Texture.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/Texture2.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/VertexColor.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/VertexColorAlpha.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/VolumeDecal.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/WhiteAlpha.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/AlphaMultiply.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/CubeLod.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/Distortion.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/GammaCorrect.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/Light.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/Lighting.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/PropsImport.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/PropsTexture.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/PropsValues.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/Slides.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/StrengthValues.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/ToneMapping.hx	/^		function fragment() {$/;"	f
fragment	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function fragment() {$/;"	f
fragment	heaps/hxsl/CacheFile.hx	/^			var fragment = readString();$/;"	v
fragment	heaps/hxsl/CacheFile.hx	/^		function fragment() {$/;"	f
fragment	heaps/hxsl/RuntimeShader.hx	/^	public var fragment : RuntimeShaderData;$/;"	v
fragment	heaps/samples/FxView.hx	/^		function fragment() {$/;"	f
fragment	heaps/samples/ShaderAdvanced.hx	/^		function fragment() {$/;"	f
fragmentSource	heaps/tools/hxsl/Main.hx	/^			var fragmentSource = glsl.run(r.fragment.data);$/;"	v
frame	heaps/h2d/Interactive.hx	/^				var frame = hxd.Timer.frameCount;$/;"	v
frame	heaps/h2d/filter/AbstractMask.hx	/^	public var frame : Int;$/;"	v
frame	heaps/h3d/anim/Animation.hx	/^	public var frame(default, null) : Float;$/;"	v
frame	heaps/h3d/impl/DirectXDriver.hx	/^	var frame : Int;$/;"	v
frame	heaps/h3d/impl/GlDriver.hx	/^	var frame : Int;$/;"	v
frame	heaps/h3d/impl/RenderContext.hx	/^	public var frame : Int;$/;"	v
frame	heaps/h3d/impl/Stage3dDriver.hx	/^	var frame : Int;$/;"	v
frame	heaps/h3d/parts/Data.hx	/^	public var frame : Null<Value>;$/;"	v
frame	heaps/h3d/parts/Particle.hx	/^	public var frame : Int;$/;"	v
frame	heaps/h3d/scene/Interactive.hx	/^				var frame = hxd.Timer.frameCount;$/;"	v
frame	heaps/h3d/shader/AnimatedTexture.hx	/^			var frame = (global.time - startTime) * speed + float(int(startFrame));$/;"	v
frame	heaps/h3d/shader/GpuParticle.hx	/^		var frame : Float;$/;"	v
frame	heaps/h3d/shader/UVAnim.hx	/^			var frame = float(int((global.time - startTime) * speed));$/;"	v
frame	heaps/hxd/fmt/hmd/Data.hx	/^	public var frame : Int;$/;"	v
frame	heaps/hxd/snd/Mp3Data.hx	/^		var frame = mp.frames[0].data;$/;"	v
frame	heaps/hxd/snd/Mp3Data.hx	/^	var frame : haxe.io.Bytes;$/;"	v
frame1	heaps/h3d/anim/BufferAnimation.hx	/^			var frame1 = frame1, frame2 = frame2;$/;"	v
frame1	heaps/h3d/anim/BufferAnimation.hx	/^		var frame1 = getIFrame();$/;"	v
frame1	heaps/h3d/anim/LinearAnimation.hx	/^			var frame1 = frame1, frame2 = frame2;$/;"	v
frame1	heaps/h3d/anim/LinearAnimation.hx	/^		var frame1 = getIFrame();$/;"	v
frame2	heaps/h3d/anim/BufferAnimation.hx	/^		var frame2 = (frame1 + 1) % frameCount;$/;"	v
frame2	heaps/h3d/anim/LinearAnimation.hx	/^		var frame2 = (frame1 + 1) % frameCount;$/;"	v
frameBlending	heaps/h3d/shader/GpuParticle.hx	/^		var frameBlending : Float;$/;"	v
frameCount	heaps/h2d/KeyFrames.hx	/^	public var frameCount : Int;$/;"	v
frameCount	heaps/h2d/Particles.hx	/^	public var frameCount(default,set) : Int		= 0;$/;"	v
frameCount	heaps/h3d/anim/Animation.hx	/^	public var frameCount(default, null) : Int;$/;"	v
frameCount	heaps/h3d/parts/GpuParticles.hx	/^		var frameCount = frameCount == 0 ? frameDivisionX * frameDivisionY : frameCount;$/;"	v
frameCount	heaps/h3d/parts/GpuParticles.hx	/^	public var frameCount : Int					= 0;$/;"	v
frameCount	heaps/hxd/Timer.hx	/^	public static var frameCount = 0;$/;"	v
frameCount	heaps/hxd/fmt/hmd/Library.hx	/^				var frameCount = a.frames;$/;"	v
frameDelay	heaps/hxd/Cursor.hx	/^	var frameDelay : Float;$/;"	v
frameDivision	heaps/h3d/shader/AnimatedTexture.hx	/^		@param var frameDivision : Vec2;$/;"	v
frameDivision	heaps/h3d/shader/GpuParticle.hx	/^		@param var frameDivision : Vec3;$/;"	v
frameDivision	heaps/h3d/shader/UVAnim.hx	/^		@param var frameDivision : Float;$/;"	v
frameDivisionX	heaps/h2d/Particles.hx	/^	public var frameDivisionX(default,set) : Int	= 1;$/;"	v
frameDivisionX	heaps/h3d/parts/GpuParticles.hx	/^	public var frameDivisionX : Int				= 1;$/;"	v
frameDivisionY	heaps/h2d/Particles.hx	/^	public var frameDivisionY(default,set) : Int	= 1;$/;"	v
frameDivisionY	heaps/h3d/parts/GpuParticles.hx	/^	public var frameDivisionY : Int				= 1;$/;"	v
frameIndex	heaps/hxd/Cursor.hx	/^	var frameIndex : Int;$/;"	v
frameOffsets	heaps/hxd/snd/Mp3Data.hx	/^	var frameOffsets:Array<Int>;$/;"	v
frameRate	heaps/h2d/KeyFrames.hx	/^	public var frameRate : Float;$/;"	v
frameReady	heaps/h2d/Video.hx	/^	var frameReady : Bool;$/;"	v
frameSize	heaps/h3d/shader/GpuParticle.hx	/^		@param var frameSize : Vec2;$/;"	v
frameStart	heaps/hxd/snd/Mp3Data.hx	/^		var frameStart = currentFrame * samplesPerFrame;$/;"	v
frameTime	heaps/h3d/impl/Benchmark.hx	/^	var frameTime : Float;$/;"	v
frameTime	heaps/hxd/Cursor.hx	/^	var frameTime : Float;$/;"	v
frameToTime	heaps/h3d/anim/Animation.hx	/^	inline function frameToTime(f) {$/;"	f
frameUV	heaps/h3d/shader/GpuParticle.hx	/^		var frameUV : Vec2;$/;"	v
frameUV2	heaps/h3d/shader/GpuParticle.hx	/^		var frameUV2 : Vec2;$/;"	v
frame_rate	heaps/hxd/fmt/kframes/Data.hx	/^	var frame_rate : Float;$/;"	v
framerate	heaps/hxd/Window.hl.hx	/^	public var framerate : Null<Int> = null;$/;"	v
frames	heaps/h2d/Anim.hx	/^	public var frames(default,null) : Array<Tile>;$/;"	v
frames	heaps/h3d/anim/BufferAnimation.hx	/^		var frames = getFrames();$/;"	v
frames	heaps/h3d/anim/LinearAnimation.hx	/^		var frames = getFrames();$/;"	v
frames	heaps/h3d/anim/LinearAnimation.hx	/^	public var frames : haxe.ds.Vector<LinearFrame>;$/;"	v
frames	heaps/h3d/parts/Data.hx	/^	public var frames : Array<h2d.Tile>;$/;"	v
frames	heaps/h3d/parts/Particles.hx	/^	public var frames : Array<h2d.Tile>;$/;"	v
frames	heaps/hxd/Cursor.hx	/^	var frames : Array<hxd.BitmapData>;$/;"	v
frames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^							var frames = [for( f in new Access(xml.firstElement()).elements ) { var f = f.innerData.s/;"	v
frames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var frames = uvAnims.get(obj);$/;"	v
frames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var frames = new haxe.ds.Vector(sameData ? 1 : numFrames);$/;"	v
frames	heaps/hxd/fmt/hmd/Data.hx	/^	public var frames : Int;$/;"	v
frames	heaps/hxd/fmt/hmd/Dump.hx	/^				var frames = a.frames;$/;"	v
free	heaps/h2d/ZGroup.hx	/^	var free     : DepthEntry;$/;"	v
free	heaps/h3d/impl/ManagedBuffer.hx	/^		var free = freeList;$/;"	v
free	heaps/h3d/impl/MemoryManager.hx	/^				var free = b.freeList;$/;"	v
free	heaps/h3d/impl/MemoryManager.hx	/^			var free = cleanTextures(false);$/;"	v
free	heaps/hxd/res/NanoJpeg.hx	/^	inline function free( bytes : haxe.io.Bytes ) {$/;"	f
free	heaps/hxsl/Flatten.hx	/^				var free = best.size - size;$/;"	v
freeAuxiliarySends	heaps/hxd/snd/openal/AudioTypes.hx	/^	var freeAuxiliarySends    : Array<Int>;$/;"	v
freeBuffer	heaps/h3d/impl/ManagedBuffer.hx	/^	function freeBuffer( b : Buffer ) {$/;"	f
freeList	heaps/h3d/impl/ManagedBuffer.hx	/^	var freeList : FreeCell;$/;"	v
freeManaged	heaps/h3d/impl/MemoryManager.hx	/^	function freeManaged( m : ManagedBuffer ) {$/;"	f
freeMemorySize	heaps/h3d/impl/MemoryManager.hx	/^	function freeMemorySize() {$/;"	f
freeStreamBuffers	heaps/hxd/snd/Manager.hx	/^	var freeStreamBuffers : Array<Buffer>;$/;"	v
frequency	heaps/h3d/shader/SinusDeform.hx	/^		@param var frequency : Float;$/;"	v
frequency	heaps/hxd/snd/openal/Emulator.hx	/^	public var frequency : Int = 1;$/;"	v
frequency	heaps/hxd/snd/openal/Emulator.hx	/^	public var frequency : Int;$/;"	v
freshPads	heaps/hxd/Pad.hx	/^		var freshPads : Array<js.html.Gamepad> = [];$/;"	v
fresnel	heaps/h3d/scene/pbr/Environment.hx	/^					var fresnel = pow( 1 - VoH, 5. );$/;"	v
fresnelSchlick	heaps/h3d/shader/pbr/BDRF.hx	/^		function fresnelSchlick( VdH : Float, F0 : Vec3 ) : Vec3 {$/;"	f
friction	heaps/h2d/SpriteBatch.hx	/^	public var friction : Float = 1.;$/;"	v
friction	heaps/h3d/scene/CameraController.hx	/^	public var friction = 0.4;$/;"	v
from	heaps/h2d/KeyFrames.hx	/^					var from = Std.parseInt(reg.matched(2));$/;"	v
from	heaps/h2d/KeyFrames.hx	/^	var from : Int;$/;"	v
from	heaps/hxd/Direction.hx	/^	public static function from(x:Float, y:Float) : Direction {$/;"	f
fromArray	heaps/h3d/Vector.hx	/^	public static inline function fromArray(a : Array<Float>) {$/;"	f
fromBitmap	heaps/h2d/Tile.hx	/^	public static function fromBitmap( bmp : hxd.BitmapData ) : Tile {$/;"	f
fromBitmap	heaps/h3d/mat/Texture.hx	/^	public static function fromBitmap( bmp : hxd.BitmapData ) {$/;"	f
fromBytes	heaps/hxd/impl/UncheckedBytes.hx	/^	@:from public static inline function fromBytes( b : haxe.io.Bytes ) : UncheckedBytes {$/;"	f
fromBytes	heaps/hxd/res/Any.hx	/^	public static function fromBytes( path : String, bytes : haxe.io.Bytes ) {$/;"	f
fromColor	heaps/h2d/Tile.hx	/^	public static function fromColor( color : Int, ?width = 1, ?height = 1, ?alpha = 1. ) : Tile {$/;"	f
fromColor	heaps/h3d/Vector.hx	/^	public static inline function fromColor( c : Int, scale : Float = 1.0 ) {$/;"	f
fromColor	heaps/h3d/mat/Texture.hx	/^	public static function fromColor( color : Int, ?alpha = 1. ) {$/;"	f
fromInt	heaps/hxd/Pixels.hx	/^	public static inline function fromInt( v : Int ) : Channel return cast v;$/;"	f
fromInt	heaps/hxd/fmt/hmd/Data.hx	/^	public static inline function fromInt( v : Int ) : GeometryDataFormat {$/;"	f
fromIntArray	heaps/hxd/BytesBuffer.hx	/^	public static inline function fromIntArray(arr:Array<Int>) {$/;"	f
fromNative	heaps/hxd/BitmapData.hx	/^	public static function fromNative( data : BitmapInnerData ) : BitmapData {$/;"	f
fromNormalPoint	heaps/h3d/col/Plane.hx	/^	public static inline function fromNormalPoint( n : Point, p : Point ) {$/;"	f
fromPixels	heaps/h2d/Tile.hx	/^	public static function fromPixels( pixels : hxd.Pixels ) : Tile {$/;"	f
fromPixels	heaps/h3d/mat/Texture.hx	/^	public static function fromPixels( pixels : hxd.Pixels, ?format ) {$/;"	f
fromPixels	heaps/hxd/Pixels.hx	/^	@:from public static function fromPixels(p:Pixels) : PixelsARGB {$/;"	f
fromPixels	heaps/hxd/Pixels.hx	/^	@:from public static function fromPixels(p:Pixels) : PixelsFloat {$/;"	f
fromPixels	heaps/hxd/Pixels.hx	/^	@:from public static function fromPixels(p:Pixels) : PixelsFloatRGBA {$/;"	f
fromPoints	heaps/h2d/col/Bounds.hx	/^	public static inline function fromPoints( min : Point, max : Point ) : Bounds {$/;"	f
fromPoints	heaps/h2d/col/IBounds.hx	/^	public static inline function fromPoints( min : IPoint, max : IPoint ) : IBounds {$/;"	f
fromPoints	heaps/h2d/col/Ray.hx	/^	public static inline function fromPoints( p1 : Point, p2 : Point ) {$/;"	f
fromPoints	heaps/h3d/col/Bounds.hx	/^	public static inline function fromPoints( min : Point, max : Point ) {$/;"	f
fromPoints	heaps/h3d/col/Plane.hx	/^	public static inline function fromPoints( p0 : Point, p1 : Point, p2 : Point ) {$/;"	f
fromPoints	heaps/h3d/col/Ray.hx	/^	public static inline function fromPoints( p1 : Point, p2 : Point ) {$/;"	f
fromPolygon2D	heaps/h3d/col/Polygon.hx	/^	public static function fromPolygon2D( p : h2d.col.Polygon, z = 0. ) {$/;"	f
fromTexture	heaps/h2d/Tile.hx	/^	public static function fromTexture( t : h3d.mat.Texture ) : Tile {$/;"	f
fromU8Array	heaps/hxd/BytesBuffer.hx	/^	public static inline function fromU8Array(arr:Array<Int>) {$/;"	f
fromValues	heaps/h2d/col/Bounds.hx	/^	public static inline function fromValues( x0 : Float, y0 : Float, width : Float, height : Float/;"	f
fromValues	heaps/h2d/col/IBounds.hx	/^	public static inline function fromValues( x0 : Int, y0 : Int, width : Int, height : Int ) : IBo/;"	f
fromValues	heaps/h2d/col/Ray.hx	/^	public static inline function fromValues( x, y, dx, dy ) {$/;"	f
fromValues	heaps/h3d/col/Bounds.hx	/^	public static inline function fromValues( x : Float, y : Float, z : Float, dx : Float, dy : Flo/;"	f
fromValues	heaps/h3d/col/Ray.hx	/^	public static inline function fromValues( x, y, z, dx, dy, dz ) {$/;"	f
from_frame	heaps/hxd/fmt/kframes/Data.hx	/^	@:optional var from_frame : Int;$/;"	v
front	heaps/h3d/Matrix.hx	/^	public inline function front() {$/;"	f
front	heaps/hxd/poly2tri/SweepContext.hx	/^	public var front:AdvancingFront;$/;"	v
front	heaps/hxd/snd/NativeChannel.hx	/^	var front : js.html.audio.AudioBuffer;$/;"	v
front2back	heaps/h2d/RenderContext.hx	/^	public var front2back : Bool;$/;"	v
front2back	heaps/h2d/ZGroup.hx	/^	public var front2back  : Bool;$/;"	v
frontToBack	heaps/h3d/scene/Renderer.hx	/^	var frontToBack : h3d.pass.PassList -> Void;$/;"	v
froot	heaps/hxd/fs/LocalFileSystem.hx	/^		var froot = exePath == null ? baseDir : sys.FileSystem.fullPath(exePath.join("\/") + "\/" + ba/;"	v
frustum	heaps/h3d/Camera.hx	/^	public var frustum(default, null) : h3d.col.Frustum;$/;"	v
frustum	heaps/h3d/impl/Benchmark.hx	/^		var frustum = s3d.camera.frustum;$/;"	v
frustumBottom	heaps/h3d/col/Plane.hx	/^	public static inline function frustumBottom( mvp : Matrix ) {$/;"	f
frustumFar	heaps/h3d/col/Plane.hx	/^	public static inline function frustumFar( mvp : Matrix ) {$/;"	f
frustumLeft	heaps/h3d/col/Plane.hx	/^	public static inline function frustumLeft( mvp : Matrix ) {$/;"	f
frustumNear	heaps/h3d/col/Plane.hx	/^	public static inline function frustumNear( mvp : Matrix ) {$/;"	f
frustumRight	heaps/h3d/col/Plane.hx	/^	public static inline function frustumRight( mvp : Matrix ) {$/;"	f
frustumTop	heaps/h3d/col/Plane.hx	/^	public static inline function frustumTop( mvp : Matrix ) {$/;"	f
fs	heaps/h2d/domkit/Style.hx	/^			var fs = hxd.impl.Api.downcast(hxd.res.Loader.currentInstance.fs, hxd.fs.LocalFileSystem);$/;"	v
fs	heaps/h3d/mat/MaterialDatabase.hx	/^		var fs = hxd.impl.Api.downcast(hxd.res.Loader.currentInstance.fs, hxd.fs.LocalFileSystem);$/;"	v
fs	heaps/hxd/File.hx	/^						var fs = new flash.filesystem.FileStream();$/;"	v
fs	heaps/hxd/File.hx	/^		var fs = new flash.filesystem.FileStream();$/;"	v
fs	heaps/hxd/System.flash.hx	/^				var fs : flash.utils.IDataInput = Type.createInstance(flash.Lib.current.loaderInfo.applicati/;"	v
fs	heaps/hxd/fmt/fbx/Filter.hx	/^			var fs = filterRec(c, sub, index);$/;"	v
fs	heaps/hxd/fmt/pak/Build.hx	/^				var fs = sys.io.File.read(pakFile);$/;"	v
fs	heaps/hxd/fmt/pak/Build.hx	/^	var fs : hxd.fs.LocalFileSystem;$/;"	v
fs	heaps/hxd/fmt/pak/FileSystem.hx	/^	var fs : FileSystem;$/;"	v
fs	heaps/hxd/fmt/pak/Loader.hx	/^	var fs : FileSystem;$/;"	v
fs	heaps/hxd/fs/EmbedFileSystem.hx	/^	var fs : EmbedFileSystem;$/;"	v
fs	heaps/hxd/fs/LocalFileSystem.hx	/^	var fs : LocalFileSystem;$/;"	v
fs	heaps/hxd/fs/MultiFileSystem.hx	/^	public var fs : Array<FileSystem>;$/;"	v
fs	heaps/hxd/fs/MultiFileSystem.hx	/^	var fs : MultiFileSystem;$/;"	v
fs	heaps/hxd/impl/Air3File.hx	/^	var fs : flash.filesystem.FileStream;$/;"	v
fs	heaps/hxd/res/Any.hx	/^		var fs = new SingleFileSystem(path,bytes);$/;"	v
fs	heaps/hxd/res/FileTree.hx	/^			var fs = new hxd.fs.LocalFileSystem(path,options.configuration);$/;"	v
fs	heaps/hxd/res/Gradients.hx	/^		var fs = entry.open();$/;"	v
fs	heaps/hxd/res/Loader.hx	/^	public var fs(default,null) : hxd.fs.FileSystem;$/;"	v
fs	heaps/hxd/res/Model.hx	/^		var fs = entry.open();$/;"	v
fsDelayed	heaps/hxd/Window.flash.hx	/^	var fsDelayed : Bool;$/;"	v
fset	heaps/hxsl/Macros.hx	/^				var fset : Field = {$/;"	v
ft	heaps/h3d/impl/Benchmark.hx	/^		var ft = (t0 - prevFrame) * 1e9;$/;"	v
ft	heaps/hxd/snd/Mp3Data.hx	/^		var ft;$/;"	v
ft	heaps/hxsl/Checker.hx	/^				var ft = f.args[i].type;$/;"	v
ft	heaps/hxsl/Linker.hx	/^				var ft = null;$/;"	v
ftarget	heaps/h3d/Camera.hx	/^			var ftarget = follow.target.localToGlobal();$/;"	v
ftime	heaps/h3d/parts/GpuParticles.hx	/^				var ftime = g.maxTime;$/;"	v
ftime	heaps/h3d/parts/GpuParticles.hx	/^		var ftime = g.maxTime;$/;"	v
ftype	heaps/hxd/res/FileTree.hx	/^			var ftype = extensions.get(f.ext);$/;"	v
fui	heaps/samples/SampleApp.hx	/^	var fui : h2d.Flow;$/;"	v
full	heaps/h3d/col/Capsule.hx	/^		var full = a.add(b);$/;"	v
fullObj	heaps/hxd/fs/FileConverter.hx	/^			var fullObj = mergeRec(parent.obj, obj);$/;"	v
fullOutPath	heaps/hxd/fs/FileConverter.hx	/^		var fullOutPath = baseDir + outFile;$/;"	v
fullPath	heaps/h3d/prim/ModelCache.hx	/^		var fullPath = texturePath;$/;"	v
fullPath	heaps/hxd/fs/BytesFileSystem.hx	/^	var fullPath : String;$/;"	v
fullPath	heaps/hxd/fs/FileConverter.hx	/^		var fullPath = baseDir + e.file;$/;"	v
fullPath	heaps/hxd/res/DynamicText.hx	/^		var fullPath = null;$/;"	v
fullPath	heaps/hxd/res/FileTree.hx	/^			var fullPath = fs.getAbsolutePath(f);$/;"	v
fullScreen	heaps/h3d/Engine.hx	/^	public var fullScreen(default, set) : Bool;$/;"	v
fullscreen	heaps/hxd/Window.flash.hx	/^		var fullscreen = m != Windowed;$/;"	v
fullscreen	heaps/hxd/Window.js.hx	/^		var fullscreen = m != Windowed;$/;"	v
funMap	heaps/hxsl/Eval.hx	/^	var funMap : Map<TVar,TFunction>;$/;"	v
funString	heaps/hxsl/Printer.hx	/^	public function funString( f : TFunction ) {$/;"	f
funs	heaps/hxsl/Ast.hx	/^	var funs : Array<TFunction>;$/;"	v
funs	heaps/hxsl/Checker.hx	/^		var funs = [];$/;"	v
funs	heaps/hxsl/Eval.hx	/^		var funs = [];$/;"	v
funs	heaps/hxsl/Flatten.hx	/^		var funs = [for( f in s.funs ) mapFun(f, mapExpr)];$/;"	v
funs	heaps/hxsl/Linker.hx	/^		var funs = [$/;"	v
fv	heaps/hxsl/Cache.hx	/^			var fv : TVar = {$/;"	v
fv	heaps/hxsl/Cache.hx	/^		var fv : TVar = declVar("init",TFun([]), Function);$/;"	v
fv	heaps/hxsl/Checker.hx	/^			var fv : TVar = {$/;"	v
fvars	heaps/hxsl/Splitter.hx	/^		var fvars = [for( v in fvars ) if( !v.local ) v.v];$/;"	v
fx	heaps/h3d/parts/Particle.hx	/^	public var fx : Float;$/;"	v
fx	heaps/samples/FxView.hx	/^			var fx = cast(i.local3d, hrt.prefab.fx.FX.FXAnimation);$/;"	v
fxaa	heaps/h3d/scene/pbr/Renderer.hx	/^	var fxaa = new h3d.pass.FXAA();$/;"	v
fy	heaps/h3d/parts/Particle.hx	/^	public var fy : Float;$/;"	v
fz	heaps/h3d/parts/Particle.hx	/^	public var fz : Float;$/;"	v
g	_old/Canvas.hx	/^var g:h2d.Graphics; \/\/ cannot use dynamic vars here..?$/;"	v
g	heaps/h2d/CdbLevel.hx	/^					var g = new LevelGroup(name, t, s.x, s.y, s.w, s.h, s.opts.value);$/;"	v
g	heaps/h2d/Graphics.hx	/^	public var g : Float;$/;"	v
g	heaps/h2d/HtmlText.hx	/^				var g = font.getChar(cc);$/;"	v
g	heaps/h2d/Particles.hx	/^				var g = gradient.get(vec2(input.color.r, textureColor.r));$/;"	v
g	heaps/h2d/Particles.hx	/^		var g = this;$/;"	v
g	heaps/h2d/SpriteBatch.hx	/^	public var g : Float = 1;$/;"	v
g	heaps/h2d/domkit/BaseComponents.hx	/^			var g = parseFloat(g);$/;"	v
g	heaps/h3d/Matrix.hx	/^		var g = ins * lumG;$/;"	v
g	heaps/h3d/Matrix.hx	/^		var g = t12 + t22 + t32;$/;"	v
g	heaps/h3d/Vector.hx	/^	public var g(get, set) : Float;$/;"	v
g	heaps/h3d/impl/LogDriver.hx	/^					var g = shader.globals;$/;"	v
g	heaps/h3d/impl/LogDriver.hx	/^				var g = s.globals;$/;"	v
g	heaps/h3d/impl/Stage3dDriver.hx	/^				var g = data.globals;$/;"	v
g	heaps/h3d/parts/Data.hx	/^	public var g : Float;$/;"	v
g	heaps/h3d/parts/GpuParticles.hx	/^			var g = groups[gid];$/;"	v
g	heaps/h3d/parts/GpuParticles.hx	/^			var g = groups[i];$/;"	v
g	heaps/h3d/parts/GpuParticles.hx	/^		var g = groups[ctx.drawPass.index];$/;"	v
g	heaps/h3d/parts/GpuParticles.hx	/^		var g = this;$/;"	v
g	heaps/h3d/parts/Particle.hx	/^	public var g : Float;$/;"	v
g	heaps/h3d/pass/Blur.hx	/^			var g = g1 + g2;$/;"	v
g	heaps/h3d/pass/ShaderManager.hx	/^			var g = s.globals;$/;"	v
g	heaps/h3d/scene/Graphics.hx	/^	public var g : Float;$/;"	v
g	heaps/h3d/scene/Skin.hx	/^			var g = jointsGraphics;$/;"	v
g	heaps/h3d/scene/pbr/Environment.hx	/^					var g = G_Smith( roughness, NoV, NoL );$/;"	v
g	heaps/hxd/Charset.hx	/^			var g = glyphs.get(c);$/;"	v
g	heaps/hxd/Math.hx	/^		var g = Std.int(g1 * (1-k) + g2 * k);$/;"	v
g	heaps/hxd/Perlin.hx	/^			var g = inlineGradient(seed + i, x * s, y * s) * p;$/;"	v
g	heaps/hxd/Pixels.hx	/^				var g = bytes[p+2];$/;"	v
g	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var g = glyphs.get(k.next);$/;"	v
g	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var g = mergeGroups.get(id);$/;"	v
g	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var g = getChild(o.model, "Geometry");$/;"	v
g	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var g = new hxd.fmt.fbx.Geometry(this, g);$/;"	v
g	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var g = getChild(o.model, "Geometry");$/;"	v
g	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var g = new Geometry();$/;"	v
g	heaps/hxd/fmt/hmd/Dump.hx	/^			var g = h.geometries[k];$/;"	v
g	heaps/hxd/fmt/hmd/Reader.hx	/^			var g = new Geometry();$/;"	v
g	heaps/hxd/res/NanoJpeg.hx	/^					var g = njClip((y -  88 * cb - 183 * cr + 128) >> 8);$/;"	v
g	heaps/hxd/snd/OggData.hx	/^			var g = new OggData(bytes);$/;"	v
g	heaps/hxsl/AgalOut.hx	/^				var g = current.globals;$/;"	v
g	heaps/hxsl/Checker.hx	/^				var g = globals.get(name);$/;"	v
g	heaps/hxsl/Checker.hx	/^		var g = globals.get(f);$/;"	v
g	heaps/hxsl/Flatten.hx	/^		var g : TVar = {$/;"	v
g	heaps/hxsl/Flatten.hx	/^	public var g : TVar;$/;"	v
g	heaps/hxsl/RuntimeShader.hx	/^		var g = new AllocGlobal(pos, path, type);$/;"	v
g	heaps/samples/Bounds.hx	/^			var g = hxd.impl.Api.downcast(prev.getChildAt(2), h2d.Graphics);$/;"	v
g	heaps/samples/Bounds.hx	/^	var g : h2d.Graphics;$/;"	v
g	heaps/samples/DrawingTiles.hx	/^		var g = new h2d.Graphics(fui);$/;"	v
g	heaps/samples/Filters.hx	/^			var g = new h2d.filter.Glow(0xFFA500, 50, 2);$/;"	v
g	heaps/samples/Filters.hx	/^			var g = new h2d.filter.Glow(0xFFFFFF, 100, 2);$/;"	v
g	heaps/samples/GpuParticles.hx	/^		var g = new h3d.parts.GpuParticles.GpuPartGroup(parts);$/;"	v
g	heaps/samples/GraphicsDraw.hx	/^		var g = new h2d.Graphics(s2d);$/;"	v
g	heaps/samples/Particles2d.hx	/^	var g : ParticleGroup;$/;"	v
g	heaps/samples/World.hx	/^		var g = parts.addGroup();$/;"	v
g0	heaps/h3d/shader/NoiseLib.hx	/^  var g0 = rgrad2(vec2(iuw.x, ivw.x), rot);$/;"	v
g1	heaps/h3d/pass/Blur.hx	/^			var g1 = gauss(i1, sigma);$/;"	v
g1	heaps/h3d/shader/NoiseLib.hx	/^  var g1 = rgrad2(vec2(iuw.y, ivw.y), rot);$/;"	v
g1	heaps/hxd/Math.hx	/^		var g1 = (c1 >> 8) & 0xFF;$/;"	v
g2	heaps/h3d/pass/Blur.hx	/^			var g2 = gauss(i2, sigma);$/;"	v
g2	heaps/h3d/shader/NoiseLib.hx	/^  var g2 = rgrad2(vec2(iuw.z, ivw.z), rot);$/;"	v
g2	heaps/hxd/Math.hx	/^		var g2 = (c2 >> 8) & 0xFF;$/;"	v
gMask	heaps/hxd/res/Image.hx	/^			var gMask = f.readInt32();$/;"	v
ga	heaps/hxd/Perlin.hx	/^		var ga = gradient1DAt(x, ix, seed);$/;"	v
ga	heaps/hxd/Perlin.hx	/^		var ga = gradient3DAt(x, y, z, ix, iy, iz + 1, seed);$/;"	v
ga	heaps/hxd/Perlin.hx	/^		var ga = gradient3DAt(x, y, z, ix, iy, iz, seed);$/;"	v
ga	heaps/hxd/Perlin.hx	/^		var ga = gradientAt(x, y, ix, iy, seed);$/;"	v
gain	heaps/h2d/filter/Blur.hx	/^	public var gain(get, set) : Float;$/;"	v
gain	heaps/h3d/pass/Blur.hx	/^	public var gain(default,set) : Float;$/;"	v
gain	heaps/hxd/snd/NativeChannel.hx	/^	var gain : js.html.audio.GainNode;$/;"	v
gain	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var gain : GainNode;$/;"	v
gainHF	heaps/hxd/snd/effect/LowPass.hx	/^	public var gainHF : Float;$/;"	v
gainPool	heaps/hxd/snd/webaudio/Context.hx	/^	static var gainPool : Array<GainNode>;$/;"	v
gamma	heaps/hxd/fmt/hdr/Reader.hx	/^		var gamma = keys.get("GAMMA") == "1";$/;"	v
gammaCorrect	heaps/h3d/scene/pbr/Environment.hx	/^		function gammaCorrect( color : Vec3 ) : Vec3 {$/;"	f
gammaCorrect	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var gammaCorrect : Bool;$/;"	v
gammaCorrect	heaps/hxd/fmt/hdr/Reader.hx	/^		var gammaCorrect = sRGB ? 1 : 1 \/ 2.2;$/;"	v
gammaVals	heaps/hxd/fmt/hdr/Reader.hx	/^		var gammaVals = [for( e in 0...256 ) Math.pow(e, gammaCorrect)];$/;"	v
garbage	heaps/h3d/scene/World.hx	/^	public function garbage() {$/;"	f
gatherVar	heaps/hxsl/Flatten.hx	/^	function gatherVar( v : TVar ) {$/;"	f
gauss	heaps/h3d/pass/Blur.hx	/^	function gauss( x:Float, s:Float ) : Float {$/;"	f
gb	heaps/hxd/Perlin.hx	/^		var gb = gradient1DAt(x, ix + 1, seed);$/;"	v
gb	heaps/hxd/Perlin.hx	/^		var gb = gradient3DAt(x, y, z, ix + 1, iy, iz + 1, seed);$/;"	v
gb	heaps/hxd/Perlin.hx	/^		var gb = gradient3DAt(x, y, z, ix + 1, iy, iz, seed);$/;"	v
gb	heaps/hxd/Perlin.hx	/^		var gb = gradientAt(x, y, ix + 1, iy, seed);$/;"	v
gc	heaps/h3d/mat/PbrMaterial.hx	/^			var gc = mainPass.getShader(h3d.shader.pbr.GammaCorrect);$/;"	v
gc	heaps/hxd/Perlin.hx	/^		var gc = gradient3DAt(x, y, z, ix, iy + 1, iz + 1, seed);$/;"	v
gc	heaps/hxd/Perlin.hx	/^		var gc = gradient3DAt(x, y, z, ix, iy + 1, iz, seed);$/;"	v
gc	heaps/hxd/Perlin.hx	/^		var gc = gradientAt(x, y, ix, iy + 1, seed);$/;"	v
gc	heaps/hxd/impl/CacheAllocator.hx	/^	public function gc() {$/;"	f
gc	heaps/hxsl/Flatten.hx	/^			var gc : TVar = {$/;"	v
gd	heaps/hxd/Perlin.hx	/^		var gd = gradient3DAt(x, y, z, ix + 1, iy + 1, iz + 1, seed);$/;"	v
gd	heaps/hxd/Perlin.hx	/^		var gd = gradient3DAt(x, y, z, ix + 1, iy + 1, iz, seed);$/;"	v
gd	heaps/hxd/Perlin.hx	/^		var gd = gradientAt(x, y, ix + 1, iy + 1, seed);$/;"	v
gdata	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var gdata = hgeom.get(g.getId());$/;"	v
genBuffers	heaps/hxd/snd/openal/Emulator.hx	/^	public static function genBuffers(n : Int, buffers : Bytes) {$/;"	f
genChecker	heaps/h3d/mat/Texture.hx	/^	public static function genChecker(size) {$/;"	f
genDisc	heaps/h3d/mat/Texture.hx	/^	public static function genDisc( size : Int, color : Int, ?alpha = 1. ) {$/;"	f
genFloat	heaps/hxsl/Checker.hx	/^		var genFloat = [for( t in genType ) { args : [ { name : "value", type : t } ], ret : t } ];$/;"	v
genFloat2	heaps/hxsl/Checker.hx	/^		var genFloat2 = [for( t in genType ) { args : [ { name : "a", type : t }, { name : "b", type :/;"	v
genNoise	heaps/h3d/mat/Texture.hx	/^	public static function genNoise(size) {$/;"	f
genSources	heaps/hxd/snd/openal/Emulator.hx	/^	public static function genSources(n : Int, sources : Bytes) {$/;"	f
genTexture	heaps/h3d/mat/Texture.hx	/^	static function genTexture( mode : Int, size : Int, color : Int, alpha : Float ) {$/;"	f
genTextureKeys	heaps/h3d/mat/Texture.hx	/^	static var genTextureKeys= new Map<String,{}>();$/;"	v
genType	heaps/hxsl/Checker.hx	/^		var genType = [TFloat, vec2, vec3, vec4];$/;"	v
genWithFloat	heaps/hxsl/Checker.hx	/^		var genWithFloat = [for( t in genType ) { args : [ { name : "a", type : t }, { name : "b", typ/;"	v
generateFlowThreeChilds	heaps/samples/Flows.hx	/^				function generateFlowThreeChilds(hAlign: FlowAlign) : Flow {$/;"	f
generateFlowsWithThreeFlowsWithThreeChilds	heaps/samples/Flows.hx	/^			function generateFlowsWithThreeFlowsWithThreeChilds(vAlign : FlowAlign, layout) {$/;"	f
generateGlyphs	heaps/hxd/res/BDFFont.hx	/^	function generateGlyphs() {$/;"	f
generateLightProj	heaps/h3d/scene/pbr/SpotLight.hx	/^	function generateLightProj(){$/;"	f
generateMipMaps	heaps/h3d/impl/DirectXDriver.hx	/^	override function generateMipMaps(texture:h3d.mat.Texture) {$/;"	f
generateMipMaps	heaps/h3d/impl/Driver.hx	/^	public function generateMipMaps( texture : h3d.mat.Texture ) {$/;"	f
generateMipMaps	heaps/h3d/impl/GlDriver.hx	/^	override function generateMipMaps( t : h3d.mat.Texture ) {$/;"	f
generateNormals	heaps/hxd/fmt/fbx/HMDOut.hx	/^	public var generateNormals = false;$/;"	v
generateProjects	heaps/samples/Generator.hx	/^	static function generateProjects() {$/;"	f
geom	heaps/h3d/scene/World.hx	/^			var geom = lib.header.geometries[m.geometry];$/;"	v
geom	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var geom = getParent(def, "Geometry");$/;"	v
geom	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var geom = hgeom.get(getParent(def, "Geometry").getId());$/;"	v
geom	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var geom = new Geometry(this, getChild(m, "Geometry"));$/;"	v
geom	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var geom = null;$/;"	v
geom	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var geom = buildGeom(new hxd.fmt.fbx.Geometry(this, g), skin, dataOut, hasNormalMap);$/;"	v
geom	heaps/hxd/fmt/hmd/Library.hx	/^			var geom = header.geometries[m.geometry];$/;"	v
geom2	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var geom2 = new Geometry(this, getChild(m2, "Geometry"));$/;"	v
geomTrans	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var geomTrans = null;$/;"	v
geometries	heaps/h3d/scene/World.hx	/^	public var geometries : Array<WorldModelGeometry>;$/;"	v
geometries	heaps/hxd/fmt/hmd/Data.hx	/^	public var geometries : Array<Geometry>;$/;"	v
geometry	heaps/hxd/fmt/hmd/Data.hx	/^	public var geometry : Index<Geometry>;$/;"	v
geometryScaleFactor	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var geometryScaleFactor = scaleFactor;$/;"	v
geometrySchlickGGX	heaps/h3d/shader/pbr/BDRF.hx	/^		function geometrySchlickGGX( NdV : Float, NdL : Float, roughness : Float ) : Float {$/;"	f
geoms	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var geoms = getParents(def, "Geometry");$/;"	v
geosphere	heaps/samples/Polygons.hx	/^		var geosphere = new GeoSphere();$/;"	v
geosphereMesh	heaps/samples/Polygons.hx	/^		var geosphereMesh = new Mesh(geosphere, s3d);$/;"	v
get	heaps/h3d/impl/Driver.hx	/^	public static function get( names : Array<String> ) {$/;"	f
get	heaps/h3d/impl/TextureCache.hx	/^	public inline function get( index = 0 ) {$/;"	f
get	heaps/h3d/prim/Plane2D.hx	/^	public static function get() {$/;"	f
get	heaps/h3d/scene/Renderer.hx	/^	function get( name : String ) {$/;"	f
get	heaps/hxd/FloatBuffer.hx	/^	@:arrayAccess inline function get(index) return this.array[index];$/;"	f
get	heaps/hxd/fmt/blend/Data.hx	/^	public function get(name:String):Dynamic {$/;"	f
get	heaps/hxd/fmt/blend/Data.hx	/^	public function get(type:String):Array<Handle> {$/;"	f
get	heaps/hxd/fmt/fbx/Data.hx	/^	public static function get( n : FbxNode, path : String, opt = false ) {$/;"	f
get	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function get( name : String ) : FileEntry {$/;"	f
get	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function get( path : String ) : FileEntry {$/;"	f
get	heaps/hxd/fmt/tiff/Data.hx	/^	public static function get( f : TifFile, tag : TifTag ) {$/;"	f
get	heaps/hxd/fs/BytesFileSystem.hx	/^	override function get( name : String ) : FileEntry return null;$/;"	f
get	heaps/hxd/fs/BytesFileSystem.hx	/^	public function get( path : String ) {$/;"	f
get	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function get( name : String ) {$/;"	f
get	heaps/hxd/fs/EmbedFileSystem.hx	/^	public function get( path : String ) {$/;"	f
get	heaps/hxd/fs/FileEntry.hx	/^	public function get( name : String ) : FileEntry return null;$/;"	f
get	heaps/hxd/fs/FileSystem.hx	/^	public function get( path : String ) : FileEntry;$/;"	f
get	heaps/hxd/fs/LocalFileSystem.hx	/^	override function get( name : String ) {$/;"	f
get	heaps/hxd/fs/LocalFileSystem.hx	/^	public function get( path : String ) {$/;"	f
get	heaps/hxd/fs/LocalFileSystem.hx	/^	public function get(path:String) : FileEntry {$/;"	f
get	heaps/hxd/fs/MultiFileSystem.hx	/^	override function get( name : String ) : FileEntry {$/;"	f
get	heaps/hxd/fs/MultiFileSystem.hx	/^	public function get( path : String ) : FileEntry {$/;"	f
get	heaps/hxd/impl/Allocator.hx	/^	public static function get() : Allocator {$/;"	f
get	heaps/hxd/impl/CacheAllocator.hx	/^	public inline function get() {$/;"	f
get	heaps/hxd/impl/UncheckedBytes.hx	/^	@:arrayAccess inline function get( i : Int ) : Int {$/;"	f
get	heaps/hxd/res/Atlas.hx	/^	public function get( name : String, ?horizontalAlign : h2d.Flow.FlowAlign, ?verticalAlign : h2d/;"	f
get	heaps/hxd/res/DefaultFont.hx	/^	public static function get() : h2d.Font {$/;"	f
get	heaps/hxd/res/NanoJpeg.hx	/^	@:arrayAccess inline function get(i:Int) {$/;"	f
get	heaps/hxd/res/NanoJpeg.hx	/^	inline function get(p) {$/;"	f
get	heaps/hxd/snd/Manager.hx	/^	public static function get() : Manager {$/;"	f
get	heaps/hxd/snd/webaudio/Context.hx	/^	public static function get() : AudioContext {$/;"	f
get	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	function get( ctx : AudioContext ) {$/;"	f
get	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	function get( ctx : AudioContext ) {$/;"	f
get	heaps/hxsl/Cache.hx	/^	public static function get() : Cache {$/;"	f
get	heaps/hxsl/Dce.hx	/^	function get( v : TVar ) {$/;"	f
get	heaps/hxsl/Flatten.hx	/^		inline function get(i) : TExpr {$/;"	f
get	heaps/hxsl/Globals.hx	/^	public function get( path : String) : Dynamic {$/;"	f
get	heaps/hxsl/Globals.hx	/^	public inline function get( globals : Globals ) : T {$/;"	f
get	heaps/hxsl/Splitter.hx	/^	function get( v : TVar ) {$/;"	f
getAbsPos	heaps/h2d/Object.hx	/^	public function getAbsPos() {$/;"	f
getAbsPos	heaps/h3d/scene/Object.hx	/^	public function getAbsPos() {$/;"	f
getAbsolutePath	heaps/hxd/fs/LocalFileSystem.hx	/^	public function getAbsolutePath( f : FileEntry ) : String {$/;"	f
getAll	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getAll( n : FbxNode, path : String ) {$/;"	f
getAll	heaps/hxd/snd/Manager.hx	/^	public function getAll( sound : hxd.res.Sound ) : Iterator<Channel> {$/;"	f
getAllModels	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function getAllModels() {$/;"	f
getAngleFromNormalized	heaps/h2d/Particles.hx	/^		inline function getAngleFromNormalized(a : Float, rand : Float = 1.) : Float {$/;"	f
getAnim	heaps/hxd/res/Atlas.hx	/^	public function getAnim( ?name : String, ?horizontalAlign : h2d.Flow.FlowAlign, ?verticalAlign /;"	f
getAnimationNames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getAnimationNames() : Array<String> {$/;"	f
getAnisotropicRoughness	heaps/h3d/shader/pbr/BDRF.hx	/^		function getAnisotropicRoughness( roughness : Float, anisotropy : Float ) : Vec2 {$/;"	f
getArea	heaps/h2d/col/Triangle.hx	/^	public inline function getArea() {$/;"	f
getArg	heaps/hxsl/CacheFileBuilder.hx	/^			function getArg() {$/;"	f
getAssignedReg	heaps/hxsl/AgalOptim.hx	/^	function getAssignedReg( op : Opcode ) {$/;"	f
getAuxiliarySend	heaps/hxd/snd/openal/AudioTypes.hx	/^	public function getAuxiliarySend(effect : Effect) : Int {$/;"	f
getAxis	heaps/hxd/Pad.hx	/^	public function getAxis(i:Int) return 0;$/;"	f
getBasinAngle	heaps/hxd/poly2tri/Node.hx	/^	public function getBasinAngle():Float$/;"	f
getBbox	heaps/h2d/col/Voronoi.hx	/^	public function getBbox() {$/;"	f
getBestDisplayMode	heaps/hxd/Window.hl.hx	/^	function getBestDisplayMode(width, height, framerate) {$/;"	f
getBinaryPayload	heaps/h3d/impl/DirectXDriver.hx	/^	function getBinaryPayload( vertex : Bool, code : String ) {$/;"	f
getBindType	heaps/h3d/impl/GlDriver.hx	/^	function getBindType( t : h3d.mat.Texture ) {$/;"	f
getBinormals	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getBinormals( opt = false ) {$/;"	f
getBlend	heaps/h3d/scene/World.hx	/^	function getBlend( r : hxd.res.Image ) : h3d.mat.BlendMode {$/;"	f
getBoolean	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBoolean(param : Int) : Bool {$/;"	f
getBooleanv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBooleanv(param : Int, values : Bytes) {$/;"	f
getBounds	heaps/h2d/Object.hx	/^	public function getBounds( ?relativeTo : Object, ?out : h2d.col.Bounds ) : h2d.col.Bounds {$/;"	f
getBounds	heaps/h2d/col/IPolygon.hx	/^	public function getBounds( ?b : IBounds ) : IBounds {$/;"	f
getBounds	heaps/h2d/col/IPolygons.hx	/^	public function getBounds( ?b : IBounds ) {$/;"	f
getBounds	heaps/h2d/col/Polygon.hx	/^	public function getBounds( ?b : Bounds ) {$/;"	f
getBounds	heaps/h2d/col/Polygons.hx	/^	public function getBounds( ?b : Bounds ) {$/;"	f
getBounds	heaps/h2d/filter/Filter.hx	/^	public function getBounds( s : Object, bounds : h2d.col.Bounds, scale : h2d.col.Point ) {$/;"	f
getBounds	heaps/h2d/filter/Group.hx	/^	override function getBounds(s:Object, bounds:h2d.col.Bounds, scale:h2d.col.Point) {$/;"	f
getBounds	heaps/h3d/col/Polygon.hx	/^	public function getBounds(?bnds: h3d.col.Bounds) : h3d.col.Bounds {$/;"	f
getBounds	heaps/h3d/prim/BigPrimitive.hx	/^	override function getBounds() {$/;"	f
getBounds	heaps/h3d/prim/DynamicPrimitive.hx	/^	override function getBounds() {$/;"	f
getBounds	heaps/h3d/prim/HMDModel.hx	/^	override function getBounds() {$/;"	f
getBounds	heaps/h3d/prim/Instanced.hx	/^	override function getBounds():h3d.col.Bounds {$/;"	f
getBounds	heaps/h3d/prim/Polygon.hx	/^	override function getBounds() {$/;"	f
getBounds	heaps/h3d/prim/Primitive.hx	/^	public function getBounds() : h3d.col.Bounds {$/;"	f
getBounds	heaps/h3d/prim/Quads.hx	/^	override public function getBounds() {$/;"	f
getBounds	heaps/h3d/prim/RawPrimitive.hx	/^	override public function getBounds() {$/;"	f
getBounds	heaps/h3d/scene/Object.hx	/^	@:final public function getBounds( ?b : h3d.col.Bounds ) {$/;"	f
getBounds	heaps/hxd/clipper/Clipper.hx	/^	public static function getBounds(pols : IPolygons) {$/;"	f
getBoundsRec	heaps/h2d/Anim.hx	/^	override function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) {$/;"	f
getBoundsRec	heaps/h2d/Bitmap.hx	/^	override function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) {$/;"	f
getBoundsRec	heaps/h2d/CdbLevel.hx	/^	override function getBoundsRec(relativeTo:Object, out:h2d.col.Bounds, forSize:Bool) {$/;"	f
getBoundsRec	heaps/h2d/Dropdown.hx	/^	override function getBoundsRec(relativeTo:Object, out:h2d.col.Bounds, forSize:Bool) {$/;"	f
getBoundsRec	heaps/h2d/Flow.hx	/^	override function getBoundsRec( relativeTo, out, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/Graphics.hx	/^	override function getBoundsRec( relativeTo, out, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/HtmlText.hx	/^	override function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) {$/;"	f
getBoundsRec	heaps/h2d/Interactive.hx	/^	override function getBoundsRec( relativeTo, out, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/Mask.hx	/^	override function getBoundsRec( relativeTo, out:h2d.col.Bounds, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/Object.hx	/^	function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) : Void {$/;"	f
getBoundsRec	heaps/h2d/ScaleGrid.hx	/^	override function getBoundsRec(relativeTo, out, forSize) {$/;"	f
getBoundsRec	heaps/h2d/Slider.hx	/^	override function getBoundsRec( relativeTo, out, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/SpriteBatch.hx	/^	override function getBoundsRec( relativeTo, out, forSize ) {$/;"	f
getBoundsRec	heaps/h2d/Text.hx	/^	override function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) {$/;"	f
getBoundsRec	heaps/h2d/TileGroup.hx	/^	override function getBoundsRec( relativeTo : Object, out : h2d.col.Bounds, forSize : Bool ) {$/;"	f
getBoundsRec	heaps/h3d/parts/GpuParticles.hx	/^	override function getBoundsRec(b:h3d.col.Bounds) {$/;"	f
getBoundsRec	heaps/h3d/scene/Graphics.hx	/^	override function getBoundsRec(b:h3d.col.Bounds):h3d.col.Bounds {$/;"	f
getBoundsRec	heaps/h3d/scene/Mesh.hx	/^	override function getBoundsRec( b : h3d.col.Bounds ) {$/;"	f
getBoundsRec	heaps/h3d/scene/Object.hx	/^	function getBoundsRec( b : h3d.col.Bounds ) {$/;"	f
getBoundsRec	heaps/h3d/scene/Skin.hx	/^	override function getBoundsRec( b : h3d.col.Bounds ) {$/;"	f
getBuf	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getBuf( pos : Int, len : Int ) {$/;"	f
getBuffer	heaps/h3d/prim/DynamicPrimitive.hx	/^	public function getBuffer( vertices : Int ) {$/;"	f
getBuffer	heaps/h3d/prim/MeshPrimitive.hx	/^	function getBuffer( name : String ) {$/;"	f
getBuffer	heaps/hxd/snd/webaudio/Context.hx	/^	public static function getBuffer( channels : Int, sampleCount : Int, rate : Int ) : AudioBuffer$/;"	f
getBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public inline function getBuffer(channels : Int, sampleCount : Int, rate : Int) : AudioBuffer {$/;"	f
getBuffer3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBuffer3f(buffer : Buffer, param : Int, values : Array<F32> ) {$/;"	f
getBuffer3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBuffer3i(buffer : Buffer, param : Int, values : Array<Int> ) {$/;"	f
getBufferf	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBufferf(buffer : Buffer, param : Int) : F32 {$/;"	f
getBufferfv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBufferfv(buffer : Buffer, param : Int, values : Bytes) {$/;"	f
getBufferi	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBufferi(buffer : Buffer, param : Int ) : Int {$/;"	f
getBufferiv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getBufferiv(buffer : Buffer, param : Int, values : Bytes) {$/;"	f
getBuffers	heaps/h3d/prim/MeshPrimitive.hx	/^	function getBuffers( engine : h3d.Engine ) {$/;"	f
getBuffers	heaps/hxd/fmt/hmd/Library.hx	/^	public function getBuffers( geom : Geometry, format : Array<GeometryFormat>, ?defaults : Array</;"	f
getButtons	heaps/hxd/Pad.hx	/^	public function getButtons() return 0;$/;"	f
getByte	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getByte() {$/;"	f
getBytes	heaps/hxd/BytesBuffer.hx	/^	public inline function getBytes() : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/File.hx	/^	public static function getBytes( path : String ) : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function getBytes() {$/;"	f
getBytes	heaps/hxd/fs/BytesFileSystem.hx	/^	function getBytes( path : String ) : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/fs/BytesFileSystem.hx	/^	override function getBytes() : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function getBytes() : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/fs/FileEntry.hx	/^	public function getBytes() : haxe.io.Bytes return null;$/;"	f
getBytes	heaps/hxd/fs/LocalFileSystem.hx	/^	override function getBytes() : haxe.io.Bytes {$/;"	f
getBytes	heaps/hxd/fs/MultiFileSystem.hx	/^	override function getBytes() : haxe.io.Bytes return el[0].getBytes();$/;"	f
getBytes	heaps/hxd/res/Any.hx	/^	override function getBytes(p) {$/;"	f
getBytesPerSample	heaps/hxd/snd/Data.hx	/^	public function getBytesPerSample() {$/;"	f
getCenter	heaps/h2d/col/Bounds.hx	/^	public inline function getCenter() : Point {$/;"	f
getCenter	heaps/h2d/col/IBounds.hx	/^	public inline function getCenter() : IPoint {$/;"	f
getCenter	heaps/h2d/col/Triangle.hx	/^	public inline function getCenter() {$/;"	f
getCenter	heaps/h3d/col/Bounds.hx	/^	public inline function getCenter() {$/;"	f
getCenter	heaps/h3d/col/Sphere.hx	/^	public inline function getCenter() {$/;"	f
getChannelOffset	heaps/hxd/Pixels.hx	/^	public static function getChannelOffset( format : PixelFormat, channel : Channel ) {$/;"	f
getChannels	heaps/h3d/impl/GlDriver.hx	/^	function getChannels( t : Texture ) {$/;"	f
getChar	heaps/h2d/Font.hx	/^	public inline function getChar( code : Int ) {$/;"	f
getCharCode	heaps/hxd/Window.flash.hx	/^	function getCharCode( e : flash.events.KeyboardEvent ) {$/;"	f
getChild	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getChild( node : FbxNode, nodeName : String, ?opt : Bool ) {$/;"	f
getChildAt	heaps/h2d/Object.hx	/^	public function getChildAt( n ) {$/;"	f
getChildAt	heaps/h3d/scene/Object.hx	/^	public inline function getChildAt( n ) {$/;"	f
getChildAtLayer	heaps/h2d/Layers.hx	/^	public function getChildAtLayer( n : Int, layer : Int ) : Object {$/;"	f
getChildIndex	heaps/h2d/Object.hx	/^	public function getChildIndex( o ) {$/;"	f
getChildIndex	heaps/h3d/scene/Object.hx	/^	public function getChildIndex( o ) {$/;"	f
getChildIndexInLayer	heaps/h2d/Layers.hx	/^	public function getChildIndexInLayer( o : Object ):Int$/;"	f
getChildLayer	heaps/h2d/Layers.hx	/^	public function getChildLayer( s : Object ) : Int {$/;"	f
getChilds	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getChilds( node : FbxNode, ?nodeName : String ) {$/;"	f
getChunk	heaps/h3d/scene/World.hx	/^	function getChunk( x : Float, y : Float, create = false ) {$/;"	f
getCircle	heaps/h2d/col/Voronoi.hx	/^	public function getCircle() {$/;"	f
getClipboardText	heaps/hxd/System.hl.hx	/^	public static function getClipboardText() : String {$/;"	f
getClipboardText	heaps/hxd/System.hx	/^	public static function getClipboardText() : String {$/;"	f
getClipboardText	heaps/hxd/System.js.hx	/^	public static function getClipboardText() : String {$/;"	f
getCollider	heaps/h2d/col/Polygon.hx	/^	public function getCollider(isConvex : Bool = false) {$/;"	f
getCollider	heaps/h2d/col/Polygons.hx	/^	public function getCollider(isConvex : Bool = false) {$/;"	f
getCollider	heaps/h3d/prim/Cube.hx	/^	override public function getCollider() : h3d.col.Collider {$/;"	f
getCollider	heaps/h3d/prim/HMDModel.hx	/^	override function getCollider() {$/;"	f
getCollider	heaps/h3d/prim/Polygon.hx	/^	override function getCollider() : h3d.col.Collider {$/;"	f
getCollider	heaps/h3d/prim/Primitive.hx	/^	public function getCollider() : h3d.col.Collider {$/;"	f
getCollider	heaps/h3d/prim/Sphere.hx	/^	override public function getCollider() : h3d.col.Collider {$/;"	f
getCollider	heaps/h3d/scene/Object.hx	/^	@:final public function getCollider() : h3d.col.Collider {$/;"	f
getColor	heaps/h3d/shader/pbr/Slides.hx	/^		function getColor(x:Float,y:Float) : Vec3 {$/;"	f
getColors	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getColors() {$/;"	f
getCommandSuggestion	heaps/h2d/Console.hx	/^	function getCommandSuggestion(cmd : String) : String {$/;"	f
getConst	heaps/hxsl/AgalOut.hx	/^	function getConst( v : Float ) : Reg {$/;"	f
getConstBits	heaps/hxsl/Ast.hx	/^	public static function getConstBits( v : TVar ) {$/;"	f
getConstrainedEdgeCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function getConstrainedEdgeCCW(p:Point):Bool             { return this.constraine/;"	f
getConstrainedEdgeCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function getConstrainedEdgeCW(p:Point):Bool              { return this.constraine/;"	f
getConsts	heaps/hxsl/AgalOut.hx	/^	function getConsts( va : Array<Float> ) : Reg {$/;"	f
getConsts	heaps/hxsl/Macros.hx	/^	static function getConsts( v : TVar, p : Position, consts : Array<{ pos : Int, bits : Int, v : /;"	f
getContents	heaps/hxd/res/Atlas.hx	/^	public function getContents() {$/;"	f
getContextsDevice	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getContextsDevice(context : Context) : Device {$/;"	f
getConvertRule	heaps/hxd/fs/FileConverter.hx	/^	function getConvertRule( path : String ) : ConvertRule {$/;"	f
getCubeMatrix	heaps/h3d/scene/pbr/Environment.hx	/^	static function getCubeMatrix( face : Int ) {$/;"	f
getCurrent	heaps/h3d/Engine.hx	/^	public static inline function getCurrent() {$/;"	f
getCurrentContext	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getCurrentContext() : Context {$/;"	f
getCurrentDisplaySetting	heaps/hxd/Window.hl.hx	/^	public function getCurrentDisplaySetting(?monitorId : Int, registry : Bool = false) : DisplaySe/;"	f
getCurrentLoop	heaps/hxd/System.flash.hx	/^	public static function getCurrentLoop() : Void -> Void {$/;"	f
getCurrentLoop	heaps/hxd/System.hl.hx	/^	public static function getCurrentLoop() : Void -> Void {$/;"	f
getCurrentLoop	heaps/hxd/System.hx	/^	public static function getCurrentLoop() : Void -> Void {$/;"	f
getCurrentLoop	heaps/hxd/System.js.hx	/^	public static function getCurrentLoop() : Void -> Void {$/;"	f
getCurrentPixelSize	heaps/h3d/pass/Default.hx	/^	function getCurrentPixelSize() {$/;"	f
getCurrentRenderZone	heaps/h2d/RenderContext.hx	/^	public function getCurrentRenderZone() {$/;"	f
getCurrentSkeletonBounds	heaps/h3d/scene/Skin.hx	/^	public function getCurrentSkeletonBounds() {$/;"	f
getCurrentTarget	heaps/h3d/Engine.hx	/^	public function getCurrentTarget() {$/;"	f
getData	heaps/hxd/fmt/hmd/Library.hx	/^	public function getData() {$/;"	f
getData	heaps/hxd/res/Gradients.hx	/^	function getData() : Data {$/;"	f
getData	heaps/hxd/res/Sound.hx	/^	public function getData() : hxd.snd.Data {$/;"	f
getDataBuffers	heaps/h3d/prim/HMDModel.hx	/^	public function getDataBuffers(fmt, ?defaults,?material) {$/;"	f
getDebugShaderCode	heaps/h2d/Drawable.hx	/^	public function getDebugShaderCode( toHxsl = true ) {$/;"	f
getDebugShaderCode	heaps/h3d/mat/Pass.hx	/^	public function getDebugShaderCode( scene : h3d.scene.Scene, toHxsl = true ) {$/;"	f
getDefault	heaps/h3d/mat/DepthBuffer.hx	/^	public static function getDefault() {$/;"	f
getDefault	heaps/h3d/scene/pbr/Environment.hx	/^	public static function getDefault() {$/;"	f
getDefault	heaps/hxd/Charset.hx	/^	public static function getDefault() {$/;"	f
getDefaultDepthBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function getDefaultDepthBuffer():h3d.mat.DepthBuffer {$/;"	f
getDefaultDepthBuffer	heaps/h3d/impl/Driver.hx	/^	public function getDefaultDepthBuffer() : h3d.mat.DepthBuffer {$/;"	f
getDefaultDepthBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function getDefaultDepthBuffer() : h3d.mat.DepthBuffer {$/;"	f
getDefaultDepthBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function getDefaultDepthBuffer() {$/;"	f
getDefaultFormat	heaps/hxd/fmt/hmd/Library.hx	/^	public function getDefaultFormat( stride : Int ) {$/;"	f
getDefaultFrameRate	heaps/hxd/System.flash.hx	/^	public static function getDefaultFrameRate() : Float {$/;"	f
getDefaultFrameRate	heaps/hxd/System.hl.hx	/^	public static function getDefaultFrameRate() : Float {$/;"	f
getDefaultFrameRate	heaps/hxd/System.hx	/^	public static function getDefaultFrameRate() : Float {$/;"	f
getDefaultFrameRate	heaps/hxd/System.js.hx	/^	public static function getDefaultFrameRate() : Float {$/;"	f
getDefaultLUT	heaps/h3d/scene/pbr/Environment.hx	/^	public static function getDefaultLUT() {$/;"	f
getDefaultMatrixes	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function getDefaultMatrixes( model : FbxNode ) {$/;"	f
getDefaultModelProps	heaps/h3d/mat/Material.hx	/^	public function getDefaultModelProps() : Any {$/;"	f
getDefaultModelProps	heaps/h3d/mat/PbrMaterial.hx	/^	override function getDefaultModelProps() : Any {$/;"	f
getDefaultProps	heaps/h3d/mat/Material.hx	/^	override function getDefaultProps( ?type : String ) : Any {$/;"	f
getDefaultProps	heaps/h3d/mat/PbrMaterial.hx	/^	override function getDefaultProps( ?type : String ) : Any {$/;"	f
getDefaultProps	heaps/h3d/scene/pbr/Renderer.hx	/^	override function getDefaultProps( ?kind : String ):Any {$/;"	f
getDefaultProps	heaps/hxd/impl/AnyProps.hx	/^	public function getDefaultProps( ?kind : String ) : Any {$/;"	f
getDefaults	heaps/h3d/mat/MaterialSetup.hx	/^	public function getDefaults( ?kind : String ) {$/;"	f
getDelaunayEdgeCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function getDelaunayEdgeCCW(p:Point):Bool                { return this.delaunay_e/;"	f
getDelaunayEdgeCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function getDelaunayEdgeCW(p:Point):Bool                 { return this.delaunay_e/;"	f
getDepth	heaps/h2d/ZGroup.hx	/^	inline public function getDepth(spr : Object) {$/;"	f
getDepth	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		inline function getDepth( o : TmpObject ) {$/;"	f
getDeterminant	heaps/h2d/col/Matrix.hx	/^	public inline function getDeterminant() {$/;"	f
getDeterminant	heaps/h3d/Matrix.hx	/^	public inline function getDeterminant() {$/;"	f
getDeviceName	heaps/hxd/System.flash.hx	/^	public static function getDeviceName() : String {$/;"	f
getDeviceName	heaps/hxd/System.hl.hx	/^	public static function getDeviceName() : String {$/;"	f
getDeviceName	heaps/hxd/System.hx	/^	public static function getDeviceName() : String {$/;"	f
getDeviceName	heaps/hxd/System.js.hx	/^	public static function getDeviceName() : String {$/;"	f
getDir	heaps/h2d/col/Ray.hx	/^	public inline function getDir() {$/;"	f
getDir	heaps/h3d/col/Ray.hx	/^	public inline function getDir() {$/;"	f
getDirection	heaps/h3d/Matrix.hx	/^	public function getDirection() {$/;"	f
getDirection	heaps/h3d/Quat.hx	/^	public inline function getDirection() {$/;"	f
getDisplayInfo	heaps/h2d/domkit/Style.hx	/^	static function getDisplayInfo(obj: h2d.Object) : String {$/;"	f
getDisplaySettings	heaps/hxd/Window.hl.hx	/^	public function getDisplaySettings(?monitorId : Int) : Array<DisplaySetting> {$/;"	f
getDoc	heaps/hxsl/Ast.hx	/^	public static function getDoc( v : TVar ) {$/;"	f
getDouble	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getDouble() {$/;"	f
getDouble	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getDouble(param : Int) : Float {$/;"	f
getDoublev	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getDoublev(param : Int, values : Bytes) {$/;"	f
getDriverName	heaps/h3d/impl/DirectXDriver.hx	/^	override function getDriverName(details:Bool) {$/;"	f
getDriverName	heaps/h3d/impl/Driver.hx	/^	public function getDriverName( details : Bool ) {$/;"	f
getDriverName	heaps/h3d/impl/GlDriver.hx	/^	override public function getDriverName(details:Bool) {$/;"	f
getDriverName	heaps/h3d/impl/LogDriver.hx	/^	override function getDriverName( details : Bool ) {$/;"	f
getDriverName	heaps/h3d/impl/NullDriver.hx	/^	override function getDriverName( details : Bool ) {$/;"	f
getDriverName	heaps/h3d/impl/Stage3dDriver.hx	/^	override function getDriverName(details:Bool) {$/;"	f
getDriverName	heaps/h3d/impl/VulkanDriver.hx	/^	override function getDriverName( details : Bool ) {$/;"	f
getDuration	heaps/h3d/anim/Animation.hx	/^	public function getDuration() {$/;"	f
getDx	heaps/h2d/Slider.hx	/^	inline function getDx() {$/;"	f
getEffect	heaps/h3d/scene/Renderer.hx	/^	public function getEffect<T:h3d.impl.RendererFX>( cl : Class<T> ) : T {$/;"	f
getEffect	heaps/hxd/snd/ChannelBase.hx	/^	public function getEffect<T:Effect>( etype : Class<T> ) : T {$/;"	f
getEffectDriver	heaps/hxd/snd/Driver.hx	/^	public function getEffectDriver(type : String) : EffectDriver<Dynamic>;$/;"	f
getEffectDriver	heaps/hxd/snd/openal/Driver.hx	/^	public function getEffectDriver(type : String) : hxd.snd.Driver.EffectDriver<Dynamic> {$/;"	f
getEffectDriver	heaps/hxd/snd/webaudio/Driver.hx	/^	public function getEffectDriver(type : String) : hxd.snd.Driver.EffectDriver<Dynamic> {$/;"	f
getElements	heaps/h2d/SpriteBatch.hx	/^	public inline function getElements() {$/;"	f
getEndpoint	heaps/h2d/col/Voronoi.hx	/^	public inline function getEndpoint() {$/;"	f
getEnumValue	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getEnumValue(device : Device, enumname : Bytes) : Int {$/;"	f
getEnumValue	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getEnumValue(ename : Bytes) : Int {$/;"	f
getEnvDiffuse	heaps/h3d/shader/pbr/Lighting.hx	/^		function getEnvDiffuse( normal : Vec3 ) : Vec3 {$/;"	f
getEnvSpecular	heaps/h3d/shader/pbr/Lighting.hx	/^		function getEnvSpecular( normal : Vec3, roughness : Float ) : Vec3 {$/;"	f
getError	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getError( device : Device ) : Int {$/;"	f
getError	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getError() : Int {$/;"	f
getEulerAngles	heaps/h3d/Matrix.hx	/^	public function getEulerAngles() {$/;"	f
getEventTime	heaps/h3d/anim/Animation.hx	/^	public function getEventTime( id : String ) : Null<Float> {$/;"	f
getEvents	heaps/h3d/anim/Animation.hx	/^	public function getEvents() return events;$/;"	f
getEvents	heaps/h3d/anim/SmoothTarget.hx	/^	override function getEvents() {$/;"	f
getField	heaps/hxd/impl/Properties.hx	/^	public function getField(obj : Dynamic, f : String) : Dynamic {$/;"	f
getFields	heaps/h2d/Particles.hx	/^	static function getFields( inst : ParticleGroup ) {$/;"	f
getFields	heaps/h3d/parts/GpuParticles.hx	/^	static function getFields( inst : GpuPartGroup ) {$/;"	f
getFile	heaps/hxd/fmt/pak/FileSystem.hx	/^	function getFile( pakFile : Int ) {$/;"	f
getFileContent	heaps/hxd/res/Embed.hx	/^	public static macro function getFileContent( file : String ) {$/;"	f
getFilePath	heaps/h3d/mat/MaterialDatabase.hx	/^	function getFilePath( model : hxd.res.Resource ) {$/;"	f
getFileTime	heaps/hxd/fs/FileConverter.hx	/^	function getFileTime( filePath : String ) : Float {$/;"	f
getFilterScale	heaps/h2d/RenderContext.hx	/^	public function getFilterScale( ?into : h2d.col.Point ) {$/;"	f
getFiltered	heaps/h3d/pass/PassList.hx	/^	public inline function getFiltered() {$/;"	f
getFirst	heaps/h2d/col/Voronoi.hx	/^	public function getFirst(node:T) {$/;"	f
getFirst	heaps/hxd/clipper/Clipper.hx	/^	public function getFirst() {$/;"	f
getFloat	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getFloat() {$/;"	f
getFloat	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getFloat(param : Int) : F32 {$/;"	f
getFloats	heaps/h3d/Matrix.hx	/^	public function getFloats() {$/;"	f
getFloats	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getFloats( n : FbxNode ) {$/;"	f
getFloatv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getFloatv(param : Int, values : Bytes) {$/;"	f
getFlowProps	heaps/h2d/domkit/BaseComponents.hx	/^	static function getFlowProps( o : h2d.Object ) {$/;"	f
getFocus	heaps/h2d/Scene.hx	/^	public function getFocus() : Interactive {$/;"	f
getFocus	heaps/hxd/SceneEvents.hx	/^	public function getFocus() {$/;"	f
getFont	heaps/hxd/res/FontBuilder.hx	/^	public static function getFont( name : String, size : Int, ?options : FontBuildOptions ) {$/;"	f
getFont	heaps/samples/SampleApp.hx	/^	function getFont() {$/;"	f
getFontHeight	heaps/hxd/res/FontBuilder.hx	/^	function getFontHeight(font:h2d.Font, chars:String) {$/;"	f
getFormat	heaps/hxd/res/Image.hx	/^	public inline function getFormat() {$/;"	f
getFovX	heaps/h3d/Camera.hx	/^	public function getFovX() {$/;"	f
getFrame	heaps/h2d/Anim.hx	/^	public function getFrame() : Tile {$/;"	f
getFrame	heaps/hxd/Key.hx	/^	public static inline function getFrame() {$/;"	f
getFrames	heaps/h3d/anim/BufferAnimation.hx	/^	inline function getFrames() : Array<BufferObject> {$/;"	f
getFrames	heaps/h3d/anim/LinearAnimation.hx	/^	inline function getFrames() : Array<LinearObject> {$/;"	f
getFreeVertices	heaps/h3d/impl/ManagedBuffer.hx	/^	public function getFreeVertices() {$/;"	f
getFrustumCorners	heaps/h3d/Camera.hx	/^	public function getFrustumCorners(zMax=1., zMin=0.) : Array<h3d.Vector> {$/;"	f
getFunName	heaps/hxsl/GlslOut.hx	/^	function getFunName( g : TGlobal, args : Array<TExpr>, rt : Type ) {$/;"	f
getGain	heaps/hxd/snd/webaudio/Context.hx	/^	public static inline function getGain():GainNode$/;"	f
getGain	heaps/hxd/snd/webaudio/Driver.hx	/^	public inline function getGain():GainNode$/;"	f
getGeomMatrix	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getGeomMatrix() {$/;"	f
getGeometry	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getGeometry( name : String = "" ) {$/;"	f
getGlobal	heaps/h3d/scene/RenderContext.hx	/^	public function getGlobal( name : String ) : Dynamic {$/;"	f
getGlobalCollider	heaps/h3d/scene/Object.hx	/^	public function getGlobalCollider() : h3d.col.Collider {$/;"	f
getGlobalCollider	heaps/h3d/scene/Skin.hx	/^	override function getGlobalCollider() {$/;"	f
getGroup	heaps/h2d/Particles.hx	/^	public function getGroup( name : String ) {$/;"	f
getGroup	heaps/h3d/parts/GpuParticles.hx	/^	public function getGroup( name : String ) {$/;"	f
getGroups	heaps/h2d/Particles.hx	/^	public inline function getGroups() {$/;"	f
getGroups	heaps/h3d/parts/GpuParticles.hx	/^	public inline function getGroups() {$/;"	f
getHoleAngle	heaps/hxd/poly2tri/Node.hx	/^	public function getHoleAngle():Float$/;"	f
getID	heaps/hxd/res/DynamicText.hx	/^	public function getID() : String {$/;"	f
getIDName	heaps/hxsl/Globals.hx	/^	public static function getIDName( id : Int ) : String {$/;"	f
getIFrame	heaps/h3d/anim/Animation.hx	/^	inline function getIFrame() {$/;"	f
getId	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getId( n : FbxNode ) {$/;"	f
getIndexes	heaps/h3d/prim/DynamicPrimitive.hx	/^	public function getIndexes( count : Int ) {$/;"	f
getIndexes	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getIndexes() {$/;"	f
getInfo	heaps/hxd/res/Image.hx	/^	public function getInfo() {$/;"	f
getInstance	heaps/h3d/pass/ShaderManager.hx	/^		inline function getInstance( index : Int ) {$/;"	f
getInstance	heaps/hxd/Window.flash.hx	/^	public static function getInstance() : Window {$/;"	f
getInstance	heaps/hxd/Window.hl.hx	/^	public static function getInstance() : Window {$/;"	f
getInstance	heaps/hxd/Window.hx	/^	public static function getInstance() : Window {$/;"	f
getInstance	heaps/hxd/Window.js.hx	/^	public static function getInstance() : Window {$/;"	f
getInstance	heaps/hxsl/SharedShader.hx	/^	public inline function getInstance( constBits : Int ) {$/;"	f
getInt	heaps/hxd/fmt/tiff/Data.hx	/^	public static function getInt( f : TifFile, tag : TifTag ) : Null<Int> {$/;"	f
getInt16	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getInt16() {$/;"	f
getInt32	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getInt32() {$/;"	f
getInteger	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getInteger(param : Int) : Int {$/;"	f
getIntegerv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getIntegerv (device : Device, param : Int, size : Int, values : Bytes) {$/;"	f
getIntegerv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getIntegerv(param : Int, values : Bytes) {$/;"	f
getInteractive	heaps/h2d/Scene.hx	/^	public function getInteractive( x : Float, y : Float ) : Interactive {$/;"	f
getInteractiveScene	heaps/h2d/Interactive.hx	/^	@:noCompletion public function getInteractiveScene() : hxd.SceneEvents.InteractiveScene {$/;"	f
getInteractiveScene	heaps/h3d/scene/Interactive.hx	/^	@:noCompletion public function getInteractiveScene() : hxd.SceneEvents.InteractiveScene {$/;"	f
getInteractiveScene	heaps/hxd/SceneEvents.hx	/^	public function getInteractiveScene() : InteractiveScene;$/;"	f
getInts	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getInts( n : FbxNode ) {$/;"	f
getInvArea	heaps/h2d/col/Triangle.hx	/^	public inline function getInvArea() {$/;"	f
getInvPos	heaps/h3d/scene/Object.hx	/^	public function getInvPos() {$/;"	f
getInverse	heaps/h3d/Matrix.hx	/^	public function getInverse( ?m : h3d.Matrix ) {$/;"	f
getInverseProj	heaps/h3d/Camera.hx	/^	public function getInverseProj() {$/;"	f
getInverseView	heaps/h3d/Camera.hx	/^	public function getInverseView() {$/;"	f
getInverseViewProj	heaps/h3d/Camera.hx	/^	public function getInverseViewProj() {$/;"	f
getItem	heaps/h2d/Dropdown.hx	/^	function getItem(index) {$/;"	f
getItems	heaps/h2d/Dropdown.hx	/^	function getItems() : Array<h2d.Object> {$/;"	f
getKernelSize	heaps/h3d/pass/Blur.hx	/^	public function getKernelSize() {$/;"	f
getKerningOffset	heaps/h2d/Font.hx	/^	public function getKerningOffset( prevChar : Int ) {$/;"	f
getKeyName	heaps/hxd/Key.hx	/^	public static function getKeyName( keyCode : Int ) {$/;"	f
getKeyName	heaps/samples/Input.hx	/^	function getKeyName(id) {$/;"	f
getLast	heaps/h2d/col/Voronoi.hx	/^	public function getLast(node:T) {$/;"	f
getLayer	heaps/h2d/KeyFrames.hx	/^	public function getLayer( name : String ) {$/;"	f
getLayer	heaps/h2d/Layers.hx	/^	public function getLayer( layer : Int ) : Iterator<Object> {$/;"	f
getLeftmost	heaps/hxd/earcut/Earcut.hx	/^	function getLeftmost(node : EarNode) {$/;"	f
getLevel	heaps/h2d/Scene.hx	/^		inline function getLevel(i:Object) {$/;"	f
getLevelLayer	heaps/h2d/CdbLevel.hx	/^	public function getLevelLayer( name : String ) : LevelLayer {$/;"	f
getLightSystem	heaps/h3d/scene/Renderer.hx	/^	function getLightSystem() : h3d.scene.LightSystem {$/;"	f
getLinkShader	heaps/hxsl/Cache.hx	/^	public function getLinkShader( vars : Array<Output> ) {$/;"	f
getLinkShader	heaps/hxsl/CacheFile.hx	/^	override function getLinkShader( vars : Array<hxsl.Output> ) {$/;"	f
getListener3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListener3f(param : Int, values : Array<F32> ) {$/;"	f
getListener3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListener3i(param : Int, values : Array<Int> ) {$/;"	f
getListenerf	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListenerf(param : Int) : F32 {$/;"	f
getListenerfv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListenerfv(param : Int, values : Bytes) {$/;"	f
getListeneri	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListeneri(param : Int) : Int {$/;"	f
getListeneriv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getListeneriv(param : Int, values : Bytes) {$/;"	f
getLocalCollider	heaps/h3d/scene/Box.hx	/^	override function getLocalCollider() {$/;"	f
getLocalCollider	heaps/h3d/scene/Mesh.hx	/^	override function getLocalCollider() : h3d.col.Collider {$/;"	f
getLocalCollider	heaps/h3d/scene/Object.hx	/^	public function getLocalCollider() : h3d.col.Collider {$/;"	f
getLocalCollider	heaps/h3d/scene/Skin.hx	/^	override function getLocalCollider() {$/;"	f
getLocalCollider	heaps/h3d/scene/Sphere.hx	/^	override function getLocalCollider() {$/;"	f
getLocalDirection	heaps/h3d/scene/Object.hx	/^	public function getLocalDirection() {$/;"	f
getLocale	heaps/hxd/System.hl.hx	/^	public static function getLocale() {$/;"	f
getLocale	heaps/hxd/System.hx	/^	public static function getLocale() : String {$/;"	f
getLocale	heaps/hxd/System.js.hx	/^	public static function getLocale() : String {$/;"	f
getMaskTexture	heaps/h2d/filter/AbstractMask.hx	/^	function getMaskTexture( ctx : h2d.RenderContext, tile : h2d.Tile ) {$/;"	f
getMaterialByName	heaps/h3d/scene/Mesh.hx	/^	override function getMaterialByName( name : String ) : h3d.mat.Material {$/;"	f
getMaterialByName	heaps/h3d/scene/MultiMaterial.hx	/^	override function getMaterialByName( name : String ) : h3d.mat.Material {$/;"	f
getMaterialByName	heaps/h3d/scene/Object.hx	/^	public function getMaterialByName( name : String ) : h3d.mat.Material {$/;"	f
getMaterialByTriangle	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getMaterialByTriangle() {$/;"	f
getMaterialIndexes	heaps/h3d/prim/HMDModel.hx	/^	override function getMaterialIndexes(material:Int):{count:Int, start:Int} {$/;"	f
getMaterialIndexes	heaps/h3d/prim/Primitive.hx	/^	public function getMaterialIndexes( material : Int ) : { count : Int, start : Int } {$/;"	f
getMaterialProps	heaps/h3d/parts/GpuParticles.hx	/^	public function getMaterialProps() {$/;"	f
getMaterialProps	heaps/h3d/scene/Trail.hx	/^	public function getMaterialProps() {$/;"	f
getMaterials	heaps/h3d/scene/Mesh.hx	/^	override function getMaterials( ?a : Array<h3d.mat.Material>, recursive = true ) {$/;"	f
getMaterials	heaps/h3d/scene/MultiMaterial.hx	/^	override function getMaterials( ?a : Array<h3d.mat.Material>, recursive = true ) {$/;"	f
getMaterials	heaps/h3d/scene/Object.hx	/^	public function getMaterials( ?a : Array<h3d.mat.Material>, recursive = true ) {$/;"	f
getMaterials	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getMaterials() {$/;"	f
getMatrix	heaps/h2d/Object.hx	/^	function getMatrix( m : h2d.col.Matrix ) {$/;"	f
getMax	heaps/h2d/col/Bounds.hx	/^	public inline function getMax() : Point {$/;"	f
getMax	heaps/h2d/col/IBounds.hx	/^	public inline function getMax() : IPoint {$/;"	f
getMax	heaps/h3d/col/Bounds.hx	/^	public inline function getMax() {$/;"	f
getMeshByName	heaps/h3d/scene/Object.hx	/^	public function getMeshByName( name : String) {$/;"	f
getMeshMaterials	heaps/h3d/scene/Mesh.hx	/^	public function getMeshMaterials() {$/;"	f
getMeshMaterials	heaps/h3d/scene/MultiMaterial.hx	/^	override function getMeshMaterials() {$/;"	f
getMeshes	heaps/h3d/scene/Object.hx	/^	public function getMeshes( ?out : Array<Mesh> ) {$/;"	f
getMin	heaps/h2d/col/Bounds.hx	/^	public inline function getMin() : Point {$/;"	f
getMin	heaps/h2d/col/IBounds.hx	/^	public inline function getMin() : IPoint {$/;"	f
getMin	heaps/h3d/col/Bounds.hx	/^	public inline function getMin() {$/;"	f
getMipLevels	heaps/h3d/impl/Stage3dDriver.hx	/^	function getMipLevels( t : h3d.mat.Texture ) {$/;"	f
getMipLevels	heaps/h3d/scene/pbr/Environment.hx	/^	function getMipLevels() : Int {$/;"	f
getModel	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		function getModel(name) {$/;"	f
getModelData	heaps/h3d/mat/MaterialDatabase.hx	/^	public function getModelData( model : hxd.res.Resource ) {$/;"	f
getModelPath	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function getModelPath( model : FbxNode ) {$/;"	f
getModelProperty	heaps/hxd/fmt/hmd/Library.hx	/^	public function getModelProperty<T>( objName : String, p : Property<T>, ?def : Null<T> ) : Null/;"	f
getModifTime	heaps/hxd/fs/LocalFileSystem.hx	/^	inline function getModifTime(){$/;"	f
getMonitors	heaps/hxd/Window.hl.hx	/^	public static function getMonitors() : Array<Monitor> {$/;"	f
getName	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getName( n : FbxNode ) {$/;"	f
getName	heaps/hxd/res/Image.hx	/^	public function getName() {$/;"	f
getName	heaps/hxsl/Ast.hx	/^	public static function getName( v : TVar ) {$/;"	f
getNamed	heaps/h3d/impl/TextureCache.hx	/^	public function getNamed( name : String ) {$/;"	f
getNative	heaps/hxd/FloatBuffer.hx	/^	public inline function getNative() : InnerData {$/;"	f
getNative	heaps/hxd/IndexBuffer.hx	/^	public inline function getNative() : InnerData {$/;"	f
getNativeCursor	heaps/hxd/Cursor.hx	/^	public static function getNativeCursor( name : String ) {$/;"	f
getNativeShaderCode	heaps/h3d/impl/DirectXDriver.hx	/^	override function getNativeShaderCode( shader : hxsl.RuntimeShader ) {$/;"	f
getNativeShaderCode	heaps/h3d/impl/Driver.hx	/^	public function getNativeShaderCode( shader : hxsl.RuntimeShader ) : String {$/;"	f
getNativeShaderCode	heaps/h3d/impl/GlDriver.hx	/^	override function getNativeShaderCode( shader : hxsl.RuntimeShader ) {$/;"	f
getNativeShaderCode	heaps/h3d/impl/LogDriver.hx	/^	override function getNativeShaderCode( shader ) {$/;"	f
getNativeShaderCode	heaps/h3d/impl/Stage3dDriver.hx	/^	override function getNativeShaderCode( shader : hxsl.RuntimeShader ) {$/;"	f
getNeighborIndexes	heaps/h2d/col/Voronoi.hx	/^	public function getNeighborIndexes() {$/;"	f
getNeighbors	heaps/h2d/col/Voronoi.hx	/^	public function getNeighbors() {$/;"	f
getNext	heaps/hxd/clipper/Clipper.hx	/^	public function getNext()$/;"	f
getNextSiblingUp	heaps/hxd/clipper/Clipper.hx	/^	function getNextSiblingUp()$/;"	f
getNormal	heaps/h3d/col/Plane.hx	/^	public inline function getNormal() {$/;"	f
getNormal	heaps/h3d/scene/pbr/Environment.hx	/^		function getNormal() : Vec3 {$/;"	f
getNormalAt	heaps/h2d/col/RoundRect.hx	/^	public inline function getNormalAt( p : Point ) {$/;"	f
getNormalDistance	heaps/h3d/col/Plane.hx	/^	public inline function getNormalDistance() {$/;"	f
getNormals	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getNormals() {$/;"	f
getNumTriangles	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function getNumTriangles()$/;"	f
getObj	heaps/hxd/Save.hx	/^	static function getObj( name : String ) {$/;"	f
getObjectByName	heaps/h2d/Object.hx	/^	public function getObjectByName( name : String ) {$/;"	f
getObjectByName	heaps/h3d/scene/Object.hx	/^	public function getObjectByName( name : String ) {$/;"	f
getObjectByName	heaps/h3d/scene/Skin.hx	/^	override function getObjectByName( name : String ) : h3d.scene.Object {$/;"	f
getObjectByName	heaps/h3d/scene/Skin.hx	/^	override function getObjectByName(name:String) {$/;"	f
getObjectCurve	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function getObjectCurve( curves : Map < Int, AnimCurve > , model : FbxNode, curveName : String,/;"	f
getObjects	heaps/h3d/anim/Animation.hx	/^	public function getObjects() return objects;$/;"	f
getObjectsCount	heaps/h2d/Object.hx	/^	public function getObjectsCount() : Int {$/;"	f
getObjectsCount	heaps/h3d/scene/Object.hx	/^	public function getObjectsCount() {$/;"	f
getOpacity	heaps/hxd/fmt/grd/Reader.hx	/^	function getOpacity(clr : ColorStop, trns : Array<TransparencyStop>) {$/;"	f
getOutputs	heaps/h3d/pass/Default.hx	/^	function getOutputs() : Array<hxsl.Output> {$/;"	f
getOutputs	heaps/h3d/pass/HardwarePick.hx	/^	override function getOutputs() : Array<hxsl.Output> {$/;"	f
getOutputs	heaps/h3d/pass/Output.hx	/^	override function getOutputs() {$/;"	f
getOutputs	heaps/h3d/pass/Shadows.hx	/^	override function getOutputs() : Array<hxsl.Output> {$/;"	f
getOutputs	heaps/h3d/scene/fwd/Renderer.hx	/^	override function getOutputs() : Array<hxsl.Output> {$/;"	f
getParam	heaps/hxd/fs/Convert.hx	/^	function getParam( name : String ) : Dynamic {$/;"	f
getParamFloatValue	heaps/hxsl/DynamicShader.hx	/^	override function getParamFloatValue(index:Int):Float {$/;"	f
getParamFloatValue	heaps/hxsl/Shader.hx	/^	public function getParamFloatValue( index : Int ) : Float {$/;"	f
getParamValue	heaps/h3d/pass/ShaderManager.hx	/^	public inline function getParamValue( p : hxsl.RuntimeShader.AllocParam, shaders : hxsl.ShaderL/;"	f
getParamValue	heaps/hxsl/DynamicShader.hx	/^	override function getParamValue(index:Int) : Dynamic {$/;"	f
getParamValue	heaps/hxsl/Shader.hx	/^	public function getParamValue( index : Int ) : Dynamic {$/;"	f
getParent	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getParent( node : FbxNode, nodeName : String, ?opt : Bool ) {$/;"	f
getParents	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getParents( node : FbxNode, ?nodeName : String ) {$/;"	f
getParticles	heaps/h3d/parts/Particles.hx	/^	public inline function getParticles() {$/;"	f
getPass	heaps/h3d/mat/BaseMaterial.hx	/^	public function getPass( name : String ) : Pass {$/;"	f
getPass	heaps/h3d/scene/Renderer.hx	/^	public function getPass<T:h3d.pass.Base>( c : Class<T> ) : T {$/;"	f
getPassByName	heaps/h3d/scene/Renderer.hx	/^	public function getPassByName( name : String ) {$/;"	f
getPassByName	heaps/h3d/scene/fwd/Renderer.hx	/^	override function getPassByName(name:String):h3d.pass.Base {$/;"	f
getPassByName	heaps/h3d/scene/pbr/Renderer.hx	/^	override function getPassByName(name:String):h3d.pass.Base {$/;"	f
getPasses	heaps/h3d/mat/BaseMaterial.hx	/^	public function getPasses() {$/;"	f
getPath	heaps/hxsl/Cache.hx	/^	function getPath( v : TVar ) {$/;"	f
getPath	heaps/hxsl/Macros.hx	/^		function getPath(v:TVar,?suffix) {$/;"	f
getPixel	heaps/hxd/Pixels.hx	/^	public function getPixel(x, y) : Int {$/;"	f
getPixel	heaps/hxd/Pixels.hx	/^	public inline function getPixel(x, y) {$/;"	f
getPixelF	heaps/hxd/Pixels.hx	/^	public function getPixelF(x, y, ?v:h3d.Vector) {$/;"	f
getPixelF	heaps/hxd/Pixels.hx	/^	public inline function getPixelF(x, y, ?v:h3d.Vector) {$/;"	f
getPixelFormat	heaps/hxd/res/Image.hx	/^	public inline function getPixelFormat() {$/;"	f
getPixelRatio	heaps/hxd/Window.js.hx	/^	function getPixelRatio() {$/;"	f
getPixels	heaps/hxd/BitmapData.hx	/^	public function getPixels() : Pixels {$/;"	f
getPixels	heaps/hxd/res/Image.hx	/^	public function getPixels( ?fmt : PixelFormat, ?flipY : Bool, ?index : Int ) {$/;"	f
getPlatformTag	heaps/hxsl/CacheFile.hx	/^	function getPlatformTag() {$/;"	f
getPlatformTag	heaps/hxsl/CacheFileBuilder.hx	/^	override function getPlatformTag() {$/;"	f
getPlayedSampleCount	heaps/hxd/snd/Driver.hx	/^	public function getPlayedSampleCount (source : SourceHandle) : Int;$/;"	f
getPlayedSampleCount	heaps/hxd/snd/openal/Driver.hx	/^	public function getPlayedSampleCount(source : SourceHandle) : Int {$/;"	f
getPlayedSampleCount	heaps/hxd/snd/webaudio/Driver.hx	/^	public function getPlayedSampleCount (source : SourceHandle) : Int {$/;"	f
getPoint	heaps/h2d/col/Ray.hx	/^	public inline function getPoint( distance : Float ) {$/;"	f
getPoint	heaps/h3d/col/Ray.hx	/^	public inline function getPoint( distance : Float ) {$/;"	f
getPointIndexOffset	heaps/hxd/poly2tri/Triangle.hx	/^	public function getPointIndexOffset(p:Point, offset:Int = 0):Int$/;"	f
getPoints	heaps/h3d/col/Polygon.hx	/^	public function getPoints() : Array<Point> {$/;"	f
getPoints	heaps/h3d/prim/Quads.hx	/^	public function getPoints() {$/;"	f
getPoints	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getPoints(?matrix) {$/;"	f
getPolygons	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getPolygons() {$/;"	f
getPos	heaps/h2d/col/Ray.hx	/^	public inline function getPos() {$/;"	f
getPos	heaps/h3d/col/Ray.hx	/^	public inline function getPos() {$/;"	f
getPosition	heaps/h2d/col/Matrix.hx	/^	public inline function getPosition( ?p : h2d.col.Point ) {$/;"	f
getPosition	heaps/h3d/Matrix.hx	/^	public inline function getPosition( ?v : Vector ) {$/;"	f
getPosition	heaps/h3d/shader/Blur.hx	/^		function getPosition( uv : Vec2 ) : Vec3 {$/;"	f
getPosition	heaps/h3d/shader/SAO.hx	/^		function getPosition( uv : Vec2 ) : Vec3 {$/;"	f
getProcessedBuffers	heaps/hxd/snd/Driver.hx	/^	public function getProcessedBuffers  (source : SourceHandle) : Int;$/;"	f
getProcessedBuffers	heaps/hxd/snd/openal/Driver.hx	/^	public function getProcessedBuffers(source : SourceHandle) : Int {$/;"	f
getProcessedBuffers	heaps/hxd/snd/webaudio/Driver.hx	/^	public function getProcessedBuffers (source : SourceHandle) : Int {$/;"	f
getPropValue	heaps/h3d/anim/Animation.hx	/^	public function getPropValue( objectName : String, propName : String ) : Null<Float> {$/;"	f
getPropValue	heaps/h3d/anim/BufferAnimation.hx	/^	override function getPropValue( objName, propName ) : Null<Float> {$/;"	f
getPropValue	heaps/h3d/anim/LinearAnimation.hx	/^	override function getPropValue( objName, propName ) : Null<Float> {$/;"	f
getProperties	heaps/h2d/Flow.hx	/^	public function getProperties( e : h2d.Object ) {$/;"	f
getPtr	heaps/h3d/pass/ShaderManager.hx	/^	inline function getPtr( data : h3d.shader.Buffers.ShaderBufferData ) {$/;"	f
getRec	heaps/h3d/impl/Benchmark.hx	/^		function getRec( obj : h3d.scene.Object ) {$/;"	f
getRec	heaps/samples/Generator.hx	/^		function getRec(path) {			$/;"	f
getReg	heaps/hxsl/AgalOptim.hx	/^	function getReg( r : Reg ) {$/;"	f
getRelPath	heaps/hxd/File.hx	/^	static function getRelPath( path : String ) {$/;"	f
getRelPath	heaps/hxd/impl/Air3File.hx	/^	static function getRelPath( path : String ) {$/;"	f
getRelPos	heaps/h3d/scene/Object.hx	/^	public function getRelPos( obj : Object ) {$/;"	f
getResampleBytes	heaps/hxd/snd/Manager.hx	/^	function getResampleBytes(size : Int) {$/;"	f
getResource	heaps/hxd/res/Embed.hx	/^	public static macro function getResource( file : String ) {$/;"	f
getResourcesPath	heaps/h3d/impl/MacroHelper.hx	/^	public static macro function getResourcesPath() {$/;"	f
getRoot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getRoot() {$/;"	f
getRoot	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getRoot() {$/;"	f
getRoot	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function getRoot() : FileEntry {$/;"	f
getRoot	heaps/hxd/fs/BytesFileSystem.hx	/^	public function getRoot() {$/;"	f
getRoot	heaps/hxd/fs/EmbedFileSystem.hx	/^	public function getRoot() : FileEntry {$/;"	f
getRoot	heaps/hxd/fs/FileSystem.hx	/^	public function getRoot() : FileEntry;$/;"	f
getRoot	heaps/hxd/fs/LocalFileSystem.hx	/^	public function getRoot() : FileEntry {$/;"	f
getRoot	heaps/hxd/fs/MultiFileSystem.hx	/^	public function getRoot() {$/;"	f
getRootModels	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function getRootModels() {$/;"	f
getRotationQuat	heaps/h3d/scene/Object.hx	/^	public function getRotationQuat() {$/;"	f
getScale	heaps/h2d/col/Matrix.hx	/^	public inline function getScale(?p: h2d.col.Point) {$/;"	f
getScale	heaps/h3d/Matrix.hx	/^	public inline function getScale(?v: h3d.Vector) {$/;"	f
getScene	heaps/h2d/Object.hx	/^	public function getScene() : Scene {$/;"	f
getScene	heaps/h3d/scene/Object.hx	/^	public function getScene() {$/;"	f
getSelectedText	heaps/h2d/TextInput.hx	/^	public function getSelectedText() : String {$/;"	f
getShader	heaps/h2d/Drawable.hx	/^	public function getShader< T:hxsl.Shader >( stype : Class<T> ) : T {$/;"	f
getShader	heaps/h3d/mat/Pass.hx	/^	public function getShader< T:hxsl.Shader >(t:Class<T>) : T {$/;"	f
getShader	heaps/h3d/pass/ScreenFx.hx	/^	public function getShader<T:hxsl.Shader>(cl:Class<T>) : T {$/;"	f
getShaderByName	heaps/h3d/mat/Pass.hx	/^	public function getShaderByName( name : String ) : hxsl.Shader {$/;"	f
getShaderIndex	heaps/h3d/mat/Pass.hx	/^	function getShaderIndex(s:hxsl.Shader) : Int {$/;"	f
getShaderInputNames	heaps/h3d/impl/DirectXDriver.hx	/^	override function getShaderInputNames() : InputNames {$/;"	f
getShaderInputNames	heaps/h3d/impl/Driver.hx	/^	public function getShaderInputNames() : InputNames {$/;"	f
getShaderInputNames	heaps/h3d/impl/GlDriver.hx	/^	override function getShaderInputNames() {$/;"	f
getShaderInputNames	heaps/h3d/impl/LogDriver.hx	/^	override function getShaderInputNames() {$/;"	f
getShaderInputNames	heaps/h3d/impl/NullDriver.hx	/^	override function getShaderInputNames() : InputNames {$/;"	f
getShaderInputNames	heaps/h3d/impl/Stage3dDriver.hx	/^	override function getShaderInputNames() {$/;"	f
getShaderInputNames	heaps/h3d/impl/VulkanDriver.hx	/^	override function getShaderInputNames() : InputNames {$/;"	f
getShaderVersion	heaps/hxsl/CacheFile.hx	/^	function getShaderVersion( s : SharedShader ) {$/;"	f
getShaders	heaps/h2d/Drawable.hx	/^	public inline function getShaders() {$/;"	f
getShaders	heaps/h3d/mat/Pass.hx	/^	public inline function getShaders() {$/;"	f
getShadersRec	heaps/h3d/mat/Pass.hx	/^	function getShadersRec() {$/;"	f
getShadowDirection	heaps/h3d/scene/Light.hx	/^	function getShadowDirection() : h3d.Vector {$/;"	f
getShadowDirection	heaps/h3d/scene/fwd/DirLight.hx	/^	override function getShadowDirection() : h3d.Vector {$/;"	f
getShadowDirection	heaps/h3d/scene/pbr/DirLight.hx	/^	override function getShadowDirection() : h3d.Vector {$/;"	f
getShadowDirection	heaps/h3d/scene/pbr/SpotLight.hx	/^	override function getShadowDirection() : h3d.Vector {$/;"	f
getShadowProj	heaps/h3d/pass/Shadows.hx	/^	public function getShadowProj() {$/;"	f
getShadowTex	heaps/h3d/pass/DirShadowMap.hx	/^	public override function getShadowTex() {$/;"	f
getShadowTex	heaps/h3d/pass/PointShadowMap.hx	/^	override function getShadowTex() {$/;"	f
getShadowTex	heaps/h3d/pass/Shadows.hx	/^	public function getShadowTex() : h3d.mat.Texture {$/;"	f
getShadowTex	heaps/h3d/pass/SpotShadowMap.hx	/^	public override function getShadowTex() {$/;"	f
getSign	heaps/hxd/fs/FileEntry.hx	/^	public function getSign() : Int {$/;"	f
getSign	heaps/hxsl/AgalOptim.hx	/^	function getSign( op : Opcode ) {$/;"	f
getSize	heaps/h2d/Flow.hx	/^		inline function getSize(c:h2d.Object) {$/;"	f
getSize	heaps/h2d/col/Bounds.hx	/^	public inline function getSize() : Point {$/;"	f
getSize	heaps/h2d/col/IBounds.hx	/^	public inline function getSize() : IPoint {$/;"	f
getSize	heaps/h3d/col/Bounds.hx	/^	public inline function getSize() {$/;"	f
getSize	heaps/hxd/fmt/blend/Data.hx	/^	function getSize(index:Int):Int {$/;"	f
getSize	heaps/hxd/fmt/hmd/Data.hx	/^	public inline function getSize() {$/;"	f
getSize	heaps/hxd/fmt/tiff/Data.hx	/^	public function getSize() {$/;"	f
getSize	heaps/hxd/res/Image.hx	/^	public inline function getSize() {$/;"	f
getSkinData	heaps/h3d/scene/Skin.hx	/^	public function getSkinData() {$/;"	f
getSmoothObjects	heaps/h3d/anim/SmoothTarget.hx	/^	function getSmoothObjects() : Array<SmoothObject> {$/;"	f
getSoundBuffer	heaps/hxd/snd/Manager.hx	/^	function getSoundBuffer(snd : hxd.res.Sound, grp : SoundGroup) : Buffer {$/;"	f
getSource3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSource3f(source : Source, param : Int, values : Array<F32> ) {$/;"	f
getSource3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSource3i(source : Source, param : Int, values : Array<Int> ) {$/;"	f
getSourceSign	heaps/hxsl/CacheFile.hx	/^	function getSourceSign( s : String ) {$/;"	f
getSourcef	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSourcef(source : Source, param : Int) : F32 {$/;"	f
getSourcefv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSourcefv(source : Source, param : Int, values : Bytes) {$/;"	f
getSourcei	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSourcei(source : Source, param : Int) : Int {$/;"	f
getSourceiv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getSourceiv(source : Source, param : Int, values : Bytes) {$/;"	f
getSpecChild	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function getSpecChild( node : FbxNode, name : String ) {$/;"	f
getStartpoint	heaps/h2d/col/Voronoi.hx	/^	public inline function getStartpoint() {$/;"	f
getStencilCompare	heaps/h3d/mat/PbrMaterial.hx	/^			inline function getStencilCompare( op : PbrStencilCompare ) : Data.Compare {$/;"	f
getStencilOp	heaps/h3d/mat/PbrMaterial.hx	/^			inline function getStencilOp( op : PbrStencilOp ) : Data.StencilOp {$/;"	f
getStreamBuffer	heaps/hxd/snd/Manager.hx	/^	function getStreamBuffer( src : Source, snd : hxd.res.Sound, grp : SoundGroup, start : Int) : B/;"	f
getStride	heaps/h3d/anim/BufferAnimation.hx	/^	public function getStride() {$/;"	f
getStride	heaps/h3d/scene/World.hx	/^	function getStride( model : WorldModel ) {$/;"	f
getStride	heaps/hxd/fmt/hmd/Data.hx	/^	public function getStride() {$/;"	f
getString	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getString   (device : Device, param : Int) : Bytes {$/;"	f
getString	heaps/hxd/snd/openal/Emulator.hx	/^	public static function getString(param : Int) : Bytes {$/;"	f
getStruct	heaps/hxd/fmt/blend/Data.hx	/^	public static function getStruct(dna:Dna, typeIndex:Int):DnaStruct {$/;"	f
getTangents	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getTangents( opt = false ) {$/;"	f
getTarget	heaps/h2d/col/Voronoi.hx	/^	public inline function getTarget() {$/;"	f
getText	heaps/hxd/fs/FileEntry.hx	/^	public function getText() return getBytes().toString();$/;"	f
getTextProgress	heaps/h2d/HtmlText.hx	/^	override function getTextProgress(text:String, progress:Float):String {$/;"	f
getTextProgress	heaps/h2d/Text.hx	/^	public function getTextProgress( text : String, progress : Float ) {$/;"	f
getTexture	heaps/h2d/Tile.hx	/^	public inline function getTexture():h3d.mat.Texture {$/;"	f
getTextureFormat	heaps/h3d/impl/DirectXDriver.hx	/^	function getTextureFormat( t : h3d.mat.Texture ) : dx.Format {$/;"	f
getThreadID	heaps/hxd/fmt/pak/FileSystem.hx	/^	inline function getThreadID() : Int {$/;"	f
getTileBuilder	heaps/h2d/CdbLevel.hx	/^	public function getTileBuilder() {$/;"	f
getTileset	heaps/h2d/CdbLevel.hx	/^	public function getTileset( file : String ) : LevelTileset {$/;"	f
getTmpBytes	heaps/hxd/snd/Manager.hx	/^	function getTmpBytes(size) {$/;"	f
getTmpBytes	heaps/hxd/snd/openal/Driver.hx	/^	public function getTmpBytes(size) {$/;"	f
getTransform	heaps/h3d/scene/Object.hx	/^	public function getTransform( ?mat : h3d.Matrix ) : h3d.Matrix {$/;"	f
getType	heaps/hxd/fmt/fbx/Data.hx	/^	public static function getType( n : FbxNode ) {$/;"	f
getTypeIndex	heaps/hxd/fmt/blend/Data.hx	/^	public static function getTypeIndex(dna:Dna, type:String):Int {$/;"	f
getUVs	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getUVs() {$/;"	f
getUnitNormal	heaps/hxd/clipper/Clipper.hx	/^    function getUnitNormal(pt1 : IPoint, pt2 : IPoint)$/;"	f
getValue	heaps/h2d/Slider.hx	/^	inline function getValue(cursorX : Float) : Float {$/;"	f
getValue	heaps/hxd/System.flash.hx	/^	public static function getValue( s : SystemValue ) : Bool {$/;"	f
getValue	heaps/hxd/System.hl.hx	/^	public static function getValue( s : SystemValue ) : Bool {$/;"	f
getValue	heaps/hxd/System.hx	/^	public static function getValue( s : SystemValue ) : Bool {$/;"	f
getValue	heaps/hxd/System.js.hx	/^	public static function getValue( s : SystemValue ) : Bool {$/;"	f
getVar	heaps/hxsl/Cache.hx	/^		function getVar( p : RuntimeShader.AllocParam ) {$/;"	f
getVarRec	heaps/hxsl/Cache.hx	/^		function getVarRec( v : TVar, name, kind ) {$/;"	f
getVersionedInt32	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function getVersionedInt32() {$/;"	f
getVertices	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function getVertices() {$/;"	f
getVerticesAndTriangles	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function getVerticesAndTriangles()$/;"	f
getViewDirection	heaps/h3d/Camera.hx	/^	public function getViewDirection( dx : Float, dy : Float, dz = 0. ) {$/;"	f
getVolume	heaps/h3d/col/Bounds.hx	/^	public inline function getVolume() {$/;"	f
getVolumeModifier	heaps/hxd/snd/Effect.hx	/^	public function getVolumeModifier() : Float {$/;"	f
getVolumeModifier	heaps/hxd/snd/effect/Spatialization.hx	/^	override function getVolumeModifier() {$/;"	f
getWorlPos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function getWorlPos( pos : Vec2 ) : Vec3{$/;"	f
getWorldBounds	heaps/h3d/scene/World.hx	/^	public function getWorldBounds( ?b : h3d.col.Bounds ) {$/;"	f
getZ	heaps/h3d/col/HeightMap.hx	/^	public function getZ( x : Float, y : Float ) : Float {$/;"	f
get_NATIVE_FREQ	heaps/hxd/snd/openal/Emulator.hx	/^	static function get_NATIVE_FREQ() {$/;"	f
get_NEGATIVE_INFINITY	heaps/hxd/Math.hx	/^	static inline function get_NEGATIVE_INFINITY() {$/;"	f
get_NaN	heaps/hxd/Math.hx	/^	static inline function get_NaN() {$/;"	f
get_POSITIVE_INFINITY	heaps/hxd/Math.hx	/^	static inline function get_POSITIVE_INFINITY() {$/;"	f
get_a	heaps/h3d/Vector.hx	/^	inline function get_a() return w;$/;"	f
get_additiveLighting	heaps/h3d/scene/fwd/LightSystem.hx	/^	function get_additiveLighting() {$/;"	f
get_allocated	heaps/h3d/scene/Object.hx	/^	inline function get_allocated() return flags.has(FAllocated);$/;"	f
get_allowTimeout	heaps/hxd/System.flash.hx	/^	static function get_allowTimeout() return true;$/;"	f
get_allowTimeout	heaps/hxd/System.hl.hx	/^	static function get_allowTimeout() @:privateAccess {$/;"	f
get_allowTimeout	heaps/hxd/System.hx	/^	static function get_allowTimeout() return false;$/;"	f
get_allowTimeout	heaps/hxd/System.js.hx	/^	static function get_allowTimeout() return false;$/;"	f
get_alpha	heaps/h2d/SpriteBatch.hx	/^	inline function get_alpha() {$/;"	f
get_alpha	heaps/h2d/filter/Outline.hx	/^	inline function get_alpha() return pass.alpha;$/;"	f
get_alpha	heaps/h3d/parts/Particle.hx	/^	inline function get_alpha() return a;$/;"	f
get_alwaysSync	heaps/h3d/scene/Object.hx	/^	inline function get_alwaysSync() return flags.has(FAlwaysSync);$/;"	f
get_amount	heaps/h2d/filter/Bloom.hx	/^	inline function get_amount() return bloom.shader.amount;$/;"	f
get_angle	heaps/hxd/Direction.hx	/^	inline function get_angle() {$/;"	f
get_available	heaps/hxd/net/Socket.hx	/^	function get_available() {$/;"	f
get_available	heaps/hxd/net/Socket.hx	/^	override function get_available() {$/;"	f
get_b	heaps/h3d/Vector.hx	/^	inline function get_b() return z;$/;"	f
get_backgroundColor	heaps/h2d/TextInput.hx	/^	function get_backgroundColor() return interactive.backgroundColor;$/;"	f
get_bot	heaps/hxd/clipper/Clipper.hx	/^	inline function get_bot() return new IPoint(botX, botY);$/;"	f
get_camera	heaps/h2d/Scene.hx	/^	inline function get_camera() return _cameras[0];$/;"	f
get_cameras	heaps/h2d/Scene.hx	/^	inline function get_cameras() return _cameras;$/;"	f
get_childCount	heaps/hxd/clipper/Clipper.hx	/^	inline function get_childCount() {$/;"	f
get_color	heaps/h2d/filter/Outline.hx	/^	inline function get_color() return pass.color;$/;"	f
get_color	heaps/h3d/mat/Material.hx	/^	inline function get_color() {$/;"	f
get_color	heaps/h3d/scene/Light.hx	/^	function get_color() {$/;"	f
get_color	heaps/h3d/scene/fwd/DirLight.hx	/^	override function get_color() {$/;"	f
get_color	heaps/h3d/scene/fwd/PointLight.hx	/^	override function get_color() {$/;"	f
get_color	heaps/h3d/scene/pbr/Light.hx	/^	override function get_color() {$/;"	f
get_colorAdd	heaps/h2d/Drawable.hx	/^	function get_colorAdd() {$/;"	f
get_colorMatrix	heaps/h2d/Drawable.hx	/^	function get_colorMatrix() {$/;"	f
get_content	heaps/h2d/CdbLevel.hx	/^	inline function get_content() {$/;"	f
get_contour	heaps/hxd/clipper/Clipper.hx	/^	inline function get_contour() {$/;"	f
get_count	heaps/h3d/parts/GpuParticles.hx	/^	function get_count() {$/;"	f
get_culled	heaps/h3d/scene/Object.hx	/^	inline function get_culled() return flags.has(FCulled);$/;"	f
get_cullingColliderInherited	heaps/h3d/scene/Object.hx	/^	inline function get_cullingColliderInherited() return flags.has(FCullingColliderInherited);$/;"	f
get_curr	heaps/hxd/clipper/Clipper.hx	/^	inline function get_curr() return new IPoint(currX, currY);$/;"	f
get_currentFrame	heaps/h2d/Anim.hx	/^	inline function get_currentFrame() {$/;"	f
get_currentFrame	heaps/h2d/KeyFrames.hx	/^	inline function get_currentFrame() {$/;"	f
get_currentMonitorIndex	heaps/hxd/Window.hl.hx	/^	function get_currentMonitorIndex() : Int {$/;"	f
get_currentSample	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	function get_currentSample ( ):Int {$/;"	f
get_currentTexture	heaps/h2d/impl/BatchDrawState.hx	/^	inline function get_currentTexture() return tail.texture;$/;"	f
get_def	heaps/h3d/scene/fwd/Renderer.hx	/^	inline function get_def() return defaultPass;$/;"	f
get_defaultSmooth	heaps/h2d/Scene.hx	/^	inline function get_defaultSmooth() return ctx.defaultSmooth;$/;"	f
get_destination	heaps/hxd/snd/webaudio/Driver.hx	/^	inline function get_destination() return Context.destination;$/;"	f
get_directory	heaps/hxd/fs/FileEntry.hx	/^	function get_directory() {$/;"	f
get_displayMode	heaps/hxd/Window.flash.hx	/^	function get_displayMode() : DisplayMode {$/;"	f
get_displayMode	heaps/hxd/Window.hl.hx	/^	function get_displayMode() : DisplayMode {$/;"	f
get_displayMode	heaps/hxd/Window.hx	/^	function get_displayMode() : DisplayMode {$/;"	f
get_displayMode	heaps/hxd/Window.js.hx	/^	function get_displayMode() : DisplayMode {$/;"	f
get_distance	heaps/h3d/scene/CameraController.hx	/^	inline function get_distance() return curPos.x \/ curOffset.w;$/;"	f
get_dt	ra/hp/HP.hx	/^	static function get_dt() {$/;"	f
get_duration	heaps/hxd/snd/Data.hx	/^	function get_duration() {$/;"	f
get_edge_list	heaps/hxd/poly2tri/Point.hx	/^	function get_edge_list()$/;"	f
get_enable	heaps/h2d/filter/Filter.hx	/^	function get_enable() return enable;$/;"	f
get_enable	heaps/h2d/filter/Group.hx	/^	override function get_enable() {$/;"	f
get_enableSpecular	heaps/h3d/scene/fwd/DirLight.hx	/^	override function get_enableSpecular() {$/;"	f
get_enableSpecular	heaps/h3d/scene/fwd/Light.hx	/^	function get_enableSpecular() {$/;"	f
get_enableSpecular	heaps/h3d/scene/fwd/PointLight.hx	/^	override function get_enableSpecular() {$/;"	f
get_engine	heaps/h3d/pass/ScreenFx.hx	/^	function get_engine() {$/;"	f
get_env	heaps/h3d/scene/pbr/Environment.hx	/^	function get_env() {$/;"	f
get_exposure	heaps/h3d/scene/pbr/Renderer.hx	/^	inline function get_exposure() return tonemap.shader.exposure;$/;"	f
get_extension	heaps/hxd/fs/FileEntry.hx	/^	function get_extension() {$/;"	f
get_fixedPosition	heaps/h3d/scene/Object.hx	/^	inline function get_fixedPosition() return flags.has(FFixedPosition);$/;"	f
get_followPositionOnly	heaps/h3d/scene/Object.hx	/^	inline function get_followPositionOnly() return flags.has(FFollowPositionOnly);$/;"	f
get_format	heaps/hxd/Pixels.hx	/^	inline function get_format() return innerFormat;$/;"	f
get_fovY	heaps/h3d/scene/CameraController.hx	/^	inline function get_fovY() return curOffset.w;$/;"	f
get_fps	heaps/h3d/Engine.hx	/^	function get_fps() {$/;"	f
get_g	heaps/h3d/Vector.hx	/^	inline function get_g() return y;$/;"	f
get_gain	heaps/h2d/filter/Blur.hx	/^	inline function get_gain() return pass.gain;$/;"	f
get_globals	heaps/h3d/pass/Default.hx	/^	inline function get_globals() return manager.globals;$/;"	f
get_height	heaps/h2d/col/Bounds.hx	/^	inline function get_height() {$/;"	f
get_height	heaps/h2d/col/IBounds.hx	/^	inline function get_height() {$/;"	f
get_height	heaps/h3d/mat/BigTexture.hx	/^	function get_height() { return q.height; }$/;"	f
get_height	heaps/hxd/BitmapData.hx	/^	inline function get_height() {$/;"	f
get_height	heaps/hxd/System.flash.hx	/^	static function get_height() {$/;"	f
get_height	heaps/hxd/System.hl.hx	/^	static function get_height() : Int return 600;$/;"	f
get_height	heaps/hxd/System.hl.hx	/^	static function get_height() : Int return dx.Window.getScreenHeight();$/;"	f
get_height	heaps/hxd/System.hl.hx	/^	static function get_height() : Int return haxe.System.height;$/;"	f
get_height	heaps/hxd/System.hl.hx	/^	static function get_height() : Int return sdl.Sdl.getScreenHeight();$/;"	f
get_height	heaps/hxd/System.hl.hx	/^	static function get_height() : Int return sdl.Sdl.getScreenHeight(@:privateAccess Window.inst.w/;"	f
get_height	heaps/hxd/System.hx	/^	static function get_height() : Int return 0;$/;"	f
get_height	heaps/hxd/System.js.hx	/^	static function get_height() : Int return Math.round(js.Browser.document.body.clientHeight  * j/;"	f
get_height	heaps/hxd/Window.flash.hx	/^	inline function get_height() {$/;"	f
get_height	heaps/hxd/Window.hl.hx	/^	function get_height() : Int {$/;"	f
get_height	heaps/hxd/Window.hx	/^	function get_height() : Int {$/;"	f
get_height	heaps/hxd/Window.js.hx	/^	function get_height() {$/;"	f
get_ignoreBounds	heaps/h3d/scene/Object.hx	/^	inline function get_ignoreBounds() return flags.has(FIgnoreBounds);$/;"	f
get_ignoreCollide	heaps/h3d/scene/Object.hx	/^	inline function get_ignoreCollide() return flags.has(FIgnoreCollide);$/;"	f
get_ignoreParentTransform	heaps/h3d/scene/Object.hx	/^	inline function get_ignoreParentTransform() return flags.has(FIgnoreParentTransform);$/;"	f
get_iheight	heaps/h2d/Tile.hx	/^	inline function get_iheight() return Math.ceil(height + y) - iy;$/;"	f
get_indexCount	heaps/hxd/fmt/hmd/Data.hx	/^	function get_indexCount() {$/;"	f
get_inheritCulled	heaps/h3d/scene/Object.hx	/^	inline function get_inheritCulled() return flags.has(FInheritCulled);$/;"	f
get_innerHeight	heaps/h2d/Flow.hx	/^	function get_innerHeight() {$/;"	f
get_innerWidth	heaps/h2d/Flow.hx	/^	function get_innerWidth() {$/;"	f
get_invert	heaps/h2d/filter/Ambient.hx	/^	inline function get_invert() return pass.shader.maskInvert;$/;"	f
get_isAvailable	heaps/hxd/fs/FileEntry.hx	/^	function get_isAvailable() return true;$/;"	f
get_isAvailable	heaps/hxd/fs/MultiFileSystem.hx	/^	override function get_isAvailable() return el[0].isAvailable;$/;"	f
get_isDirectory	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function get_isDirectory() {$/;"	f
get_isDirectory	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function get_isDirectory() {$/;"	f
get_isDirectory	heaps/hxd/fs/FileEntry.hx	/^	function get_isDirectory() return false;$/;"	f
get_isDirectory	heaps/hxd/fs/LocalFileSystem.hx	/^	override function get_isDirectory() : Bool {$/;"	f
get_isDirectory	heaps/hxd/fs/MultiFileSystem.hx	/^	override function get_isDirectory() return el[0].isDirectory;$/;"	f
get_isES	heaps/hxsl/GlslOut.hx	/^	inline function get_isES() return glES != null;$/;"	f
get_isES2	heaps/hxsl/GlslOut.hx	/^	inline function get_isES2() return glES != null && glES <= 2;$/;"	f
get_isFocused	heaps/hxd/Window.flash.hx	/^	function get_isFocused() : Bool return false;$/;"	f
get_isFocused	heaps/hxd/Window.hl.hx	/^	function get_isFocused() : Bool return !wasBlurred;$/;"	f
get_isFocused	heaps/hxd/Window.hl.hx	/^	function get_isFocused() : Bool return false;$/;"	f
get_isFocused	heaps/hxd/Window.hx	/^	function get_isFocused() : Bool return true;$/;"	f
get_isFocused	heaps/hxd/Window.js.hx	/^	function get_isFocused() : Bool return focused;$/;"	f
get_isVertical	heaps/h2d/Flow.hx	/^	function get_isVertical() {$/;"	f
get_iwidth	heaps/h2d/Tile.hx	/^	inline function get_iwidth() return Math.ceil(width + x) - ix;$/;"	f
get_ix	heaps/h2d/Tile.hx	/^	inline function get_ix() return Math.floor(x);$/;"	f
get_iy	heaps/h2d/Tile.hx	/^	inline function get_iy() return Math.floor(y);$/;"	f
get_label	heaps/samples/Domkit.hx	/^	function get_label() return labelTxt.text;$/;"	f
get_lang	heaps/hxd/System.flash.hx	/^	static function get_lang() : String {$/;"	f
get_lang	heaps/hxd/System.hl.hx	/^	static function get_lang() : String {$/;"	f
get_lang	heaps/hxd/System.hx	/^	static function get_lang() : String return "en";$/;"	f
get_lang	heaps/hxd/System.js.hx	/^	static function get_lang() : String return js.Browser.navigator.language;$/;"	f
get_lastFrame	heaps/h3d/mat/Texture.hx	/^	function get_lastFrame()$/;"	f
get_layerCount	heaps/h3d/mat/Texture.hx	/^	function get_layerCount() {$/;"	f
get_layerCount	heaps/h3d/mat/TextureArray.hx	/^	override function get_layerCount() {$/;"	f
get_length	heaps/h2d/col/IPolygon.hx	/^	inline function get_length() return this.length;$/;"	f
get_length	heaps/h2d/col/IPolygons.hx	/^	inline function get_length() return this.length;$/;"	f
get_length	heaps/h2d/col/Polygon.hx	/^	inline function get_length() return this.length;$/;"	f
get_length	heaps/h2d/col/Polygons.hx	/^	inline function get_length() return this.length;$/;"	f
get_length	heaps/h2d/col/Segments.hx	/^	inline function get_length() return this.length;$/;"	f
get_length	heaps/hxd/BytesBuffer.hx	/^	inline function get_length() {$/;"	f
get_length	heaps/hxd/FloatBuffer.hx	/^	inline function get_length() : Int {$/;"	f
get_length	heaps/hxd/FloatBuffer.hx	/^	inline function get_length() return this.pos;$/;"	f
get_length	heaps/hxd/IndexBuffer.hx	/^	inline function get_length() : Int {$/;"	f
get_lightCameraCenter	heaps/h3d/scene/Object.hx	/^	inline function get_lightCameraCenter() return flags.has(FLightCameraCenter);$/;"	f
get_linear	heaps/h2d/filter/Blur.hx	/^	inline function get_linear() return pass.linear;$/;"	f
get_loader	heaps/hxd/res/FileTree.hx	/^			inline private function get_loader() : $loaderType return this;$/;"	f
get_loop	heaps/h2d/Video.hx	/^	public inline function get_loop() {$/;"	f
get_lut	heaps/h3d/scene/pbr/Environment.hx	/^	function get_lut() return getDefaultLUT();$/;"	f
get_mainPass	heaps/h3d/mat/BaseMaterial.hx	/^	inline function get_mainPass() {$/;"	f
get_maskPower	heaps/h3d/pass/ColorMatrix.hx	/^	inline function get_maskPower() return shader.maskPower;$/;"	f
get_masterGain	heaps/hxd/snd/webaudio/Driver.hx	/^	inline function get_masterGain() return Context.masterGain;$/;"	f
get_matrix	heaps/h2d/filter/ColorMatrix.hx	/^	inline function get_matrix() return pass.matrix;$/;"	f
get_matrix	heaps/h3d/pass/ColorMatrix.hx	/^	inline function get_matrix() return shader.matrix;$/;"	f
get_mipLevels	heaps/h3d/mat/Texture.hx	/^	function get_mipLevels() {$/;"	f
get_mode	heaps/h3d/shader/pbr/Slides.hx	/^	function get_mode() : DebugMode { return cast smode; }$/;"	f
get_modelRoot	heaps/h3d/scene/Object.hx	/^	inline function get_modelRoot() return flags.has(FModelRoot);$/;"	f
get_mouseLock	heaps/hxd/Window.flash.hx	/^	inline function get_mouseLock() {$/;"	f
get_mouseLock	heaps/hxd/Window.hl.hx	/^	function get_mouseLock() : Bool {$/;"	f
get_mouseLock	heaps/hxd/Window.hx	/^	function get_mouseLock() : Bool {$/;"	f
get_mouseLock	heaps/hxd/Window.js.hx	/^	function get_mouseLock() : Bool {$/;"	f
get_mouseX	heaps/h2d/Scene.hx	/^	function get_mouseX() {$/;"	f
get_mouseX	heaps/hxd/Window.flash.hx	/^	inline function get_mouseX() {$/;"	f
get_mouseX	heaps/hxd/Window.hl.hx	/^	function get_mouseX() : Int {$/;"	f
get_mouseX	heaps/hxd/Window.hx	/^	function get_mouseX() : Int {$/;"	f
get_mouseX	heaps/hxd/Window.js.hx	/^	function get_mouseX() {$/;"	f
get_mouseY	heaps/h2d/Scene.hx	/^	function get_mouseY() {$/;"	f
get_mouseY	heaps/hxd/Window.flash.hx	/^	inline function get_mouseY() {$/;"	f
get_mouseY	heaps/hxd/Window.hl.hx	/^	function get_mouseY() : Int {$/;"	f
get_mouseY	heaps/hxd/Window.hx	/^	function get_mouseY() : Int {$/;"	f
get_mouseY	heaps/hxd/Window.js.hx	/^	function get_mouseY() {$/;"	f
get_multiplyAlpha	heaps/h2d/filter/Outline.hx	/^	inline function get_multiplyAlpha() return pass.multiplyAlpha;$/;"	f
get_name	heaps/hxd/Direction.hx	/^	inline function get_name() {$/;"	f
get_name	heaps/hxd/Pad.hx	/^	function get_name() {$/;"	f
get_name	heaps/hxd/res/Resource.hx	/^	inline function get_name() {$/;"	f
get_normalMap	heaps/h3d/mat/Material.hx	/^	function get_normalMap() {$/;"	f
get_numChildren	heaps/h2d/Object.hx	/^	inline function get_numChildren() {$/;"	f
get_numChildren	heaps/h3d/scene/Object.hx	/^	inline function get_numChildren() {$/;"	f
get_outerHeight	heaps/h2d/Flow.hx	/^	function get_outerHeight() {$/;"	f
get_outerWidth	heaps/h2d/Flow.hx	/^	function get_outerWidth() {$/;"	f
get_params	heaps/h3d/scene/fwd/PointLight.hx	/^	inline function get_params() {$/;"	f
get_path	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function get_path() {$/;"	f
get_path	heaps/hxd/fs/BytesFileSystem.hx	/^	override function get_path() {$/;"	f
get_path	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function get_path() {$/;"	f
get_path	heaps/hxd/fs/FileEntry.hx	/^	function get_path() : String { throw "path() not implemented"; return null; };$/;"	f
get_path	heaps/hxd/fs/LocalFileSystem.hx	/^	override function get_path() {$/;"	f
get_path	heaps/hxd/fs/MultiFileSystem.hx	/^	override function get_path() : String return el[0].path;$/;"	f
get_phi	heaps/h3d/scene/CameraController.hx	/^	inline function get_phi() return curPos.z;$/;"	f
get_platform	heaps/hxd/System.flash.hx	/^	static function get_platform() : Platform {$/;"	f
get_platform	heaps/hxd/System.hl.hx	/^	static function get_platform() : Platform return Console;$/;"	f
get_platform	heaps/hxd/System.hl.hx	/^	static function get_platform() : Platform return PC; \/\/ TODO : Xbox ?$/;"	f
get_platform	heaps/hxd/System.hl.hx	/^	static function get_platform() : Platform return PC;$/;"	f
get_platform	heaps/hxd/System.hl.hx	/^	static function get_platform() : Platform {$/;"	f
get_platform	heaps/hxd/System.hx	/^	static function get_platform() : Platform return PC;$/;"	f
get_platform	heaps/hxd/System.js.hx	/^	static function get_platform() : Platform {$/;"	f
get_playing	heaps/hxd/snd/openal/Emulator.hx	/^	inline function get_playing() return chan != null;$/;"	f
get_points	heaps/h2d/col/IPolygon.hx	/^	inline function get_points() return this;$/;"	f
get_points	heaps/h2d/col/Polygon.hx	/^	inline function get_points() return this;$/;"	f
get_polygons	heaps/h2d/col/IPolygons.hx	/^	inline function get_polygons() return this;$/;"	f
get_polygons	heaps/h2d/col/Polygons.hx	/^	inline function get_polygons() return this;$/;"	f
get_posChanged	heaps/h3d/scene/Object.hx	/^	inline function get_posChanged() return flags.has(FPosChanged);$/;"	f
get_power	heaps/h2d/filter/Ambient.hx	/^	inline function get_power() return pass.maskPower;$/;"	f
get_power	heaps/h2d/filter/Bloom.hx	/^	inline function get_power() return bloom.shader.power;$/;"	f
get_quality	heaps/h2d/filter/Blur.hx	/^	inline function get_quality() return pass.quality;$/;"	f
get_quality	heaps/h2d/filter/Outline.hx	/^	inline function get_quality() return pass.quality;$/;"	f
get_qw	heaps/hxd/fmt/hmd/Data.hx	/^	function get_qw() {$/;"	f
get_r	heaps/h3d/Vector.hx	/^	inline function get_r() return x;$/;"	f
get_radius	heaps/h2d/filter/Blur.hx	/^	inline function get_radius() return pass.radius;$/;"	f
get_range	heaps/h3d/scene/pbr/PointLight.hx	/^	function get_range() {$/;"	f
get_range	heaps/h3d/scene/pbr/SpotLight.hx	/^	function get_range() {$/;"	f
get_renderer	heaps/h2d/Scene.hx	/^	function get_renderer() return ctx;$/;"	f
get_rxAxis	heaps/hxd/Pad.hx	/^	function get_rxAxis() {$/;"	f
get_ryAxis	heaps/hxd/Pad.hx	/^	function get_ryAxis() {$/;"	f
get_screenDPI	heaps/hxd/System.flash.hx	/^	static function get_screenDPI() : Int {$/;"	f
get_screenDPI	heaps/hxd/System.hl.hx	/^	static function get_screenDPI() : Int return 72; \/\/ TODO$/;"	f
get_screenDPI	heaps/hxd/System.hx	/^	static function get_screenDPI() : Int return 72;$/;"	f
get_screenDPI	heaps/hxd/System.js.hx	/^	static function get_screenDPI() : Int return 72;$/;"	f
get_segments	heaps/h2d/col/Segments.hx	/^	inline function get_segments() return this;$/;"	f
get_sel	heaps/hxsl/Macros.hx	/^					var get_sel = "get_" + sel;$/;"	v
get_shader	heaps/h2d/filter/Shader.hx	/^	function get_shader() return pass.shader;$/;"	f
get_shadowShader	heaps/h3d/mat/Defaults.hx	/^	static function get_shadowShader() {$/;"	f
get_shadows	heaps/h3d/mat/Material.hx	/^	inline function get_shadows() {$/;"	f
get_showDebug	heaps/h3d/scene/Interactive.hx	/^	inline function get_showDebug() return debugObj != null;$/;"	f
get_size	heaps/h2d/filter/Outline.hx	/^	inline function get_size() return pass.size;$/;"	f
get_size	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function get_size() {$/;"	f
get_size	heaps/hxd/fs/BytesFileSystem.hx	/^	override function get_size() return bytes.length;$/;"	f
get_size	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function get_size() {$/;"	f
get_size	heaps/hxd/fs/FileEntry.hx	/^	function get_size() return 0;$/;"	f
get_size	heaps/hxd/fs/LocalFileSystem.hx	/^	override function get_size() {$/;"	f
get_size	heaps/hxd/fs/MultiFileSystem.hx	/^	override function get_size() return el[0].size;$/;"	f
get_smoothAlpha	heaps/h2d/filter/Mask.hx	/^	function get_smoothAlpha() return pass.shader.smoothAlpha;$/;"	f
get_specularAmount	heaps/h3d/mat/Material.hx	/^	inline function get_specularAmount() {$/;"	f
get_specularPower	heaps/h3d/mat/Material.hx	/^	inline function get_specularPower() {$/;"	f
get_specularTexture	heaps/h3d/mat/Material.hx	/^	function get_specularTexture() {$/;"	f
get_specularTexture	heaps/h3d/mat/PbrMaterial.hx	/^	override function get_specularTexture() {$/;"	f
get_target	heaps/h3d/scene/CameraController.hx	/^	inline function get_target() return curOffset.toPoint();$/;"	f
get_targetDistance	heaps/h3d/scene/CameraController.hx	/^	inline function get_targetDistance() return targetPos.x \/ targetOffset.w;$/;"	f
get_textHeight	heaps/h2d/Text.hx	/^	function get_textHeight() {$/;"	f
get_textWidth	heaps/h2d/Text.hx	/^	function get_textWidth() {$/;"	f
get_texture	heaps/h3d/mat/Material.hx	/^	function get_texture() {$/;"	f
get_texture	heaps/h3d/scene/Trail.hx	/^	function get_texture() return material.texture;$/;"	f
get_theta	heaps/h3d/scene/CameraController.hx	/^	inline function get_theta() return curPos.y;$/;"	f
get_tilesProps	heaps/h2d/CdbLevel.hx	/^	inline function get_tilesProps() return props.props;$/;"	f
get_time	heaps/h2d/Video.hx	/^	public function get_time() {$/;"	f
get_title	heaps/hxd/Window.flash.hx	/^	function get_title() : String {$/;"	f
get_title	heaps/hxd/Window.hl.hx	/^	function get_title() : String {$/;"	f
get_title	heaps/hxd/Window.hx	/^	function get_title() : String {$/;"	f
get_title	heaps/hxd/Window.js.hx	/^	function get_title() : String {$/;"	f
get_tmod	heaps/hxd/Timer.hx	/^	inline static function get_tmod() {$/;"	f
get_top	heaps/hxd/clipper/Clipper.hx	/^	inline function get_top() return new IPoint(topX, topY);$/;"	f
get_total	heaps/hxd/clipper/Clipper.hx	/^	inline function get_total() {$/;"	f
get_tx	heaps/h3d/Matrix.hx	/^	inline function get_tx() return _41;$/;"	f
get_ty	heaps/h3d/Matrix.hx	/^	inline function get_ty() return _42;$/;"	f
get_tz	heaps/h3d/Matrix.hx	/^	inline function get_tz() return _43;$/;"	f
get_useAsyncDecode	heaps/hxd/res/Image.hx	/^	inline function get_useAsyncDecode() {$/;"	f
get_viewportHeight	heaps/h2d/Camera.hx	/^	inline function get_viewportHeight() { checkScene(); return viewH * scene.height; }$/;"	f
get_viewportWidth	heaps/h2d/Camera.hx	/^	inline function get_viewportWidth() { checkScene(); return viewW * scene.width; }$/;"	f
get_viewportX	heaps/h2d/Camera.hx	/^	inline function get_viewportX() { checkScene(); return viewX * scene.width; }$/;"	f
get_viewportY	heaps/h2d/Camera.hx	/^	inline function get_viewportY() { checkScene(); return viewY * scene.height; }$/;"	f
get_visible	heaps/h3d/scene/Object.hx	/^	inline function get_visible() return flags.has(FVisible);$/;"	f
get_vsync	heaps/hxd/Window.flash.hx	/^	function get_vsync() : Bool return true;$/;"	f
get_vsync	heaps/hxd/Window.hl.hx	/^	function get_vsync() : Bool return haxe.System.vsync;$/;"	f
get_vsync	heaps/hxd/Window.hl.hx	/^	function get_vsync() : Bool return true;$/;"	f
get_vsync	heaps/hxd/Window.hl.hx	/^	function get_vsync() : Bool return window.vsync;$/;"	f
get_vsync	heaps/hxd/Window.hx	/^	function get_vsync() : Bool return true;$/;"	f
get_vsync	heaps/hxd/Window.js.hx	/^	function get_vsync() : Bool return true;$/;"	f
get_width	heaps/h2d/col/Bounds.hx	/^	inline function get_width() {$/;"	f
get_width	heaps/h2d/col/IBounds.hx	/^	inline function get_width() {$/;"	f
get_width	heaps/h3d/mat/BigTexture.hx	/^	function get_width() { return q.width; }$/;"	f
get_width	heaps/hxd/BitmapData.hx	/^	inline function get_width() : Int {$/;"	f
get_width	heaps/hxd/System.flash.hx	/^	static function get_width() {$/;"	f
get_width	heaps/hxd/System.hl.hx	/^	static function get_width() : Int return 800;$/;"	f
get_width	heaps/hxd/System.hl.hx	/^	static function get_width() : Int return dx.Window.getScreenWidth();$/;"	f
get_width	heaps/hxd/System.hl.hx	/^	static function get_width() : Int return haxe.System.width;$/;"	f
get_width	heaps/hxd/System.hl.hx	/^	static function get_width() : Int return sdl.Sdl.getScreenWidth();$/;"	f
get_width	heaps/hxd/System.hl.hx	/^	static function get_width() : Int return sdl.Sdl.getScreenWidth(@:privateAccess Window.inst.win/;"	f
get_width	heaps/hxd/System.hx	/^	static function get_width() : Int return 0;$/;"	f
get_width	heaps/hxd/System.js.hx	/^	static function get_width() : Int return Math.round(js.Browser.document.body.clientWidth * js.B/;"	f
get_width	heaps/hxd/Window.flash.hx	/^	inline function get_width() {$/;"	f
get_width	heaps/hxd/Window.hl.hx	/^	function get_width() : Int {$/;"	f
get_width	heaps/hxd/Window.hx	/^	function get_width() : Int {$/;"	f
get_width	heaps/hxd/Window.js.hx	/^	function get_width() {$/;"	f
get_x	heaps/h2d/col/Bounds.hx	/^	inline function get_x() {$/;"	f
get_x	heaps/h2d/col/IBounds.hx	/^	inline function get_x() {$/;"	f
get_x	heaps/hxd/Direction.hx	/^	inline function get_x() {$/;"	f
get_x	heaps/hxd/fmt/kframes/Data.hx	/^	inline function get_x() return this[0];$/;"	f
get_xAxis	heaps/hxd/Pad.hx	/^	function get_xAxis() {$/;"	f
get_xFlip	heaps/h2d/Tile.hx	/^	function get_xFlip() return u2 < u;$/;"	f
get_xSize	heaps/h3d/col/Bounds.hx	/^	inline function get_xSize() return xMax - xMin;$/;"	f
get_y	heaps/h2d/col/Bounds.hx	/^	inline function get_y() {$/;"	f
get_y	heaps/h2d/col/IBounds.hx	/^	inline function get_y() {$/;"	f
get_y	heaps/hxd/Direction.hx	/^	inline function get_y() {$/;"	f
get_y	heaps/hxd/fmt/kframes/Data.hx	/^	inline function get_y() return this[1];$/;"	f
get_yAxis	heaps/hxd/Pad.hx	/^	function get_yAxis() {$/;"	f
get_yFlip	heaps/h2d/Tile.hx	/^	function get_yFlip() return v2 < v;$/;"	f
get_ySize	heaps/h3d/col/Bounds.hx	/^	inline function get_ySize() return yMax - yMin;$/;"	f
get_zSize	heaps/h3d/col/Bounds.hx	/^	inline function get_zSize() return zMax - zMin;$/;"	f
get_zoom	heaps/h2d/Scene.hx	/^	function get_zoom() : Int {$/;"	f
gfx	heaps/samples/Blur.hx	/^	var gfx : h2d.Graphics;$/;"	v
ghei	heaps/hxd/res/Gradients.hx	/^		var ghei = grads.length > 1 ? 3 : 1;$/;"	v
gid	heaps/h3d/parts/GpuParticles.hx	/^			var gid = groups.indexOf(g);$/;"	v
gid	heaps/h3d/scene/RenderContext.hx	/^	public var gid : Int;$/;"	v
gid	heaps/hxsl/RuntimeShader.hx	/^	public var gid : Int;$/;"	v
gif	heaps/hxd/res/Image.hx	/^			var gif = new format.gif.Reader(new haxe.io.BytesInput(bytes)).read();$/;"	v
gl	heaps/h3d/impl/GlDriver.hx	/^	public var gl : GL;$/;"	v
gl	heaps/hxsl/Checker.hx	/^			var gl : TGlobal = switch( [f, e.t] ) {$/;"	v
gl	heaps/tools/hxsl/Main.hx	/^	var gl : js.html.webgl.RenderingContext;$/;"	v
glDebug	heaps/h3d/impl/GlDriver.hx	/^	var glDebug : Bool;$/;"	v
glES	heaps/h3d/impl/GlDriver.hx	/^	var glES : Null<Float>;$/;"	v
glES	heaps/hxsl/GlslOut.hx	/^	public var glES : Null<Float>;$/;"	v
glen	heaps/h2d/CdbLevel.hx	/^				var glen = grounds.length;$/;"	v
global	heaps/h3d/shader/AmbientLight.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/AnimatedTexture.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/BaseMesh.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/LineShader.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/NormalMap.hx	/^        @global var global : {$/;"	v
global	heaps/h3d/shader/ParticleShader.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/UVAnim.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/UVScroll.hx	/^		@global var global : {$/;"	v
global	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@global var global : {$/;"	v
global	heaps/hxsl/AgalOut.hx	/^	function global( g : TGlobal, args : Array<TExpr>, ret : Type ) : Reg {$/;"	f
globalAlpha	heaps/h2d/RenderContext.hx	/^	public var globalAlpha = 1.;$/;"	v
globalId	heaps/hxsl/SharedShader.hx	/^			var globalId = 0;$/;"	v
globalId	heaps/hxsl/SharedShader.hx	/^	public var globalId : Int;$/;"	v
globalLife	heaps/h3d/parts/Data.hx	/^	public var globalLife : Float;$/;"	v
globalSize	heaps/h3d/parts/Data.hx	/^	public var globalSize : Value;$/;"	v
globalSize	heaps/h3d/parts/Particles.hx	/^	public var globalSize : Float = 1;$/;"	v
globalSpeed	heaps/h3d/parts/Data.hx	/^	public var globalSpeed : Value;$/;"	v
globalStrings	heaps/hxd/fmt/hbson/Reader.hx	/^	var globalStrings : Bool;$/;"	v
globalToLocal	heaps/h2d/Object.hx	/^	public function globalToLocal( pt : h2d.col.Point ) : h2d.col.Point {$/;"	f
globalToLocal	heaps/h3d/scene/Object.hx	/^	public function globalToLocal( pt : h3d.col.Point ) {$/;"	f
globals	heaps/h3d/impl/DirectXDriver.hx	/^	public var globals : dx.Resource;$/;"	v
globals	heaps/h3d/impl/GlDriver.hx	/^	public var globals : Uniform;$/;"	v
globals	heaps/h3d/pass/Default.hx	/^	var globals(get, never) : hxsl.Globals;$/;"	v
globals	heaps/h3d/pass/ShaderManager.hx	/^	public var globals : hxsl.Globals;$/;"	v
globals	heaps/h3d/scene/fwd/LightSystem.hx	/^	var globals : hxsl.Globals;$/;"	v
globals	heaps/h3d/shader/Buffers.hx	/^	public var globals : ShaderBufferData;$/;"	v
globals	heaps/hxsl/Checker.hx	/^		var globals = GLOBALS;$/;"	v
globals	heaps/hxsl/Checker.hx	/^		var globals = new Map();$/;"	v
globals	heaps/hxsl/Checker.hx	/^	var globals : Map<String,{ g : TGlobal, t : Type }>;$/;"	v
globals	heaps/hxsl/Flatten.hx	/^	var globals : Array<TVar>;$/;"	v
globals	heaps/hxsl/Macros.hx	/^		var globals = [], consts = [], params = [], eparams = [], tparams = [];$/;"	v
globals	heaps/hxsl/Macros.hx	/^		var globals = [];$/;"	v
globals	heaps/hxsl/RuntimeShader.hx	/^	public var globals : AllocGlobal;$/;"	v
globals	heaps/hxsl/RuntimeShader.hx	/^	public var globals : Map<Int,Bool>;$/;"	v
globals	heaps/hxsl/SharedShader.hx	/^	public var globals : Array<ShaderGlobal>;$/;"	v
globals	heaps/tools/hxsl/Main.hx	/^			var globals = new hxsl.Globals();$/;"	v
globalsSize	heaps/h3d/impl/DirectXDriver.hx	/^	public var globalsSize : Int;$/;"	v
globalsSize	heaps/hxsl/RuntimeShader.hx	/^	public var globalsSize : Int;$/;"	v
glout	heaps/h3d/impl/GlDriver.hx	/^			var glout = makeCompiler();$/;"	v
glout	heaps/h3d/impl/GlDriver.hx	/^		var glout = new ShaderCompiler();$/;"	v
glout	heaps/hxsl/CacheFileBuilder.hx	/^	var glout : GlslOut;$/;"	v
glow	heaps/h2d/filter/InnerGlow.hx	/^			var glow = glowTex.get(input.uv);$/;"	v
glowMaskTex	heaps/h2d/filter/InnerGlow.hx	/^		var glowMaskTex = ctx.textures.allocTileTarget("innerGlowMask", t);$/;"	v
glowPass	heaps/h2d/filter/InnerGlow.hx	/^	var glowPass = new h3d.pass.ScreenFx<GlowShader>(new GlowShader());$/;"	v
glowTex	heaps/h2d/filter/InnerGlow.hx	/^		@param var glowTex : Sampler2D;$/;"	v
glsl	heaps/tools/hxsl/Main.hx	/^			var glsl = new hxsl.GlslOut();$/;"	v
glyph	heaps/hxd/fmt/bfnt/Reader.hx	/^					var glyph = new h2d.Font.FontChar(t, i.readInt16());$/;"	v
glyph	heaps/hxd/fmt/bfnt/Writer.hx	/^			var glyph = font.glyphs.get(id);$/;"	v
glyphData	heaps/hxd/res/BDFFont.hx	/^	var glyphData : Array<BDFFontChar>;$/;"	v
glyphs	heaps/h2d/Font.hx	/^	var glyphs : Map<Int,FontChar>;$/;"	v
glyphs	heaps/h2d/Text.hx	/^	var glyphs : TileGroup;$/;"	v
glyphs	heaps/hxd/fmt/bfnt/FontParser.hx	/^		var glyphs = font.glyphs;$/;"	v
gm	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var gm = geom.getGeomMatrix();$/;"	v
gp	heaps/h2d/Graphics.hx	/^			var gp = new GPoint();$/;"	v
gp	heaps/h2d/Graphics.hx	/^		var gp = new GPoint();$/;"	v
gradient	heaps/h2d/Particles.hx	/^		@param var gradient : Sampler2D;$/;"	v
gradient	heaps/hxd/Perlin.hx	/^	public function gradient( seed : Int, x : Float, y : Float ) {$/;"	f
gradient	heaps/samples/AdjustColor.hx	/^			var gradient = new hxd.BitmapData(256, 256);$/;"	v
gradient1D	heaps/hxd/Perlin.hx	/^	public function gradient1D( seed : Int, x : Float ) {$/;"	f
gradient1DAt	heaps/hxd/Perlin.hx	/^	inline function gradient1DAt( x : Float, ix : Int, seed : Int ) {$/;"	f
gradient3D	heaps/hxd/Perlin.hx	/^	public function gradient3D( seed : Int, x : Float, y : Float, z : Float ) {$/;"	f
gradient3DAt	heaps/hxd/Perlin.hx	/^	inline function gradient3DAt( x : Float, y : Float, z : Float, ix : Int, iy : Int, iz : Int, se/;"	f
gradientAt	heaps/hxd/Perlin.hx	/^	inline function gradientAt( x : Float, y : Float, ix : Int, iy : Int, seed : Int ) {$/;"	f
gradientStops	heaps/hxd/fmt/grd/Data.hx	/^	public var gradientStops     : Array<GradientStop>;$/;"	v
gradients	heaps/hxd/Perlin.hx	/^	var gradients : Array<Float>;$/;"	v
grads	heaps/hxd/res/Gradients.hx	/^		var grads = [for (d in data) d];$/;"	v
grandpa	heaps/h2d/col/Voronoi.hx	/^		var grandpa, uncle;$/;"	v
graphics	heaps/samples/Interactive2D.hx	/^	var graphics : h2d.Graphics;$/;"	v
gravity	heaps/h2d/Particles.hx	/^	public var gravity(default, set) : Float		= 0;$/;"	v
gravity	heaps/h2d/SpriteBatch.hx	/^	public var gravity : Float = 0.;$/;"	v
gravity	heaps/h3d/parts/Data.hx	/^	public var gravity : Value;$/;"	v
gravity	heaps/h3d/parts/GpuParticles.hx	/^	public var gravity(default, set) : Float	= 0;$/;"	v
gravity	heaps/h3d/shader/GpuParticle.hx	/^		@param var gravity : Float;$/;"	v
gravityAngle	heaps/h2d/Particles.hx	/^	public var gravityAngle(default, set) : Float 	= 0;$/;"	v
grayed	heaps/h2d/filter/ColorMatrix.hx	/^	public static function grayed() {$/;"	f
grd	heaps/hxd/fmt/grd/Reader.hx	/^			var grd = new Gradient();$/;"	v
greaterThanOrEqualWithepsilon	heaps/h2d/col/Voronoi.hx	/^	inline function greaterThanOrEqualWithepsilon(a:Float,b:Float) return b-a<epsilon;$/;"	f
greaterThanWithepsilon	heaps/h2d/col/Voronoi.hx	/^	inline function greaterThanWithepsilon(a:Float,b:Float) return a-b>epsilon;$/;"	f
green	heaps/samples/AdjustColor.hx	/^			var green = ((i + 1) >> 1) & 1;$/;"	v
greenCutoff	heaps/h2d/col/PixelsCollider.hx	/^	public var greenCutoff : Int;$/;"	v
grid	heaps/h2d/Tile.hx	/^	public function grid( size : Float, dx = 0., dy = 0. ) : Array<Array<Tile>> {$/;"	f
grid	heaps/samples/Pbr.hx	/^	var grid : h3d.scene.Object;$/;"	v
grid	heaps/samples/Polygons.hx	/^		var grid = new Grid(64, 64);$/;"	v
gridFlatten	heaps/h2d/Tile.hx	/^	public function gridFlatten( size : Float, dx = 0., dy = 0. ) : Array<Tile> {$/;"	f
gridMesh	heaps/samples/Polygons.hx	/^		var gridMesh = new Mesh(grid, s3d);$/;"	v
grounds	heaps/h2d/CdbLevel.hx	/^				var grounds = b.buildGrounds(data, width);$/;"	v
group	heaps/h2d/Particles.hx	/^	var group : ParticleGroup;$/;"	v
group	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var group = [];$/;"	v
group	heaps/samples/Camera2D.hx	/^			var group : TileGroup = new TileGroup(tset);$/;"	v
group	heaps/samples/GpuParticles.hx	/^	var group : h3d.parts.GpuParticles.GpuPartGroup;$/;"	v
group	heaps/samples/templates/.vscode/tasks.json	/^			"group": {$/;"	o	object:tasks.0
groups	heaps/h2d/CdbLevel.hx	/^	public var groups : Map<String, LevelGroup>;$/;"	v
groups	heaps/h2d/Particles.hx	/^	var groups : Array<ParticleGroup>;$/;"	v
groups	heaps/h3d/parts/GpuParticles.hx	/^	var groups : Array<Dynamic>;$/;"	v
groups	heaps/h3d/parts/GpuParticles.hx	/^	var groups : Array<GpuPartGroup>;$/;"	v
groupsById	heaps/h2d/CdbLevel.hx	/^	public var groupsById : Array<LevelGroup>;$/;"	v
grow	heaps/h2d/HtmlText.hx	/^								var grow = i.height - i.dy - info.baseLine;$/;"	v
grow	heaps/h2d/HtmlText.hx	/^						var grow = i.height - i.dy - info.baseLine;$/;"	v
grow	heaps/h3d/shader/Buffers.hx	/^	public function grow( s : hxsl.RuntimeShader.RuntimeShaderData ) {$/;"	f
grow	heaps/h3d/shader/Buffers.hx	/^	public inline function grow( s : hxsl.RuntimeShader ) {$/;"	f
grow	heaps/hxd/FloatBuffer.hx	/^	public inline function grow( v : Int ) {$/;"	f
grow	heaps/hxd/IndexBuffer.hx	/^	public inline function grow( v : Int ) {$/;"	f
gvis	heaps/h3d/scene/pbr/Environment.hx	/^					var gvis = g * VoH \/ (NoH * NoV);$/;"	v
gx	heaps/hxd/Perlin.hx	/^		var gx = double(index);$/;"	v
gx	heaps/hxd/Perlin.hx	/^		var gx = gradients[index << 2];$/;"	v
gx	heaps/hxd/Perlin.hx	/^		var gx = gradients[index];$/;"	v
gy	heaps/hxd/Perlin.hx	/^		var gy = double(index + 8);$/;"	v
gy	heaps/hxd/Perlin.hx	/^		var gy = gradients[(index << 2) + 1];$/;"	v
gy	heaps/hxd/Perlin.hx	/^		var gy = gradients[index + 1];$/;"	v
gz	heaps/hxd/Perlin.hx	/^		var gz = double(index + 16);$/;"	v
gz	heaps/hxd/Perlin.hx	/^		var gz = gradients[index + 2];$/;"	v
h	heaps/h2d/HtmlText.hx	/^								var h = info.height;$/;"	v
h	heaps/h2d/TextInput.hx	/^			var h = localToGlobal(new h2d.col.Point(inputWidth, font.lineHeight));$/;"	v
h	heaps/h2d/Tile.hx	/^		var h = innerTex.height;$/;"	v
h	heaps/h2d/domkit/BaseComponents.hx	/^				var h = parseInt(h);$/;"	v
h	heaps/h2d/domkit/Style.hx	/^			var h = p.tile.iheight;$/;"	v
h	heaps/h3d/Camera.hx	/^			var h = 1 \/ (bounds.yMax - bounds.yMin);$/;"	v
h	heaps/h3d/Quat.hx	/^		var h = Math.invSqrt(hx * hx + hy * hy + hz * hz);$/;"	v
h	heaps/h3d/Vector.hx	/^		var h, s, l = (max + min) \/ 2.0;$/;"	v
h	heaps/h3d/col/HeightMap.hx	/^			var h = getZ(x,y);$/;"	v
h	heaps/h3d/impl/DirectXDriver.hx	/^			var h = region.height >> mipLevel;$/;"	v
h	heaps/h3d/impl/DirectXDriver.hx	/^			var h = tex.height >> mipLevel;$/;"	v
h	heaps/h3d/impl/DirectXDriver.hx	/^		var h = new hxsl.HlslOut();$/;"	v
h	heaps/h3d/impl/DirectXDriver.hx	/^		var h = tex.height >> mipLevel; if( h == 0 ) h = 1;$/;"	v
h	heaps/h3d/impl/GlDriver.hx	/^			var h = hxd.Math.imax(1, tt.height >> mip);$/;"	v
h	heaps/h3d/impl/GlDriver.hx	/^		var h = tex.height >> mipLevel; if( h == 0 ) h = 1;$/;"	v
h	heaps/h3d/impl/MemoryManager.hx	/^				var h = t.height >> i; if( h == 0 ) h = 1;$/;"	v
h	heaps/h3d/impl/MemoryManager.hx	/^		var h = new Map();$/;"	v
h	heaps/h3d/pass/Copy.hx	/^			var h = shaders;$/;"	v
h	heaps/h3d/pass/CubeCopy.hx	/^				var h = shaders;$/;"	v
h	heaps/h3d/scene/pbr/Environment.hx	/^					var h = importanceSampleGGX(roughness, p, n);$/;"	v
h	heaps/h3d/scene/pbr/Environment.hx	/^				var h = importanceSampleGGX( roughness, xi, n );$/;"	v
h	heaps/hxd/BitmapData.hx	/^		var h = height;$/;"	v
h	heaps/hxd/Pixels.hx	/^			var h = height >> i; if( h == 0 ) h = 1;$/;"	v
h	heaps/hxd/Rand.hx	/^		var h : haxe.Int32 = seed;$/;"	v
h	heaps/hxd/fmt/blend/Data.hx	/^				var h = new Handle();$/;"	v
h	heaps/hxd/fmt/grd/Reader.hx	/^		var h = next.opacity - prev.opacity;$/;"	v
h	heaps/hxd/fmt/hdr/Reader.hx	/^				var h = bytes.getInt32(dataPos);$/;"	v
h	heaps/hxd/fmt/hmd/Reader.hx	/^		var h = i.readString(3);$/;"	v
h	heaps/hxd/fmt/hmd/Reader.hx	/^		var h = readHeader();$/;"	v
h	heaps/hxd/fs/Convert.hx	/^		var h = r.header.height;$/;"	v
h	heaps/hxd/impl/AsyncLoader.hx	/^						var h = inf.height >> mip;$/;"	v
h	heaps/hxd/res/FontBuilder.hx	/^				var h = size.h;$/;"	v
h	heaps/hxd/res/FontBuilder.hx	/^			var h = Math.ceil(tf.textHeight) + 1;$/;"	v
h	heaps/hxd/res/FontBuilder.hx	/^		var h = getFontHeight(this.font, 'MgO0pj');$/;"	v
h	heaps/hxd/res/Image.hx	/^							var h = inf.height >> mip;$/;"	v
h	heaps/hxd/res/Image.hx	/^					var h = inf.height >> i;$/;"	v
h	heaps/hxd/res/Image.hx	/^			var h = inf.height >> mipLevel;$/;"	v
h	heaps/hxd/res/Image.hx	/^			var h = r.header.height;$/;"	v
h	heaps/hxd/snd/WavData.hx	/^		var h = d.header;$/;"	v
h2d	heaps/h2d/Anim.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Bitmap.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/BlendMode.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Camera.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/CdbLevel.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/CheckBox.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Console.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Drawable.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Dropdown.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Flow.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Font.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Graphics.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/HtmlText.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Interactive.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/KeyFrames.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Layers.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Mask.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Object.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/ObjectFollower.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Particles.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/RenderContext.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/ScaleGrid.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Scene.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Slider.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Sprite.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/SpriteBatch.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Text.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/TextInput.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Tile.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/TileGroup.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/Video.hx	/^package h2d;$/;"	p
h2d	heaps/h2d/ZGroup.hx	/^package h2d;$/;"	p
h2d.col	heaps/h2d/col/Bounds.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Circle.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Collider.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Delaunay.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/IBounds.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/IPoint.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/IPolygon.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/IPolygons.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Line.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Matrix.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/PixelsCollider.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Point.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Polygon.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/PolygonCollider.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Polygons.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Polynomial.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Ray.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/RoundRect.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Segment.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Segments.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Triangle.hx	/^package h2d.col;$/;"	p
h2d.col	heaps/h2d/col/Voronoi.hx	/^package h2d.col;$/;"	p
h2d.domkit	heaps/h2d/domkit/BaseComponents.hx	/^package h2d.domkit;$/;"	p
h2d.domkit	heaps/h2d/domkit/InitComponents.hx	/^package h2d.domkit;$/;"	p
h2d.domkit	heaps/h2d/domkit/Object.hx	/^package h2d.domkit;$/;"	p
h2d.domkit	heaps/h2d/domkit/Style.hx	/^package h2d.domkit;$/;"	p
h2d.filter	heaps/h2d/filter/AbstractMask.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Ambient.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Bloom.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Blur.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/ColorMatrix.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Displacement.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/DropShadow.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Filter.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Glow.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Group.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/InnerGlow.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Mask.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Nothing.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Outline.hx	/^package h2d.filter;$/;"	p
h2d.filter	heaps/h2d/filter/Shader.hx	/^package h2d.filter;$/;"	p
h2d.impl	heaps/h2d/impl/BatchDrawState.hx	/^package h2d.impl;$/;"	p
h2d.impl	heaps/h2d/impl/PointApi.hx	/^package h2d.impl;$/;"	p
h3d	heaps/h3d/Buffer.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Camera.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Engine.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/IDrawable.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Indexes.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Matrix.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Quat.hx	/^package h3d;$/;"	p
h3d	heaps/h3d/Vector.hx	/^package h3d;$/;"	p
h3d.anim	heaps/h3d/anim/Animation.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/BufferAnimation.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/LinearAnimation.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/SimpleBlend.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/Skin.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/SmoothTarget.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/SmoothTransition.hx	/^package h3d.anim;$/;"	p
h3d.anim	heaps/h3d/anim/Transition.hx	/^package h3d.anim;$/;"	p
h3d.col	heaps/h3d/col/Bounds.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Capsule.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Collider.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/FPoint.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Frustum.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/HeightMap.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/IPoint.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/ObjectCollider.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Plane.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Point.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Polygon.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/PolygonBuffer.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Ray.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Seg.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/SkinCollider.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/Sphere.hx	/^package h3d.col;$/;"	p
h3d.col	heaps/h3d/col/TransformCollider.hx	/^package h3d.col;$/;"	p
h3d.impl	heaps/h3d/impl/Benchmark.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/DirectXDriver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/Driver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/GlDriver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/InstanceBuffer.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/LogDriver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/MacroHelper.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/ManagedBuffer.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/MemoryManager.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/NullDriver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/RenderContext.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/RendererFX.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/Stage3dDriver.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/TextureCache.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/VarBinding.hx	/^package h3d.impl;$/;"	p
h3d.impl	heaps/h3d/impl/VulkanDriver.hx	/^package h3d.impl;$/;"	p
h3d.mat	heaps/h3d/mat/BaseMaterial.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/BigTexture.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/BlendMode.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Data.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Defaults.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/DepthBuffer.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Material.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/MaterialDatabase.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/MaterialSetup.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Pass.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/PbrMaterial.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/PbrMaterialSetup.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Stencil.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/Texture.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/TextureArray.hx	/^package h3d.mat;$/;"	p
h3d.mat	heaps/h3d/mat/TextureChannels.hx	/^package h3d.mat;$/;"	p
h3d.parts	heaps/h3d/parts/Collider.hx	/^package h3d.parts;$/;"	p
h3d.parts	heaps/h3d/parts/Data.hx	/^package h3d.parts;$/;"	p
h3d.parts	heaps/h3d/parts/Emitter.hx	/^package h3d.parts;$/;"	p
h3d.parts	heaps/h3d/parts/GpuParticles.hx	/^package h3d.parts;$/;"	p
h3d.parts	heaps/h3d/parts/Particle.hx	/^package h3d.parts;$/;"	p
h3d.parts	heaps/h3d/parts/Particles.hx	/^package h3d.parts;$/;"	p
h3d.pass	heaps/h3d/pass/Base.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Blur.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Border.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/ColorMatrix.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Copy.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/CubeCopy.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Default.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/DefaultShadowMap.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/DirShadowMap.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/FXAA.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/HardwarePick.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Outline.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Output.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/PassList.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/PassObject.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/PointShadowMap.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/ScalableAO.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/ScreenFx.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/ShaderManager.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/Shadows.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/SortByMaterial.hx	/^package h3d.pass;$/;"	p
h3d.pass	heaps/h3d/pass/SpotShadowMap.hx	/^package h3d.pass;$/;"	p
h3d.prim	heaps/h3d/prim/BigPrimitive.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Cube.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Cylinder.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Disc.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/DynamicPrimitive.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/GeoSphere.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Grid.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/HMDModel.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Instanced.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/MeshPrimitive.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/ModelCache.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Plane2D.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Polygon.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Primitive.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Quads.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/RawPrimitive.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/Sphere.hx	/^package h3d.prim;$/;"	p
h3d.prim	heaps/h3d/prim/UV.hx	/^package h3d.prim;$/;"	p
h3d.scene	heaps/h3d/scene/Box.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/CameraController.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Graphics.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Interactive.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Light.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/LightSystem.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Mesh.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/MeshBatch.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/MultiMaterial.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Object.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/RenderContext.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Renderer.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Scene.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Skin.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Sphere.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/Trail.hx	/^package h3d.scene;$/;"	p
h3d.scene	heaps/h3d/scene/World.hx	/^package h3d.scene;$/;"	p
h3d.scene.fwd	heaps/h3d/scene/fwd/DirLight.hx	/^package h3d.scene.fwd;$/;"	p
h3d.scene.fwd	heaps/h3d/scene/fwd/Light.hx	/^package h3d.scene.fwd;$/;"	p
h3d.scene.fwd	heaps/h3d/scene/fwd/LightSystem.hx	/^package h3d.scene.fwd;$/;"	p
h3d.scene.fwd	heaps/h3d/scene/fwd/PointLight.hx	/^package h3d.scene.fwd;$/;"	p
h3d.scene.fwd	heaps/h3d/scene/fwd/Renderer.hx	/^package h3d.scene.fwd;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/Decal.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/DirLight.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/Environment.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/Light.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/LightBuffer.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/LightSystem.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/PointLight.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/Renderer.hx	/^package h3d.scene.pbr;$/;"	p
h3d.scene.pbr	heaps/h3d/scene/pbr/SpotLight.hx	/^package h3d.scene.pbr;$/;"	p
h3d.shader	heaps/h3d/shader/AlphaChannel.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/AlphaMap.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/AlphaMult.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/AmbientLight.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/AnimatedTexture.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Base2d.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/BaseMesh.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Bloom.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Blur.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Buffers.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ColorAdd.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ColorKey.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ColorMatrix.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ColorMult.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/CubeMap.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/DirLight.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/DirShadow.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Displacement.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/FixedColor.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/GenTexture.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/GpuParticle.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/KillAlpha.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/LineShader.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/MinMaxShader.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/NoiseLib.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/NormalMap.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Outline.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Outline2D.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Parallax.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ParticleShader.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/PointLight.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/PointShadow.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SAO.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ScreenShader.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Shadow.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SignedDistanceField.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SinusDeform.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Skin.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SkinBase.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SkinTangent.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SpecularTexture.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/SpotShadow.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Texture.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/Texture2.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/UVAnim.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/UVDelta.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/UVScroll.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/VertexColor.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/VertexColorAlpha.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/VolumeDecal.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/WhiteAlpha.hx	/^package h3d.shader;$/;"	p
h3d.shader	heaps/h3d/shader/ZCut.hx	/^package h3d.shader;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/AlphaMultiply.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/BDRF.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/CubeLod.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/DefaultForward.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/Distortion.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/GammaCorrect.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/Light.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/Lighting.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/PropsDefinition.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/PropsImport.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/PropsTexture.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/PropsValues.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/Slides.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/StrengthValues.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/ToneMapping.hx	/^package h3d.shader.pbr;$/;"	p
h3d.shader.pbr	heaps/h3d/shader/pbr/VolumeDecal.hx	/^package h3d.shader.pbr;$/;"	p
hAlignChildFlow	heaps/samples/Flows.hx	/^	var hAlignChildFlow : Array<Flow> = [];$/;"	v
hAligns	heaps/samples/Flows.hx	/^	var hAligns = [FlowAlign.Left, FlowAlign.Middle, FlowAlign.Right];$/;"	v
hAngle	heaps/h3d/scene/pbr/Environment.hx	/^			var hAngle = hOffset + calculatedUV.x * fovX;$/;"	v
hOffset	heaps/h3d/scene/pbr/Environment.hx	/^			var hOffset = (2.0 * PI - fovX) * 0.5;$/;"	v
ha	heaps/h2d/col/Voronoi.hx	/^		var    ha = ax*ax+ay*ay,$/;"	v
hadShortKey	heaps/h2d/Console.hx	/^		var hadShortKey = false;$/;"	v
half	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var half = (lightDirection + view).normalize();$/;"	v
half	heaps/h3d/shader/pbr/Lighting.hx	/^				var half = (pbrLightDirection + view).normalize();$/;"	v
halfFovX	heaps/h3d/Camera.hx	/^			var halfFovX = Math.atan( Math.tan(fovY * 0.5 * degToRad) * screenRatio );$/;"	v
halfFovX	heaps/h3d/Camera.hx	/^		var halfFovX = Math.atan( Math.tan(fovY * 0.5 * degToRad) * screenRatio );$/;"	v
halfPixelInverse	heaps/h3d/shader/Base2d.hx	/^		@param var halfPixelInverse : Vec2;$/;"	v
halfTheta	heaps/h3d/Quat.hx	/^		var halfTheta = cosHalfTheta.acos();$/;"	v
halfedge	heaps/h2d/col/Voronoi.hx	/^			var halfedge = halfedges[iHalfedge];$/;"	v
halfedges	heaps/h2d/col/Voronoi.hx	/^		var halfedges = this.halfedges, iHalfedge = halfedges.length, edge;$/;"	v
halfedges	heaps/h2d/col/Voronoi.hx	/^		var halfedges = this.halfedges,$/;"	v
halfedges	heaps/h2d/col/Voronoi.hx	/^	public var halfedges : Array<Halfedge>;$/;"	v
halign	heaps/h2d/Flow.hx	/^				var halign = p.horizontalAlign == null ? halign : p.horizontalAlign;$/;"	v
halign	heaps/h2d/Flow.hx	/^			var halign = horizontalAlign == null ? Left : horizontalAlign;$/;"	v
halign	heaps/samples/ScaleMode2D.hx	/^		var halign:ScaleModeAlign = Center;$/;"	v
hammersley	heaps/h3d/scene/pbr/Environment.hx	/^		function hammersley( i : Int, max : Int ) : Vec2 {$/;"	f
handle	heaps/hxd/snd/Manager.hx	/^	public var handle   : BufferHandle;$/;"	v
handle	heaps/hxd/snd/Manager.hx	/^	public var handle  : SourceHandle;$/;"	v
handleCmdChange	heaps/h2d/Console.hx	/^	function handleCmdChange() {$/;"	f
handleCommand	heaps/h2d/Console.hx	/^	function handleCommand( command : String ) {$/;"	f
handleDX	heaps/h2d/Slider.hx	/^	var handleDX = 0.0;$/;"	v
handleEvent	heaps/h2d/Interactive.hx	/^	@:noCompletion public function handleEvent( e : hxd.Event ) {$/;"	f
handleEvent	heaps/h2d/Scene.hx	/^	public function handleEvent( event : hxd.Event, last : hxd.SceneEvents.Interactive ) : hxd.Scen/;"	f
handleEvent	heaps/h2d/Slider.hx	/^	override function handleEvent(e:hxd.Event) {$/;"	f
handleEvent	heaps/h3d/scene/Interactive.hx	/^	@:noCompletion public function handleEvent( e : hxd.Event ) {$/;"	f
handleEvent	heaps/h3d/scene/Scene.hx	/^	public function handleEvent( event : hxd.Event, last : hxd.SceneEvents.Interactive ) {$/;"	f
handleEvent	heaps/hxd/SceneEvents.hx	/^	public function handleEvent( e : Event ) : Void;$/;"	f
handleEvent	heaps/hxd/SceneEvents.hx	/^	public function handleEvent( e : Event, last : Interactive ) : Interactive;$/;"	f
handleKey	heaps/h2d/Console.hx	/^	function handleKey( e : hxd.Event ) {$/;"	f
handleKey	heaps/h2d/TextInput.hx	/^	function handleKey( e : hxd.Event ) {$/;"	f
handleMessage	heaps/hxd/Worker.hx	/^	function handleMessage( msg : T ) {$/;"	f
handleMeta	heaps/hxsl/HlslOut.hx	/^	function handleMeta( m, args : Array<Ast.Const>, callb, e, tabs ) {$/;"	f
handleReturn	heaps/hxsl/Eval.hx	/^	function handleReturn( e : TExpr, isFinal : Bool = false ) : TExpr {$/;"	f
handleReturnDef	heaps/hxsl/Eval.hx	/^	function handleReturnDef(e) {$/;"	f
handled	heaps/hxd/SceneEvents.hx	/^		var handled = false;$/;"	v
handles	heaps/hxd/fmt/blend/Data.hx	/^		var handles:Array<Handle> = [];$/;"	v
hardware	heaps/h3d/Engine.hx	/^	public var hardware(default, null) : Bool;$/;"	v
hardwarePass	heaps/h3d/scene/Scene.hx	/^	var hardwarePass : h3d.pass.HardwarePick;$/;"	v
hardwarePick	heaps/h3d/scene/Scene.hx	/^	public function hardwarePick( pixelX : Float, pixelY : Float) {$/;"	f
has	heaps/h3d/impl/VarBinding.hx	/^		var has = false;$/;"	v
has	heaps/h3d/scene/Object.hx	/^	public inline function has(f:ObjectFlags) return this & f.toInt() != 0;$/;"	f
has	heaps/h3d/scene/Renderer.hx	/^	function has( name : String ) {$/;"	f
has2DGradient	heaps/h2d/Particles.hx	/^		@const var has2DGradient : Bool;$/;"	v
hasAttribIndex	heaps/h3d/impl/GlDriver.hx	/^	public var hasAttribIndex : Array<Bool>;$/;"	v
hasBorder	heaps/h2d/CdbLevel.hx	/^			var hasBorder = false;$/;"	v
hasBorrowQualifier	heaps/hxsl/Ast.hx	/^	public static function hasBorrowQualifier( v : TVar, path : String ) {$/;"	f
hasBounds	heaps/h3d/col/Frustum.hx	/^	public function hasBounds( b : Bounds ) @:privateAccess {$/;"	f
hasBuffer	heaps/h3d/prim/MeshPrimitive.hx	/^	public function hasBuffer( name : String ) {$/;"	f
hasBuffering	heaps/h2d/RenderContext.hx	/^	public inline function hasBuffering() {$/;"	f
hasCase	heaps/hxsl/Eval.hx	/^			var hasCase = false;$/;"	v
hasChar	heaps/h2d/Font.hx	/^	public function hasChar( code : Int ) : Bool {$/;"	f
hasColor	heaps/h3d/parts/Particles.hx	/^	public var hasColor(default, set) : Bool;$/;"	v
hasCompiled	heaps/hxsl/CacheFileBuilder.hx	/^	var hasCompiled : Bool;$/;"	v
hasData	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var hasData = false;$/;"	v
hasDepth	heaps/h3d/impl/Stage3dDriver.hx	/^		var hasDepth = textures[0].depthBuffer != null;$/;"	v
hasDeviceError	heaps/h3d/impl/DirectXDriver.hx	/^	var hasDeviceError = false;$/;"	v
hasDiscard	heaps/hxsl/Linker.hx	/^	public var hasDiscard : Bool;$/;"	v
hasEvent	heaps/hxd/WaitEvent.hx	/^	public inline function hasEvent() {$/;"	f
hasFeature	heaps/h3d/Engine.hx	/^	public function hasFeature(f) {$/;"	f
hasFeature	heaps/h3d/impl/DirectXDriver.hx	/^	override function hasFeature(f:Feature) {$/;"	f
hasFeature	heaps/h3d/impl/Driver.hx	/^	public function hasFeature( f : Feature ) {$/;"	f
hasFeature	heaps/h3d/impl/GlDriver.hx	/^	override function hasFeature( f : Feature ) : Bool {$/;"	f
hasFeature	heaps/h3d/impl/LogDriver.hx	/^	override function hasFeature( f : Feature ) {$/;"	f
hasFeature	heaps/h3d/impl/NullDriver.hx	/^	override function hasFeature( f : Feature ) {$/;"	f
hasFeature	heaps/h3d/impl/Stage3dDriver.hx	/^	override function hasFeature( f : Feature ) : Bool {$/;"	f
hasFeature	heaps/h3d/impl/VulkanDriver.hx	/^	override function hasFeature( f : Feature ) {$/;"	f
hasFeature	heaps/h3d/scene/Renderer.hx	/^	function hasFeature(f) {$/;"	f
hasFeature	heaps/hxd/snd/Driver.hx	/^	public function hasFeature           (d : DriverFeature) : Bool;$/;"	f
hasFeature	heaps/hxd/snd/openal/Driver.hx	/^	public function hasFeature( f : DriverFeature ) {$/;"	f
hasFeature	heaps/hxd/snd/webaudio/Driver.hx	/^	public function hasFeature (d : DriverFeature) : Bool {$/;"	f
hasFile	heaps/hxd/res/FileTree.hx	/^			var hasFile = f.files.iterator().hasNext();$/;"	v
hasFixedColor	heaps/h3d/shader/Blur.hx	/^		@const var hasFixedColor : Bool;$/;"	v
hasFocus	heaps/h2d/Interactive.hx	/^	public function hasFocus() {$/;"	f
hasFocus	heaps/h2d/TextInput.hx	/^	public function hasFocus() {$/;"	f
hasFocus	heaps/h3d/scene/Interactive.hx	/^	public function hasFocus() {$/;"	f
hasGlobal	heaps/hxsl/RuntimeShader.hx	/^	public inline function hasGlobal( gid : Int ) {$/;"	f
hasGradient	heaps/h2d/Particles.hx	/^		@const var hasGradient : Bool;$/;"	v
hasHoles	heaps/hxd/earcut/Earcut.hx	/^		var hasHoles = holes != null && holes.length > 0;$/;"	v
hasIdent	heaps/h3d/impl/VarBinding.hx	/^	static function hasIdent( e ) {$/;"	f
hasIndex	heaps/h3d/scene/Graphics.hx	/^			var hasIndex = i < count - 1 || closed;$/;"	v
hasJoint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var hasJoint = false;$/;"	v
hasLib	heaps/samples/Generator.hx	/^		function hasLib( l ) {$/;"	f
hasLoop	heaps/h3d/parts/GpuParticles.hx	/^		var hasLoop = false;$/;"	v
hasLoop	heaps/hxd/System.flash.hx	/^	static var hasLoop : Bool;$/;"	v
hasMRT	heaps/samples/Sao.hx	/^	public var hasMRT : Bool;$/;"	v
hasMasterVolume	heaps/hxd/snd/Manager.hx	/^	var hasMasterVolume   : Bool;$/;"	v
hasMultiIndirect	heaps/h3d/impl/GlDriver.hx	/^	var hasMultiIndirect = false;$/;"	v
hasNext	heaps/h2d/SpriteBatch.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/h3d/parts/Particles.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/h3d/pass/PassList.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/hxd/FloatBuffer.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/hxd/IndexBuffer.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/hxd/impl/ArrayIterator.hx	/^	public inline function hasNext() {$/;"	f
hasNext	heaps/hxsl/ShaderList.hx	/^	public inline function hasNext() {$/;"	f
hasNormal	heaps/h3d/shader/Blur.hx	/^		@param @const var hasNormal : Bool;$/;"	v
hasNormalMap	heaps/h3d/scene/Skin.hx	/^			var hasNormalMap = false;$/;"	v
hasNormalMap	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var hasNormalMap = false;$/;"	v
hasOffset	heaps/hxsl/Cache.hx	/^		var hasOffset = declVar("Batch_HasOffset",TBool,Param);$/;"	v
hasParam	heaps/hxd/fs/Convert.hx	/^	function hasParam( name : String ) {$/;"	f
hasPart	heaps/h2d/Particles.hx	/^		var hasPart = false;$/;"	v
hasPart	heaps/h3d/parts/GpuParticles.hx	/^		var hasPart = false;$/;"	v
hasPoint	heaps/h3d/col/Frustum.hx	/^	public function hasPoint( p : Point ) {$/;"	f
hasPosition	heaps/h3d/anim/LinearAnimation.hx	/^	public var hasPosition : Bool = true;$/;"	v
hasProp	heaps/hxd/fmt/fbx/Data.hx	/^	public static function hasProp( n : FbxNode, p : FbxProp ) {$/;"	f
hasQualifier	heaps/hxsl/Ast.hx	/^	public static function hasQualifier( v : TVar, q ) {$/;"	f
hasRenderZone	heaps/h2d/RenderContext.hx	/^	var hasRenderZone : Bool;$/;"	v
hasReturn	heaps/hxsl/Eval.hx	/^	function hasReturn( e : TExpr ) {$/;"	f
hasReturnLoop	heaps/hxsl/Eval.hx	/^	function hasReturnLoop( e : TExpr ) {$/;"	f
hasRot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var hasRot = c.r != null || def.rotate != null || def.preRot != null;$/;"	v
hasRotation	heaps/h3d/anim/LinearAnimation.hx	/^	public var hasRotation : Bool;$/;"	v
hasRotationScale	heaps/h2d/SpriteBatch.hx	/^	public var hasRotationScale : Bool = false;$/;"	v
hasScale	heaps/h3d/anim/LinearAnimation.hx	/^	public var hasScale : Bool;$/;"	v
hasScale	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var hasScale = c.s != null || def.scale != null;$/;"	v
hasScale	heaps/hxd/fmt/hmd/Reader.hx	/^			var hasScale = pid & 0x8000 != 0;$/;"	v
hasScissor	heaps/h3d/impl/DirectXDriver.hx	/^	var hasScissor = false;$/;"	v
hasSecondMatrix	heaps/h3d/pass/ColorMatrix.hx	/^		@const var hasSecondMatrix : Bool;$/;"	v
hasSetTarget	heaps/h3d/scene/Renderer.hx	/^	var hasSetTarget = false;$/;"	v
hasShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^					var hasShadow = dl.shadows != null && dl.shadows.enabled && dl.shadows.mode != None && shad/;"	v
hasShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^					var hasShadow = pl.shadows != null && pl.shadows.enabled && pl.shadows.mode != None && shad/;"	v
hasShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^					var hasShadow = sl.shadows != null && sl.shadows.enabled && sl.shadows.mode != None && shad/;"	v
hasSideEffect	heaps/hxsl/Ast.hx	/^	public static function hasSideEffect( e : TExpr ) {$/;"	f
hasSize	heaps/hxd/earcut/Earcut.hx	/^	var hasSize : Bool;$/;"	v
hasSphere	heaps/h3d/col/Frustum.hx	/^	public function hasSphere( s : Sphere ) {$/;"	f
hasStencil	heaps/h3d/mat/DepthBuffer.hx	/^	public function hasStencil() {$/;"	f
hasTangents	heaps/h3d/prim/BigPrimitive.hx	/^	public var hasTangents = false;$/;"	v
hasTrans	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var hasTrans = c.t != null;$/;"	v
hasUVPos	heaps/h2d/RenderContext.hx	/^	var hasUVPos : Bool;$/;"	v
hasUVPos	heaps/h3d/shader/Base2d.hx	/^		@const var hasUVPos : Bool;$/;"	v
hasUpdate	heaps/h2d/SpriteBatch.hx	/^	public var hasUpdate : Bool = false;$/;"	v
hasValue	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var hasValue = false;$/;"	v
hasValue	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var hasValue = false;$/;"	v
hash	heaps/hxd/Rand.hx	/^	public static function hash(n, seed = 5381) {$/;"	f
hash	heaps/hxd/fmt/spine/JsonData.hx	/^	var hash : String;$/;"	v
hash	heaps/hxd/fs/FileConverter.hx	/^		var hash = haxe.crypto.Sha1.make(content).toHex();$/;"	v
hbox	heaps/samples/DrawingTiles.hx	/^		var hbox = new h2d.Flow(fui);$/;"	v
hd	heaps/hxsl/ShaderList.hx	/^		var hd = shaders;$/;"	v
hdrColor	heaps/h3d/shader/pbr/ToneMapping.hx	/^		var hdrColor : Vec4;$/;"	v
hdrMax	heaps/h3d/scene/pbr/Environment.hx	/^		@param var hdrMax : Float;$/;"	v
hdrMax	heaps/h3d/scene/pbr/Environment.hx	/^	public var hdrMax : Float = 10.0;$/;"	v
hdrTexture	heaps/h3d/shader/pbr/ToneMapping.hx	/^		@param var hdrTexture : Sampler2D;$/;"	v
head	heaps/h2d/impl/BatchDrawState.hx	/^	var head : StateEntry;$/;"	v
head	heaps/h3d/parts/Particles.hx	/^	var head : Particle;$/;"	v
head	heaps/h3d/pass/PassList.hx	/^		var head = null;$/;"	v
head	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public var head:Node;$/;"	v
head	heaps/hxd/poly2tri/SweepContext.hx	/^		var head = new Node( triangle.points[1], triangle );$/;"	v
head	heaps/hxd/poly2tri/SweepContext.hx	/^	public var head:Point;$/;"	v
head	heaps/hxd/res/Image.hx	/^		var head = try f.readUInt16() catch( e : haxe.io.Eof ) 0;$/;"	v
header	heaps/hxd/File.hx	/^							var header = raw.substr(0, raw.indexOf(","));$/;"	v
header	heaps/hxd/fmt/hmd/Library.hx	/^	public var header(default,null) : Data;$/;"	v
header	heaps/hxd/fmt/hmd/Writer.hx	/^		var header = new haxe.io.BytesOutput();$/;"	v
header	heaps/hxd/fmt/pak/Writer.hx	/^		var header = header.getBytes();$/;"	v
header	heaps/hxd/fmt/pak/Writer.hx	/^		var header = new haxe.io.BytesOutput();$/;"	v
header	heaps/hxd/snd/Mp3Data.hx	/^			var header = reader.readFrameHeader();$/;"	v
header	heaps/hxd/snd/Mp3Data.hx	/^		var header = mp.frames[0].header;$/;"	v
headerPos	heaps/hxd/snd/Mp3Data.hx	/^			var headerPos = byteInput.position - 2; \/\/ 0xfff sync$/;"	v
headerSize	heaps/hxd/fmt/pak/Data.hx	/^	public var headerSize : Int;$/;"	v
height	heaps/h2d/Bitmap.hx	/^	public var height(default,set) : Null<Float>;$/;"	v
height	heaps/h2d/CdbLevel.hx	/^	public var height : Int;$/;"	v
height	heaps/h2d/CdbLevel.hx	/^	public var height(default, null) : Int;$/;"	v
height	heaps/h2d/CdbLevel.hx	/^	var height : Int;$/;"	v
height	heaps/h2d/Console.hx	/^	var height : Int;$/;"	v
height	heaps/h2d/Flow.hx	/^					var height = p.isAbsolute ? absHeight : maxLineHeight;$/;"	v
height	heaps/h2d/HtmlText.hx	/^	var height : Float;$/;"	v
height	heaps/h2d/Interactive.hx	/^	public var height : Float;$/;"	v
height	heaps/h2d/Mask.hx	/^	public var height : Int;$/;"	v
height	heaps/h2d/Object.hx	/^		var height = Math.ceil(total.yMax - yMin - 1e-10);$/;"	v
height	heaps/h2d/ObjectFollower.hx	/^		var height = s2d == null ? h3d.Engine.getCurrent().height : s2d.height;$/;"	v
height	heaps/h2d/ScaleGrid.hx	/^	public var height(default,set) : Float;$/;"	v
height	heaps/h2d/Scene.hx	/^	public var height(default, null) : Int;$/;"	v
height	heaps/h2d/Tile.hx	/^	public var height(default,null) : Float;$/;"	v
height	heaps/h2d/col/Bounds.hx	/^	public var height(get, set) : Float;$/;"	v
height	heaps/h2d/col/IBounds.hx	/^	public var height(get, set) : Int;$/;"	v
height	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var height : Int;$/;"	v
height	heaps/h3d/Engine.hx	/^	public var height(default, null) : Int;$/;"	v
height	heaps/h3d/impl/Benchmark.hx	/^	public var height = 16;$/;"	v
height	heaps/h3d/impl/Stage3dDriver.hx	/^	var height : Int;$/;"	v
height	heaps/h3d/mat/BigTexture.hx	/^	public var height : Int;$/;"	v
height	heaps/h3d/mat/BigTexture.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/h3d/mat/DepthBuffer.hx	/^	public var height(default, null) : Int;$/;"	v
height	heaps/h3d/mat/Texture.hx	/^	public var height(default, null) : Int;$/;"	v
height	heaps/h3d/prim/Grid.hx	/^	public var height (default, null)  : Int;$/;"	v
height	heaps/h3d/scene/pbr/LightSystem.hx	/^		var height = currentTarget == null ? ctx.engine.height : currentTarget.height;$/;"	v
height	heaps/hxd/BitmapData.hx	/^	public var height : Int;$/;"	v
height	heaps/hxd/BitmapData.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/hxd/Pixels.hx	/^		var height = levels[0][0].height;$/;"	v
height	heaps/hxd/Pixels.hx	/^	public var height(default,null) : Int;$/;"	v
height	heaps/hxd/System.flash.hx	/^	public static var height(get, never) : Int;$/;"	v
height	heaps/hxd/System.hl.hx	/^		var height = 600;$/;"	v
height	heaps/hxd/System.hl.hx	/^	public static var height(get, never) : Int;$/;"	v
height	heaps/hxd/System.hx	/^	public static var height(get, never) : Int;$/;"	v
height	heaps/hxd/System.js.hx	/^	public static var height(get, never) : Int;$/;"	v
height	heaps/hxd/Window.flash.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/hxd/Window.hl.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/hxd/Window.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/hxd/Window.js.hx	/^	public var height(get, never) : Int;$/;"	v
height	heaps/hxd/fmt/spine/Data.hx	/^	public var height : Float;$/;"	v
height	heaps/hxd/fmt/spine/JsonData.hx	/^	var height : Float;$/;"	v
height	heaps/hxd/fmt/spine/JsonData.hx	/^	var height : Int;$/;"	v
height	heaps/hxd/fmt/tiff/Reader.hx	/^		var height = Utils.getInt(f, ImageHeight);$/;"	v
height	heaps/hxd/poly2tri/Sweep.hx	/^		var height = ( (this.context.basin.left_highest)$/;"	v
height	heaps/hxd/res/BDFFont.hx	/^	public var height : Int;$/;"	v
height	heaps/hxd/res/FontBuilder.hx	/^		var height = width;$/;"	v
height	heaps/hxd/res/Image.hx	/^	public var height(default,null) : Int = 0;$/;"	v
height	heaps/hxd/res/NanoJpeg.hx	/^	public var height : Int;$/;"	v
height	heaps/hxd/res/NanoJpeg.hx	/^	var height : Int;$/;"	v
height	heaps/hxd/res/TiledMap.hx	/^	var height : Int;$/;"	v
height	heaps/samples/ScaleMode2D.hx	/^		var height:Int = 240;$/;"	v
heightMap	heaps/h3d/shader/Parallax.hx	/^		@param var heightMap : Channel;$/;"	v
help	heaps/samples/Filters.hx	/^		var help = new h2d.Text(hxd.Res.customFont.toFont(), s2d);$/;"	v
hex	heaps/samples/ShaderAdvanced.hx	/^				var hex = pix.bytes.toHex();$/;"	v
hex2	heaps/samples/ShaderAdvanced.hx	/^				var hex2 = pix2.bytes.toHex();$/;"	v
hfReference	heaps/hxd/snd/effect/Reverb.hx	/^	public var hfReference       : Float; \/\/ [20.0, 20000.0]$/;"	v
hfReference	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var hfReference       : Float;$/;"	v
hgeom	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var hgeom = new Map();$/;"	v
hh	heaps/h2d/RenderContext.hx	/^			var hh = tile.height * 0.5;$/;"	v
hh	heaps/samples/Interactive2D.hx	/^		var hh = -interactive.height * .5;$/;"	v
hide	heaps/h2d/Console.hx	/^	public function hide() {$/;"	f
hide	heaps/h2d/filter/AbstractMask.hx	/^	var hide : Hide;$/;"	v
hide	heaps/h3d/parts/GpuParticles.hx	/^	@:optional var hide : Dynamic;$/;"	v
hideProps	heaps/h2d/Particles.hx	/^	var hideProps : Dynamic;$/;"	v
hideProps	heaps/h3d/parts/GpuParticles.hx	/^	var hideProps : Dynamic;$/;"	v
highI	heaps/hxd/clipper/Clipper.hx	/^		var highI = pg.length - 1;$/;"	v
highI	heaps/hxd/clipper/Clipper.hx	/^		var highI = pol.length - 1;$/;"	v
highPrecision	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var highPrecision : Bool = false;$/;"	v
highlightedItem	heaps/h2d/Dropdown.hx	/^	public var highlightedItem(default, null) : Int = -1;$/;"	v
hintTxt	heaps/h2d/Console.hx	/^	var hintTxt: h2d.Text;$/;"	v
hit	heaps/h3d/col/ObjectCollider.hx	/^		var hit = collider.rayIntersection(r, bestMatch);$/;"	v
hit	heaps/h3d/col/TransformCollider.hx	/^		var hit = collider.rayIntersection(r, bestMatch);$/;"	v
hit	heaps/h3d/scene/Scene.hx	/^						var hit = i.preciseShape.rayIntersection(r, i.bestMatch);$/;"	v
hit	heaps/h3d/scene/Scene.hx	/^				var hit = i.shape.rayIntersection(r, i.bestMatch);$/;"	v
hitInteractives	heaps/h3d/scene/Scene.hx	/^	var hitInteractives : Array<Interactive>;$/;"	v
hitPoint	heaps/h3d/scene/Interactive.hx	/^	var hitPoint = new h3d.Vector();$/;"	v
hitPoint	heaps/h3d/scene/Scene.hx	/^							var hitPoint = r.getPoint(hit);$/;"	v
hitPoint	heaps/h3d/scene/Scene.hx	/^				var hitPoint = r.getPoint(hit);$/;"	v
hl	heaps/h2d/col/Voronoi.hx	/^		var    hl = lfocx-rfocx,$/;"	v
hlsl	heaps/tools/hxsl/Main.hx	/^			var hlsl = new hxsl.HlslOut();$/;"	v
hmat	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var hmat = new Map<Int,Int>();$/;"	v
hmd	heaps/hxd/fmt/hmd/Dump.hx	/^			var hmd = l.toHMD(null, !StringTools.startsWith(file.split("\\\\").join("\/").split("\/").pop/;"	v
hmd	heaps/hxd/fmt/hmd/Dump.hx	/^		var hmd = new Reader(new haxe.io.BytesInput(bytes)).read();$/;"	v
hmd	heaps/hxd/fs/Convert.hx	/^		var hmd = hmdout.toHMD(null, !isAnim);$/;"	v
hmd	heaps/hxd/res/Model.hx	/^		var hmd = new hxd.fmt.hmd.Reader(fs).readHeader(#if editor true #end);$/;"	v
hmdout	heaps/hxd/fs/Convert.hx	/^		var hmdout = new hxd.fmt.fbx.HMDOut(srcPath);$/;"	v
hobjects	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var hobjects = new Map<Int, TmpObject>();$/;"	v
holeStateRec	heaps/hxd/clipper/Clipper.hx	/^		var holeStateRec;$/;"	v
holeStateRec	heaps/hxd/clipper/Clipper.hx	/^          var holeStateRec;$/;"	v
horiz	heaps/h2d/domkit/Style.hx	/^			var horiz = h2d.Tile.fromColor(0xFF0000, w, 1);$/;"	v
horizontal	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var horizontal : Bool;$/;"	v
horizontalAlign	heaps/h2d/Flow.hx	/^	public var horizontalAlign : Null<FlowAlign>;$/;"	v
horizontalAlign	heaps/h2d/Flow.hx	/^	public var horizontalAlign(default, set) : Null<FlowAlign>;$/;"	v
horizontalAlign	heaps/h2d/ObjectFollower.hx	/^	public var horizontalAlign : h2d.Flow.FlowAlign = Left;$/;"	v
horizontalSpacing	heaps/h2d/Flow.hx	/^	public var horizontalSpacing(default, set) : Int = 0;$/;"	v
horzEdge	heaps/hxd/clipper/Clipper.hx	/^		var horzEdge = m_SortedEdges;$/;"	v
horzLeft	heaps/hxd/clipper/Clipper.hx	/^		var horzLeft : Int = res.left;$/;"	v
horzRight	heaps/hxd/clipper/Clipper.hx	/^		var horzRight : Int = res.right;$/;"	v
host	heaps/samples/Network.hx	/^	public var host : hxd.net.SocketHost;$/;"	v
hover	heaps/samples/Interactive2D.hx	/^	var hover : Bool;$/;"	v
hprev	heaps/h3d/col/HeightMap.hx	/^		var hprev = getZ(px,py);$/;"	v
href	heaps/h2d/HtmlText.hx	/^			var href = aHrefs[aHrefs.length-1];$/;"	v
hscriptGet	heaps/hxsl/DynamicShader.hx	/^	@:keep public function hscriptGet( field : String ) : Dynamic {$/;"	f
hscriptSet	heaps/hxsl/DynamicShader.hx	/^	@:keep public function hscriptSet( field : String, value : Dynamic ) : Dynamic {$/;"	f
hseg	heaps/h2d/col/RoundRect.hx	/^		var hseg = (w - h) * 0.5;$/;"	v
hsize	heaps/samples/Helpers.hx	/^		var hsize = size \/ 2;$/;"	v
hskins	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var hskins = new Map(), tmpGeom = new Map();$/;"	v
hspacing	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var hspacing : Int;$/;"	v
htmlToText	heaps/h2d/HtmlText.hx	/^	function htmlToText( t : String )  {$/;"	f
hue	heaps/samples/AdjustColor.hx	/^	var hue = 0.;$/;"	v
hue	heaps/samples/Pbr.hx	/^	var hue : Float;$/;"	v
hue	heaps/samples/ShaderAdvanced.hx	/^		var hue : Float = 0.;$/;"	v
hull	heaps/h2d/col/IPolygon.hx	/^		var hull = [];$/;"	v
hull	heaps/h2d/col/Polygon.hx	/^		var hull = [];$/;"	v
hull	heaps/hxd/fmt/spine/JsonData.hx	/^	var hull : Int;$/;"	v
hw	heaps/h2d/RenderContext.hx	/^			var hw = tile.width * 0.5;$/;"	v
hw	heaps/samples/Interactive2D.hx	/^		var hw = -interactive.width * .5;$/;"	v
hx	heaps/h2d/SpriteBatch.hx	/^				var hx = t.width, hy = t.height;$/;"	v
hx	heaps/h2d/TileGroup.hx	/^		var hx = t.width, hy = t.height;$/;"	v
hx	heaps/h3d/Quat.hx	/^		var hx = from.x + to.x;$/;"	v
hx	heaps/hxd/earcut/Earcut.hx	/^		var hx = hole.x;$/;"	v
hxd	heaps/hxd/App.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/BitmapData.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/ByteConversions.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/BytesBuffer.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Charset.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Cursor.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Direction.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Event.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/File.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/FloatBuffer.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/IndexBuffer.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Key.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Math.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Pad.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Perlin.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/PixelFormat.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Pixels.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Rand.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Res.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Save.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/SceneEvents.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Stage.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/System.flash.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/System.hl.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/System.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/System.js.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Timer.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/WaitEvent.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Window.flash.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Window.hl.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Window.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Window.js.hx	/^package hxd;$/;"	p
hxd	heaps/hxd/Worker.hx	/^package hxd;$/;"	p
hxd.clipper	heaps/hxd/clipper/ClipType.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/Clipper.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/EndType.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/JoinType.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/PolyFillType.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/PolyType.hx	/^package hxd.clipper;$/;"	p
hxd.clipper	heaps/hxd/clipper/Rect.hx	/^package hxd.clipper;$/;"	p
hxd.earcut	heaps/hxd/earcut/Earcut.hx	/^package hxd.earcut;$/;"	p
hxd.fmt.bfnt	heaps/hxd/fmt/bfnt/FontParser.hx	/^package hxd.fmt.bfnt;$/;"	p
hxd.fmt.bfnt	heaps/hxd/fmt/bfnt/Reader.hx	/^package hxd.fmt.bfnt;$/;"	p
hxd.fmt.bfnt	heaps/hxd/fmt/bfnt/Writer.hx	/^package hxd.fmt.bfnt;$/;"	p
hxd.fmt.blend	heaps/hxd/fmt/blend/Data.hx	/^package hxd.fmt.blend;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/Data.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/Filter.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/Geometry.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/HMDOut.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.fbx	heaps/hxd/fmt/fbx/Parser.hx	/^package hxd.fmt.fbx;$/;"	p
hxd.fmt.grd	heaps/hxd/fmt/grd/Data.hx	/^package hxd.fmt.grd;$/;"	p
hxd.fmt.grd	heaps/hxd/fmt/grd/Reader.hx	/^package hxd.fmt.grd;$/;"	p
hxd.fmt.hbson	heaps/hxd/fmt/hbson/Reader.hx	/^package hxd.fmt.hbson;$/;"	p
hxd.fmt.hbson	heaps/hxd/fmt/hbson/Writer.hx	/^package hxd.fmt.hbson;$/;"	p
hxd.fmt.hdr	heaps/hxd/fmt/hdr/Reader.hx	/^package hxd.fmt.hdr;$/;"	p
hxd.fmt.hmd	heaps/hxd/fmt/hmd/Data.hx	/^package hxd.fmt.hmd;$/;"	p
hxd.fmt.hmd	heaps/hxd/fmt/hmd/Dump.hx	/^package hxd.fmt.hmd;$/;"	p
hxd.fmt.hmd	heaps/hxd/fmt/hmd/Library.hx	/^package hxd.fmt.hmd;$/;"	p
hxd.fmt.hmd	heaps/hxd/fmt/hmd/Reader.hx	/^package hxd.fmt.hmd;$/;"	p
hxd.fmt.hmd	heaps/hxd/fmt/hmd/Writer.hx	/^package hxd.fmt.hmd;$/;"	p
hxd.fmt.kframes	heaps/hxd/fmt/kframes/Data.hx	/^package hxd.fmt.kframes;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/Build.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/Data.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/FileSystem.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/Loader.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/Reader.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.pak	heaps/hxd/fmt/pak/Writer.hx	/^package hxd.fmt.pak;$/;"	p
hxd.fmt.spine	heaps/hxd/fmt/spine/Data.hx	/^package hxd.fmt.spine;$/;"	p
hxd.fmt.spine	heaps/hxd/fmt/spine/JsonData.hx	/^package hxd.fmt.spine;$/;"	p
hxd.fmt.spine	heaps/hxd/fmt/spine/Library.hx	/^package hxd.fmt.spine;$/;"	p
hxd.fmt.tiff	heaps/hxd/fmt/tiff/Data.hx	/^package hxd.fmt.tiff;$/;"	p
hxd.fmt.tiff	heaps/hxd/fmt/tiff/Reader.hx	/^package hxd.fmt.tiff;$/;"	p
hxd.fmt.tiff	heaps/hxd/fmt/tiff/Writer.hx	/^package hxd.fmt.tiff;$/;"	p
hxd.fs	heaps/hxd/fs/BytesFileSystem.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/Convert.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/EmbedFileSystem.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/FileConverter.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/FileEntry.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/FileInput.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/FileSystem.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/LoadedBitmap.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/LocalFileSystem.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/MultiFileSystem.hx	/^package hxd.fs;$/;"	p
hxd.fs	heaps/hxd/fs/NotFound.hx	/^package hxd.fs;$/;"	p
hxd.impl	heaps/hxd/impl/Air3File.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/AllocPos.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/Allocator.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/AnyProps.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/Api.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/ArrayIterator.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/AsyncLoader.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/BitsBuilder.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/CacheAllocator.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/Float32.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/Properties.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/TypedArray.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/UInt16.hx	/^package hxd.impl;$/;"	p
hxd.impl	heaps/hxd/impl/UncheckedBytes.hx	/^package hxd.impl;$/;"	p
hxd.net	heaps/hxd/net/BinaryLoader.hx	/^package hxd.net;$/;"	p
hxd.net	heaps/hxd/net/Socket.hx	/^package hxd.net;$/;"	p
hxd.net	heaps/hxd/net/SocketHost.hx	/^package hxd.net;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/AdvancingFront.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Basin.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Constants.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Edge.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/EdgeEvent.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Node.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Orientation.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Point.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Sweep.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/SweepContext.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Triangle.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/Utils.hx	/^package hxd.poly2tri;$/;"	p
hxd.poly2tri	heaps/hxd/poly2tri/VisiblePolygon.hx	/^package hxd.poly2tri;$/;"	p
hxd.res	heaps/hxd/res/Any.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Atlas.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/BDFFont.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/BitmapFont.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Config.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/DefaultFont.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/DynamicText.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Embed.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/EmbedOptions.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/FileTree.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Font.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/FontBuilder.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Gradients.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Image.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Loader.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Model.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/NanoJpeg.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/NotFound.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Prefab.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Resource.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/Sound.hx	/^package hxd.res;$/;"	p
hxd.res	heaps/hxd/res/TiledMap.hx	/^package hxd.res;$/;"	p
hxd.snd	heaps/hxd/snd/Channel.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/ChannelBase.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/ChannelGroup.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Data.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Driver.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Effect.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Listener.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/LoadingData.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Manager.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/Mp3Data.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/NativeChannel.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/OggData.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/SoundGroup.hx	/^package hxd.snd;$/;"	p
hxd.snd	heaps/hxd/snd/WavData.hx	/^package hxd.snd;$/;"	p
hxd.snd.effect	heaps/hxd/snd/effect/LowPass.hx	/^package hxd.snd.effect;$/;"	p
hxd.snd.effect	heaps/hxd/snd/effect/Pitch.hx	/^package hxd.snd.effect;$/;"	p
hxd.snd.effect	heaps/hxd/snd/effect/Reverb.hx	/^package hxd.snd.effect;$/;"	p
hxd.snd.effect	heaps/hxd/snd/effect/ReverbPreset.hx	/^package hxd.snd.effect;$/;"	p
hxd.snd.effect	heaps/hxd/snd/effect/Spatialization.hx	/^package hxd.snd.effect;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/AudioTypes.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/Driver.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/Emulator.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/LowPassDriver.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/PitchDriver.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/ReverbDriver.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.openal	heaps/hxd/snd/openal/SpatializationDriver.hx	/^package hxd.snd.openal;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/AudioTypes.hx	/^package hxd.snd.webaudio;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/Context.hx	/^package hxd.snd.webaudio;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/Driver.hx	/^package hxd.snd.webaudio;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^package hxd.snd.webaudio;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/PitchDriver.hx	/^package hxd.snd.webaudio;$/;"	p
hxd.snd.webaudio	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^package hxd.snd.webaudio;$/;"	p
hxml	heaps/samples/Generator.hx	/^				var hxml = sys.io.File.getContent(d);$/;"	v
hxml	heaps/samples/templates/.vscode/launch.json	/^			"hxml": "::name::_hl.hxml",$/;"	s	object:configurations.0
hxsl	heaps/hxsl/AgalOptim.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/AgalOut.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Ast.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/BatchShader.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Cache.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/CacheFile.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/CacheFileBuilder.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Channel.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/ChannelTexture.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Checker.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Clone.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Dce.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/DynamicShader.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Eval.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Flatten.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Globals.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/GlslOut.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/HlslOut.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Linker.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/MacroParser.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Macros.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Output.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Printer.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/RuntimeShader.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Serializer.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Shader.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/ShaderList.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/SharedShader.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Splitter.hx	/^package hxsl;$/;"	p
hxsl	heaps/hxsl/Types.hx	/^package hxsl;$/;"	p
hy	heaps/h3d/Quat.hx	/^		var hy = from.y + to.y;$/;"	v
hy	heaps/hxd/earcut/Earcut.hx	/^		var hy = hole.y;$/;"	v
hypot	heaps/h2d/col/Polynomial.hx	/^	function hypot( x : Float, y : Float ) {$/;"	f
hz	heaps/h3d/Quat.hx	/^		var hz = from.z + to.z;$/;"	v
i	heaps/h2d/Anim.hx	/^			var i = Std.int(curFrame) + 1;$/;"	v
i	heaps/h2d/Anim.hx	/^		var i = Std.int(curFrame);$/;"	v
i	heaps/h2d/CdbLevel.hx	/^				var i = 0;$/;"	v
i	heaps/h2d/CdbLevel.hx	/^			var i = 0;$/;"	v
i	heaps/h2d/CdbLevel.hx	/^			var i = 1;$/;"	v
i	heaps/h2d/Console.hx	/^				var i = Std.parseInt(v);$/;"	v
i	heaps/h2d/Console.hx	/^		var i = 0;$/;"	v
i	heaps/h2d/Flow.hx	/^			var i = 0;$/;"	v
i	heaps/h2d/Flow.hx	/^		var i = 0;$/;"	v
i	heaps/h2d/HtmlText.hx	/^				var i : Tile = loadImage(e.get("src"));$/;"	v
i	heaps/h2d/Interactive.hx	/^		var i = this;$/;"	v
i	heaps/h2d/Object.hx	/^			var i = children.length;$/;"	v
i	heaps/h2d/Object.hx	/^		var i = children.length - 1;$/;"	v
i	heaps/h2d/Scene.hx	/^				var i = 0;$/;"	v
i	heaps/h2d/Scene.hx	/^				var i = children.length;$/;"	v
i	heaps/h2d/Scene.hx	/^			var i = interactive[idx];$/;"	v
i	heaps/h2d/Scene.hx	/^		var i : Interactive = cast to;$/;"	v
i	heaps/h2d/Scene.hx	/^		var i = hxd.impl.Api.downcast(f, h2d.Interactive);$/;"	v
i	heaps/h2d/TileGroup.hx	/^		var i = 0;$/;"	v
i	heaps/h2d/col/Bounds.hx	/^		var i = new Bounds();$/;"	v
i	heaps/h2d/col/Delaunay.hx	/^		var i;$/;"	v
i	heaps/h2d/col/IBounds.hx	/^		var i = new IBounds();$/;"	v
i	heaps/h2d/col/Polygon.hx	/^	   var i = points.length - 2;$/;"	v
i	heaps/h3d/anim/Skin.hx	/^				var i = il[i];$/;"	v
i	heaps/h3d/anim/Skin.hx	/^		var i = 0, j = 0;$/;"	v
i	heaps/h3d/col/PolygonBuffer.hx	/^		var i = startIndex;$/;"	v
i	heaps/h3d/impl/Driver.hx	/^		var i = CACHE.get(key);$/;"	v
i	heaps/h3d/impl/Stage3dDriver.hx	/^		var i = 0;$/;"	v
i	heaps/h3d/pass/ShaderManager.hx	/^						var i = getInstance(p.instance);$/;"	v
i	heaps/h3d/prim/GeoSphere.hx	/^			var i = 0;$/;"	v
i	heaps/h3d/prim/Quads.hx	/^			var i = i << 2;$/;"	v
i	heaps/h3d/scene/Object.hx	/^		var i = children.length - 1;$/;"	v
i	heaps/h3d/scene/Scene.hx	/^			var i = hitInteractives.pop();$/;"	v
i	heaps/h3d/scene/Scene.hx	/^		var i : Interactive = cast to;$/;"	v
i	heaps/h3d/scene/Skin.hx	/^			var i = ctx.drawPass.index;$/;"	v
i	heaps/h3d/scene/fwd/LightSystem.hx	/^		var i = 0;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = (li + dirLightsShadow.length) * DIR_LIGHT_INFO_SIZE * 4;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = (li + pointLightsShadow.length) * POINT_LIGHT_INFO_SIZE * 4 + offset;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = (li + spotLightsShadow.length) * SPOT_LIGHT_INFO_SIZE * 4 + offset;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = li * DIR_LIGHT_INFO_SIZE * 4;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = li * POINT_LIGHT_INFO_SIZE * 4 + offset;$/;"	v
i	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var i = li * SPOT_LIGHT_INFO_SIZE * 4 + offset;$/;"	v
i	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var i = index * 3 + dirLightStride;$/;"	v
i	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var i = index * 5;$/;"	v
i	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var i = index * 8 + dirLightStride + pointLightStride;$/;"	v
i	heaps/hxd/BitmapData.hx	/^		var i : js.html.ImageData = lockImage;$/;"	v
i	heaps/hxd/BitmapData.hx	/^		var i = lockImage;$/;"	v
i	heaps/hxd/BitmapData.hx	/^		var i = pixel;$/;"	v
i	heaps/hxd/Res.hx	/^			var i = 1;$/;"	v
i	heaps/hxd/SceneEvents.hx	/^						var i = overList.length - 1;$/;"	v
i	heaps/hxd/SceneEvents.hx	/^				var i = 0, ev = onOver;$/;"	v
i	heaps/hxd/SceneEvents.hx	/^				var i = s.handleEvent(event, last);$/;"	v
i	heaps/hxd/WaitEvent.hx	/^		var i = 0;$/;"	v
i	heaps/hxd/clipper/Clipper.hx	/^		var i = 0;$/;"	v
i	heaps/hxd/clipper/Clipper.hx	/^		var i = highI - 1;$/;"	v
i	heaps/hxd/clipper/Clipper.hx	/^		var i:Int = 0;$/;"	v
i	heaps/hxd/earcut/Earcut.hx	/^			var i = end - 1;$/;"	v
i	heaps/hxd/earcut/Earcut.hx	/^	public var i : Int;$/;"	v
i	heaps/hxd/fmt/bfnt/Reader.hx	/^	var i : Input;$/;"	v
i	heaps/hxd/fmt/blend/Data.hx	/^		var i = bytes.get(pos);$/;"	v
i	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var i = index[pos];$/;"	v
i	heaps/hxd/fmt/fbx/Parser.hx	/^				var i = 0;$/;"	v
i	heaps/hxd/fmt/fbx/Parser.hx	/^		var i : Int = bytes.get(pos) | (bytes.get(pos + 1) << 8);$/;"	v
i	heaps/hxd/fmt/fbx/Parser.hx	/^		var i : Int = bytes.getInt32(pos);$/;"	v
i	heaps/hxd/fmt/grd/Reader.hx	/^	var i : haxe.io.Input;$/;"	v
i	heaps/hxd/fmt/hmd/Library.hx	/^			var i = format.length - 1 - i;$/;"	v
i	heaps/hxd/fmt/hmd/Reader.hx	/^	var i : haxe.io.Input;$/;"	v
i	heaps/hxd/fmt/pak/Reader.hx	/^	var i : haxe.io.Input;$/;"	v
i	heaps/hxd/impl/ArrayIterator.hx	/^	var i : Int;$/;"	v
i	heaps/hxd/impl/CacheAllocator.hx	/^			var i = c.get();$/;"	v
i	heaps/hxd/res/DynamicText.hx	/^			var i = 1;$/;"	v
i	heaps/hxd/res/Gradients.hx	/^		var i : Int;$/;"	v
i	heaps/hxd/res/NanoJpeg.hx	/^				var i = njGetBits(16);$/;"	v
i	heaps/hxd/res/NanoJpeg.hx	/^			var i = get(0);$/;"	v
i	heaps/hxd/snd/Manager.hx	/^			var i = 0;$/;"	v
i	heaps/hxd/snd/Manager.hx	/^			var i = c.bindedEffects.length;$/;"	v
i	heaps/hxd/snd/Manager.hx	/^		var i = 0;$/;"	v
i	heaps/hxd/snd/NativeChannel.hx	/^		var i = 0;$/;"	v
i	heaps/hxd/snd/webaudio/AudioTypes.hx	/^				var i = 0;$/;"	v
i	heaps/hxd/snd/webaudio/Driver.hx	/^		var i = 0;$/;"	v
i	heaps/hxsl/AgalOut.hx	/^				var i = expr(index);$/;"	v
i	heaps/hxsl/Cache.hx	/^				var i = p.instance - 1;$/;"	v
i	heaps/hxsl/Cache.hx	/^			var i = @:privateAccess s.instance;$/;"	v
i	heaps/hxsl/CacheFile.hx	/^			var i = @:privateAccess s.instance;$/;"	v
i	heaps/hxsl/Dce.hx	/^			var i = get(v);$/;"	v
i	heaps/hxsl/Eval.hx	/^			var i = 0, last = el.length;$/;"	v
i	heaps/hxsl/Eval.hx	/^			var i = switch( args[0].e ) { case TConst(CInt(i)): i; default: Error.t("Cannot eval complex /;"	v
i	heaps/hxsl/Flatten.hx	/^					var i = alloc.indexOf(best);$/;"	v
i	heaps/hxsl/Globals.hx	/^		var i = maxChannels++;$/;"	v
i	heaps/hxsl/SharedShader.hx	/^		var i = instanceCache.get(constBits);$/;"	v
i	heaps/hxsl/SharedShader.hx	/^		var i = new ShaderInstance(eval.eval(data));$/;"	v
i	heaps/hxsl/Splitter.hx	/^				var i = vvars.get(v.id);$/;"	v
i	heaps/hxsl/Splitter.hx	/^				var i = vvars.get(v.v.id);$/;"	v
i	heaps/hxsl/Splitter.hx	/^		var i = vars.get(v.id);$/;"	v
i	heaps/samples/Cursor.hx	/^			var i = new h2d.Interactive(120, 20, s2d);$/;"	v
i	heaps/samples/DrawingTiles.hx	/^		var i = 0;$/;"	v
i	heaps/samples/FxView.hx	/^			var i = prefab.make(ctx);$/;"	v
i	heaps/samples/Interactive.hx	/^			var i = new h3d.scene.Interactive(m.getCollider(), s3d);$/;"	v
i	heaps/samples/Network.hx	/^		var i = new h2d.Interactive(10, 10, bmp);$/;"	v
i	heaps/samples/SampleApp.hx	/^		var i = new h2d.Interactive(110, font.lineHeight, fui);$/;"	v
i	heaps/samples/SampleApp.hx	/^		var i = new h2d.Interactive(size, size, b);$/;"	v
i0	heaps/h3d/col/Polygon.hx	/^			var i0 = indexes[k] * stride;$/;"	v
i0	heaps/h3d/col/PolygonBuffer.hx	/^			var i0 = indexes[i++] * 3;$/;"	v
i0	heaps/h3d/prim/Polygon.hx	/^			var i0, i1, i2;$/;"	v
i0	heaps/h3d/prim/Quads.hx	/^			var i0 = i+3, i1 = i+2, i2 = i+1;$/;"	v
i0	heaps/h3d/prim/Quads.hx	/^			var i0 = i, i1 = i+1, i2 = i+2;$/;"	v
i0	heaps/h3d/shader/NoiseLib.hx	/^  var i0 = floor(uv);$/;"	v
i1	heaps/h2d/Scene.hx	/^			var i1 : Object = i;$/;"	v
i1	heaps/h3d/col/Polygon.hx	/^			var i1 = indexes[k + 1] * stride;$/;"	v
i1	heaps/h3d/col/PolygonBuffer.hx	/^			var i1 = indexes[i++] * 3;$/;"	v
i1	heaps/h3d/pass/Blur.hx	/^			var i1 = i * 2;$/;"	v
i1	heaps/h3d/shader/NoiseLib.hx	/^  var i1 = (f0.x > f0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);$/;"	v
i1	heaps/hxsl/AgalOptim.hx	/^				var i1 = getReg(r1);$/;"	v
i1	heaps/hxsl/CacheFile.hx	/^			var i1 = r1.spec.instances[i];$/;"	v
i16	heaps/hxd/snd/webaudio/Driver.hx	/^				var i16 = new hxd.impl.TypedArray.Int16Array(data.getData());$/;"	v
i2	heaps/h2d/Scene.hx	/^			var i2 : Object = interactive[index];$/;"	v
i2	heaps/h3d/col/Polygon.hx	/^			var i2 = indexes[k + 2] * stride;$/;"	v
i2	heaps/h3d/col/PolygonBuffer.hx	/^			var i2 = indexes[i++] * 3;$/;"	v
i2	heaps/h3d/pass/Blur.hx	/^			var i2 = i == 0 ? 0 : i * 2 - 1;$/;"	v
i2	heaps/h3d/scene/World.hx	/^					var i2 = triIndexes[i];$/;"	v
i2	heaps/h3d/shader/NoiseLib.hx	/^  var i2 = i0 + vec2(1.0, 1.0);$/;"	v
i2	heaps/hxsl/AgalOptim.hx	/^				var i2 = getReg(r2);$/;"	v
i2	heaps/hxsl/CacheFile.hx	/^			var i2 = r1.spec.instances[i];$/;"	v
i64	heaps/hxd/fmt/fbx/Parser.hx	/^				var i64 : haxe.Int64 = bytes.getInt64(pos);$/;"	v
i64ToFloat	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function i64ToFloat( i64 : haxe.Int64 ) : Float {$/;"	f
i64s	heaps/hxd/fmt/fbx/Parser.hx	/^				var i64s:Array<Float> = new Array();$/;"	v
iNode	heaps/hxd/clipper/Clipper.hx	/^			var iNode = m_IntersectList[i];$/;"	v
iabs	heaps/hxd/Math.hx	/^	public static inline function iabs( i : Int ) {$/;"	f
ibuf	heaps/h3d/Indexes.hx	/^	var ibuf : h3d.impl.Driver.IndexBuffer;$/;"	v
ibuf	heaps/h3d/prim/DynamicPrimitive.hx	/^	var ibuf : hxd.IndexBuffer;$/;"	v
ibuf	heaps/hxd/fmt/hmd/Library.hx	/^		var ibuf = haxe.io.Bytes.alloc(isize);$/;"	v
ibuf	heaps/hxd/snd/NativeChannel.hx	/^	var ibuf : haxe.io.Bytes;$/;"	v
ibufs	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var ibufs = [];$/;"	v
icat	heaps/hxsl/Checker.hx	/^				var icat = idx % 3;$/;"	v
iclamp	heaps/hxd/Math.hx	/^	public static inline function iclamp( v : Int, min : Int, max : Int ) {$/;"	f
icol	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var icol = colors.index[k];$/;"	v
icount	heaps/hxd/fmt/hmd/Library.hx	/^			var icount = geom.indexCounts[material];$/;"	v
icount	heaps/samples/ShaderAdvanced.hx	/^		var icount = cube.triCount() * 3;$/;"	v
id	heaps/h2d/CdbLevel.hx	/^	public var id : Int;$/;"	v
id	heaps/h2d/KeyFrames.hx	/^	var id : Int;$/;"	v
id	heaps/h2d/Scene.hx	/^			var id = -1;$/;"	v
id	heaps/h2d/col/Voronoi.hx	/^	public var id : Int;$/;"	v
id	heaps/h3d/Buffer.hx	/^	public var id : Int;$/;"	v
id	heaps/h3d/impl/Driver.hx	/^	public var id(default,null) : Int;$/;"	v
id	heaps/h3d/mat/BigTexture.hx	/^	public var id : Int;$/;"	v
id	heaps/h3d/mat/Texture.hx	/^	public var id(default, null) : Int;$/;"	v
id	heaps/h3d/prim/MeshPrimitive.hx	/^			var id = hxsl.Globals.allocID(name);$/;"	v
id	heaps/h3d/prim/MeshPrimitive.hx	/^		var id = hxsl.Globals.allocID(name);$/;"	v
id	heaps/h3d/scene/RenderContext.hx	/^		var id = hxsl.Globals.allocID(name);$/;"	v
id	heaps/h3d/scene/Skin.hx	/^			var id = j.index;$/;"	v
id	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var id = 0, x = 0, y = 0, width = 0, height = 0, xoffset = 0, yoffset = 0, xadvance = 0;$/;"	v
id	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var id = bytes.readByte();$/;"	v
id	heaps/hxd/fmt/bfnt/Reader.hx	/^				var id : Int;$/;"	v
id	heaps/hxd/fmt/blend/Data.hx	/^				var id = readChars(4); \/\/ SDNA$/;"	v
id	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var id = model2.getId();$/;"	v
id	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var id = model.getId();$/;"	v
id	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var id = nc.get(name);$/;"	v
id	heaps/hxd/fmt/pak/Build.hx	/^			var id = 0;$/;"	v
id	heaps/hxd/fmt/pak/FileSystem.hx	/^		var id : Null<Int> = threadIdentifier.value;$/;"	v
id	heaps/hxd/fmt/pak/FileSystem.hx	/^		var id = getThreadID();$/;"	v
id	heaps/hxd/fmt/tiff/Reader.hx	/^		var id = f.readUInt16();$/;"	v
id	heaps/hxd/fs/EmbedFileSystem.hx	/^		var id = #if flash open(path) #else resolve(path) #end;$/;"	v
id	heaps/hxd/impl/CacheAllocator.hx	/^		var id = count;$/;"	v
id	heaps/hxd/impl/CacheAllocator.hx	/^		var id = flags.toInt() | (b.buffer.stride << 3) | (b.vertices << 16);$/;"	v
id	heaps/hxd/impl/CacheAllocator.hx	/^		var id = flags.toInt() | (stride << 3) | (vertices << 16);$/;"	v
id	heaps/hxd/impl/CacheAllocator.hx	/^		var id = i.count;$/;"	v
id	heaps/hxd/poly2tri/Point.hx	/^	public var id:Int;$/;"	v
id	heaps/hxd/poly2tri/Triangle.hx	/^	public var id:Int = -1;$/;"	v
id	heaps/hxd/res/DynamicText.hx	/^					var id = e.att.id;$/;"	v
id	heaps/hxd/res/DynamicText.hx	/^					var id = x.att.id;$/;"	v
id	heaps/hxd/res/DynamicText.hx	/^					var id = x.x.get("id");$/;"	v
id	heaps/hxd/res/DynamicText.hx	/^			var id = x.att.id;$/;"	v
id	heaps/hxd/snd/Channel.hx	/^	var id : Int;$/;"	v
id	heaps/hxd/snd/Manager.hx	/^	public var id (default, null) : Int;$/;"	v
id	heaps/hxd/snd/openal/Emulator.hx	/^	public var id : Int;$/;"	v
id	heaps/hxsl/AgalOptim.hx	/^						var id = ops[c.getIndex()];$/;"	v
id	heaps/hxsl/Ast.hx	/^	var id : Int;$/;"	v
id	heaps/hxsl/Cache.hx	/^		var id = haxe.crypto.Md5.encode(key).substr(0, 8);$/;"	v
id	heaps/hxsl/Cache.hx	/^		var id = rt.spec.signature.substr(0, 8);$/;"	v
id	heaps/hxsl/Globals.hx	/^		var id = MAP.get(path);$/;"	v
id	heaps/hxsl/Linker.hx	/^	public var id : Int;$/;"	v
id	heaps/hxsl/Macros.hx	/^						var id = f.name + "_id";$/;"	v
id	heaps/hxsl/RuntimeShader.hx	/^	public var id : Int;$/;"	v
id	heaps/hxsl/Serializer.hx	/^			var id = readVarInt();$/;"	v
id	heaps/hxsl/Serializer.hx	/^		var id = readID();$/;"	v
id	heaps/hxsl/SharedShader.hx	/^	public var id : Int;$/;"	v
id2	heaps/hxsl/Serializer.hx	/^		var id2 = idMap.get(id);$/;"	v
idMap	heaps/hxsl/Serializer.hx	/^	var idMap : Map<Int,Int>;$/;"	v
idToInt	heaps/hxd/fmt/fbx/Data.hx	/^	static function idToInt( f : Float ) {$/;"	f
ident	heaps/hxd/res/FileTree.hx	/^				var ident = makeIdent(noExt);$/;"	v
ident	heaps/hxd/res/FileTree.hx	/^		var ident = invalidChars.replace(s, "_");$/;"	v
ident	heaps/hxd/res/FileTree.hx	/^	var ident : String;$/;"	v
ident	heaps/hxsl/GlslOut.hx	/^	inline function ident( v : TVar ) {$/;"	f
ident	heaps/hxsl/HlslOut.hx	/^	inline function ident( v : TVar ) {$/;"	f
identity	heaps/h2d/col/Matrix.hx	/^	public inline function identity() {$/;"	f
identity	heaps/h3d/Matrix.hx	/^	public function identity() {$/;"	f
identity	heaps/h3d/Quat.hx	/^	public inline function identity() {$/;"	f
idep	heaps/h3d/impl/VarBinding.hx	/^						var idep = initsMap.get(path.join("."));$/;"	v
ids	heaps/h3d/prim/HMDModel.hx	/^		var ids = new Array();$/;"	v
ids	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var ids : Map<Int,FbxNode>;$/;"	v
ids	heaps/hxd/poly2tri/VisiblePolygon.hx	/^		var ids = new Map();$/;"	v
idx	heaps/h2d/CdbLevel.hx	/^						var idx = ox + dx + (oy + dy) * level.width;$/;"	v
idx	heaps/h2d/Particles.hx	/^		var idx = groups.indexOf(g);$/;"	v
idx	heaps/h3d/Indexes.hx	/^		var idx = new Indexes( length );$/;"	v
idx	heaps/h3d/col/Polygon.hx	/^			var idx = p.fastTriangulate();$/;"	v
idx	heaps/h3d/col/Polygon.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/col/PolygonBuffer.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/impl/GlDriver.hx	/^				var idx = s.vertex ? i : curShader.vertex.textures.length + i;$/;"	v
idx	heaps/h3d/impl/Stage3dDriver.hx	/^				var idx = FORMAT.indexOf(fmt);$/;"	v
idx	heaps/h3d/parts/GpuParticles.hx	/^		var idx = groups.indexOf(g);$/;"	v
idx	heaps/h3d/prim/BigPrimitive.hx	/^				var idx = h3d.Indexes.alloc(tmpIdx, 0, idxPos);$/;"	v
idx	heaps/h3d/prim/Cube.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/prim/GeoSphere.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/prim/Grid.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/prim/HMDModel.hx	/^		var idx = new hxd.IndexBuffer();$/;"	v
idx	heaps/h3d/prim/Polygon.hx	/^	public var idx : hxd.IndexBuffer;$/;"	v
idx	heaps/h3d/scene/Trail.hx	/^		var idx = dprim.getIndexes((points.length - 2) * 6);$/;"	v
idx	heaps/h3d/scene/World.hx	/^	public var idx : hxd.IndexBuffer;$/;"	v
idx	heaps/hxd/Pixels.hx	/^		var idx = 0;$/;"	v
idx	heaps/hxd/SceneEvents.hx	/^						var idx = overList.indexOf(i);$/;"	v
idx	heaps/hxd/clipper/Clipper.hx	/^	public var idx : Int;$/;"	v
idx	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var idx : Int;$/;"	v
idx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var idx = idx.getInts();$/;"	v
idx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var idx = subDef.get("Indexes", true);$/;"	v
idx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var idx = materials.indexOf(mat);$/;"	v
idx	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var idx = 0;$/;"	v
idx	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var idx = g.getIndexes();$/;"	v
idx	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var idx = ibufs[skin.triangleGroups[stri++]];$/;"	v
idx	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var idx = ibufs[mid];$/;"	v
idx	heaps/hxd/fmt/hmd/Library.hx	/^					var idx = (idx >> (i<<3)) & 0xFF;$/;"	v
idx	heaps/hxd/fmt/hmd/Library.hx	/^				var idx = haxe.io.FPHelper.floatToI32(vbuf[p++]);$/;"	v
idx	heaps/hxd/fmt/hmd/Library.hx	/^			var idx = 0;$/;"	v
idx	heaps/hxd/fmt/hmd/Library.hx	/^			var idx = skin.allJoints.length - 1;$/;"	v
idx	heaps/hxd/fmt/hmd/Library.hx	/^		var idx = 0;$/;"	v
idx	heaps/hxd/fs/FileEntry.hx	/^		var idx = name.lastIndexOf(".");$/;"	v
idx	heaps/hxd/fs/FileEntry.hx	/^		var idx = path.lastIndexOf("\/");$/;"	v
idx	heaps/hxd/impl/AllocPos.hx	/^				var idx = file.indexOf("\\\\std\/");$/;"	v
idx	heaps/hxd/impl/Allocator.hx	/^		var idx = allocIndexBuffer( length );$/;"	v
idx	heaps/hxsl/AgalOptim.hx	/^							var idx = sw2.indexOf(s);$/;"	v
idx	heaps/hxsl/Checker.hx	/^				var idx = str.indexOf(f.charAt(i));$/;"	v
idx	heaps/hxsl/HlslOut.hx	/^				var idx = named.get(names[i]);$/;"	v
idxCount	heaps/h3d/impl/InstanceBuffer.hx	/^			var idxCount = bytes.getInt32(i * 20);$/;"	v
idxFctDisplayed	heaps/samples/Flows.hx	/^	var idxFctDisplayed = 9; \/\/ also the first screen displayed$/;"	v
idxPos	heaps/h3d/prim/BigPrimitive.hx	/^	var idxPos : Int = 0;$/;"	v
ifBlock	heaps/hxsl/Eval.hx	/^	function ifBlock( e : TExpr ) {$/;"	f
ifmt	heaps/hxd/res/Image.hx	/^		var ifmt : hl.Format.PixelFormat = switch( requestedFmt ) {$/;"	v
ignore	heaps/h3d/parts/GpuParticles.hx	/^					var ignore = flags.has(FIgnoreBounds);$/;"	v
ignore	heaps/hxd/fmt/fbx/Filter.hx	/^	public function ignore( path : String ) {$/;"	f
ignoreBounds	heaps/h3d/scene/Object.hx	/^	public var ignoreBounds(get, set) : Bool;$/;"	v
ignoreCollide	heaps/h3d/scene/Object.hx	/^	public var ignoreCollide(get, set) : Bool;$/;"	v
ignoreList	heaps/hxd/fmt/fbx/Filter.hx	/^	var ignoreList : Array<Array<String>>;$/;"	v
ignoreMissingObject	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function ignoreMissingObject( id : Int ) {$/;"	f
ignoreParentTransform	heaps/h3d/scene/Object.hx	/^	public var ignoreParentTransform(get, set) : Bool;$/;"	v
ignoreScale	heaps/h2d/ScaleGrid.hx	/^	public var ignoreScale(default, set) : Bool;$/;"	v
ignoreScale	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var ignoreScale : Bool;$/;"	v
ignoreTranslate	heaps/h3d/anim/SmoothTarget.hx	/^	public var ignoreTranslate = false;$/;"	v
ignoredExtensions	heaps/hxd/res/Config.hx	/^	public static var ignoredExtensions = [$/;"	v
ignoredPairedExt	heaps/hxd/res/FileTree.hx	/^	var ignoredPairedExt : Map<String,Array<String>>;$/;"	v
ignoredSpecLevels	heaps/h3d/scene/pbr/Environment.hx	/^	public var ignoredSpecLevels : Int = 1;$/;"	v
iheight	heaps/h2d/Tile.hx	/^	public var iheight(get,never) : Int;$/;"	v
ii	heaps/hxd/Pad.hx	/^				var ii = GameController.NUM_BUTTONS + i;$/;"	v
iid	heaps/h3d/anim/Skin.hx	/^			var iid = tri * 3;$/;"	v
iidx	heaps/h3d/scene/World.hx	/^			var iidx = 0;$/;"	v
ik	heaps/h3d/Matrix.hx	/^		var ik = blend, k = 1 - ik;$/;"	v
ik	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var ik : Dynamic;$/;"	v
ik	heaps/hxd/fmt/spine/JsonData.hx	/^	var ik : Dynamic;$/;"	v
il	heaps/h3d/anim/Skin.hx	/^			var il = envelop[i];$/;"	v
il	heaps/h3d/anim/Skin.hx	/^		var il = envelop[vid];$/;"	v
image	heaps/hxd/fs/EmbedFileSystem.hx	/^		var image = new js.html.Image();$/;"	v
image	heaps/hxd/fs/LocalFileSystem.hx	/^		var image = new js.html.Image();$/;"	v
imageSpacing	heaps/h2d/HtmlText.hx	/^	public var imageSpacing(default,set):Float = 1;$/;"	v
imageVerticalAlign	heaps/h2d/HtmlText.hx	/^	public var imageVerticalAlign(default,set) : ImageVerticalAlign = Bottom;$/;"	v
images	heaps/hxd/fmt/spine/JsonData.hx	/^	var images : String;$/;"	v
imax	heaps/h3d/anim/Skin.hx	/^		var imax = p1.joints.length, jmax = p2.joints.length;$/;"	v
imax	heaps/hxd/Math.hx	/^	public static inline function imax( a : Int, b : Int ) {$/;"	f
img	heaps/h3d/impl/GlDriver.hx	/^			var img = bmp.toNative();$/;"	v
img	heaps/hxd/BitmapData.hx	/^		var img = ctx.createImageData(pixels.width, pixels.height);$/;"	v
img	heaps/hxd/fs/BytesFileSystem.hx	/^		var img = new js.html.Image();$/;"	v
imgType	heaps/hxd/res/Image.hx	/^				var imgType = f.readInt32();$/;"	v
imin	heaps/hxd/Math.hx	/^	public static inline function imin( a : Int, b : Int ) {$/;"	f
importanceSampleGGX	heaps/h3d/scene/pbr/Environment.hx	/^		function importanceSampleGGX( roughness : Float, p : Vec2, n : Vec3 ) : Vec3 {$/;"	f
imult	heaps/hxd/fmt/hmd/Library.hx	/^		var imult = isSmall ? 2 : 4;$/;"	v
inFilter	heaps/h2d/RenderContext.hx	/^	var inFilter : FilterStack;$/;"	v
inFilterBlend	heaps/h2d/RenderContext.hx	/^	var inFilterBlend : BlendMode;$/;"	v
inFrustum	heaps/h3d/col/Bounds.hx	/^	public inline function inFrustum( f : Frustum, ?m: h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Capsule.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Collider.hx	/^	public function inFrustum( f : Frustum, ?localMatrix : h3d.Matrix ) : Bool;$/;"	f
inFrustum	heaps/h3d/col/Collider.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Collider.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix) {$/;"	f
inFrustum	heaps/h3d/col/HeightMap.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix) : Bool {$/;"	f
inFrustum	heaps/h3d/col/ObjectCollider.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Point.hx	/^	public inline function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Polygon.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/PolygonBuffer.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/SkinCollider.hx	/^	public function inFrustum(p, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/Sphere.hx	/^	public inline function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustum	heaps/h3d/col/TransformCollider.hx	/^	public function inFrustum( f : Frustum, ?m : h3d.Matrix ) {$/;"	f
inFrustumDetails	heaps/h3d/col/Bounds.hx	/^	public function inFrustumDetails( mvp : Matrix, checkZ = true ) {$/;"	f
inFrustumMatrix	heaps/h3d/col/Sphere.hx	/^	function inFrustumMatrix( f : Frustum, m : h3d.Matrix ) {$/;"	f
inLoop	heaps/hxsl/Checker.hx	/^	var inLoop : Bool;$/;"	v
inRender	heaps/h2d/Scene.hx	/^		var inRender = @:privateAccess ctx.engine.inRender;$/;"	v
inRender	heaps/h3d/Engine.hx	/^	var inRender = false;$/;"	v
inScanArea	heaps/hxd/poly2tri/Utils.hx	/^	static public function inScanArea(pa:Point, pb:Point, pc:Point, pd:Point):Bool$/;"	f
inSphere	heaps/h3d/col/Bounds.hx	/^	public inline function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/Capsule.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/Collider.hx	/^	public function inSphere( s : Sphere ) : Bool;$/;"	f
inSphere	heaps/h3d/col/Collider.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/HeightMap.hx	/^	public function inSphere( s : Sphere ) : Bool {$/;"	f
inSphere	heaps/h3d/col/ObjectCollider.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/Polygon.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/PolygonBuffer.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/SkinCollider.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/Sphere.hx	/^	public inline function inSphere( s : Sphere ) {$/;"	f
inSphere	heaps/h3d/col/TransformCollider.hx	/^	public function inSphere( s : Sphere ) {$/;"	f
inWhile	heaps/hxsl/Checker.hx	/^	var inWhile : Bool;$/;"	v
includePath	heaps/hxd/fmt/pak/Build.hx	/^	public var includePath : Array<String> = [];$/;"	v
incrX	heaps/h2d/Particles.hx	/^	public var incrX(default, set) : Bool		= true;$/;"	v
incrY	heaps/h2d/Particles.hx	/^	public var incrY(default, set) : Bool		= true;$/;"	v
incref	heaps/h3d/prim/Instanced.hx	/^	override function incref() {$/;"	f
incref	heaps/h3d/prim/Primitive.hx	/^	public function incref():Void$/;"	f
index	heaps/h2d/Flow.hx	/^		var index = getChildIndex(s);$/;"	v
index	heaps/h2d/Graphics.hx	/^	var index : hxd.IndexBuffer;$/;"	v
index	heaps/h2d/HtmlText.hx	/^				var index = Lambda.indexOf(e.parent, e);$/;"	v
index	heaps/h2d/KeyFrames.hx	/^		var index = 0;$/;"	v
index	heaps/h2d/Layers.hx	/^		var index = children.indexOf(o);$/;"	v
index	heaps/h2d/Layers.hx	/^		var index = children.indexOf(s);$/;"	v
index	heaps/h2d/Scene.hx	/^		var index = last == null ? 0 : interactive.indexOf(cast last) + 1;$/;"	v
index	heaps/h2d/TextInput.hx	/^					var index = textPos(pt.x, pt.y);$/;"	v
index	heaps/h2d/col/Polygon.hx	/^		var index = 0;$/;"	v
index	heaps/h3d/anim/Skin.hx	/^	public var index : Int;$/;"	v
index	heaps/h3d/anim/SmoothTarget.hx	/^		var index = 0;$/;"	v
index	heaps/h3d/impl/DirectXDriver.hx	/^			var index = mipLevel * tex.layerCount + layer;$/;"	v
index	heaps/h3d/impl/DirectXDriver.hx	/^		var index = 0;$/;"	v
index	heaps/h3d/impl/GlDriver.hx	/^					var index = gl.getAttribLocation(p.p, glout.varNames.exists(v.id) ? glout.varNames.get(v.id/;"	v
index	heaps/h3d/impl/GlDriver.hx	/^		var index = 0;$/;"	v
index	heaps/h3d/impl/GlDriver.hx	/^	public var index : Int;$/;"	v
index	heaps/h3d/impl/VarBinding.hx	/^				var index;$/;"	v
index	heaps/h3d/mat/Pass.hx	/^		var index = 0;$/;"	v
index	heaps/h3d/parts/GpuParticles.hx	/^			var index = @:privateAccess parent.groups.indexOf(this);$/;"	v
index	heaps/h3d/parts/GpuParticles.hx	/^		var index = startIndex;$/;"	v
index	heaps/h3d/parts/GpuParticles.hx	/^	public var index : Int;$/;"	v
index	heaps/h3d/pass/PassObject.hx	/^	public var index : Int;$/;"	v
index	heaps/h3d/scene/MeshBatch.hx	/^			var index = 0;$/;"	v
index	heaps/h3d/scene/Skin.hx	/^	public var index : Int;$/;"	v
index	heaps/hxd/Cursor.hx	/^		var index : Int = frameIndex;$/;"	v
index	heaps/hxd/Pad.hx	/^	public var index : Int = -1;$/;"	v
index	heaps/hxd/Pad.hx	/^	public var index : Int;$/;"	v
index	heaps/hxd/Perlin.hx	/^		var index = seed * 1013 + (ix % repeat) * 1619 + (iy % repeat) * 31337 + iz * 6971;$/;"	v
index	heaps/hxd/Perlin.hx	/^		var index = seed * 1013 + (ix%repeat) * 1619 + (iy%repeat) * 31337;$/;"	v
index	heaps/hxd/Perlin.hx	/^		var index = seed * 1013 + (ix%repeat) * 1619;$/;"	v
index	heaps/hxd/SceneEvents.hx	/^			var index = overList.indexOf(i);$/;"	v
index	heaps/hxd/clipper/Clipper.hx	/^	var index : Int;$/;"	v
index	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var index : Int;$/;"	v
index	heaps/hxd/fmt/fbx/Geometry.hx	/^			var index = if( index == null ) {$/;"	v
index	heaps/hxd/fmt/fbx/Geometry.hx	/^			var index = v.get("UVIndex", true);$/;"	v
index	heaps/hxd/fmt/fbx/Geometry.hx	/^		var index = color.get("ColorIndex", true);$/;"	v
index	heaps/hxd/fmt/fbx/Geometry.hx	/^		var index = getPolygons();$/;"	v
index	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var index = 0;$/;"	v
index	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var index = geom.getIndexes();$/;"	v
index	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var index = geom.getPolygons();$/;"	v
index	heaps/hxd/fmt/grd/Reader.hx	/^		var index = -1;$/;"	v
index	heaps/hxd/fmt/hbson/Reader.hx	/^		var index = input.readInt32();$/;"	v
index	heaps/hxd/fmt/hbson/Writer.hx	/^			var index = stringMap.get(str);$/;"	v
index	heaps/hxd/fmt/pak/FileSystem.hx	/^		var index = files.length;$/;"	v
index	heaps/hxd/poly2tri/Triangle.hx	/^		var index:Int = this.edgeIndex(ep, eq);$/;"	v
index	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function index(p:Point):Int$/;"	f
index	heaps/hxd/res/DynamicText.hx	/^			var index = -1;$/;"	v
index	heaps/hxd/res/DynamicText.hx	/^		var index = pos.content.indexOf(str);$/;"	v
index	heaps/hxsl/AgalOptim.hx	/^	public var index : Int;$/;"	v
index	heaps/hxsl/AgalOut.hx	/^				var index = v * stride;$/;"	v
index	heaps/hxsl/Cache.hx	/^			var index = (v.pos>>2);$/;"	v
index	heaps/hxsl/Cache.hx	/^			var index;$/;"	v
index	heaps/hxsl/Cache.hx	/^		var index = 0;$/;"	v
index	heaps/hxsl/DynamicShader.hx	/^	public var index : Int;$/;"	v
index	heaps/hxsl/Flatten.hx	/^		var index = (a.t == null ? a.pos : a.pos >> 2) + index;$/;"	v
index	heaps/hxsl/Flatten.hx	/^		var index = -1;$/;"	v
index	heaps/hxsl/Flatten.hx	/^		var index = consts.indexOf(v);$/;"	v
index	heaps/hxsl/HlslOut.hx	/^		var index = 0;$/;"	v
index	heaps/hxsl/Linker.hx	/^						var index = 0;$/;"	v
index	heaps/hxsl/Macros.hx	/^		var index = 0;$/;"	v
index	heaps/hxsl/RuntimeShader.hx	/^	public var index : Int;$/;"	v
indexBuffers	heaps/hxd/impl/CacheAllocator.hx	/^	var indexBuffers = new Map<Int,Cache<h3d.Indexes>>();$/;"	v
indexCount	heaps/h3d/impl/GlDriver.hx	/^			var indexCount = bytes.getInt32(p);$/;"	v
indexCount	heaps/h3d/impl/InstanceBuffer.hx	/^	var indexCount : Int;$/;"	v
indexCount	heaps/h3d/prim/HMDModel.hx	/^	var indexCount : Int;$/;"	v
indexCount	heaps/h3d/scene/MeshBatch.hx	/^	public var indexCount : Int;$/;"	v
indexCount	heaps/h3d/scene/World.hx	/^	public var indexCount : Int;$/;"	v
indexCount	heaps/hxd/fmt/hmd/Data.hx	/^	public var indexCount(get, never) : Int;$/;"	v
indexCounts	heaps/hxd/fmt/hmd/Data.hx	/^	public var indexCounts : Array<Int>;$/;"	v
indexCurve	heaps/hxd/earcut/Earcut.hx	/^	function indexCurve( start : EarNode ) {$/;"	f
indexDirty	heaps/h2d/Graphics.hx	/^	var indexDirty : Bool;$/;"	v
indexOf	heaps/h2d/Scene.hx	/^		inline function indexOf(p:Object, i:Object) {$/;"	f
indexPosition	heaps/hxd/fmt/hmd/Data.hx	/^	public var indexPosition : DataPosition;$/;"	v
indexRec	heaps/hxd/fmt/fbx/HMDOut.hx	/^		function indexRec( t : TmpObject ) {$/;"	f
indexRemap	heaps/h3d/scene/World.hx	/^			var indexRemap = new hxd.IndexBuffer(idx.length);$/;"	v
indexStart	heaps/h3d/scene/MeshBatch.hx	/^	public var indexStart : Int;$/;"	v
indexedJoints	heaps/h3d/anim/Skin.hx	/^	public var indexedJoints : Array<Joint>;$/;"	v
indexes	heaps/h3d/col/PolygonBuffer.hx	/^	var indexes : haxe.ds.Vector<Int>;$/;"	v
indexes	heaps/h3d/impl/MemoryManager.hx	/^	var indexes : Array<Indexes>;$/;"	v
indexes	heaps/h3d/prim/Polygon.hx	/^		var indexes = new haxe.ds.Vector<Int>(idx.length);$/;"	v
indexes	heaps/h3d/prim/Primitive.hx	/^	public var indexes : Indexes;$/;"	v
indexes	heaps/h3d/shader/Skin.hx	/^			var indexes : Bytes4;$/;"	v
indexes	heaps/h3d/shader/SkinTangent.hx	/^			var indexes : Bytes4;$/;"	v
indexes	heaps/hxd/fmt/hmd/Library.hx	/^	public var indexes : haxe.ds.Vector<Int>;$/;"	v
indexes	heaps/samples/ShaderAdvanced.hx	/^		var indexes = new h3d.Indexes(icount,true);$/;"	v
indexesTriPos	heaps/h3d/prim/HMDModel.hx	/^	var indexesTriPos : Array<Int>;$/;"	v
indices	heaps/h3d/impl/MemoryManager.hx	/^		var indices = new hxd.IndexBuffer();$/;"	v
indirect	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var indirect = (diffuse * (1 - metalness) * (1 - F) + specular) * irrPower;$/;"	v
indirect	heaps/h3d/shader/pbr/Lighting.hx	/^				var indirect = (diffuse * (1 - metalness) * (1 - F) + specular) * irrPower;$/;"	v
indirectLighting	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function indirectLighting() : Vec3 {$/;"	f
inf	heaps/h2d/RenderContext.hx	/^		var inf = cameraStack[--cameraStackIndex];$/;"	v
inf	heaps/h2d/RenderContext.hx	/^		var inf = renderZoneStack[--renderZoneIndex];$/;"	v
inf	heaps/h2d/RenderContext.hx	/^		var inf = renderZoneStack[renderZoneIndex++];$/;"	v
inf	heaps/h3d/impl/LogDriver.hx	/^		var inf = '' + t;$/;"	v
inf	heaps/h3d/impl/MemoryManager.hx	/^					var inf = h.get(key);$/;"	v
inf	heaps/h3d/impl/MemoryManager.hx	/^			var inf = h.get(key);$/;"	v
inf	heaps/h3d/prim/RawPrimitive.hx	/^		var inf = onContextLost();$/;"	v
inf	heaps/hxd/impl/AsyncLoader.hx	/^			var inf = t.inf;$/;"	v
inf	heaps/hxd/impl/BitsBuilder.hx	/^			var inf = bitsMap.get(field);$/;"	v
inf	heaps/hxd/res/Image.hx	/^	var inf : ImageInfo;$/;"	v
inf	heaps/hxsl/AgalOptim.hx	/^			var inf = getReg(r);$/;"	v
inf	heaps/hxsl/AgalOptim.hx	/^		var inf = getReg(r);$/;"	v
inf	heaps/hxsl/AgalOptim.hx	/^		var inf = getReg(r1);$/;"	v
inf	heaps/hxsl/AgalOptim.hx	/^		var inf = regs[r.index];$/;"	v
inf	heaps/hxsl/Cache.hx	/^				var inf = shaderDatas[v.instanceIndex];$/;"	v
inf	heaps/hxsl/Splitter.hx	/^			var inf = get(v);$/;"	v
inf	heaps/samples/Lights.hx	/^	var inf : h2d.Text;$/;"	v
inf	heaps/tools/hxsl/Main.hx	/^					var inf = shaders[v.instanceIndex];$/;"	v
info	heaps/h2d/HtmlText.hx	/^						var info = metrics[metrics.length - 1];$/;"	v
info	heaps/h2d/HtmlText.hx	/^					var info = metrics[metrics.length - 1];$/;"	v
info	heaps/h2d/HtmlText.hx	/^			var info : LineInfo = metrics.pop();$/;"	v
info	heaps/h2d/HtmlText.hx	/^			var info = metrics[metrics.length - 1];$/;"	v
info	heaps/hxd/SceneEvents.hx	/^								var info = overCandidates[overCandidateCount];$/;"	v
info	heaps/hxd/SceneEvents.hx	/^					var info = overCandidates[i++];$/;"	v
info	heaps/hxd/fmt/pak/FileSystem.hx	/^		var info = { path: path, inputs: [] };$/;"	v
info	heaps/samples/Mask.hx	/^		var info = new h2d.Text(hxd.res.DefaultFont.get(), s2d);$/;"	v
inheritCulled	heaps/h3d/scene/Object.hx	/^	public var inheritCulled(get, set) : Bool;$/;"	v
inheritRotation	heaps/hxd/fmt/spine/Data.hx	/^	public var inheritRotation : Bool;$/;"	v
inheritRotation	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var inheritRotation : Bool;$/;"	v
inheritScale	heaps/hxd/fmt/spine/Data.hx	/^	public var inheritScale : Bool;$/;"	v
inheritScale	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var inheritScale : Bool;$/;"	v
init	Main.hx	/^	override function init() {$/;"	f
init	heaps/h2d/Particles.hx	/^	function init( p : Particle ) {$/;"	f
init	heaps/h2d/domkit/InitComponents.hx	/^	public static function init() {$/;"	f
init	heaps/h3d/Engine.hx	/^	public function init() {$/;"	f
init	heaps/h3d/col/Polygon.hx	/^	public inline function init( p0 : Point, p1 : Point, p2 : Point ) {$/;"	f
init	heaps/h3d/impl/DirectXDriver.hx	/^	override function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/Driver.hx	/^	public function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/GlDriver.hx	/^	override function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/LogDriver.hx	/^	override function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/MemoryManager.hx	/^	public function init() {$/;"	f
init	heaps/h3d/impl/NullDriver.hx	/^	override function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/Stage3dDriver.hx	/^	override function init( onCreate, forceSoftware = false ) {$/;"	f
init	heaps/h3d/impl/VulkanDriver.hx	/^	override function init( onCreate : Bool -> Void, forceSoftware = false ) {$/;"	f
init	heaps/h3d/pass/PassList.hx	/^	public inline function init(pass) {$/;"	f
init	heaps/h3d/shader/GpuParticle.hx	/^			var init : Vec2;$/;"	v
init	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function init() {$/;"	f
init	heaps/hxd/App.hx	/^	function init() {$/;"	f
init	heaps/hxd/Pad.hx	/^	public static function init() {}$/;"	f
init	heaps/hxd/Rand.hx	/^	public function init(seed : Int) {$/;"	f
init	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function init( n : FbxNode ) {$/;"	f
init	heaps/hxd/fs/EmbedFileSystem.hx	/^	function init() {$/;"	f
init	heaps/hxd/res/Config.hx	/^	static function init() {$/;"	f
init	heaps/hxd/snd/OggData.hx	/^	public function init( bytes : haxe.io.Bytes, position : Int ) {$/;"	f
init	heaps/hxd/snd/WavData.hx	/^	function init(d:format.wav.Data.WAVE) {$/;"	f
init	heaps/hxsl/Checker.hx	/^			var init = v.expr == null ? null : typeWith(v.expr, tv.type);$/;"	v
init	heaps/samples/AdjustColor.hx	/^	override function init() {$/;"	f
init	heaps/samples/Base2D.hx	/^	override function init() {$/;"	f
init	heaps/samples/Base3D.hx	/^	override function init() {$/;"	f
init	heaps/samples/Blur.hx	/^	override function init() {$/;"	f
init	heaps/samples/Bounds.hx	/^	override function init() {$/;"	f
init	heaps/samples/Camera2D.hx	/^	override private function init() {$/;"	f
init	heaps/samples/CollideCheck.hx	/^	override function init() {$/;"	f
init	heaps/samples/CubeTexture.hx	/^	override function init() {$/;"	f
init	heaps/samples/Cursor.hx	/^	override function init() {$/;"	f
init	heaps/samples/Domkit.hx	/^	override function init() {$/;"	f
init	heaps/samples/DrawingTiles.hx	/^	override function init() {$/;"	f
init	heaps/samples/ExtraTests.hx	/^	override function init() {$/;"	f
init	heaps/samples/Filters.hx	/^	override function init() {$/;"	f
init	heaps/samples/Flows.hx	/^	override function init() {$/;"	f
init	heaps/samples/Fullscreen.hx	/^	override function init() {$/;"	f
init	heaps/samples/FxView.hx	/^	override function init() {$/;"	f
init	heaps/samples/GpuParticles.hx	/^	override function init() {$/;"	f
init	heaps/samples/GraphicsDraw.hx	/^	override function init() {$/;"	f
init	heaps/samples/Helpers.hx	/^	override function init() {$/;"	f
init	heaps/samples/HtmlText.hx	/^	override function init() {$/;"	f
init	heaps/samples/Input.hx	/^	override function init() {$/;"	f
init	heaps/samples/Interactive.hx	/^	override function init() {$/;"	f
init	heaps/samples/Interactive2D.hx	/^	override private function init()$/;"	f
init	heaps/samples/Lights.hx	/^	override function init() {$/;"	f
init	heaps/samples/Mask.hx	/^	override function init() {$/;"	f
init	heaps/samples/MeshBatch.hx	/^	override function init() {$/;"	f
init	heaps/samples/Network.hx	/^	function init() {$/;"	f
init	heaps/samples/Network.hx	/^	override function init() {$/;"	f
init	heaps/samples/Pad.hx	/^	override function init() {$/;"	f
init	heaps/samples/Particles2d.hx	/^	override function init() {$/;"	f
init	heaps/samples/Pbr.hx	/^	override function init() {$/;"	f
init	heaps/samples/PointLights.hx	/^	override function init() {$/;"	f
init	heaps/samples/Polygons.hx	/^	override function init() {$/;"	f
init	heaps/samples/Quaternion.hx	/^	override function init() {$/;"	f
init	heaps/samples/SampleApp.hx	/^	override function init() {$/;"	f
init	heaps/samples/Sao.hx	/^	override function init() {$/;"	f
init	heaps/samples/ScaleMode2D.hx	/^	override function init()$/;"	f
init	heaps/samples/ShaderAdvanced.hx	/^	override function init() {$/;"	f
init	heaps/samples/Shadows.hx	/^	override function init() {$/;"	f
init	heaps/samples/Skin.hx	/^	override function init() {$/;"	f
init	heaps/samples/Sound.hx	/^	override function init() {$/;"	f
init	heaps/samples/Stencil.hx	/^	override function init() {$/;"	f
init	heaps/samples/Text.hx	/^	override function init() {$/;"	f
init	heaps/samples/Tiled.hx	/^	override function init() {$/;"	f
init	heaps/samples/Video.hx	/^	override function init() {$/;"	f
init	heaps/samples/World.hx	/^	override function init() {$/;"	f
initAndBind	heaps/h3d/anim/Animation.hx	/^	function initAndBind( obj : h3d.scene.Object ) {$/;"	f
initAndBind	heaps/h3d/anim/SmoothTarget.hx	/^	override function initAndBind( obj : h3d.scene.Object ) {$/;"	f
initAndBind	heaps/h3d/anim/Transition.hx	/^	override function initAndBind( obj : h3d.scene.Object ) {$/;"	f
initAnimation	heaps/h3d/prim/ModelCache.hx	/^	function initAnimation( res : hxd.res.Model, name : String, ?forModel : hxd.res.Model ) {$/;"	f
initBounds	heaps/h3d/prim/Instanced.hx	/^	public function initBounds() {$/;"	f
initChars	heaps/hxd/Window.hl.hx	/^	static function initChars() : Void {$/;"	f
initChunk	heaps/h3d/scene/World.hx	/^	function initChunk( c : WorldChunk ) {$/;"	f
initChunkElements	heaps/h3d/scene/World.hx	/^	function initChunkElements( c : WorldChunk ) {$/;"	f
initChunkSoil	heaps/h3d/scene/World.hx	/^	function initChunkSoil( c : WorldChunk ) {$/;"	f
initChunkSoil	heaps/samples/World.hx	/^	override function initChunkSoil(c:h3d.scene.World.WorldChunk) {$/;"	f
initCollider	heaps/h3d/prim/HMDModel.hx	/^	function initCollider( poly : h3d.col.PolygonBuffer ) {$/;"	f
initDependencies	heaps/hxsl/Linker.hx	/^	function initDependencies( s : ShaderInfos ) {$/;"	f
initDirection	heaps/h3d/Quat.hx	/^	public function initDirection( dir : Vector ) {$/;"	f
initDone	heaps/hxd/App.hx	/^		var initDone = false;$/;"	v
initDone	heaps/hxd/Key.hx	/^	static var initDone = false;$/;"	v
initDone	heaps/hxd/Pad.hx	/^	static var initDone = false;$/;"	v
initEdges	heaps/hxd/poly2tri/SweepContext.hx	/^	function initEdges(polyline:Array<Point>)$/;"	f
initEmbed	heaps/hxd/Res.hx	/^	public static macro function initEmbed(?options:haxe.macro.Expr.ExprOf<hxd.res.EmbedOptions>) {$/;"	f
initExpr	heaps/h3d/impl/VarBinding.hx	/^		function initExpr( path : Array<String>, e : Expr, isInit ) : Expr {$/;"	f
initFrames	heaps/h3d/parts/Data.hx	/^	public function initFrames() {$/;"	f
initFromScene	heaps/h3d/scene/CameraController.hx	/^	public function initFromScene() {$/;"	f
initGesture	heaps/hxd/Window.flash.hx	/^	function initGesture(b) {$/;"	f
initGlobals	heaps/h3d/scene/LightSystem.hx	/^	public function initGlobals( globals : hxsl.Globals ) {$/;"	f
initGlobals	heaps/h3d/scene/fwd/LightSystem.hx	/^	override function initGlobals( globals : hxsl.Globals ) {$/;"	f
initGlobals	heaps/h3d/scene/pbr/Renderer.hx	/^	function initGlobals() {$/;"	f
initGlobals	heaps/hxsl/Cache.hx	/^	function initGlobals( r : RuntimeShader, s : RuntimeShaderData ) {$/;"	f
initGlobals	heaps/hxsl/Checker.hx	/^	static function initGlobals() {$/;"	f
initGlobals	heaps/hxsl/HlslOut.hx	/^	function initGlobals( s : ShaderData ) {$/;"	f
initGlyphs	heaps/h2d/HtmlText.hx	/^	override function initGlyphs( text : String, rebuild = true ) {$/;"	f
initGlyphs	heaps/h2d/Text.hx	/^	function initGlyphs( text : String, rebuild = true ) : Void {$/;"	f
initGlyphs	heaps/h2d/TextInput.hx	/^	override function initGlyphs(text:String, rebuild = true):Void {$/;"	f
initIndexes	heaps/h3d/impl/MemoryManager.hx	/^	function initIndexes() {$/;"	f
initInstance	heaps/h3d/anim/Animation.hx	/^	function initInstance() {$/;"	f
initInstance	heaps/h3d/anim/BufferAnimation.hx	/^	override function initInstance() {$/;"	f
initInstance	heaps/h3d/anim/LinearAnimation.hx	/^	override function initInstance() {$/;"	f
initInteract	heaps/samples/Interactive.hx	/^	function initInteract( i : h3d.scene.Interactive, m : h3d.scene.Mesh ) {$/;"	f
initInverse	heaps/h3d/Matrix.hx	/^	public function initInverse( m : Matrix ) {$/;"	f
initInverse3x3	heaps/h3d/Matrix.hx	/^	public function initInverse3x3( m : Matrix ) {$/;"	f
initLights	heaps/h3d/scene/LightSystem.hx	/^	public function initLights( ctx : h3d.scene.RenderContext ) @:privateAccess {$/;"	f
initLights	heaps/h3d/scene/fwd/LightSystem.hx	/^	override function initLights(ctx) {$/;"	f
initLocal	heaps/hxd/Res.hx	/^	public static macro function initLocal( ?configuration : String ) {$/;"	f
initLocals	heaps/hxsl/HlslOut.hx	/^	function initLocals() {$/;"	f
initMaterial	heaps/h3d/scene/World.hx	/^	function initMaterial( mesh : h3d.scene.Mesh, mat : WorldMaterial ) {$/;"	f
initMoveTo	heaps/h3d/Quat.hx	/^	public function initMoveTo( from : Vector, to : Vector ) {$/;"	f
initNormal	heaps/h3d/Quat.hx	/^	public function initNormal( dir : h3d.col.Point ) {$/;"	f
initObjects	heaps/h3d/anim/SmoothTarget.hx	/^	function initObjects() {$/;"	f
initObjects	heaps/h3d/anim/SmoothTransition.hx	/^	function initObjects() {$/;"	f
initPad	heaps/hxd/Pad.hx	/^	static function initPad( index ){$/;"	f
initPak	heaps/hxd/Res.hx	/^	public static macro function initPak( ?file : String ) {$/;"	f
initParams	heaps/hxsl/HlslOut.hx	/^	function initParams( s : ShaderData ) {$/;"	f
initPart	heaps/h3d/parts/Emitter.hx	/^	function initPart(p:Particle) {$/;"	f
initPosDir	heaps/h3d/parts/Emitter.hx	/^	function initPosDir( p : Particle ) {$/;"	f
initPrio	heaps/hxsl/Linker.hx	/^		var initPrio = {$/;"	v
initRotate	heaps/h2d/col/Matrix.hx	/^	public inline function initRotate(angle) {$/;"	f
initRotateAxis	heaps/h3d/Quat.hx	/^	public function initRotateAxis( x : Float, y : Float, z : Float, a : Float ) {$/;"	f
initRotateMatrix	heaps/h3d/Quat.hx	/^	public function initRotateMatrix( m : Matrix ) {$/;"	f
initRotation	heaps/h3d/Matrix.hx	/^	public function initRotation( x : Float, y : Float, z : Float ) {$/;"	f
initRotation	heaps/h3d/Quat.hx	/^	public function initRotation( ax : Float, ay : Float, az : Float ) {$/;"	f
initRotationAxis	heaps/h3d/Matrix.hx	/^	public function initRotationAxis( axis : Vector, angle : Float ) {$/;"	f
initRotationX	heaps/h3d/Matrix.hx	/^	public function initRotationX( a : Float ) {$/;"	f
initRotationY	heaps/h3d/Matrix.hx	/^	public function initRotationY( a : Float ) {$/;"	f
initRotationZ	heaps/h3d/Matrix.hx	/^	public function initRotationZ( a : Float ) {$/;"	f
initScale	heaps/h2d/col/Matrix.hx	/^	public inline function initScale(sx, sy) {$/;"	f
initScale	heaps/h3d/Matrix.hx	/^	public function initScale( x = 1., y = 1., z = 1. ) {$/;"	f
initShader	heaps/h3d/impl/GlDriver.hx	/^	function initShader( p : CompiledProgram, s : CompiledShader, shader : hxsl.RuntimeShader.Runti/;"	f
initShader	heaps/h3d/impl/Stage3dDriver.hx	/^	function initShader( shader : hxsl.RuntimeShader ) {$/;"	f
initShaders	heaps/h2d/RenderContext.hx	/^	function initShaders( shaders ) {$/;"	f
initShadersMapping	heaps/h3d/scene/MeshBatch.hx	/^	function initShadersMapping() {$/;"	f
initSize	heaps/h2d/Font.hx	/^	var initSize:Int;$/;"	v
initSkew	heaps/h2d/col/Matrix.hx	/^	public inline function initSkew(sx, sy) {$/;"	f
initStatics	heaps/hxsl/HlslOut.hx	/^	function initStatics( s : ShaderData ) {$/;"	f
initTextures	heaps/h3d/scene/pbr/Renderer.hx	/^	function initTextures() {$/;"	f
initTranslate	heaps/h2d/col/Matrix.hx	/^	public inline function initTranslate(x, y) {$/;"	f
initTranslation	heaps/h3d/Matrix.hx	/^	public function initTranslation( x = 0., y = 0., z = 0. ) {$/;"	f
initTriangulation	heaps/hxd/poly2tri/SweepContext.hx	/^	public function initTriangulation()$/;"	f
initVal	heaps/hxsl/Macros.hx	/^				var initVal = null;$/;"	v
initVar	heaps/hxsl/GlslOut.hx	/^	function initVar( v : TVar ){$/;"	f
initVars	heaps/hxsl/GlslOut.hx	/^	function initVars( s : ShaderData ){$/;"	f
initVars	heaps/hxsl/HlslOut.hx	/^	function initVars( s : ShaderData ) {$/;"	f
initWeights	heaps/h3d/anim/Skin.hx	/^	public function initWeights() {$/;"	f
initX	heaps/h3d/parts/GpuParticles.hx	/^	public var initX : Float;$/;"	v
initY	heaps/h3d/parts/GpuParticles.hx	/^	public var initY : Float;$/;"	v
initialize	heaps/hxd/Key.hx	/^	public static function initialize() {$/;"	f
initialize	heaps/hxsl/Shader.hx	/^	function initialize() {$/;"	f
initialize	heaps/hxsl/SharedShader.hx	/^	function initialize() {$/;"	f
initialized	heaps/h3d/scene/World.hx	/^	public var initialized = false;$/;"	v
inits	heaps/h3d/impl/VarBinding.hx	/^		var inits = [];$/;"	v
inits	heaps/hxsl/Cache.hx	/^		var inits = [];$/;"	v
inits	heaps/hxsl/Checker.hx	/^	public var inits : Array<{ v : TVar, e : TExpr }>;$/;"	v
initsMap	heaps/h3d/impl/VarBinding.hx	/^		var initsMap = new Map();$/;"	v
inlineBlock	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var inlineBlock : Bool;$/;"	v
inlineCalls	heaps/hxsl/Eval.hx	/^	public var inlineCalls : Bool;$/;"	v
inlineGradient	heaps/hxd/Perlin.hx	/^	public inline function inlineGradient( seed : Int, x : Float, y : Float ) {$/;"	f
inlineHash	heaps/hxd/Rand.hx	/^	public static inline function inlineHash(n:Int, seed:Int) : Int {$/;"	f
innerFormat	heaps/hxd/Pixels.hx	/^	var innerFormat(default, set) : PixelFormat;$/;"	v
innerHeight	heaps/h2d/Flow.hx	/^	public var innerHeight(get, never) : Int;$/;"	v
innerHeight	heaps/h2d/ScaleGrid.hx	/^		var innerHeight = height - (unscaledBt + unscaledBb);$/;"	v
innerTex	heaps/h2d/Tile.hx	/^	var innerTex : h3d.mat.Texture;$/;"	v
innerTex	heaps/hxd/res/FontBuilder.hx	/^	var innerTex : h3d.mat.Texture;$/;"	v
innerTileHeight	heaps/h2d/ScaleGrid.hx	/^		var innerTileHeight = tile.height - (bb + bt);$/;"	v
innerTileWidth	heaps/h2d/ScaleGrid.hx	/^		var innerTileWidth = tile.width - (br + bl);$/;"	v
innerWidth	heaps/h2d/Flow.hx	/^	public var innerWidth(get, never) : Int;$/;"	v
innerWidth	heaps/h2d/ScaleGrid.hx	/^		var innerWidth = width - (unscaledBl + unscaledBr);$/;"	v
input	heaps/h2d/Particles.hx	/^		@input var input : { color : Vec4 };$/;"	v
input	heaps/h2d/filter/AbstractMask.hx	/^	public var input : h2d.Tile;$/;"	v
input	heaps/h3d/shader/AlphaMap.hx	/^		@input var input : { uv : Vec2 };$/;"	v
input	heaps/h3d/shader/AnimatedTexture.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/Base2d.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/BaseMesh.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/LineShader.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/NormalMap.hx	/^        @input var input : {$/;"	v
input	heaps/h3d/shader/ParticleShader.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/ScreenShader.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/Skin.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/SkinTangent.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/Texture.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/Texture2.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/VertexColor.hx	/^		@input var input : {$/;"	v
input	heaps/h3d/shader/VertexColorAlpha.hx	/^		@input var input : {$/;"	v
input	heaps/hxd/File.hx	/^			var input : js.html.InputElement = cast js.Browser.document.getElementById("heapsBrowserInput/;"	v
input	heaps/hxd/fmt/hbson/Reader.hx	/^	var input : haxe.io.BytesInput;$/;"	v
input	heaps/hxd/fmt/pak/FileSystem.hx	/^		var input = f.inputs[id];$/;"	v
input	heaps/hxd/fs/Convert.hx	/^		var input = new haxe.io.BytesInput(sys.io.File.getBytes(srcPath));$/;"	v
input	heaps/hxd/net/Socket.hx	/^	public var input(default, null) : SocketInput;$/;"	v
input	heaps/hxd/res/TiledMap.hx	/^			var input = new haxe.io.BytesInput(bytes);$/;"	v
input	heaps/hxsl/Serializer.hx	/^	var input : haxe.io.BytesInput;$/;"	v
input	heaps/samples/Input.hx	/^	var input : h2d.TextInput;$/;"	v
input	heaps/tools/mikktspace/Mikktspace.hx	/^		var input = new haxe.io.BytesInput(sys.io.File.getBytes(args[0]));$/;"	v
inputHandler	Main.hx	/^	var inputHandler:Interactive;$/;"	v
inputHeight	heaps/h2d/filter/AbstractMask.hx	/^	public var inputHeight:Int;$/;"	v
inputNames	heaps/h3d/impl/Stage3dDriver.hx	/^		var inputNames = [];$/;"	v
inputOffset	heaps/hxsl/Cache.hx	/^		var inputOffset = declVar("Batch_Start",TFloat,Input);$/;"	v
inputWidth	heaps/h2d/TextInput.hx	/^	public var inputWidth : Null<Int>;$/;"	v
inputWidth	heaps/h2d/filter/AbstractMask.hx	/^	public var inputWidth:Int;$/;"	v
inputs	heaps/h3d/impl/DirectXDriver.hx	/^			var inputs = [];$/;"	v
inputs	heaps/h3d/impl/DirectXDriver.hx	/^	public var inputs : InputNames;$/;"	v
inputs	heaps/h3d/impl/GlDriver.hx	/^	public var inputs : InputNames;$/;"	v
inputs	heaps/h3d/impl/Stage3dDriver.hx	/^	public var inputs : InputNames;$/;"	v
inputs	heaps/h3d/prim/MeshPrimitive.hx	/^		var inputs = @:privateAccess engine.driver.getShaderInputNames();$/;"	v
inputs	heaps/hxsl/AgalOptim.hx	/^		var inputs = [];$/;"	v
inputs	heaps/hxsl/Dce.hx	/^		var inputs = [];$/;"	v
ins	heaps/h3d/Matrix.hx	/^		var ins = 1 - sat;$/;"	v
ins	heaps/h3d/Quat.hx	/^			var ins = 1 \/ s;$/;"	v
insertColor	heaps/h2d/TileGroup.hx	/^	inline function insertColor( c : Int ) {$/;"	f
inside	heaps/h2d/col/RoundRect.hx	/^	public inline function inside( p : Point ) {$/;"	f
insideIncircle	heaps/hxd/poly2tri/Utils.hx	/^	static public function insideIncircle(pa:Point, pb:Point, pc:Point, pd:Point):Bool$/;"	f
inspectDetailsKeyCode	heaps/h2d/domkit/Style.hx	/^	public var inspectDetailsKeyCode : Int = hxd.Key.CTRL;$/;"	v
inspectKeyCode	heaps/h2d/domkit/Style.hx	/^	public var inspectKeyCode : Int = 0;$/;"	v
inspectModeActive	heaps/h2d/domkit/Style.hx	/^	var inspectModeActive = false;$/;"	v
inspectModeDetails	heaps/h2d/domkit/Style.hx	/^	var inspectModeDetails = false;$/;"	v
inspectModeDetailsRight	heaps/h2d/domkit/Style.hx	/^	var inspectModeDetailsRight = -1;$/;"	v
inspectPreview	heaps/h2d/domkit/Style.hx	/^	var inspectPreview : h2d.Object;$/;"	v
inspectPreviewObjects	heaps/h2d/domkit/Style.hx	/^	var inspectPreviewObjects : Array<h2d.Object>;$/;"	v
inst	heaps/h3d/pass/Copy.hx	/^		var inst : ArrayCopy = @:privateAccess engine.resCache.get(ArrayCopy);$/;"	v
inst	heaps/h3d/pass/Copy.hx	/^		var inst : Copy = @:privateAccess engine.resCache.get(Copy);$/;"	v
inst	heaps/h3d/pass/CubeCopy.hx	/^		var inst : CubeCopy = @:privateAccess engine.resCache.get(CubeCopy);$/;"	v
inst	heaps/h3d/pass/ShaderManager.hx	/^			var inst = @:privateAccess shaders.s.instance;$/;"	v
inst	heaps/h3d/prim/Plane2D.hx	/^		var inst = @:privateAccess engine.resCache.get(Plane2D);$/;"	v
inst	heaps/hxd/Charset.hx	/^	static var inst : Charset;$/;"	v
inst	heaps/hxd/Pad.hx	/^	static var inst : flash.ui.GameInput;$/;"	v
inst	heaps/hxd/Window.flash.hx	/^	static var inst : Window = null;$/;"	v
inst	heaps/hxd/Window.hl.hx	/^	static var inst : Window = null;$/;"	v
inst	heaps/hxd/Window.hx	/^	static var inst : Window = null;$/;"	v
inst	heaps/hxd/Window.js.hx	/^	static var inst : Window = null;$/;"	v
inst	heaps/hxd/impl/Allocator.hx	/^	static var inst : Allocator;$/;"	v
inst	heaps/hxd/res/NanoJpeg.hx	/^	static var inst : NanoJpeg = null;$/;"	v
inst	heaps/hxd/snd/openal/AudioTypes.hx	/^	public var inst           : Source;$/;"	v
inst	heaps/hxd/snd/openal/AudioTypes.hx	/^	public var inst : Buffer;$/;"	v
inst	heaps/hxd/snd/openal/LowPassDriver.hx	/^	var inst   : openal.EFX.Filter;$/;"	v
inst	heaps/hxd/snd/openal/ReverbDriver.hx	/^	var inst      : openal.EFX.Effect;$/;"	v
inst	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var inst : AudioBuffer;$/;"	v
inst	heaps/hxsl/CacheFile.hx	/^						var inst = scache.get(i.bits);$/;"	v
inst	heaps/hxsl/CacheFile.hx	/^			var inst = [for( i in 0...f.readByte() ) {$/;"	v
inst	heaps/hxsl/CacheFile.hx	/^			var inst = shaders.get(i.shader.data.name);$/;"	v
inst	heaps/samples/Network.hx	/^	public static var inst : Network;$/;"	v
instCount	heaps/h3d/impl/InstanceBuffer.hx	/^			var instCount = bytes.getInt32(i * 20 + 4);$/;"	v
installedLibs	heaps/samples/Generator.hx	/^		var installedLibs = new Map<String,Bool>();$/;"	v
instance	heaps/hxd/snd/Manager.hx	/^	static var instance : Manager;$/;"	v
instance	heaps/hxsl/RuntimeShader.hx	/^	public var instance : Int;$/;"	v
instance	heaps/hxsl/Shader.hx	/^	var instance : SharedShader.ShaderInstance;$/;"	v
instanceBuffer	heaps/samples/ShaderAdvanced.hx	/^		var instanceBuffer = h3d.Buffer.ofFloats(buf,2);$/;"	v
instanceBuffers	heaps/h3d/scene/MeshBatch.hx	/^	public var instanceBuffers : Array<h3d.impl.InstanceBuffer>;$/;"	v
instanceCache	heaps/hxsl/SharedShader.hx	/^	var instanceCache : Map<Int,ShaderInstance>;$/;"	v
instanceCount	heaps/h3d/impl/GlDriver.hx	/^			var instanceCount = bytes.getInt32(p+4);$/;"	v
instanceCount	heaps/h3d/scene/MeshBatch.hx	/^	public var instanceCount(default,null) : Int = 0;$/;"	v
instanceIndex	heaps/hxsl/Linker.hx	/^	public var instanceIndex : Int;$/;"	v
instanced	heaps/h3d/scene/MeshBatch.hx	/^	var instanced : h3d.prim.Instanced;$/;"	v
instanced	heaps/samples/MeshBatch.hx	/^	var instanced : h3d.prim.Instanced;$/;"	v
int	heaps/hxd/Rand.hx	/^	inline function int() : Int {$/;"	f
int32tof	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function int32tof( v : Int ) : Float {$/;"	f
intScale	heaps/samples/ScaleMode2D.hx	/^		var intScale:Bool = false;$/;"	v
intelDriverFix	heaps/hxsl/GlslOut.hx	/^	var intelDriverFix : Bool;$/;"	v
interact	heaps/h3d/impl/Benchmark.hx	/^	var interact : h2d.Interactive;$/;"	v
interact	heaps/samples/Interactive.hx	/^			var interact = new h3d.scene.Interactive(col, s3d);$/;"	v
interact	heaps/samples/Interactive.hx	/^			var interact = new h3d.scene.Interactive(m.getCollider(), s3d);$/;"	v
interact	heaps/samples/Interactive.hx	/^			var interact = new h3d.scene.Interactive(new h3d.col.ObjectCollider(m, col), s3d);$/;"	v
interactive	heaps/h2d/Flow.hx	/^				var interactive = new h2d.Interactive(0, 0);$/;"	v
interactive	heaps/h2d/Flow.hx	/^	public var interactive(default, null) : h2d.Interactive;$/;"	v
interactive	heaps/h2d/Scene.hx	/^	var interactive : Array<Interactive>;$/;"	v
interactive	heaps/h2d/TextInput.hx	/^	var interactive : h2d.Interactive;$/;"	v
interactive	heaps/samples/Interactive2D.hx	/^	var interactive : h2d.Interactive;$/;"	v
interactiveCamera	heaps/h2d/Scene.hx	/^	public var interactiveCamera(default, set) : Camera;$/;"	v
interactives	heaps/h3d/scene/Scene.hx	/^	var interactives : Array<Interactive>;$/;"	v
interactives	heaps/samples/Interactive.hx	/^	var interactives : Array<h3d.scene.Interactive> = [];$/;"	v
internalBuffer	heaps/hxd/impl/AsyncLoader.hx	/^	var internalBuffer : haxe.io.Bytes;$/;"	v
interp	heaps/samples/Generator.hx	/^			var interp = new hscript.Interp();$/;"	v
interpolation	heaps/hxd/fmt/grd/Data.hx	/^	public var interpolation     : Float;$/;"	v
intersect	heaps/h2d/col/Line.hx	/^	public inline function intersect( l : Line ) {$/;"	f
intersect	heaps/h2d/col/Polygon.hx	/^	function intersect(p1 : h2d.col.Point, q1 : h2d.col.Point, p2 : h2d.col.Point, q2 : h2d.col.Poi/;"	f
intersect	heaps/h3d/col/Ray.hx	/^	public inline function intersect( p : Plane ) : Null<Point> {$/;"	f
intersectSphereA	heaps/h3d/col/Capsule.hx	/^			var intersectSphereA = tmpSphere.rayIntersection(r, bestMatch);$/;"	v
intersectSphereB	heaps/h3d/col/Capsule.hx	/^			var intersectSphereB = tmpSphere.rayIntersection(r, bestMatch);$/;"	v
intersectWith	heaps/h2d/col/Line.hx	/^	public inline function intersectWith( l : Line, pt : Point ) {$/;"	f
intersection	heaps/h2d/col/Bounds.hx	/^	public function intersection( b : Bounds ) : Bounds {$/;"	f
intersection	heaps/h2d/col/IBounds.hx	/^	public function intersection( b : IBounds ) : IBounds {$/;"	f
intersection	heaps/h2d/col/IPolygon.hx	/^	public inline function intersection( p : IPolygon, withHoles = true ) : IPolygons {$/;"	f
intersection	heaps/h2d/col/IPolygons.hx	/^	public inline function intersection( p : IPolygons, withHoles = true ) : IPolygons {$/;"	f
intersection	heaps/h3d/col/Bounds.hx	/^	public function intersection( a : Bounds, b : Bounds ) {$/;"	f
intersection	heaps/h3d/col/Capsule.hx	/^			var intersection = new Point(o.x + (RD.x * tMin), o.y + (RD.y * tMin), o.z + (RD.z * tMin));$/;"	v
intersects	heaps/h2d/col/Bounds.hx	/^	public inline function intersects( b : Bounds ) : Bool {$/;"	f
intersects	heaps/h2d/col/IBounds.hx	/^	public inline function intersects( b : IBounds ) : Bool {$/;"	f
intersects	heaps/hxd/earcut/Earcut.hx	/^	inline function intersects(p1, q1, p2, q2) {$/;"	f
intersectsPolygon	heaps/hxd/earcut/Earcut.hx	/^	function intersectsPolygon(a:EarNode, b:EarNode) {$/;"	f
ints	heaps/hxd/fmt/fbx/Parser.hx	/^				var ints : Array<Int> = [];$/;"	v
ints	heaps/hxd/fmt/fbx/Parser.hx	/^				var ints:Array<Int> = new Array();$/;"	v
inv	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var inv = new h3d.Matrix();$/;"	v
invA	heaps/h2d/Object.hx	/^		var invA = matD * invDet * scaleX;$/;"	v
invArea	heaps/h2d/col/Triangle.hx	/^	var invArea : Float;$/;"	v
invB	heaps/h2d/Object.hx	/^		var invB = -matB * invDet * scaleY;$/;"	v
invC	heaps/h2d/Object.hx	/^		var invC = -matC * invDet * scaleX;$/;"	v
invConnect	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var invConnect : Map<Int,Array<Int>>;$/;"	v
invD	heaps/h2d/Object.hx	/^		var invD = matA * invDet * scaleY;$/;"	v
invDenom	heaps/h3d/col/Polygon.hx	/^	var invDenom : Float;$/;"	v
invDet	heaps/h2d/Camera.hx	/^	var invDet : Float;$/;"	v
invDet	heaps/h2d/Interactive.hx	/^	var invDet : Float;$/;"	v
invDet	heaps/h2d/Object.hx	/^		var invDet = 1 \/ (matA * matD - matB * matC);$/;"	v
invDet	heaps/h2d/Scene.hx	/^		var invDet = 1 \/ (matA * matD - matB * matC);$/;"	v
invDet	heaps/h2d/col/Matrix.hx	/^		var invDet = 1 \/ getDeterminant();$/;"	v
invDet	heaps/h3d/Matrix.hx	/^		var invDet = 1.0 \/ det;$/;"	v
invDet	heaps/h3d/col/PolygonBuffer.hx	/^			var invDet = 1 \/ det;$/;"	v
invLenSq	heaps/h2d/col/RoundRect.hx	/^	var invLenSq : Float;$/;"	v
invLenSq	heaps/h2d/col/Segment.hx	/^	public var invLenSq : Float;$/;"	v
invLightRange4	heaps/h3d/shader/pbr/Light.hx	/^		@param var invLightRange4 : Float; \/\/ 1 \/ range^4$/;"	v
invMat	heaps/h3d/col/ObjectCollider.hx	/^		var invMat = obj.getInvPos();$/;"	v
invMat	heaps/h3d/col/TransformCollider.hx	/^	var invMat : h3d.Matrix;$/;"	v
invPos	heaps/h3d/scene/Object.hx	/^	var invPos : h3d.Matrix;$/;"	v
invRange4	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var invRange4 = lightInfos[i+1].a;$/;"	v
invScaleX	heaps/h2d/ScaleGrid.hx	/^		var invScaleX = 1.;$/;"	v
invScaleY	heaps/h2d/ScaleGrid.hx	/^		var invScaleY = 1.;$/;"	v
invSinHalfTheta	heaps/h3d/Quat.hx	/^		var invSinHalfTheta = (1 - cosHalfTheta * cosHalfTheta).invSqrt();$/;"	v
invSqrt	heaps/hxd/Math.hx	/^	public static inline function invSqrt( f : Float ) {$/;"	f
invWorldPosition	heaps/h3d/scene/MeshBatch.hx	/^	var invWorldPosition : Matrix;$/;"	v
invX	heaps/h2d/Object.hx	/^		var invX = -(absX * invA + absY * invC);$/;"	v
invY	heaps/h2d/Object.hx	/^		var invY = -(absX * invB + absY * invD);$/;"	v
invalidChars	heaps/hxd/fs/EmbedFileSystem.hx	/^	static var invalidChars = ~\/[^A-Za-z0-9_]\/g;$/;"	v
invalidChars	heaps/hxd/res/FileTree.hx	/^	static var invalidChars = ~\/[^A-Za-z0-9_]\/g;$/;"	v
invalidFormat	heaps/hxd/Pixels.hx	/^	function invalidFormat() {$/;"	f
invalidate	heaps/h2d/TileGroup.hx	/^	public function invalidate() : Void {$/;"	f
inverse	heaps/h2d/col/Matrix.hx	/^	public function inverse( m : Matrix ) {$/;"	f
inverse	heaps/hxd/Direction.hx	/^	public inline function inverse() {$/;"	f
inverse3x4	heaps/h3d/Matrix.hx	/^	public function inverse3x4( m : Matrix ) {$/;"	f
inverseViewProj	heaps/h3d/shader/BaseMesh.hx	/^			var inverseViewProj : Mat4;$/;"	v
inverseViewProj	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var inverseViewProj : Mat4;$/;"	v
invert	heaps/h2d/col/Matrix.hx	/^	public function invert() {$/;"	f
invert	heaps/h2d/filter/Ambient.hx	/^	public var invert(get, set) : Bool;$/;"	v
invert	heaps/h3d/Matrix.hx	/^	public inline function invert() {$/;"	f
invertSwiz	heaps/hxsl/AgalOptim.hx	/^	public var invertSwiz : Array<Int>;$/;"	v
iop	heaps/hxsl/Eval.hx	/^			inline function iop(callb:Int->Int->Int) {$/;"	f
ip	heaps/hxd/Perlin.hx	/^		var ip = Std.int(p);$/;"	v
ip	heaps/hxd/clipper/Clipper.hx	/^						var ip = new IPoint(e.currX, e.currY);$/;"	v
ip	heaps/hxd/clipper/Clipper.hx	/^			var ip = m_polyNodes.childs[m_lowest.x].polygon[m_lowest.y];$/;"	v
ip	heaps/hxd/clipper/Clipper.hx	/^        var ip = pol[0];$/;"	v
ipNext	heaps/hxd/clipper/Clipper.hx	/^          var ipNext = (i == cnt ? pol[0] : pol[i]);$/;"	v
ipath	heaps/hxd/res/DynamicText.hx	/^		var ipath = haxe.macro.ExprTools.toString(ident);$/;"	v
ipos	heaps/hxd/fmt/hmd/Library.hx	/^			var ipos = 0;$/;"	v
ipx	heaps/hxd/clipper/Clipper.hx	/^		var ipx, ipy;$/;"	v
irrDiffuse	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrDiffuse : SamplerCube;$/;"	v
irrDiffuse	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrDiffuse : SamplerCube;$/;"	v
irrLut	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrLut : Sampler2D;$/;"	v
irrLut	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrLut : Sampler2D;$/;"	v
irrPower	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrPower : Float;$/;"	v
irrPower	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrPower : Float;$/;"	v
irrRotation	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrRotation : Vec2;$/;"	v
irrRotation	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrRotation : Vec2;$/;"	v
irrSpecular	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrSpecular : SamplerCube;$/;"	v
irrSpecular	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrSpecular : SamplerCube;$/;"	v
irrSpecularLevels	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var irrSpecularLevels : Float;$/;"	v
irrSpecularLevels	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var irrSpecularLevels : Float;$/;"	v
is32	heaps/h3d/Indexes.hx	/^	public var is32(default,null) : Bool;$/;"	v
is32	heaps/h3d/prim/HMDModel.hx	/^		var is32 = data.vertexCount > 0x10000;$/;"	v
is32	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var is32 = g.vertexCount > 0x10000;$/;"	v
is3D	heaps/h3d/parts/Data.hx	/^	public var is3D : Bool;$/;"	v
is3D	heaps/h3d/scene/Graphics.hx	/^	public var is3D(default, set) : Bool;$/;"	v
is3D	heaps/h3d/shader/ParticleShader.hx	/^		@const var is3D : Bool;$/;"	v
isAbs	heaps/h2d/Flow.hx	/^				var isAbs = p.isAbsolute;$/;"	v
isAbsolute	heaps/h2d/Flow.hx	/^	public var isAbsolute(default,set) = false;$/;"	v
isAbsolute	heaps/h3d/shader/ParticleShader.hx	/^		@const var isAbsolute : Bool;$/;"	v
isActive	heaps/h2d/Console.hx	/^	public function isActive() {$/;"	f
isActive	heaps/h3d/parts/Emitter.hx	/^	public function isActive() {$/;"	f
isAir	heaps/hxd/File.hx	/^	static function isAir() {$/;"	f
isAir	heaps/hxd/System.flash.hx	/^	static function isAir() : Bool {$/;"	f
isAir	heaps/hxd/Window.flash.hx	/^		var isAir = isAir();$/;"	v
isAir	heaps/hxd/Window.flash.hx	/^	inline function isAir() {$/;"	f
isAlphaMap	heaps/h3d/parts/Data.hx	/^	public var isAlphaMap : Bool;$/;"	v
isAmbient	heaps/h3d/shader/PointLight.hx	/^		@const var isAmbient : Bool;$/;"	v
isAnim	heaps/hxd/fs/Convert.hx	/^		var isAnim = StringTools.startsWith(originalFilename, "Anim_") || originalFilename.toLowerCase/;"	v
isAnim1	heaps/h3d/anim/SmoothTransition.hx	/^	public var isAnim1 : Bool;$/;"	v
isAnim2	heaps/h3d/anim/SmoothTransition.hx	/^	public var isAnim2 : Bool;$/;"	v
isArray	heaps/h3d/impl/DirectXDriver.hx	/^		var isArray = t.flags.has(IsArray);$/;"	v
isArray	heaps/h3d/impl/GlDriver.hx	/^		var isArray = t.flags.has(IsArray);$/;"	v
isArray	heaps/hxd/res/DynamicText.hx	/^				var isArray = false;$/;"	v
isArray	heaps/hxsl/Ast.hx	/^	public static function isArray( v : TVar ) {$/;"	f
isAscii	heaps/hxd/fmt/hbson/Writer.hx	/^	function isAscii(str:String) {$/;"	f
isAvailable	heaps/h3d/impl/Benchmark.hx	/^	public function isAvailable() {$/;"	f
isAvailable	heaps/hxd/fs/FileEntry.hx	/^	public var isAvailable(get, never) : Bool;$/;"	v
isBatchShader	heaps/hxsl/Linker.hx	/^	var isBatchShader : Bool;$/;"	v
isBlock	heaps/hxsl/GlslOut.hx	/^	function isBlock( e : TExpr ) {$/;"	f
isBlock	heaps/hxsl/HlslOut.hx	/^	function isBlock( e : TExpr ) {$/;"	f
isBreak	heaps/h2d/Flow.hx	/^	public var isBreak(default,null) : Bool;$/;"	v
isBreakChar	heaps/hxd/Charset.hx	/^	public function isBreakChar(code) {$/;"	f
isBuffer	heaps/hxd/snd/openal/Emulator.hx	/^	public static function isBuffer(buffer : Buffer) : Bool {$/;"	f
isCJK	heaps/hxd/Charset.hx	/^	public function isCJK(code) {$/;"	f
isCentered	heaps/h3d/shader/VolumeDecal.hx	/^		@const var isCentered : Bool = true;$/;"	v
isClockwise	heaps/h2d/col/IPolygon.hx	/^	public function isClockwise() {$/;"	f
isClockwise	heaps/h2d/col/Polygon.hx	/^	public function isClockwise() {$/;"	f
isComplementChar	heaps/hxd/Charset.hx	/^	public function isComplementChar(code) {$/;"	f
isConst	heaps/hxsl/Ast.hx	/^	public static function isConst( v : TVar ) {$/;"	f
isConstraint	heaps/h2d/Flow.hx	/^	var isConstraint : Bool;$/;"	v
isConstraintHeight	heaps/h2d/Flow.hx	/^		var isConstraintHeight = realMaxHeight >= 0;$/;"	v
isConstraintWidth	heaps/h2d/Flow.hx	/^		var isConstraintWidth = realMaxWidth >= 0;$/;"	v
isConvex	heaps/h2d/Graphics.hx	/^	function isConvex( points : Array<GPoint> ) {$/;"	f
isConvex	heaps/h2d/col/IPolygon.hx	/^	public function isConvex() {$/;"	f
isConvex	heaps/h2d/col/Polygon.hx	/^	public function isConvex() {$/;"	f
isConvex	heaps/h2d/col/PolygonCollider.hx	/^	public var isConvex : Bool;$/;"	v
isConvex	heaps/h3d/col/Polygon.hx	/^	public function isConvex() {$/;"	f
isCube	heaps/h3d/impl/DirectXDriver.hx	/^		var isCube = t.flags.has(Cube);$/;"	v
isCube	heaps/h3d/impl/GlDriver.hx	/^		var isCube = t.flags.has(Cube);$/;"	v
isCube	heaps/h3d/pass/Blur.hx	/^		var isCube = src.flags.has(Cube);$/;"	v
isCube	heaps/h3d/shader/Blur.hx	/^		@param @const var isCube : Bool;$/;"	v
isDefault	heaps/samples/templates/.vscode/tasks.json	/^				"isDefault": true$/;"	b	object:tasks.0.group
isDepth	heaps/h3d/shader/Blur.hx	/^		@param @const var isDepth : Bool;$/;"	v
isDepthDependant	heaps/h3d/shader/Blur.hx	/^		@param @const var isDepthDependant : Bool;$/;"	v
isDirCached	heaps/hxd/fs/LocalFileSystem.hx	/^	var isDirCached : Null<Bool>;$/;"	v
isDirectory	heaps/hxd/fmt/pak/Data.hx	/^	public var isDirectory : Bool;$/;"	v
isDirectory	heaps/hxd/fs/EmbedFileSystem.hx	/^	function isDirectory( path : String ) {$/;"	f
isDirectory	heaps/hxd/fs/FileEntry.hx	/^	public var isDirectory(get, never) : Bool;$/;"	v
isDisposed	heaps/h2d/Tile.hx	/^	public function isDisposed() {$/;"	f
isDisposed	heaps/h3d/Buffer.hx	/^	public inline function isDisposed() {$/;"	f
isDisposed	heaps/h3d/Indexes.hx	/^	public function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/DirectXDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/Driver.hx	/^	public function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/GlDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/LogDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/ManagedBuffer.hx	/^	public inline function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/NullDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/Stage3dDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/impl/VulkanDriver.hx	/^	override function isDisposed() {$/;"	f
isDisposed	heaps/h3d/mat/DepthBuffer.hx	/^	public function isDisposed() {$/;"	f
isDisposed	heaps/h3d/mat/Texture.hx	/^	public inline function isDisposed() {$/;"	f
isDisposed	heaps/hxd/App.hx	/^	var isDisposed : Bool;$/;"	v
isDone	heaps/h3d/mat/BigTexture.hx	/^	var isDone : Bool;$/;"	v
isDown	heaps/hxd/Key.hx	/^	public static function isDown( code : Int ) {$/;"	f
isDown	heaps/hxd/Pad.hx	/^	public function isDown( button : Int ) {$/;"	f
isES	heaps/hxsl/GlslOut.hx	/^	var isES(get,never) : Bool;$/;"	v
isES2	heaps/hxsl/GlslOut.hx	/^	var isES2(get,never) : Bool;$/;"	v
isEar	heaps/hxd/earcut/Earcut.hx	/^	function isEar(ear:EarNode) {$/;"	f
isEarHashed	heaps/hxd/earcut/Earcut.hx	/^	function isEarHashed(ear:EarNode) {$/;"	f
isEdgeSide	heaps/hxd/poly2tri/Triangle.hx	/^	public function isEdgeSide(ep:Point, eq:Point):Bool$/;"	f
isEllipse	heaps/h2d/Interactive.hx	/^	public var isEllipse : Bool;$/;"	v
isEmpty	heaps/h2d/SpriteBatch.hx	/^	public inline function isEmpty() {$/;"	f
isEmpty	heaps/h2d/Tile.hx	/^	static function isEmpty( b : hxd.BitmapData, px : Int, py : Int, width : Int, height : Int, bg /;"	f
isEmpty	heaps/h2d/TileGroup.hx	/^	public function isEmpty() {$/;"	f
isEmpty	heaps/h2d/col/Bounds.hx	/^	public inline function isEmpty() : Bool {$/;"	f
isEmpty	heaps/h2d/col/IBounds.hx	/^	public inline function isEmpty() : Bool {$/;"	f
isEmpty	heaps/h3d/col/Bounds.hx	/^	public inline function isEmpty() {$/;"	f
isEmpty	heaps/h3d/pass/PassList.hx	/^	public inline function isEmpty() {$/;"	f
isEnabled	heaps/hxd/snd/openal/Emulator.hx	/^	public static function isEnabled(capability : Int) return false;$/;"	f
isEnd	heaps/hxd/snd/Manager.hx	/^	public var isEnd    : Bool;$/;"	v
isEnd	heaps/hxd/snd/openal/AudioTypes.hx	/^	public var isEnd : Bool;$/;"	v
isEnd	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var isEnd : Bool;$/;"	v
isExtensionPresent	heaps/hxd/snd/openal/Emulator.hx	/^	public static function isExtensionPresent(device : Device, extname : Bytes) : Bool {$/;"	f
isExtensionPresent	heaps/hxd/snd/openal/Emulator.hx	/^	public static function isExtensionPresent(extname : Bytes) : Bool {$/;"	f
isFlat	heaps/hxd/clipper/Clipper.hx	/^		var isFlat = true;$/;"	v
isFloat	heaps/hxsl/DynamicShader.hx	/^		var isFloat = v.type == TFloat && access == null;$/;"	v
isFloatFormat	heaps/hxd/Pixels.hx	/^	public static function isFloatFormat( format : PixelFormat ) {$/;"	f
isFocused	heaps/hxd/Window.flash.hx	/^	public var isFocused(get, never) : Bool;$/;"	v
isFocused	heaps/hxd/Window.hl.hx	/^	public var isFocused(get, never) : Bool;$/;"	v
isFocused	heaps/hxd/Window.hx	/^	public var isFocused(get, never) : Bool;$/;"	v
isFocused	heaps/hxd/Window.js.hx	/^	public var isFocused(get, never) : Bool;$/;"	v
isFullRank	heaps/h2d/col/Polynomial.hx	/^	function isFullRank() {$/;"	f
isHole	heaps/hxd/clipper/Clipper.hx	/^		var isHole = false;$/;"	v
isHole	heaps/hxd/clipper/Clipper.hx	/^	public inline function isHole() {$/;"	f
isHole	heaps/hxd/clipper/Clipper.hx	/^	public var isHole : Bool;$/;"	v
isHoleNode	heaps/hxd/clipper/Clipper.hx	/^	private function isHoleNode() {$/;"	f
isHorizontal	heaps/hxd/clipper/Clipper.hx	/^		var isHorizontal = (j.outPt1.pt.y == j.offPt.y);$/;"	v
isHorizontal	heaps/hxd/clipper/Clipper.hx	/^	public inline function isHorizontal(e : TEdge) {$/;"	f
isIdentChar	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function isIdentChar(c) {$/;"	f
isIdentity	heaps/h3d/Matrix.hx	/^	public function isIdentity() {$/;"	f
isIdentityEpsilon	heaps/h3d/Matrix.hx	/^	public function isIdentityEpsilon( e : Float ) {$/;"	f
isInit	heaps/h3d/impl/VarBinding.hx	/^	public var isInit : Bool;$/;"	v
isInline	heaps/h2d/Flow.hx	/^	public var isInline = true;$/;"	v
isInstance	heaps/h3d/anim/Animation.hx	/^	var isInstance : Bool;$/;"	v
isIntelGpu	heaps/h3d/impl/GlDriver.hx	/^	var isIntelGpu : Bool;$/;"	v
isInteractiveVisible	heaps/h2d/Scene.hx	/^	public function isInteractiveVisible( i : hxd.SceneEvents.Interactive ) : Bool {$/;"	f
isInteractiveVisible	heaps/h3d/scene/Scene.hx	/^	public function isInteractiveVisible( i : hxd.SceneEvents.Interactive ) {$/;"	f
isInteractiveVisible	heaps/hxd/SceneEvents.hx	/^	public function isInteractiveVisible( i : Interactive ) : Bool;$/;"	f
isJoint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var isJoint = mtype == "LimbNode" && (!unskinnedJointsAsObjects || !isNullJoint(model));$/;"	v
isJoint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var isJoint : Bool;$/;"	v
isLoading	heaps/hxd/snd/Channel.hx	/^	var isLoading = false;$/;"	v
isLoading	heaps/hxd/snd/Data.hx	/^	public function isLoading() {$/;"	f
isLoading	heaps/hxd/snd/Mp3Data.hx	/^	override function isLoading() {$/;"	f
isLoading	heaps/hxsl/CacheFile.hx	/^	var isLoading : Bool;$/;"	v
isMainLight	heaps/h3d/scene/pbr/Light.hx	/^	public var isMainLight = false;$/;"	v
isMax	heaps/h3d/shader/MinMaxShader.hx	/^		@const var isMax : Bool;$/;"	v
isMaya	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var isMaya : Bool;$/;"	v
isMesh	heaps/h3d/scene/Object.hx	/^	public inline function isMesh() {$/;"	f
isMesh	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var isMesh : Bool;$/;"	v
isModified	heaps/hxd/clipper/Clipper.hx	/^		var isModified = true;$/;"	v
isMove	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var isMove = curveName != "Visibility" && curveName != "UV";$/;"	v
isNaN	heaps/hxd/Math.hx	/^	public static inline function isNaN(v:Float) {$/;"	f
isNew	heaps/hxd/fs/LocalFileSystem.hx	/^		var isNew = false;$/;"	v
isNullJoint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function isNullJoint( model : FbxNode ) {$/;"	f
isObjects	heaps/hxd/fmt/fbx/Filter.hx	/^		var isObjects = index == 1 && f.name == "Objects";$/;"	v
isOfType	heaps/hxd/impl/Api.hx	/^	public static inline function isOfType( v : Dynamic, t : Dynamic) : Bool {$/;"	f
isOut	heaps/h2d/col/Delaunay.hx	/^		inline function isOut(p) {$/;"	f
isOut	heaps/hxd/SceneEvents.hx	/^	var isOut = false;$/;"	v
isOver	heaps/h2d/Interactive.hx	/^	public function isOver() {$/;"	f
isOver	heaps/h3d/scene/Interactive.hx	/^	public function isOver() {$/;"	f
isPOT	heaps/hxd/Math.hx	/^	public static inline function isPOT(v : Int) : Bool {$/;"	f
isPackedFormat	heaps/hxsl/Types.hx	/^	public static inline function isPackedFormat( c : ChannelTextureType ) {$/;"	f
isPerInstance	heaps/hxsl/Cache.hx	/^	function isPerInstance(v:TVar) {$/;"	f
isPlaying	heaps/h3d/anim/Animation.hx	/^	function isPlaying() {$/;"	f
isPointInTriangle	heaps/h3d/col/Polygon.hx	/^	inline function isPointInTriangle( x : Float, y : Float, z : Float ) {$/;"	f
isPressed	heaps/hxd/Key.hx	/^	public static function isPressed( code : Int ) {$/;"	f
isPressed	heaps/hxd/Pad.hx	/^	public function isPressed( button : Int ) {$/;"	f
isRaw	heaps/h3d/prim/BigPrimitive.hx	/^	var isRaw : Bool;$/;"	v
isRed	heaps/h2d/col/Voronoi.hx	/^		var isRed;$/;"	v
isRelative	heaps/h2d/Particles.hx	/^	public var isRelative(default, set) : Bool = true;$/;"	v
isRelative	heaps/h3d/parts/GpuParticles.hx	/^	public var isRelative(default, set) : Bool	= false;$/;"	v
isRelative	heaps/h3d/shader/Base2d.hx	/^		@const var isRelative : Bool;$/;"	v
isReleased	heaps/hxd/Key.hx	/^	public static function isReleased( code : Int ) {$/;"	f
isReleased	heaps/hxd/Pad.hx	/^	public function isReleased( button : Int ) {$/;"	f
isReleased	heaps/hxd/snd/Channel.hx	/^	public function isReleased() {$/;"	f
isRoot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var isRoot = isRootModel(m);$/;"	v
isRoot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var isRoot = model != null && getParent(model,"Model",true) == null;$/;"	v
isRootModel	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function isRootModel( m ) {$/;"	f
isSRBG	heaps/h3d/shader/pbr/ToneMapping.hx	/^		@const var isSRBG : Bool;$/;"	v
isSRGB	heaps/h3d/mat/Texture.hx	/^	public function isSRGB() {$/;"	f
isSRGB	heaps/h3d/scene/pbr/Environment.hx	/^		@const var isSRGB : Bool;$/;"	v
isSampler	heaps/hxsl/Ast.hx	/^	public static function isSampler( t : Type ) {$/;"	f
isScreen	heaps/h3d/shader/pbr/PropsImport.hx	/^		@const var isScreen : Bool = true;$/;"	v
isShallow	heaps/hxd/poly2tri/Sweep.hx	/^	public inline function isShallow(node:Node):Bool$/;"	f
isSkin	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var isSkin = false;$/;"	v
isSky	heaps/h3d/shader/pbr/Lighting.hx	/^			var isSky = normal.dot(normal) <= 0;$/;"	v
isSmall	heaps/hxd/fmt/hmd/Library.hx	/^		var isSmall = geom.vertexCount <= 0x10000;$/;"	v
isSource	heaps/hxd/snd/openal/Emulator.hx	/^	public static function isSource(source : Source) : Bool {$/;"	f
isSpace	heaps/hxd/Charset.hx	/^	public function isSpace(code) {$/;"	f
isSpecular	heaps/h3d/scene/pbr/Environment.hx	/^		@const var isSpecular : Bool;$/;"	v
isSplit	heaps/h3d/anim/Skin.hx	/^	public inline function isSplit() {$/;"	f
isStandardMode	heaps/h3d/impl/Stage3dDriver.hx	/^	var isStandardMode : Bool;$/;"	v
isStatic	heaps/h3d/prim/BigPrimitive.hx	/^	public var isStatic = true;$/;"	v
isStream	heaps/hxd/snd/Manager.hx	/^	public var isStream : Bool;$/;"	v
isString	heaps/hxd/fmt/blend/Data.hx	/^						var isString = dnaName.charAt(dnaName.length - 1) == ']';$/;"	v
isStruct	heaps/hxsl/Ast.hx	/^	public static function isStruct( v : TVar ) {$/;"	f
isSub	heaps/h3d/anim/Skin.hx	/^	function isSub( a : Array<Joint>, b : Array<Joint> ) {$/;"	f
isSupported	heaps/hxd/impl/AsyncLoader.hx	/^	public function isSupported( t : hxd.res.Image ) : Bool;$/;"	f
isSupported	heaps/hxd/impl/AsyncLoader.hx	/^	public function isSupported(t:hxd.res.Image) {$/;"	f
isSupportedFormat	heaps/h3d/impl/DirectXDriver.hx	/^	override function isSupportedFormat( fmt : hxd.PixelFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/Driver.hx	/^	public function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/GlDriver.hx	/^	override function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/LogDriver.hx	/^	override function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/NullDriver.hx	/^	override function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/Stage3dDriver.hx	/^	override function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSupportedFormat	heaps/h3d/impl/VulkanDriver.hx	/^	override function isSupportedFormat( fmt : h3d.mat.Data.TextureFormat ) {$/;"	f
isSync	heaps/h3d/anim/Animation.hx	/^	var isSync : Bool;$/;"	v
isUnique	heaps/hxsl/Linker.hx	/^			inline function isUnique( v : TVar, borrowed : Bool ) {$/;"	f
isUsingWorldDist	heaps/h3d/pass/PointShadowMap.hx	/^	override function isUsingWorldDist(){$/;"	f
isUsingWorldDist	heaps/h3d/pass/Shadows.hx	/^	function isUsingWorldDist(){$/;"	f
isUsingWorldDist	heaps/h3d/pass/SpotShadowMap.hx	/^	override function isUsingWorldDist(){$/;"	f
isVal	heaps/hxsl/Eval.hx	/^				var isVal = isVal && i == last;$/;"	v
isValidDiagonal	heaps/hxd/earcut/Earcut.hx	/^	function isValidDiagonal(a:EarNode, b:EarNode) {$/;"	f
isVar	heaps/hxsl/Dce.hx	/^				var isVar = isVar && count == el.length - 1;$/;"	v
isVertex	heaps/hxsl/GlslOut.hx	/^	var isVertex : Bool;$/;"	v
isVertex	heaps/hxsl/HlslOut.hx	/^	var isVertex : Bool;$/;"	v
isVertical	heaps/h2d/Flow.hx	/^	public var isVertical(get, set) : Bool;$/;"	v
isVirtual	heaps/hxd/snd/Channel.hx	/^	var isVirtual = false;$/;"	v
isWindows	heaps/hxd/fs/LocalFileSystem.hx	/^	static var isWindows = Sys.systemName() == "Windows";$/;"	v
isWorker	heaps/hxd/Worker.hx	/^	var isWorker : Bool;$/;"	v
isWriteMask	heaps/hxsl/AgalOptim.hx	/^	function isWriteMask( swiz : Array<C> ) {$/;"	f
isample	heaps/hxd/snd/Data.hx	/^			var isample = Std.int(targetSample);$/;"	v
isize	heaps/h3d/prim/DynamicPrimitive.hx	/^	var isize : Int;$/;"	v
isize	heaps/hxd/fmt/hmd/Library.hx	/^		var isize;$/;"	v
it	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var it = Std.int(t \/ 200000);$/;"	v
it	heaps/hxsl/Checker.hx	/^			var it = typeExpr(it, Value);$/;"	v
it	heaps/hxsl/Dce.hx	/^			var it = mapExpr(it, true);$/;"	v
it	heaps/hxsl/Eval.hx	/^			var it = evalExpr(it);$/;"	v
it	heaps/samples/Interactive2D.hx	/^				var it = polygon.iterator();$/;"	v
item	heaps/h2d/Console.hx	/^			var item = findItemById(id)$/;"	v
item	heaps/h2d/Dropdown.hx	/^				var item = items[i];$/;"	v
item	heaps/h2d/Dropdown.hx	/^			var item = @:privateAccess dd.getItem(dd.selectedItem);$/;"	v
item	heaps/h2d/Dropdown.hx	/^		var item = items[s];$/;"	v
items	heaps/h2d/Dropdown.hx	/^			var items = getItems();$/;"	v
items	heaps/h2d/Dropdown.hx	/^		var items = getItems();$/;"	v
iter	heaps/hxsl/AgalOptim.hx	/^	public function iter( op : Opcode, reg : Reg -> Bool -> Void ) {$/;"	f
iter	heaps/hxsl/Ast.hx	/^	public static function iter( e : TExpr, f : TExpr -> Void ) {$/;"	f
iterJoints	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var iterJoints = allJoints.copy();$/;"	v
iterVisibleMeshes	heaps/h3d/scene/Object.hx	/^	public function iterVisibleMeshes( callb : Mesh -> Void ) {$/;"	f
iterateTo	heaps/hxsl/ShaderList.hx	/^	public inline function iterateTo(s) {$/;"	f
iterator	heaps/h2d/Object.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h2d/col/IPolygon.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h2d/col/IPolygons.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h2d/col/Polygon.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h2d/col/Polygons.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h2d/col/Segments.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h3d/pass/PassList.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/h3d/scene/Object.hx	/^	public inline function iterator() : hxd.impl.ArrayIterator<Object> {$/;"	f
iterator	heaps/hxd/FloatBuffer.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/hxd/IndexBuffer.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function iterator() {$/;"	f
iterator	heaps/hxd/fs/BytesFileSystem.hx	/^	override function iterator() : hxd.impl.ArrayIterator<FileEntry> return new hxd.impl.ArrayItera/;"	f
iterator	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function iterator() {$/;"	f
iterator	heaps/hxd/fs/FileEntry.hx	/^	public function iterator() : hxd.impl.ArrayIterator<FileEntry> return null;$/;"	f
iterator	heaps/hxd/fs/LocalFileSystem.hx	/^	override function iterator() {$/;"	f
iterator	heaps/hxd/fs/MultiFileSystem.hx	/^	override function iterator() : hxd.impl.ArrayIterator<FileEntry> {$/;"	f
iterator	heaps/hxd/res/Any.hx	/^	public inline function iterator() {$/;"	f
iterator	heaps/hxsl/ShaderList.hx	/^	public inline function iterator() {$/;"	f
itotal	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var itotal = Std.int((total * 100) % 0x0FFFFFFF);$/;"	v
iuv	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var iuv = tuvs.index[k];$/;"	v
iuw	heaps/h3d/shader/NoiseLib.hx	/^  var iuw = x + 0.5 * y;$/;"	v
iuw	heaps/h3d/shader/NoiseLib.hx	/^  var iuw = xw + 0.5 * yw;$/;"	v
ivec2	heaps/hxsl/Checker.hx	/^	static var ivec2 = TVec(2, VInt);$/;"	v
ivec3	heaps/hxsl/Checker.hx	/^	static var ivec3 = TVec(3, VInt);$/;"	v
ivec4	heaps/hxsl/Checker.hx	/^	static var ivec4 = TVec(4, VInt);$/;"	v
ivw	heaps/h3d/shader/NoiseLib.hx	/^  var ivw = y;$/;"	v
ivw	heaps/h3d/shader/NoiseLib.hx	/^  var ivw = yw;$/;"	v
iw	heaps/h3d/Vector.hx	/^		var iw = 1 \/ (x * m._14 + y * m._24 + z * m._34 + w * m._44);$/;"	v
iwidth	heaps/h2d/Tile.hx	/^	public var iwidth(get,never) : Int;$/;"	v
ix	heaps/h2d/Tile.hx	/^	public var ix(get,never) : Int;$/;"	v
ix	heaps/h2d/col/Bounds.hx	/^		var ix = Math.floor(x * scale);$/;"	v
ix	heaps/h2d/col/PixelsCollider.hx	/^		var ix : Int = Math.floor(p.x \/ scaleX);$/;"	v
ix	heaps/h3d/scene/World.hx	/^		var ix = Math.floor(x \/ chunkSize);$/;"	v
ix	heaps/hxd/Direction.hx	/^		var ix = if( x < 0 ) -1 else if( x > 0 ) 1 else 0;$/;"	v
ix	heaps/hxd/Perlin.hx	/^		var ix = Std.int(x), xs = scurve(x - ix);$/;"	v
iy	heaps/h2d/Tile.hx	/^	public var iy(get,never) : Int;$/;"	v
iy	heaps/h2d/col/Bounds.hx	/^		var iy = Math.floor(y * scale);$/;"	v
iy	heaps/h2d/col/PixelsCollider.hx	/^		var iy : Int = Math.floor(p.y \/ scaleY);$/;"	v
iy	heaps/h3d/scene/World.hx	/^		var iy = Math.floor(y \/ chunkSize);$/;"	v
iy	heaps/hxd/Direction.hx	/^		var iy = if( y < 0 ) -1 else if( y > 0 ) 1 else 0;$/;"	v
iy	heaps/hxd/Perlin.hx	/^		var iy = Std.int(y), ys = scurve(y - iy);$/;"	v
iz	heaps/hxd/Perlin.hx	/^		var iz = Std.int(z), zs = scurve(z - iz);$/;"	v
j	heaps/h2d/col/Delaunay.hx	/^			var j = -1;$/;"	v
j	heaps/h2d/col/Delaunay.hx	/^			var j = DelaunayEdges.length - 2;$/;"	v
j	heaps/h2d/col/Delaunay.hx	/^		var j;$/;"	v
j	heaps/h3d/anim/Animation.hx	/^				var j = currentSkin.skinData.namedJoints.get(a.objectName);$/;"	v
j	heaps/h3d/anim/Skin.hx	/^					var j = boundJoints[vertexJoints[bidx]];$/;"	v
j	heaps/h3d/anim/Skin.hx	/^				var j = p.indexedJoints[i];$/;"	v
j	heaps/h3d/anim/Skin.hx	/^		var j = 0;$/;"	v
j	heaps/h3d/anim/Skin.hx	/^	public var j : Joint;$/;"	v
j	heaps/h3d/anim/SmoothTransition.hx	/^				var j = @:privateAccess so.targetSkin.skinData.allJoints[so.targetJoint];$/;"	v
j	heaps/h3d/col/SkinCollider.hx	/^			var j = skin.skinData.allJoints[i];$/;"	v
j	heaps/h3d/col/SkinCollider.hx	/^		var j = 0, v = 0;$/;"	v
j	heaps/h3d/parts/Data.hx	/^			var j = values.length - 1;$/;"	v
j	heaps/h3d/scene/Skin.hx	/^			var j = skinData.namedJoints.get(name);$/;"	v
j	heaps/h3d/scene/Skin.hx	/^		var j = sk.namedJoints.get(name);$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^					var j = len - 1;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^				var j = k - 1;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^				var j = len - 1;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^			var j = i + 1;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^		var j = 0, k = 0;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^		var j = cnt - 1;$/;"	v
j	heaps/hxd/clipper/Clipper.hx	/^		var j = new Join();$/;"	v
j	heaps/hxd/earcut/Earcut.hx	/^		var j = end - 1;$/;"	v
j	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var j = new SkinJoint();$/;"	v
j	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var j = new h3d.anim.Skin.Joint();$/;"	v
j	heaps/hxd/fmt/hmd/Dump.hx	/^					var j = s.joints[i];$/;"	v
j	heaps/hxd/fmt/hmd/Library.hx	/^					var j = r.joints[idx];$/;"	v
j	heaps/hxd/fmt/hmd/Library.hx	/^				var j = skin.allJoints[idx--];$/;"	v
j	heaps/hxd/fmt/hmd/Library.hx	/^			var j = new h3d.anim.Skin.Joint();$/;"	v
j	heaps/hxd/fmt/hmd/Reader.hx	/^			var j = new SkinJoint();$/;"	v
j	heaps/hxd/fmt/spine/Library.hx	/^			var j : JRegionAttach = cast j;$/;"	v
j	heaps/hxd/fmt/spine/Library.hx	/^			var j : JSkinMeshAttach = cast j;$/;"	v
j	heaps/hxd/snd/webaudio/AudioTypes.hx	/^			var j = 0, fade = 0.;$/;"	v
j1	heaps/h3d/anim/Skin.hx	/^			var j1 = p1.joints[i];$/;"	v
j2	heaps/h3d/anim/Skin.hx	/^			var j2 = p2.joints[j];$/;"	v
jModel	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var jModel = ids.get(j.index);$/;"	v
jl	heaps/h3d/anim/Skin.hx	/^			var jl = [];$/;"	v
jo	heaps/h3d/scene/Skin.hx	/^				var jo = new Joint(skin, j);$/;"	v
join	heaps/hxd/clipper/Clipper.hx	/^          var join = m_Joins[i];$/;"	v
join	heaps/hxd/snd/Mp3Data.hx	/^		var join = new hxd.impl.TypedArray.Float32Array(left.length * 2);$/;"	v
joint	heaps/h3d/anim/Animation.hx	/^			var joint = hxd.impl.Api.downcast(obj, h3d.scene.Skin.Joint);$/;"	v
joint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var joint : h3d.anim.Skin.Joint;$/;"	v
joints	heaps/h3d/anim/Skin.hx	/^	public var joints : Array<Joint>;$/;"	v
joints	heaps/h3d/col/SkinCollider.hx	/^		var joints = skin.getSkinData().allJoints;$/;"	v
joints	heaps/hxd/fmt/hmd/Data.hx	/^	public var joints : Array<Index<SkinJoint>>;$/;"	v
joints	heaps/hxd/fmt/hmd/Data.hx	/^	public var joints : Array<SkinJoint>;$/;"	v
jointsAbsPosInv	heaps/h3d/scene/Skin.hx	/^	var jointsAbsPosInv : h3d.Matrix;$/;"	v
jointsByBind	heaps/hxd/fmt/hmd/Library.hx	/^			var jointsByBind = [];$/;"	v
jointsDiff	heaps/h3d/anim/Skin.hx	/^	function jointsDiff( p1 : Permut, p2 : Permut ) {$/;"	f
jointsGraphics	heaps/h3d/scene/Skin.hx	/^	var jointsGraphics : Graphics;$/;"	v
jointsPermuts	heaps/h3d/anim/Skin.hx	/^		var jointsPermuts = [];$/;"	v
jointsUpdated	heaps/h3d/scene/Skin.hx	/^	var jointsUpdated : Bool;$/;"	v
jointype	heaps/hxd/clipper/Clipper.hx	/^	var jointype : JoinType;$/;"	v
jp	heaps/h3d/scene/Skin.hx	/^		var jp = j.parent;$/;"	v
json	heaps/hxd/fs/Convert.hx	/^		var json = haxe.Json.parse(srcBytes.toString());$/;"	v
k	heaps/h2d/Flow.hx	/^		var k = 0;$/;"	v
k	heaps/h2d/Font.hx	/^			var k = @:privateAccess c.kerning;$/;"	v
k	heaps/h2d/Font.hx	/^		var k = kerning;$/;"	v
k	heaps/h2d/Font.hx	/^		var k = new Kerning(prevChar, offset);$/;"	v
k	heaps/h2d/HtmlText.hx	/^					var k = i + 1, max = text.length;$/;"	v
k	heaps/h2d/HtmlText.hx	/^				var k = align == Center || align == MultilineCenter ? 0.5 : 1;$/;"	v
k	heaps/h2d/Layers.hx	/^				var k = layerCount - 1;$/;"	v
k	heaps/h2d/Object.hx	/^		var k = 0;$/;"	v
k	heaps/h2d/RenderContext.hx	/^			var k = new hxd.FloatBuffer();$/;"	v
k	heaps/h2d/Text.hx	/^				var k = i + 1, max = text.length;$/;"	v
k	heaps/h2d/Text.hx	/^			var k = align == Center || align == MultilineCenter ? 0.5 : 1;$/;"	v
k	heaps/h2d/col/Delaunay.hx	/^				var k = DelaunayEdges.length;$/;"	v
k	heaps/h2d/col/Line.hx	/^		var k = ((p.x - p1.x) * dx + (p.y - p1.y) * dy) \/ (dx * dx + dy * dy);$/;"	v
k	heaps/h2d/col/Point.hx	/^		var k = lengthSq();$/;"	v
k	heaps/h2d/col/Polygon.hx	/^		var k = 0;$/;"	v
k	heaps/h2d/col/Polynomial.hx	/^		var k = n - 1;$/;"	v
k	heaps/h2d/filter/Mask.hx	/^			var k = mask.get( vec2(uv.dot(maskMatA), uv.dot(maskMatB)) );$/;"	v
k	heaps/h3d/Vector.hx	/^		var k = 2 * this.dot(n);$/;"	v
k	heaps/h3d/Vector.hx	/^		var k = lengthSq();$/;"	v
k	heaps/h3d/col/Point.hx	/^		var k = x * x + y * y + z * z;$/;"	v
k	heaps/h3d/col/Polygon.hx	/^			var k = i * 3;$/;"	v
k	heaps/h3d/col/Polygon.hx	/^		var k = nd \/ dr;$/;"	v
k	heaps/h3d/col/Ray.hx	/^			var k = nd \/ d;$/;"	v
k	heaps/h3d/impl/MemoryManager.hx	/^			var k = i << 2;$/;"	v
k	heaps/h3d/mat/Texture.hx	/^			var k = 0;$/;"	v
k	heaps/h3d/mat/Texture.hx	/^		var k = checkerTextureKeys.get(size);$/;"	v
k	heaps/h3d/mat/Texture.hx	/^		var k = genTextureKeys.get(key);$/;"	v
k	heaps/h3d/mat/Texture.hx	/^		var k = noiseTextureKeys.get(size);$/;"	v
k	heaps/h3d/parts/Emitter.hx	/^				var k = new ColorKey(c.time, ((c.color>>16)&0xFF)\/255, ((c.color>>8)&0xFF)\/255, (c.color&0/;"	v
k	heaps/h3d/pass/ColorMatrix.hx	/^				var k = pow(mask.get( vec2(uv.dot(maskMatA), uv.dot(maskMatB)) ).dot(maskChannel), maskPower/;"	v
k	heaps/h3d/pass/DirShadowMap.hx	/^					var k = d ? 1 : -1;$/;"	v
k	heaps/h3d/prim/HMDModel.hx	/^		var k = 0;$/;"	v
k	heaps/h3d/scene/Object.hx	/^		var k = 0;$/;"	v
k	heaps/h3d/scene/Trail.hx	/^			var k = Math.ceil(dist \/ movementMax);$/;"	v
k	heaps/h3d/scene/pbr/Environment.hx	/^			var k = (roughness * roughness) * 0.5; \/\/ only in IBL, use (r + 1)² \/ 8 for lighting$/;"	v
k	heaps/h3d/scene/pbr/Renderer.hx	/^				var k = debugShadowMapIndex;$/;"	v
k	heaps/h3d/shader/pbr/BDRF.hx	/^			var k = (roughness + 1);$/;"	v
k	heaps/hxd/Pad.hx	/^			var k = p.d.getButtons();$/;"	v
k	heaps/hxd/Perlin.hx	/^		var k = 1.;$/;"	v
k	heaps/hxd/clipper/Clipper.hx	/^				var k = 0;$/;"	v
k	heaps/hxd/clipper/Clipper.hx	/^				var k = len - 1;$/;"	v
k	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var k = 0;$/;"	v
k	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var k = vidx * skin.bonesPerVertex;$/;"	v
k	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var k = n + start;$/;"	v
k	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var k = path.split("\/res\/");$/;"	v
k	heaps/hxd/fmt/hmd/Data.hx	/^		var k = 0;$/;"	v
k	heaps/hxd/fmt/hmd/Library.hx	/^				var k = pext.getVolume() \/ poff.getVolume();$/;"	v
k	heaps/hxd/fmt/pak/FileSystem.hx	/^			var k = pak.readBytes(out, outPos, len);$/;"	v
k	heaps/hxd/fs/FileInput.hx	/^			var k = entry.readBytes(b, pos, nextReadPos, len);$/;"	v
k	heaps/hxd/fs/FileInput.hx	/^			var k = hxd.Math.imin(cacheLen, nbytes);$/;"	v
k	heaps/hxd/fs/FileInput.hx	/^			var k = hxd.Math.imin(len, cacheLen);$/;"	v
k	heaps/hxd/snd/Manager.hx	/^				var k = soundBufferKeys[i];$/;"	v
k	heaps/hxd/snd/Manager.hx	/^			var k = soundBufferKeys[i];$/;"	v
k	heaps/hxsl/AgalOptim.hx	/^					var k = dst.swiz.indexOf(COMPS[i]);$/;"	v
k	heaps/hxsl/Cache.hx	/^				var k = size == 2 ? 3 : 7;$/;"	v
k	heaps/hxsl/Checker.hx	/^			var k = switch(g) {$/;"	v
k	heaps/hxsl/GlslOut.hx	/^			var k = 2;$/;"	v
k	heaps/hxsl/HlslOut.hx	/^			var k = 2;$/;"	v
k	heaps/hxsl/Linker.hx	/^				var k = 2;$/;"	v
k	heaps/hxsl/Serializer.hx	/^		var k = input.readByte();$/;"	v
k	heaps/hxsl/Splitter.hx	/^			var k = prefix == v.name ? 2 : Std.parseInt(v.name.substr(prefix.length));$/;"	v
k	heaps/samples/Blur.hx	/^		var k = blur.pass.values.length * 2 - 1;$/;"	v
k	heaps/samples/CollideCheck.hx	/^		var k = 10;$/;"	v
k	heaps/samples/Interactive2D.hx	/^				var k = 10;$/;"	v
k	heaps/samples/PointLights.hx	/^			var k = 1.;$/;"	v
k0	heaps/h3d/prim/Polygon.hx	/^			var k0 = p1.sub(p0);$/;"	v
k1	heaps/h3d/anim/BufferAnimation.hx	/^		var k1 : Float32 = 1 - k2;$/;"	v
k1	heaps/h3d/anim/LinearAnimation.hx	/^		var k1 = 1 - k2;$/;"	v
k1	heaps/h3d/prim/Polygon.hx	/^			var k1 = p2.sub(p0);$/;"	v
k1	heaps/hxd/res/NanoJpeg.hx	/^			var k1 = 0, k2 = 0, k3 = 0, out = 0;$/;"	v
k1	heaps/hxsl/AgalOptim.hx	/^					var k1 = sw1[i].getIndex();$/;"	v
k2	heaps/h3d/anim/BufferAnimation.hx	/^		var k2 : Float32 = frame - frame1;$/;"	v
k2	heaps/h3d/anim/LinearAnimation.hx	/^		var k2 = frame - frame1;$/;"	v
k2	heaps/hxsl/AgalOptim.hx	/^						var k2 = sw2[i].getIndex();$/;"	v
k2	heaps/hxsl/AgalOptim.hx	/^					var k2 = sw2[i].getIndex();$/;"	v
kAlpha	heaps/hxd/poly2tri/Constants.hx	/^	static public var kAlpha:Float   = 0.3;$/;"	v
kc	heaps/h2d/Font.hx	/^			var kc = new Kerning(k.prevChar, k.offset);$/;"	v
keep	heaps/h2d/ZGroup.hx	/^	public var keep  : Bool;$/;"	v
keep	heaps/hxsl/Dce.hx	/^	public var keep : Bool;$/;"	v
keepJoint	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function keepJoint( j : h3d.anim.Skin.Joint ) : Bool {$/;"	f
keepJoint	heaps/hxd/fmt/fbx/HMDOut.hx	/^	override function keepJoint(j:h3d.anim.Skin.Joint) {$/;"	f
keepJoints	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var keepJoints : Map<String,Bool>;$/;"	v
kern	heaps/hxd/fmt/bfnt/Writer.hx	/^			var kern = @:privateAccess glyph.kerning;$/;"	v
kerning	heaps/h2d/Font.hx	/^	var kerning : Null<Kerning>;$/;"	v
kernings	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var kernings = [];$/;"	v
kerns	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var kerns = xml.node.kernings.elements;$/;"	v
key	heaps/h3d/impl/DirectXDriver.hx	/^						var key = cache.readString(len);$/;"	v
key	heaps/h3d/impl/DirectXDriver.hx	/^			var key = shaderVersion + haxe.crypto.Md5.encode(shader.code);$/;"	v
key	heaps/h3d/impl/Driver.hx	/^		var key = names.join("|");$/;"	v
key	heaps/h3d/impl/MemoryManager.hx	/^					var key = b.allocPos == null ? "null" : b.allocPos.position;$/;"	v
key	heaps/h3d/impl/MemoryManager.hx	/^			var key = "$"+t.allocPos.position;$/;"	v
key	heaps/h3d/mat/Texture.hx	/^		var key = ((size << 16) | mode) + "," + color;$/;"	v
key	heaps/h3d/mat/Texture.hx	/^		var key = (color&0xFFFFFF) | (aval << 24);$/;"	v
key	heaps/hxd/fmt/grd/Reader.hx	/^			var key = i.readString(len);$/;"	v
key	heaps/hxd/fmt/kframes/Data.hx	/^	var key : Int;$/;"	v
key	heaps/hxd/res/Atlas.hx	/^				var key = line;$/;"	v
key	heaps/hxd/res/FontBuilder.hx	/^		var key = name + "#" + size;$/;"	v
key	heaps/hxd/snd/Manager.hx	/^		var key  = snd.entry.path;$/;"	v
key	heaps/hxsl/Cache.hx	/^					var key = path.join(".");$/;"	v
key	heaps/hxsl/Cache.hx	/^		var key = [for( v in vars ) Std.string(v)].join(",");$/;"	v
key	heaps/hxsl/Linker.hx	/^		var key = (path == null ? v.name : path + "." + v.name);$/;"	v
keyCode	heaps/hxd/Event.hx	/^	public var keyCode : Int;$/;"	v
keyCount	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var keyCount = 0;$/;"	v
keyPressed	heaps/hxd/Key.hx	/^	static var keyPressed : Array<Int> = [];$/;"	v
key_values	heaps/hxd/fmt/kframes/Data.hx	/^	var key_values : Array<KFAnimValue>;$/;"	v
keys	heaps/h3d/impl/DirectXDriver.hx	/^					var keys = Lambda.array({ iterator : cacheFileData.keys });$/;"	v
keys	heaps/hxd/Window.hl.hx	/^		var keys = [$/;"	v
keys	heaps/hxd/fmt/hdr/Reader.hx	/^		var keys = new Map();$/;"	v
kill	heaps/h3d/parts/Particles.hx	/^	function kill(p:Particle) {$/;"	f
killAlpha	heaps/h2d/RenderContext.hx	/^	public var killAlpha : Bool;$/;"	v
killAlpha	heaps/h2d/ZGroup.hx	/^	public var killAlpha   : Bool;$/;"	v
killAlpha	heaps/h3d/scene/World.hx	/^	public var killAlpha : Null<Float>;$/;"	v
killAlpha	heaps/h3d/shader/Base2d.hx	/^		@const var killAlpha : Bool;$/;"	v
killAlpha	heaps/h3d/shader/Texture.hx	/^		@const var killAlpha : Bool;$/;"	v
killAlpha	heaps/h3d/shader/Texture2.hx	/^		@const var killAlpha : Bool;$/;"	v
killAlphaThreshold	heaps/h3d/shader/Texture2.hx	/^		@param var killAlphaThreshold : Float;$/;"	v
kind	heaps/h3d/impl/DirectXDriver.hx	/^	public var kind : PipelineKind;$/;"	v
kind	heaps/h3d/impl/GlDriver.hx	/^		var kind, size;$/;"	v
kind	heaps/h3d/mat/Material.hx	/^	var kind : DefaultKind;$/;"	v
kind	heaps/hxd/Event.hx	/^	public var kind : EventKind;$/;"	v
kind	heaps/hxsl/Ast.hx	/^	var kind : FunctionKind;$/;"	v
kind	heaps/hxsl/Ast.hx	/^	var kind : Null<VarKind>;$/;"	v
kind	heaps/hxsl/Ast.hx	/^	var kind : VarKind;$/;"	v
kind	heaps/hxsl/Checker.hx	/^			var kind = switch( f.name ) {$/;"	v
kind	heaps/hxsl/DynamicShader.hx	/^	public var kind : AccessKind;$/;"	v
kind	heaps/hxsl/Linker.hx	/^	public var kind : Null<FunctionKind>;$/;"	v
kind	heaps/samples/templates/.vscode/tasks.json	/^				"kind": "build",$/;"	s	object:tasks.0.group
kn	heaps/h2d/Font.hx	/^				var kn = new Kerning(k.prevChar, k.offset);$/;"	v
knockout	heaps/h2d/filter/Glow.hx	/^	public var knockout : Bool;$/;"	v
kx	heaps/h2d/col/RoundRect.hx	/^			var kx = p.x - (x + dx);$/;"	v
kx	heaps/h2d/col/Segment.hx	/^			var kx = p.x - (x + dx);$/;"	v
ky	heaps/h2d/col/RoundRect.hx	/^			var ky = p.y - (y + dy);$/;"	v
ky	heaps/h2d/col/Segment.hx	/^			var ky = p.y - (y + dy);$/;"	v
l	heaps/h2d/CdbLevel.hx	/^			var l = loadLayer(ldat);$/;"	v
l	heaps/h2d/CdbLevel.hx	/^		var l = new LevelLayer(this);$/;"	v
l	heaps/h2d/KeyFrames.hx	/^					var l = reg.matched(2).length;$/;"	v
l	heaps/h2d/KeyFrames.hx	/^			var l : KeyframesLayer = {$/;"	v
l	heaps/h2d/Scene.hx	/^				var l = 0;$/;"	v
l	heaps/h2d/Scene.hx	/^				var l = layerCount;$/;"	v
l	heaps/h2d/col/Ray.hx	/^		var l = lx * lx + ly * ly;$/;"	v
l	heaps/h3d/col/Ray.hx	/^		var l = lx * lx + ly * ly + lz * lz;$/;"	v
l	heaps/h3d/col/Ray.hx	/^		var l = new h3d.Vector(lx, ly, lz);$/;"	v
l	heaps/h3d/impl/Benchmark.hx	/^			var l = allocLabel(count);$/;"	v
l	heaps/h3d/impl/Benchmark.hx	/^		var l = labels[index];$/;"	v
l	heaps/h3d/impl/ManagedBuffer.hx	/^		var l = freeList;$/;"	v
l	heaps/h3d/scene/LightSystem.hx	/^			var l = ctx.lights;$/;"	v
l	heaps/h3d/scene/fwd/LightSystem.hx	/^				var l = Std.downcast(ll, h3d.scene.fwd.Light);$/;"	v
l	heaps/h3d/scene/fwd/LightSystem.hx	/^			var l = Std.downcast(ll, h3d.scene.fwd.Light);$/;"	v
l	heaps/h3d/scene/fwd/LightSystem.hx	/^		var l = ctx.lights;$/;"	v
l	heaps/h3d/scene/pbr/Environment.hx	/^				var l : Vec3;$/;"	v
l	heaps/h3d/scene/pbr/Environment.hx	/^				var l = reflect(-v, h);$/;"	v
l	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var l = Std.downcast(ctx.lights, Light);$/;"	v
l	heaps/h3d/scene/pbr/Renderer.hx	/^				var l = ctx.lights;$/;"	v
l	heaps/hxd/Window.hl.hx	/^		var l = [];$/;"	v
l	heaps/hxd/Window.hl.hx	/^		var l = m != null ? dx.Window.getDisplaySettings(m.name) : [];$/;"	v
l	heaps/hxd/Window.hl.hx	/^		var l = sdl.Sdl.getDisplayModes( monitorId == null ? window.currentMonitor : monitorId );$/;"	v
l	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var l = new BaseLibrary(fileName);$/;"	v
l	heaps/hxd/fmt/hmd/Dump.hx	/^			var l = new hxd.fmt.fbx.HMDOut(file);$/;"	v
l	heaps/hxd/fmt/hmd/Library.hx	/^		var l = header.version <= 2 ? makeLinearAnimation(a) : makeAnimation(a);$/;"	v
l	heaps/hxd/fmt/hmd/Library.hx	/^		var l = new h3d.anim.LinearAnimation(a.name, a.frames, a.sampling);$/;"	v
l	heaps/hxd/impl/ArrayIterator.hx	/^	var l : Int;$/;"	v
l	heaps/hxd/res/FileTree.hx	/^						var l = hxd.res.Loader.currentInstance;$/;"	v
l	heaps/hxd/snd/Manager.hx	/^		var l = list;$/;"	v
l	heaps/hxsl/ShaderList.hx	/^	var l : ShaderList;$/;"	v
l	heaps/samples/Helpers.hx	/^			var l = new PointLight( s3d );$/;"	v
l	heaps/samples/Pad.hx	/^	var l : Array<PadUI>;$/;"	v
l	heaps/samples/PointLights.hx	/^				var l = new h3d.scene.fwd.PointLight(s3d);$/;"	v
l	heaps/samples/PointLights.hx	/^			var l = lights[i];$/;"	v
lArc	heaps/h2d/col/Voronoi.hx	/^		var lArc = arc.rbPrevious,$/;"	v
lArc	heaps/h2d/col/Voronoi.hx	/^		var lArc = arc.rbPrevious;$/;"	v
lArc	heaps/h2d/col/Voronoi.hx	/^		var lArc = null, rArc = null,$/;"	v
lArc	heaps/h2d/col/Voronoi.hx	/^		var lArc = previous;$/;"	v
lCell	heaps/h2d/col/Voronoi.hx	/^	public var lCell : Null<Cell>;$/;"	v
lPoint	heaps/h2d/col/Voronoi.hx	/^			var lPoint = lArc.point,$/;"	v
lPoint	heaps/h2d/col/Voronoi.hx	/^		var lPoint = lArc.point,$/;"	v
lPoint	heaps/h2d/col/Voronoi.hx	/^	public var lPoint : Point;$/;"	v
la	heaps/h3d/anim/BufferAnimation.hx	/^		var la = hxd.impl.Api.downcast(a, BufferAnimation);$/;"	v
label	heaps/samples/Domkit.hx	/^	public var label(get, set): String;$/;"	v
label	heaps/samples/HtmlText.hx	/^			var label = new h2d.HtmlText(font, w);$/;"	v
label	heaps/samples/Text.hx	/^			var label = new h2d.Text(font, w);$/;"	v
label	heaps/samples/templates/.vscode/tasks.json	/^			"label": "HeapsHL",$/;"	s	object:tasks.2
label	heaps/samples/templates/.vscode/tasks.json	/^			"label": "HeapsJS",$/;"	s	object:tasks.1
label	heaps/samples/templates/.vscode/tasks.json	/^			"label": "HeapsSWF",$/;"	s	object:tasks.3
labels	heaps/h3d/impl/Benchmark.hx	/^	var labels : Array<h2d.Text>;$/;"	v
lambdaL	heaps/h3d/shader/pbr/BDRF.hx	/^			var lambdaL = NdV * length(vec3(at * TdL, ab * BdL, NdL));$/;"	v
lambdaV	heaps/h3d/shader/pbr/BDRF.hx	/^			var lambdaV = NdL * length(vec3(at * TdV, ab * BdV, NdV));$/;"	v
lame	heaps/hxd/snd/Mp3Data.hx	/^		var lame = -1;$/;"	v
lang	heaps/hxd/System.flash.hx	/^	public static var lang(get, never) : String;$/;"	v
lang	heaps/hxd/System.hl.hx	/^	public static var lang(get, never) : String;$/;"	v
lang	heaps/hxd/System.hx	/^	public static var lang(get, never) : String;$/;"	v
lang	heaps/hxd/System.js.hx	/^	public static var lang(get, never) : String;$/;"	v
laserColor	Laser.hx	/^	var laserColor:Int;$/;"	v
last	heaps/h2d/Console.hx	/^		var last = '';$/;"	v
last	heaps/h2d/Flow.hx	/^		var last = properties.length - 1;$/;"	v
last	heaps/h2d/Graphics.hx	/^		var last = null;$/;"	v
last	heaps/h2d/Graphics.hx	/^		var last = pts.length - 1;$/;"	v
last	heaps/h2d/SpriteBatch.hx	/^	var last : BatchElement;$/;"	v
last	heaps/h2d/impl/BatchDrawState.hx	/^		var last = tail.next;$/;"	v
last	heaps/h3d/pass/Blur.hx	/^			var last = values[values.length-1];$/;"	v
last	heaps/h3d/scene/Graphics.hx	/^		var last = pts.length - 1;$/;"	v
last	heaps/h3d/scene/World.hx	/^		var last : WorldChunk = null;$/;"	v
last	heaps/hxd/SceneEvents.hx	/^			var last = null;$/;"	v
last	heaps/hxd/snd/OggData.hx	/^		var last = sampleStart + sampleCount;$/;"	v
last	heaps/hxsl/AgalOptim.hx	/^				var last = X;$/;"	v
last	heaps/hxsl/AgalOut.hx	/^					var last = X;$/;"	v
last	heaps/hxsl/Eval.hx	/^			var last = el.length - 1;$/;"	v
last	heaps/hxsl/GlslOut.hx	/^			var last = el2[el2.length - 1];$/;"	v
last	heaps/hxsl/HlslOut.hx	/^			var last = el2[el2.length - 1];$/;"	v
last	heaps/hxsl/ShaderList.hx	/^	var last : ShaderList;$/;"	v
lastActiveIndex	heaps/h3d/impl/GlDriver.hx	/^	var lastActiveIndex : Int = 0;$/;"	v
lastBoundsFrame	heaps/h3d/col/SkinCollider.hx	/^	var lastBoundsFrame = -1;$/;"	v
lastBrowseDir	heaps/hxd/File.hx	/^	static var lastBrowseDir : Dynamic;$/;"	v
lastBuffer	heaps/hxd/snd/Manager.hx	/^			var lastBuffer = null;$/;"	v
lastChange	heaps/h2d/TextInput.hx	/^	var lastChange = 0.;$/;"	v
lastClick	heaps/h2d/TextInput.hx	/^	var lastClick = 0.;$/;"	v
lastClickFrame	heaps/h2d/Interactive.hx	/^	var lastClickFrame : Int = -1;$/;"	v
lastClickFrame	heaps/h3d/scene/Interactive.hx	/^	var lastClickFrame : Int = -1;$/;"	v
lastDisc	heaps/h3d/pass/PassList.hx	/^	var lastDisc : PassObject;$/;"	v
lastEvent	heaps/h3d/anim/Animation.hx	/^	var lastEvent : Int;$/;"	v
lastEvent	heaps/h3d/mat/BigTexture.hx	/^	var lastEvent : Float;$/;"	v
lastFrame	heaps/h2d/Object.hx	/^	var lastFrame : Int;$/;"	v
lastFrame	heaps/h3d/col/SkinCollider.hx	/^	var lastFrame = -1;$/;"	v
lastFrame	heaps/h3d/mat/Texture.hx	/^	var lastFrame(get,set) : Int;$/;"	v
lastFrame	heaps/h3d/scene/Object.hx	/^	var lastFrame : Int;$/;"	v
lastFrame	heaps/h3d/scene/World.hx	/^	public var lastFrame : Int;$/;"	v
lastGC	heaps/hxd/impl/CacheAllocator.hx	/^	var lastGC = haxe.Timer.stamp();$/;"	v
lastIdxCurAttribTrue	heaps/h3d/impl/GlDriver.hx	/^		var lastIdxCurAttribTrue = 0;$/;"	v
lastIndex	heaps/h2d/Flow.hx	/^			var lastIndex = 0;$/;"	v
lastLogTime	heaps/h2d/Console.hx	/^	var lastLogTime : Float;$/;"	v
lastMove	heaps/h3d/parts/GpuParticles.hx	/^	var lastMove : Float = 0;$/;"	v
lastOK	heaps/hxd/clipper/Clipper.hx	/^		var lastOK = null;$/;"	v
lastPart	heaps/h3d/parts/GpuParticles.hx	/^		var lastPart = -1;$/;"	v
lastPlay	heaps/hxd/res/Sound.hx	/^	public var lastPlay(default, null) = 0.;$/;"	v
lastSamples	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	var lastSamples:Int;$/;"	v
lastStamp	heaps/hxd/snd/Channel.hx	/^	var lastStamp = 0.0;$/;"	v
lastStamp	heaps/hxd/snd/Effect.hx	/^	var lastStamp  : Float;$/;"	v
lastStop	heaps/hxd/snd/Manager.hx	/^	public var lastStop : Float;$/;"	v
lastTime	heaps/h3d/Engine.hx	/^	var lastTime : Float;$/;"	v
lastTime	heaps/h3d/scene/Trail.hx	/^		var lastTime = curTime - duration;$/;"	v
lastTime	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	var lastTime:Float;$/;"	v
lastTimeStamp	heaps/hxd/Timer.hx	/^	public static var lastTimeStamp(default,null) = haxe.Timer.stamp();$/;"	v
lastTouch	heaps/hxd/SceneEvents.hx	/^	var lastTouch = 0;$/;"	v
lastUpdate	heaps/hxd/snd/SoundGroup.hx	/^	var lastUpdate : Float;$/;"	v
lastUpdate	heaps/samples/Flows.hx	/^	var lastUpdate = 0.5;$/;"	v
lastUse	heaps/hxd/impl/CacheAllocator.hx	/^	public var lastUse : Float = haxe.Timer.stamp();$/;"	v
lastX	heaps/hxd/Window.flash.hx	/^	var lastX : Float = -1.;$/;"	v
lastY	heaps/hxd/Window.flash.hx	/^	var lastY : Float = -1.;$/;"	v
layer	heaps/h2d/CdbLevel.hx	/^			var layer = l.buildIntProperty(name);$/;"	v
layer	heaps/h2d/CdbLevel.hx	/^			var layer = l.buildStringProperty(name);$/;"	v
layer	heaps/h2d/KeyFrames.hx	/^		var layer = null;$/;"	v
layer	heaps/h3d/Engine.hx	/^	public var layer : Int;$/;"	v
layer	heaps/h3d/mat/Pass.hx	/^	public var layer : Int = 0;$/;"	v
layer	heaps/h3d/mat/PbrMaterial.hx	/^		var layer = 0;$/;"	v
layer	heaps/h3d/pass/Copy.hx	/^		@param var layer : Int;$/;"	v
layer	heaps/hxd/res/Image.hx	/^				var layer = Std.int(index \/ inf.mipLevels);$/;"	v
layerCount	heaps/h2d/Layers.hx	/^	var layerCount : Int;$/;"	v
layerCount	heaps/h3d/mat/Texture.hx	/^	public var layerCount(get, never) : Int;$/;"	v
layerCount	heaps/hxd/Pixels.hx	/^		var layerCount = levels[0].length;$/;"	v
layerCount	heaps/hxd/res/Image.hx	/^	public var layerCount(default,null) : Int = 1;$/;"	v
layerDepth	heaps/h3d/shader/Parallax.hx	/^				var layerDepth = 1 \/ numLayers;$/;"	v
layerIndex	heaps/h2d/CdbLevel.hx	/^	public var layerIndex(default,null) : Int;$/;"	v
layers	heaps/h2d/CdbLevel.hx	/^	public var layers : Array<LevelLayer>;$/;"	v
layers	heaps/h2d/CdbLevel.hx	/^	var layers : Array<LayerSpec>;$/;"	v
layers	heaps/h2d/KeyFrames.hx	/^	var layers : Array<KeyframesLayer>;$/;"	v
layers	heaps/h3d/mat/PbrMaterial.hx	/^		var layers : Array< { name : String, value : Int }> = hide.Ide.inst.currentConfig.get("materia/;"	v
layers	heaps/h3d/mat/TextureArray.hx	/^	var layers : Int;$/;"	v
layers	heaps/hxd/res/TiledMap.hx	/^		var layers = [];$/;"	v
layers	heaps/hxd/res/TiledMap.hx	/^	var layers : Array<TiledMapLayer>;$/;"	v
layersIndexes	heaps/h2d/Layers.hx	/^	var layersIndexes : Array<Int>;$/;"	v
layersMap	heaps/h2d/CdbLevel.hx	/^	var layersMap : Map<String, LevelLayer>;$/;"	v
layout	heaps/h2d/Flow.hx	/^	public var layout(default, set) : FlowLayout = Horizontal;$/;"	v
layout	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var layout : h2d.Flow.FlowLayout;$/;"	v
layout	heaps/h3d/anim/BufferAnimation.hx	/^			var layout = o.layout;$/;"	v
layout	heaps/h3d/anim/BufferAnimation.hx	/^	public var layout : haxe.EnumFlags<DataLayout>;$/;"	v
layout	heaps/h3d/impl/DirectXDriver.hx	/^			var layout = [], offset = 0;$/;"	v
layout	heaps/h3d/impl/DirectXDriver.hx	/^	public var layout : Layout;$/;"	v
layouts	heaps/h3d/prim/MeshPrimitive.hx	/^	var layouts : Map<Int,h3d.Buffer.BufferOffset>;$/;"	v
lb	heaps/hxd/clipper/Clipper.hx	/^			var lb:TEdge = m_CurrentLM.leftBound;$/;"	v
lcidMapping	heaps/hxd/System.hl.hx	/^	static var lcidMapping = [ "zh-TW" => "zh-TW", "zh-HK" => "zh-TW", "zh-MO" => "zh-TW" ];$/;"	v
ldir	heaps/h3d/pass/DirShadowMap.hx	/^			var ldir = slight == null ? null : @:privateAccess slight.getShadowDirection();$/;"	v
ldir	heaps/h3d/pass/SpotShadowMap.hx	/^		var ldir = absPos.front();$/;"	v
ldir	heaps/h3d/scene/pbr/SpotLight.hx	/^		var ldir = absPos.front();$/;"	v
ldir	heaps/samples/Quaternion.hx	/^		var ldir = new h3d.Vector( -1, -2, -5);$/;"	v
ldr	heaps/h3d/scene/pbr/Renderer.hx	/^		var ldr = ctx.getGlobal("ldrMap");$/;"	v
ldst	heaps/hxsl/AgalOut.hx	/^				var ldst = offset(dst, i);$/;"	v
left	heaps/h3d/scene/Trail.hx	/^		var left = new h3d.col.Point();$/;"	v
left	heaps/hxd/clipper/Rect.hx	/^	public var left : Int;$/;"	v
left	heaps/hxd/snd/Mp3Data.hx	/^		var left = buf.getChannelData(0);$/;"	v
left	heaps/hxd/snd/NativeChannel.hx	/^		var left = buffer.getChannelData(0);$/;"	v
left	heaps/hxd/snd/webaudio/Driver.hx	/^					var left = buffer.inst.getChannelData(0);$/;"	v
left	heaps/samples/Pad.hx	/^	var left : h2d.Graphics;$/;"	v
leftBound	heaps/hxd/clipper/Clipper.hx	/^	public var leftBound : TEdge;$/;"	v
leftBoundIsForward	heaps/hxd/clipper/Clipper.hx	/^		var leftBoundIsForward : Bool;$/;"	v
leftBreakPoint	heaps/h2d/col/Voronoi.hx	/^	function leftBreakPoint(arc:Beachsection, directrix:Float) {$/;"	f
leftHand	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var leftHand : Bool;$/;"	v
leftHandConvert	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function leftHandConvert() {$/;"	f
leftMargin	heaps/h2d/HtmlText.hx	/^			var leftMargin = info.width;$/;"	v
leftSave	heaps/h3d/scene/Trail.hx	/^		var leftSave = up.cross(delta);$/;"	v
left_highest	heaps/hxd/poly2tri/Basin.hx	/^	public var left_highest:Bool;$/;"	v
left_node	heaps/hxd/poly2tri/Basin.hx	/^	public var left_node:Node;$/;"	v
legalize	heaps/hxd/poly2tri/Sweep.hx	/^	public function legalize(t:Triangle):Bool$/;"	f
legalize	heaps/hxd/poly2tri/Triangle.hx	/^	public function legalize(opoint:Point, npoint:Point = null)$/;"	f
len	heaps/h2d/CdbLevel.hx	/^			var len = data.length;$/;"	v
len	heaps/h2d/HtmlText.hx	/^				var len = text.length;$/;"	v
len	heaps/h2d/TextInput.hx	/^			var len = text.length;$/;"	v
len	heaps/h2d/col/IPolygon.hx	/^		var len = points.length;$/;"	v
len	heaps/h2d/col/Polygon.hx	/^		var len = points.length;$/;"	v
len	heaps/h2d/col/Polygon.hx	/^	   var len = k + 1;$/;"	v
len	heaps/h3d/Matrix.hx	/^		var len = Math.invSqrt(xx + yy + zz);$/;"	v
len	heaps/h3d/Quat.hx	/^		var len = x * x + y * y + z * z + w * w;$/;"	v
len	heaps/h3d/col/Plane.hx	/^		var len = Math.invSqrt(nx * nx + ny * ny + nz * nz);$/;"	v
len	heaps/h3d/impl/DirectXDriver.hx	/^						var len = cache.readInt32();$/;"	v
len	heaps/h3d/pass/DirShadowMap.hx	/^		var len = buffer.readInt32();$/;"	v
len	heaps/h3d/pass/PointShadowMap.hx	/^			var len = buffer.readInt32();$/;"	v
len	heaps/h3d/pass/SpotShadowMap.hx	/^		var len = buffer.readInt32();$/;"	v
len	heaps/h3d/prim/BigPrimitive.hx	/^					var len = pt.lengthSq();$/;"	v
len	heaps/h3d/scene/World.hx	/^						var len = tlen * hxd.Math.invSqrt(n.lengthSq());$/;"	v
len	heaps/h3d/scene/World.hx	/^					var len = hxd.Math.invSqrt(n.lengthSq());$/;"	v
len	heaps/hxd/FloatBuffer.hx	/^	var len : Int;$/;"	v
len	heaps/hxd/IndexBuffer.hx	/^	var len : Int;$/;"	v
len	heaps/hxd/Math.hx	/^		var len = a.length;$/;"	v
len	heaps/hxd/Rand.hx	/^		var len = a.length;$/;"	v
len	heaps/hxd/clipper/Clipper.hx	/^			var len = m_srcPoly.length;$/;"	v
len	heaps/hxd/fmt/fbx/Parser.hx	/^				var len:Int = getInt32();$/;"	v
len	heaps/hxd/fmt/grd/Reader.hx	/^		var len  = i.readInt32(); if (len == 0) len = 4;$/;"	v
len	heaps/hxd/fmt/grd/Reader.hx	/^		var len = i.readInt32();$/;"	v
len	heaps/hxd/fmt/hbson/Reader.hx	/^			var len = code == 12 ? input.readByte() : input.readInt32();$/;"	v
len	heaps/hxd/fmt/hdr/Reader.hx	/^						var len = bytes.get(dataPos++);$/;"	v
len	heaps/hxd/net/Socket.hx	/^	var len : Int = 0;$/;"	v
len	heaps/hxd/net/Socket.hx	/^	var len : Int;$/;"	v
len	heaps/hxd/res/Image.hx	/^					var len = f.readUInt16();$/;"	v
len	heaps/hxd/snd/Mp3Data.hx	/^				var len = format.mp3.Tools.getSampleDataSizeHdr(header);$/;"	v
len	heaps/hxsl/CacheFile.hx	/^			var len = f.readByte();$/;"	v
len	heaps/hxsl/CacheFile.hx	/^		var len = f.readByte();$/;"	v
len	heaps/hxsl/CacheFileBuilder.hx	/^					var len = data.get(3);$/;"	v
len	heaps/hxsl/Dce.hx	/^			var len = affect.length;$/;"	v
len	heaps/hxsl/Serializer.hx	/^		var len = readVarInt();$/;"	v
lenId	heaps/hxd/fmt/blend/Data.hx	/^				var lenId = readChars(4); \/\/ TLEN$/;"	v
lenSq	heaps/h2d/col/RoundRect.hx	/^	var lenSq : Float;$/;"	v
lenSq	heaps/h2d/col/Segment.hx	/^	public var lenSq : Float;$/;"	v
lenSq	heaps/h3d/col/Seg.hx	/^	public var lenSq : Float;$/;"	v
length	heaps/h2d/col/IPoint.hx	/^	public inline function length() : Float {$/;"	f
length	heaps/h2d/col/IPolygon.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/h2d/col/IPolygons.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/h2d/col/Line.hx	/^	public inline function length():Float {$/;"	f
length	heaps/h2d/col/Point.hx	/^	public inline function length() : Float {$/;"	f
length	heaps/h2d/col/Polygon.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/h2d/col/Polygons.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/h2d/col/Segments.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/h2d/impl/PointApi.hx	/^	function length() : Float;$/;"	f
length	heaps/h3d/Quat.hx	/^	public inline function length() {$/;"	f
length	heaps/h3d/Vector.hx	/^	public inline function length() {$/;"	f
length	heaps/h3d/col/IPoint.hx	/^	public inline function length() {$/;"	f
length	heaps/h3d/col/Point.hx	/^	public inline function length() {$/;"	f
length	heaps/hxd/BytesBuffer.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/hxd/FloatBuffer.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/hxd/FloatBuffer.hx	/^	public var length(get, set) : Int;$/;"	v
length	heaps/hxd/IndexBuffer.hx	/^	public var length(get, never) : Int;$/;"	v
length	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var length = bytes.readInt32();$/;"	v
length	heaps/hxd/fmt/spine/Data.hx	/^	public var length : Float;$/;"	v
length	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var length : Float;$/;"	v
length	heaps/hxd/res/NanoJpeg.hx	/^	var length : Int;$/;"	v
length	heaps/hxd/snd/Manager.hx	/^		var length = dat.samples * dat.getBytesPerSample();$/;"	v
lengthScale	heaps/h3d/shader/LineShader.hx	/^		@param var lengthScale : Float;$/;"	v
lengthSq	heaps/h2d/col/IPoint.hx	/^	public inline function lengthSq() : Int {$/;"	f
lengthSq	heaps/h2d/col/Point.hx	/^	public inline function lengthSq() {$/;"	f
lengthSq	heaps/h2d/impl/PointApi.hx	/^	function lengthSq() : Unit;$/;"	f
lengthSq	heaps/h3d/Quat.hx	/^	public inline function lengthSq() {$/;"	f
lengthSq	heaps/h3d/Vector.hx	/^	public inline function lengthSq() {$/;"	f
lengthSq	heaps/h3d/col/IPoint.hx	/^	public inline function lengthSq() {$/;"	f
lengthSq	heaps/h3d/col/Point.hx	/^	public inline function lengthSq() {$/;"	f
lerp	heaps/h2d/col/Point.hx	/^	public inline function lerp( a : Point, b : Point, k : Float ) {$/;"	f
lerp	heaps/h2d/impl/PointApi.hx	/^	function lerp( p1 : Point, p2 : Point, k : Float ) : Void;$/;"	f
lerp	heaps/h3d/Quat.hx	/^	public inline function lerp( q1 : Quat, q2 : Quat, v : Float, nearest = false ) {$/;"	f
lerp	heaps/h3d/Vector.hx	/^	public inline function lerp( v1 : Vector, v2 : Vector, k : Float ) {$/;"	f
lerp	heaps/h3d/col/Point.hx	/^	public inline function lerp( p1 : Point, p2 : Point, k : Float ) {$/;"	f
lerp	heaps/hxd/Math.hx	/^	public inline static function lerp(a:Float, b:Float, k:Float) {$/;"	f
lerpTime	heaps/hxd/Math.hx	/^	public inline static function lerpTime(a:Float, b:Float, k:Float, dt:Float) {$/;"	f
lerpValue	heaps/h3d/anim/BufferAnimation.hx	/^			inline function lerpValue() {$/;"	f
lessThanOrEqualWithepsilon	heaps/h2d/col/Voronoi.hx	/^	inline function lessThanOrEqualWithepsilon(a:Float,b:Float) return a-b<epsilon;$/;"	f
lessThanWithepsilon	heaps/h2d/col/Voronoi.hx	/^	inline function lessThanWithepsilon(a:Float,b:Float) return b-a>epsilon;$/;"	f
letterSpacing	heaps/h2d/Text.hx	/^	public var letterSpacing(default, set) : Float = 0;$/;"	v
letterSpacing	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var letterSpacing = 0;$/;"	v
level	heaps/h2d/CdbLevel.hx	/^	public var level : CdbLevel;$/;"	v
level	heaps/h2d/CdbLevel.hx	/^	public var level(default, null) : LevelSpec;$/;"	v
level	heaps/h2d/Scene.hx	/^		var level = getLevel(i);$/;"	v
level	heaps/hxd/Pixels.hx	/^			var level = levels[i];$/;"	v
levels	heaps/h3d/impl/Stage3dDriver.hx	/^		var levels = 0;$/;"	v
levels	heaps/hxd/Pixels.hx	/^		var levels : Array<Array<Pixels>> = [];$/;"	v
levelsProps	heaps/h2d/CdbLevel.hx	/^	var levelsProps : cdb.Data.LevelsProps;$/;"	v
lfocx	heaps/h2d/col/Voronoi.hx	/^		var lfocx = point.x,$/;"	v
lh	heaps/hxd/Pixels.hx	/^			var lh = level[0].height;$/;"	v
lib	heaps/h3d/prim/HMDModel.hx	/^	var lib : hxd.fmt.hmd.Library;$/;"	v
lib	heaps/h3d/prim/ModelCache.hx	/^		var lib = m.lib;$/;"	v
lib	heaps/h3d/scene/World.hx	/^		var lib = r.toHmd();$/;"	v
lib	heaps/hxd/fmt/fbx/Geometry.hx	/^	var lib : BaseLibrary;$/;"	v
lib	heaps/hxsl/CacheFileBuilder.hx	/^				var lib = new format.hl.Reader().read(new haxe.io.BytesInput(sys.io.File.getBytes(getArg()))/;"	v
lib	heaps/samples/Generator.hx	/^					var lib = r_libs.matched(1);$/;"	v
license	heaps/haxelib.json	/^	"license" : "BSD",$/;"	s
lid	heaps/h3d/impl/GlDriver.hx	/^			var lid = Std.parseInt(log.substr(9));$/;"	v
lid	heaps/tools/hxsl/Main.hx	/^					var lid = Std.parseInt(log.substr(9));$/;"	v
life	heaps/h2d/Particles.hx	/^		var life = g.life * (1 + srand() * g.lifeRand);$/;"	v
life	heaps/h2d/Particles.hx	/^	public var life : Float;$/;"	v
life	heaps/h2d/Particles.hx	/^	public var life(default, set) : Float		= 1;$/;"	v
life	heaps/h3d/parts/Data.hx	/^	public var life : Value;$/;"	v
life	heaps/h3d/parts/GpuParticles.hx	/^		var life = g.life * (1 + srand() * g.lifeRand), time = -rand() * life * (1 - g.emitSync) - g.e/;"	v
life	heaps/h3d/parts/GpuParticles.hx	/^		var life = life * (1 + lifeRand);$/;"	v
life	heaps/h3d/parts/GpuParticles.hx	/^	public var life : Float;$/;"	v
life	heaps/h3d/parts/GpuParticles.hx	/^	public var life(default, set) : Float		= 1;$/;"	v
life	heaps/h3d/shader/GpuParticle.hx	/^			var life : Float;$/;"	v
lifeRand	heaps/h2d/Particles.hx	/^	public var lifeRand(default, set) : Float	= 0;$/;"	v
lifeRand	heaps/h3d/parts/GpuParticles.hx	/^	public var lifeRand(default, set) : Float	= 0;$/;"	v
lifeTimeFactor	heaps/h3d/parts/Particle.hx	/^	public var lifeTimeFactor : Float;$/;"	v
light	heaps/h3d/mat/Material.hx	/^	var light : Bool;$/;"	v
light	heaps/h3d/parts/Data.hx	/^	public var light : Value;$/;"	v
light	heaps/h3d/parts/Emitter.hx	/^		var light = p.eval(state.light, p.time);$/;"	v
light	heaps/h3d/pass/Shadows.hx	/^	var light : h3d.scene.Light;$/;"	v
light	heaps/h3d/scene/pbr/LightSystem.hx	/^			var light = hxd.impl.Api.downcast(plight, h3d.scene.pbr.Light);$/;"	v
light	heaps/h3d/scene/pbr/LightSystem.hx	/^		var light = hxd.impl.Api.downcast(obj, h3d.scene.pbr.Light);$/;"	v
light	heaps/h3d/scene/pbr/Renderer.hx	/^		var light = @:privateAccess ctx.lights;$/;"	v
light	heaps/samples/Base3D.hx	/^		var light = new h3d.scene.fwd.DirLight(new h3d.Vector(0.5, 0.5, -0.5), s3d);$/;"	v
light	heaps/samples/Interactive.hx	/^	var light : h3d.scene.fwd.DirLight;$/;"	v
light	heaps/samples/Lights.hx	/^		var light = lights[curLight];$/;"	v
light	heaps/samples/Pbr.hx	/^		var light = new h3d.scene.pbr.PointLight(s3d);$/;"	v
light	heaps/samples/Polygons.hx	/^		var light = new h3d.scene.fwd.DirLight(new h3d.Vector( 0.3, -0.4, -0.9), s3d);$/;"	v
light	heaps/samples/Stencil.hx	/^		var light = new h3d.scene.fwd.DirLight(new h3d.Vector(-0.5, -0.5, -0.5), s3d);$/;"	v
lightAccumulation	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightAccumulation = vec3(0);$/;"	v
lightBuffer	heaps/h3d/scene/pbr/LightSystem.hx	/^	public var lightBuffer : h3d.scene.pbr.LightBuffer;$/;"	v
lightCamera	heaps/h3d/pass/Shadows.hx	/^	var lightCamera : h3d.Camera;$/;"	v
lightCameraCenter	heaps/h3d/scene/Object.hx	/^	public var lightCameraCenter(get, set) : Bool;$/;"	v
lightColor	heaps/h3d/shader/AmbientLight.hx	/^		var lightColor : Vec3;$/;"	v
lightColor	heaps/h3d/shader/DirLight.hx	/^		var lightColor : Vec3;$/;"	v
lightColor	heaps/h3d/shader/PointLight.hx	/^		var lightColor : Vec3;$/;"	v
lightColor	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightColor = lightInfos[i].rgb;$/;"	v
lightColor	heaps/h3d/shader/pbr/Light.hx	/^		@param var lightColor = vec3(0.5, 0.5, 0.5);$/;"	v
lightCount	heaps/h3d/scene/fwd/LightSystem.hx	/^	var lightCount : Int;$/;"	v
lightDir	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightDir = lightInfos[i+1].xyz;$/;"	v
lightDir	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightDir = lightInfos[i+2].xyz;$/;"	v
lightDir	heaps/h3d/shader/pbr/Light.hx	/^		@param var lightDir : Vec3;$/;"	v
lightInfos	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var lightInfos : hxd.FloatBuffer;$/;"	v
lightInfos	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var lightInfos : Buffer<Vec4, BUFFER_SIZE>;$/;"	v
lightInit	heaps/h3d/pass/Default.hx	/^		var lightInit = false;$/;"	v
lightPixelColor	heaps/h3d/shader/AmbientLight.hx	/^		var lightPixelColor : Vec3;$/;"	v
lightPixelColor	heaps/h3d/shader/DirLight.hx	/^		var lightPixelColor : Vec3;$/;"	v
lightPixelColor	heaps/h3d/shader/PointLight.hx	/^		var lightPixelColor : Vec3;$/;"	v
lightPos	heaps/h3d/shader/PointShadow.hx	/^		@param var lightPos : Vec3;$/;"	v
lightPos	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var lightPos = lightInfos[i+1].rgb;$/;"	v
lightPos	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightPos = lightInfos[i+1].rgb;$/;"	v
lightPos	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var lightPos = lightInfos[i+1].xyz;$/;"	v
lightPos	heaps/h3d/shader/pbr/Light.hx	/^		@param var lightPos : Vec3;$/;"	v
lightPosition	heaps/h3d/shader/PointLight.hx	/^		@param var lightPosition : Vec3;$/;"	v
lightProj	heaps/h3d/scene/pbr/SpotLight.hx	/^	var lightProj : h3d.Camera;$/;"	v
lightProj	heaps/h3d/shader/pbr/Light.hx	/^		@param var lightProj : Mat4;$/;"	v
lightSystem	heaps/h3d/scene/RenderContext.hx	/^	public var lightSystem : h3d.scene.LightSystem;$/;"	v
lightSystem	heaps/h3d/scene/Scene.hx	/^	public var lightSystem : LightSystem;$/;"	v
lighting	heaps/h3d/scene/pbr/Renderer.hx	/^	function lighting() {$/;"	f
lightingShaders	heaps/h3d/scene/pbr/LightSystem.hx	/^	public var lightingShaders : Array<hxsl.Shader> = [];$/;"	v
lights	heaps/h3d/scene/RenderContext.hx	/^	var lights : Light;$/;"	v
lights	heaps/h3d/scene/World.hx	/^	public var lights : Bool;$/;"	v
lights	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var lights = [];$/;"	v
lights	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var lights = sortLights(ctx);$/;"	v
lights	heaps/samples/Lights.hx	/^	var lights : Array<h3d.scene.pbr.Light>;$/;"	v
lights	heaps/samples/PointLights.hx	/^	var lights : Array<h3d.scene.fwd.PointLight>;$/;"	v
lin	heaps/hxd/res/NanoJpeg.hx	/^		var lin = new FastBytes(c.pixels);$/;"	v
line	heaps/h2d/domkit/Style.hx	/^				var line = txt.substr(0,w.pmin).split("\\n").length;$/;"	v
line	heaps/h3d/impl/DirectXDriver.hx	/^					var line = Std.parseInt(r.matched(1));$/;"	v
line	heaps/h3d/impl/GlDriver.hx	/^			var line = lid == null ? null : shader.code.split("\\n")[lid - 1];$/;"	v
line	heaps/hxd/BitmapData.hx	/^	public function line( x0 : Int, y0 : Int, x1 : Int, y1 : Int, color : Int ) {$/;"	f
line	heaps/hxd/fmt/fbx/Parser.hx	/^	var line : Int;$/;"	v
line	heaps/hxd/fmt/hdr/Reader.hx	/^			var line = f.readLine();$/;"	v
line	heaps/hxd/res/Atlas.hx	/^					var line = StringTools.trim(lines.shift());$/;"	v
line	heaps/hxd/res/Atlas.hx	/^				var line = StringTools.trim(lines.shift()).split(": ");$/;"	v
line	heaps/hxd/res/Atlas.hx	/^				var line = StringTools.trim(lines.shift());$/;"	v
line	heaps/hxd/res/Atlas.hx	/^			var line = StringTools.trim(lines.shift());$/;"	v
line	heaps/hxd/res/BDFFont.hx	/^		var line : String;$/;"	v
line	heaps/samples/CollideCheck.hx	/^	var line : h2d.Graphics;$/;"	v
line	heaps/tools/hxsl/Main.hx	/^					var line = lid == null ? null : code.split("\\n")[lid - 1];$/;"	v
lineA	heaps/h2d/Graphics.hx	/^	var lineA : Float;$/;"	v
lineB	heaps/h2d/Graphics.hx	/^	var lineB : Float;$/;"	v
lineBreak	heaps/h2d/Flow.hx	/^	public var lineBreak = false;$/;"	v
lineBreak	heaps/h2d/Text.hx	/^	public var lineBreak(default,set) : Bool = true;$/;"	v
lineBreak	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var lineBreak : Bool;$/;"	v
lineFont	heaps/h2d/HtmlText.hx	/^		inline function lineFont() {$/;"	f
lineG	heaps/h2d/Graphics.hx	/^	var lineG : Float;$/;"	v
lineHeight	heaps/h2d/Flow.hx	/^	public var lineHeight(default, set) : Null<Int>;$/;"	v
lineHeight	heaps/h2d/Font.hx	/^	public var lineHeight(default, null) : Float;$/;"	v
lineHeightMode	heaps/h2d/HtmlText.hx	/^	public var lineHeightMode(default,set) : LineHeightMode = Accurate;$/;"	v
lineIntersect	heaps/h2d/col/Circle.hx	/^	public inline function lineIntersect(p1 : h2d.col.Point, p2:h2d.col.Point) : Array<Point> {$/;"	f
lineIntersection	heaps/h2d/col/Segment.hx	/^	public inline function lineIntersection( r : h2d.col.Ray, ?pt : Point ) {$/;"	f
lineR	heaps/h2d/Graphics.hx	/^	var lineR : Float;$/;"	v
lineShader	heaps/h3d/scene/Graphics.hx	/^	var lineShader : h3d.shader.LineShader;$/;"	v
lineSize	heaps/h2d/Graphics.hx	/^	var lineSize : Float;$/;"	v
lineSize	heaps/h3d/scene/Graphics.hx	/^	var lineSize = 0.;$/;"	v
lineSize	heaps/hxd/fmt/tiff/Writer.hx	/^		var lineSize = pix.width * 4;$/;"	v
lineSpacing	heaps/h2d/Text.hx	/^	public var lineSpacing(default,set) : Float = 0;$/;"	v
lineSpacing	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var lineSpacing = 0;$/;"	v
lineStyle	heaps/h2d/Graphics.hx	/^	public function lineStyle( size : Float = 0, color = 0, alpha = 1. ) {$/;"	f
lineStyle	heaps/h3d/scene/Graphics.hx	/^	public function lineStyle( size = 0., color = 0, alpha = 1. ) {$/;"	f
lineTo	heaps/h2d/Graphics.hx	/^	public inline function lineTo( x : Float, y : Float ) {$/;"	f
lineTo	heaps/h3d/scene/Graphics.hx	/^	public function lineTo( x : Float, y : Float, z : Float ) {$/;"	f
linear	heaps/h2d/filter/Blur.hx	/^	public var linear(get, set) : Float;$/;"	v
linear	heaps/h3d/pass/Blur.hx	/^	public var linear(default, set) : Float;$/;"	v
linear	heaps/hxd/Perlin.hx	/^	inline function linear( a : Float, b : Float, k : Float ) : Float {$/;"	f
linenum	heaps/hxd/res/BDFFont.hx	/^		var linenum = 0;$/;"	v
lines	heaps/h2d/Text.hx	/^		var lines = [], restPos = 0;$/;"	v
lines	heaps/h2d/Text.hx	/^		var lines = new Array<Float>();$/;"	v
lines	heaps/h2d/domkit/Style.hx	/^		var lines = [];$/;"	v
lines	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var lines = bytes.toString().split("\\n");$/;"	v
lines	heaps/hxd/res/Atlas.hx	/^		var lines = entry.getText().split("\\n");$/;"	v
lines	heaps/hxd/res/BDFFont.hx	/^		var lines = text.split("\\n");$/;"	v
link	heaps/hxsl/Cache.hx	/^	public function link( shaders : hxsl.ShaderList, batchMode : Bool ) {$/;"	f
link	heaps/hxsl/CacheFile.hx	/^		var link = getLinkShader([Value("output.frag")]);$/;"	v
link	heaps/hxsl/Dce.hx	/^	function link( v : TVar, writeTo : Array<VarDeps> ) {$/;"	f
link	heaps/hxsl/Linker.hx	/^	public function link( shadersData : Array<ShaderData> ) : ShaderData {$/;"	f
linkCache	heaps/hxsl/Cache.hx	/^	var linkCache : SearchMap;$/;"	v
linkMap	heaps/hxsl/CacheFile.hx	/^		var linkMap = new Map();$/;"	v
linkShaders	heaps/hxsl/Cache.hx	/^	var linkShaders : Map<String, Shader>;$/;"	v
linked	heaps/hxsl/Cache.hx	/^	public var linked : RuntimeShader;$/;"	v
linked	heaps/tools/hxsl/Main.hx	/^			var linked = linker.link([for( s in shaders ) s.inst.shader]);$/;"	v
linker	heaps/hxsl/Cache.hx	/^		var linker = new hxsl.Linker(batchMode);$/;"	v
linker	heaps/tools/hxsl/Main.hx	/^			var linker = new hxsl.Linker();$/;"	v
linkers	heaps/hxsl/CacheFile.hx	/^	var linkers : Array<{ shader : Shader, vars : Array<hxsl.Output> }> = [];$/;"	v
list	heaps/hxd/fmt/grd/Reader.hx	/^		var list = cast(parseValue(i), Array<Dynamic>);$/;"	v
listDirectory	heaps/hxd/File.hx	/^	public static function listDirectory( path : String ) {$/;"	f
listener	heaps/hxd/snd/Manager.hx	/^	public var listener : Listener;$/;"	v
listener	heaps/samples/Sound.hx	/^			var listener = hxd.snd.Manager.get().listener;$/;"	v
listener3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listener3f(param : Int, value1 : F32, value2 : F32, value3 : F32) {}$/;"	f
listener3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listener3i(param : Int, value1 : Int, value2 : Int, value3 : Int) {}$/;"	f
listenerf	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listenerf(param : Int, value  : F32)$/;"	f
listenerfv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listenerfv(param : Int, values : Bytes) {}$/;"	f
listeneri	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listeneri(param : Int, value  : Int) {}$/;"	f
listeneriv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function listeneriv(param : Int, values : Bytes) {}$/;"	f
littleEndian	heaps/hxd/fmt/blend/Data.hx	/^	public var littleEndian:Bool;$/;"	v
live	heaps/hxsl/AgalOptim.hx	/^	public var live : Array<Int>;$/;"	v
ll	heaps/h3d/scene/fwd/LightSystem.hx	/^			var ll = ctx.lights;$/;"	v
ll	heaps/h3d/scene/fwd/LightSystem.hx	/^		var ll = ctx.lights, prev : h3d.scene.Light = null;$/;"	v
lm	heaps/hxd/clipper/Clipper.hx	/^		var lm = m_MinimaList;$/;"	v
load	heaps/h2d/Graphics.hx	/^	public function load(x, y, r, g, b, a ){$/;"	f
load	heaps/h2d/Particles.hx	/^	public function load( o : Dynamic, ?resourcePath : String ) {$/;"	f
load	heaps/h2d/Particles.hx	/^	public function load( version : Int, o : Dynamic ) {$/;"	f
load	heaps/h2d/Video.hx	/^	public function load( path : String, ?onReady : Void -> Void ) {$/;"	f
load	heaps/h2d/col/Bounds.hx	/^	public function load( b : Bounds ) {$/;"	f
load	heaps/h2d/col/IBounds.hx	/^	public function load( b : IBounds ) {$/;"	f
load	heaps/h2d/col/IPoint.hx	/^	public inline function load( p : IPoint ) {$/;"	f
load	heaps/h2d/col/Point.hx	/^	public inline function load( p : h2d.col.Point ) {$/;"	f
load	heaps/h2d/domkit/Style.hx	/^	public function load( r : hxd.res.Resource, watchChanges = true ) {$/;"	f
load	heaps/h2d/impl/PointApi.hx	/^	function load( p : Point ) : Void;$/;"	f
load	heaps/h3d/Camera.hx	/^	public function load( cam : Camera ) {$/;"	f
load	heaps/h3d/Matrix.hx	/^	public function load( m : Matrix ) {$/;"	f
load	heaps/h3d/Quat.hx	/^	public inline function load( q : Quat ) {$/;"	f
load	heaps/h3d/Vector.hx	/^	public inline function load(v : Vector) {$/;"	f
load	heaps/h3d/col/Bounds.hx	/^	public function load( b : Bounds ) {$/;"	f
load	heaps/h3d/col/IPoint.hx	/^	public inline function load( p : IPoint ) {$/;"	f
load	heaps/h3d/col/Plane.hx	/^	public inline function load( p : Plane ) {$/;"	f
load	heaps/h3d/col/Point.hx	/^	public inline function load( p : Point ) {$/;"	f
load	heaps/h3d/col/Polygon.hx	/^	public inline function load( tp : TriPlane ) {$/;"	f
load	heaps/h3d/col/Ray.hx	/^	public inline function load( r : Ray ) {$/;"	f
load	heaps/h3d/col/Sphere.hx	/^	public inline function load(sx=0., sy=0., sz=0., sr=0.) {$/;"	f
load	heaps/h3d/mat/BigTexture.hx	/^			function load() {$/;"	f
load	heaps/h3d/mat/Pass.hx	/^	public function load( p : Pass ) {$/;"	f
load	heaps/h3d/mat/Stencil.hx	/^	public function load(s : Stencil) {$/;"	f
load	heaps/h3d/parts/Data.hx	/^	public static function load( b : haxe.io.Bytes, loadTexture : String -> h2d.Tile ) {$/;"	f
load	heaps/h3d/parts/GpuParticles.hx	/^	public function load( _o : Dynamic, ?resourcePath : String ) {$/;"	f
load	heaps/h3d/parts/GpuParticles.hx	/^	public function load( version : Int, o : Dynamic ) {$/;"	f
load	heaps/h3d/pass/PassList.hx	/^	public inline function load( p : PassObject ) {$/;"	f
load	heaps/h3d/scene/Trail.hx	/^	public function load( obj : Dynamic ) {$/;"	f
load	heaps/hxd/File.hx	/^	function load( onReady : haxe.io.Bytes -> Void ) : Void;$/;"	f
load	heaps/hxd/File.hx	/^	public static function load( path : String, onLoad : haxe.io.Bytes -> Void, ?onError : String -/;"	f
load	heaps/hxd/Res.hx	/^	public static function load(name:String) {$/;"	f
load	heaps/hxd/Save.hx	/^	public static function load<T>( ?defValue : T, ?name = "save", checkSum = false ) : T {$/;"	f
load	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function load( root : FbxNode ) {$/;"	f
load	heaps/hxd/fmt/hmd/Library.hx	/^	public function load( format : Array<GeometryFormat>, ?defaults : Array<h3d.Vector>, modelIndex/;"	f
load	heaps/hxd/fmt/spine/Library.hx	/^	public function load( j : JsonData ) {$/;"	f
load	heaps/hxd/fs/BytesFileSystem.hx	/^	override function load( ?onReady : Void -> Void ) : Void {$/;"	f
load	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function load( ?onReady : Void -> Void ) : Void {$/;"	f
load	heaps/hxd/fs/FileEntry.hx	/^	public function load( ?onReady : Void -> Void ) : Void { if( !isAvailable ) throw "load() not i/;"	f
load	heaps/hxd/fs/LocalFileSystem.hx	/^	override function load( ?onReady : Void -> Void ) : Void {$/;"	f
load	heaps/hxd/fs/MultiFileSystem.hx	/^	override function load( ?onReady : Void -> Void ) : Void return el[0].load(onReady);$/;"	f
load	heaps/hxd/impl/AsyncLoader.hx	/^	public function load( img : hxd.res.Image ) : Void;$/;"	f
load	heaps/hxd/impl/AsyncLoader.hx	/^	public function load(img) {$/;"	f
load	heaps/hxd/net/BinaryLoader.hx	/^	public function load() {$/;"	f
load	heaps/hxd/res/DynamicText.hx	/^			public static function load( data : String ) {$/;"	f
load	heaps/hxd/res/Image.hx	/^			function load() {$/;"	f
load	heaps/hxd/res/Loader.hx	/^	public function load( path : String ) : Any {$/;"	f
load	heaps/hxd/snd/Data.hx	/^	public function load( onEnd : Void -> Void ) {$/;"	f
load	heaps/hxd/snd/LoadingData.hx	/^	override public function load(onEnd:Void->Void) {$/;"	f
load	heaps/hxd/snd/Mp3Data.hx	/^	override public function load(onEnd:Void->Void) {$/;"	f
load	heaps/hxsl/CacheFile.hx	/^	function load() {$/;"	f
load	heaps/hxsl/CacheFileBuilder.hx	/^	override function load() {$/;"	f
loadAnimation	heaps/h3d/prim/ModelCache.hx	/^	public function loadAnimation( anim : hxd.res.Model, ?name : String, ?forModel : hxd.res.Model /;"	f
loadAnimation	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function loadAnimation( ?animName : String, ?root : FbxNode, ?lib : BaseLibrary ) : h3d./;"	f
loadAnimation	heaps/hxd/fmt/hmd/Library.hx	/^	public function loadAnimation( ?name : String ) : h3d.anim.Animation {$/;"	f
loadAnimation	heaps/hxd/fmt/spine/Library.hx	/^	function loadAnimation( j : JAnimation ) {$/;"	f
loadAssets	heaps/hxd/App.hx	/^	function loadAssets( onLoaded : Void->Void ) {$/;"	f
loadAttachment	heaps/hxd/fmt/spine/Library.hx	/^	function loadAttachment( j : JAttachment ) {$/;"	f
loadBitmap	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function loadBitmap( onLoaded ) {$/;"	f
loadBitmap	heaps/hxd/fs/BytesFileSystem.hx	/^	override function loadBitmap( onLoaded : LoadedBitmap -> Void ) : Void {$/;"	f
loadBitmap	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function loadBitmap( onLoaded : LoadedBitmap -> Void ) : Void {$/;"	f
loadBitmap	heaps/hxd/fs/FileEntry.hx	/^	public function loadBitmap( onLoaded : LoadedBitmap -> Void ) : Void { throw "loadBitmap() not /;"	f
loadBitmap	heaps/hxd/fs/LocalFileSystem.hx	/^	override function loadBitmap( onLoaded : hxd.fs.LoadedBitmap -> Void ) : Void {$/;"	f
loadBitmap	heaps/hxd/fs/MultiFileSystem.hx	/^	override function loadBitmap( onLoaded : LoadedBitmap -> Void ) : Void return el[0].loadBitmap(/;"	f
loadCache	heaps/hxd/res/Loader.hx	/^	public function loadCache<T:hxd.res.Resource>( path : String, c : Class<T> ) : T {$/;"	f
loadCacheData	heaps/h3d/impl/DirectXDriver.hx	/^				function loadCacheData( file : String ) {$/;"	f
loadCollider	heaps/h3d/prim/ModelCache.hx	/^	public function loadCollider( res : hxd.res.Model ) {$/;"	f
loadConfig	heaps/hxd/fs/FileConverter.hx	/^	function loadConfig( dir : String ) : ConvertConfig {$/;"	f
loadConvert	heaps/hxd/fs/FileConverter.hx	/^	function loadConvert( name : String ) {$/;"	f
loadCount	heaps/h3d/mat/BigTexture.hx	/^	var loadCount : Int;$/;"	v
loadData	heaps/hxd/Save.hx	/^	static function loadData( data : String, checkSum : Bool, defValue : Dynamic ) : Dynamic {$/;"	f
loadExtensions	heaps/hxd/snd/openal/Emulator.hx	/^	public static function loadExtensions() {}$/;"	f
loadExtensions	heaps/hxd/snd/openal/Emulator.hx	/^	public static function loadExtensions(alDevice : Device) { }$/;"	f
loadFile	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function loadFile( data : Bytes ) {$/;"	f
loadFrom	heaps/h2d/ZGroup.hx	/^	public function loadFrom( ctx : RenderContext ) {$/;"	f
loadFromCamera	heaps/h3d/scene/CameraController.hx	/^	public function loadFromCamera( animate = false ) {$/;"	f
loadLayer	heaps/h2d/CdbLevel.hx	/^	function loadLayer( ldat : LayerSpec ) : LevelLayer {$/;"	f
loadLibrary	heaps/h3d/prim/ModelCache.hx	/^	public function loadLibrary(res) : hxd.fmt.hmd.Library {$/;"	f
loadLibraryData	heaps/h3d/prim/ModelCache.hx	/^	function loadLibraryData( res : hxd.res.Model ) {$/;"	f
loadMatProps	heaps/h3d/mat/MaterialDatabase.hx	/^	public function loadMatProps( material : Material, setup : MaterialSetup ) {$/;"	f
loadMaterialProps	heaps/h3d/mat/MaterialSetup.hx	/^	public function loadMaterialProps( material : h3d.mat.Material ) {$/;"	f
loadMaterialTexture	heaps/h3d/scene/World.hx	/^	function loadMaterialTexture( r : hxd.res.Model, mat : hxd.fmt.hmd.Data.Material, modelName : S/;"	f
loadMatrix	heaps/h3d/col/Frustum.hx	/^	public function loadMatrix( mvp : h3d.Matrix ) {$/;"	f
loadModel	heaps/h3d/prim/ModelCache.hx	/^	public function loadModel( res : hxd.res.Model ) : h3d.scene.Object {$/;"	f
loadModel	heaps/h3d/scene/World.hx	/^	public function loadModel( r : hxd.res.Model, ?filter : hxd.fmt.hmd.Data.Model -> Bool) : World/;"	f
loadPak	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function loadPak( file : String ) {$/;"	f
loadPrefab	heaps/h3d/prim/ModelCache.hx	/^	public function loadPrefab( res : hxd.res.Prefab, ?p : hrt.prefab.Prefab, ?parent : h3d.scene.O/;"	f
loadPreset	heaps/hxd/snd/effect/Reverb.hx	/^	public function loadPreset(preset : ReverbPreset) {$/;"	f
loadQuaternion	heaps/hxd/fmt/hmd/Data.hx	/^	public inline function loadQuaternion( q : h3d.Quat ) {$/;"	f
loadRec	heaps/h3d/mat/BigTexture.hx	/^		function loadRec(q:QuadTree) {$/;"	f
loadResource	heaps/h2d/domkit/BaseComponents.hx	/^	function loadResource( path : String ) {$/;"	f
loadShader	heaps/hxsl/Macros.hx	/^	static function loadShader( path : String ) {$/;"	f
loadShaders	heaps/hxsl/CacheFile.hx	/^	function loadShaders() {$/;"	f
loadSkin	heaps/h3d/prim/HMDModel.hx	/^	public function loadSkin(skin) {$/;"	f
loadSkin	heaps/hxd/fmt/hmd/Library.hx	/^	public function loadSkin( geom : Geometry, skin : h3d.anim.Skin, optimize = true ) {$/;"	f
loadSources	heaps/hxsl/CacheFile.hx	/^	function loadSources() {$/;"	f
loadStaticData	heaps/h3d/pass/DirShadowMap.hx	/^	override function loadStaticData( bytes : haxe.io.Bytes ) {$/;"	f
loadStaticData	heaps/h3d/pass/PointShadowMap.hx	/^	override function loadStaticData( bytes : haxe.io.Bytes ) {$/;"	f
loadStaticData	heaps/h3d/pass/Shadows.hx	/^	public function loadStaticData( bytes : haxe.io.Bytes ) {$/;"	f
loadStaticData	heaps/h3d/pass/SpotShadowMap.hx	/^	override function loadStaticData( bytes : haxe.io.Bytes ) {$/;"	f
loadText	heaps/hxd/fmt/spine/Library.hx	/^	public function loadText( j : String ) {$/;"	f
loadTexture	heaps/h2d/Particles.hx	/^	function loadTexture( path : String ) {$/;"	f
loadTexture	heaps/h3d/parts/GpuParticles.hx	/^	function loadTexture( path : String ) {$/;"	f
loadTexture	heaps/h3d/prim/ModelCache.hx	/^	public function loadTexture( model : hxd.res.Model, texturePath ) : h3d.mat.Texture {$/;"	f
loadTexture	heaps/h3d/scene/Trail.hx	/^	function loadTexture( path : String ) {$/;"	f
loadTexture	heaps/hxd/res/Image.hx	/^	function loadTexture( ?asyncData:haxe.io.Bytes ) {$/;"	f
loadTile	heaps/h2d/KeyFrames.hx	/^	function loadTile( path : String ) {$/;"	f
loadTileset	heaps/h2d/CdbLevel.hx	/^	function loadTileset( ldat : TileSpec ) : LevelTileset {$/;"	f
loadValues	heaps/h3d/Matrix.hx	/^	public function loadValues( a : Array<Float> ) {$/;"	f
loader	heaps/hxd/fmt/pak/FileSystem.hx	/^		var loader = new flash.display.Loader();$/;"	v
loader	heaps/hxd/fs/BytesFileSystem.hx	/^		var loader = new flash.display.Loader();$/;"	v
loader	heaps/hxd/fs/EmbedFileSystem.hx	/^		var loader = new flash.display.Loader();$/;"	v
loader	heaps/hxd/net/BinaryLoader.hx	/^	var loader : flash.net.URLLoader;$/;"	v
loader	heaps/hxd/res/Any.hx	/^	var loader : Loader;$/;"	v
loader	heaps/hxd/res/BitmapFont.hx	/^	var loader : Loader;$/;"	v
loader	heaps/hxd/res/FileTree.hx	/^			private var loader(get,never) : $loaderType;$/;"	v
loaderType	heaps/hxd/res/FileTree.hx	/^	var loaderType : ComplexType;$/;"	v
loadingColor	heaps/h3d/mat/BigTexture.hx	/^	public var loadingColor : Bool;$/;"	v
loadingTextureColor	heaps/h3d/mat/Defaults.hx	/^	public static var loadingTextureColor = 0xFFFF00FF;$/;"	v
loc	heaps/h3d/impl/GlDriver.hx	/^				var loc = gl.getUniformLocation(p.p, prefix+name+"["+index+"]");$/;"	v
loc	heaps/hxd/System.hl.hx	/^			var loc = getLocale();$/;"	v
locMin	heaps/hxd/clipper/Clipper.hx	/^				var locMin = new LocalMinima();$/;"	v
locMin	heaps/hxd/clipper/Clipper.hx	/^			var locMin = new LocalMinima();$/;"	v
local	heaps/hxsl/Splitter.hx	/^	public var local : Bool;$/;"	v
localPos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var localPos = (wpos.xyz \/ wpos.w);$/;"	v
localPos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var localPos : Vec3;$/;"	v
localToGlobal	heaps/h2d/Object.hx	/^	public function localToGlobal( ?pt : h2d.col.Point ) : h2d.col.Point {$/;"	f
localToGlobal	heaps/h3d/scene/Object.hx	/^	public function localToGlobal( ?pt : h3d.col.Point ) {$/;"	f
locallyInside	heaps/hxd/earcut/Earcut.hx	/^	inline function locallyInside(a:EarNode, b:EarNode) {$/;"	f
locals	heaps/hxsl/GlslOut.hx	/^		var locals = Lambda.array(locals);$/;"	v
locals	heaps/hxsl/GlslOut.hx	/^	var locals : Map<Int,TVar>;$/;"	v
locals	heaps/hxsl/HlslOut.hx	/^		var locals = Lambda.array(locals);$/;"	v
locals	heaps/hxsl/HlslOut.hx	/^	var locals : Map<Int,TVar>;$/;"	v
locals	heaps/hxsl/Linker.hx	/^			var locals = [for( k in locals.keys() ) k => true];$/;"	v
locals	heaps/hxsl/Linker.hx	/^	var locals : Map<Int,Bool>;$/;"	v
locateFont	heaps/hxd/res/Embed.hx	/^	static function locateFont( file : String ) {$/;"	f
locateNode	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public function locateNode(x:Constants.Unit):Node$/;"	f
locateNode	heaps/hxd/poly2tri/SweepContext.hx	/^	public function locateNode(point:Point):Node$/;"	f
locatePoint	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public function locatePoint(point:Point):Node$/;"	f
location	heaps/hxd/fmt/grd/Data.hx	/^	public var location : Int;$/;"	v
lock	heaps/hxd/BitmapData.hx	/^	public function lock() {$/;"	f
lock	heaps/hxd/impl/AsyncLoader.hx	/^	var lock : sys.thread.Lock;$/;"	v
lockFile	heaps/hxd/fs/LocalFileSystem.hx	/^		var lockFile = tmpDir+"\/"+w.file.split("\/").pop()+".lock";$/;"	v
lockImage	heaps/hxd/BitmapData.hx	/^	var lockImage : js.html.ImageData;$/;"	v
lockZPlanes	heaps/h3d/scene/CameraController.hx	/^	public var lockZPlanes = false;$/;"	v
lod	heaps/h3d/shader/pbr/CubeLod.hx	/^		@param var lod : Float;$/;"	v
lodBias	heaps/h3d/mat/Texture.hx	/^	public var lodBias : Float = 0.;$/;"	v
log	heaps/h2d/Console.hx	/^		var log = logTxt;$/;"	v
log	heaps/h2d/Console.hx	/^	public function log( text : String, ?color ) {$/;"	f
log	heaps/h3d/impl/Driver.hx	/^	public inline function log( str : String ) {$/;"	f
log	heaps/h3d/impl/GlDriver.hx	/^			var log = gl.getShaderInfoLog(s);$/;"	v
log	heaps/h3d/impl/GlDriver.hx	/^			var log = null;$/;"	v
log	heaps/h3d/impl/GlDriver.hx	/^		var log = gl.getShaderInfoLog(s);$/;"	v
log	heaps/h3d/impl/LogDriver.hx	/^		var log = new h3d.impl.LogDriver(driver);$/;"	v
log	heaps/h3d/pass/Default.hx	/^	inline function log( str : String ) {$/;"	f
log	heaps/hxsl/CacheFile.hx	/^	function log( str : String ) {$/;"	f
log	heaps/samples/Network.hx	/^	public function log( s : String, ?pos : haxe.PosInfos ) {$/;"	f
log	heaps/tools/hxsl/Main.hx	/^					var log = gl.getShaderInfoLog(s);$/;"	v
logDY	heaps/h2d/Console.hx	/^	var logDY : Float = 0;$/;"	v
logEnable	heaps/h3d/impl/Driver.hx	/^	public var logEnable : Bool;$/;"	v
logImpl	heaps/h3d/impl/Driver.hx	/^	function logImpl( str : String ) {$/;"	f
logImpl	heaps/h3d/impl/GlDriver.hx	/^	override function logImpl( str : String ) {$/;"	f
logImpl	heaps/h3d/impl/LogDriver.hx	/^	override function logImpl( str : String ) {$/;"	f
logImpl	heaps/h3d/impl/NullDriver.hx	/^	override function logImpl(str:String) {$/;"	f
logImpl	heaps/h3d/impl/Stage3dDriver.hx	/^	override function logImpl( str : String ) {$/;"	f
logImpl	heaps/h3d/impl/VulkanDriver.hx	/^	override function logImpl(str:String) {$/;"	f
logIndex	heaps/h2d/Console.hx	/^	var logIndex:Int;$/;"	v
logLines	heaps/h3d/impl/LogDriver.hx	/^	public var logLines : Array<String> = null;$/;"	v
logTxt	heaps/h2d/Console.hx	/^	var logTxt : h2d.HtmlText;$/;"	v
logVars	heaps/h3d/impl/LogDriver.hx	/^			inline function logVars( s : hxsl.RuntimeShader.RuntimeShaderData, buf : h3d.shader.Buffers.S/;"	f
loggedShaders	heaps/h3d/impl/LogDriver.hx	/^	var loggedShaders = new Map<Int,Bool>();$/;"	v
logo	heaps/samples/DrawingTiles.hx	/^		var logo = hxd.Res.hxlogo.toTile();$/;"	v
logs	heaps/h2d/Console.hx	/^	var logs : Array<String>;$/;"	v
longText	heaps/samples/HtmlText.hx	/^		var longText = "Long text long text. Icons like this one <img src='logo'\/> are flowed separat/;"	v
longText	heaps/samples/Text.hx	/^		var longText = "Lorem ipsum dolor sit amet, fabulas repudiare accommodare nec ut. Ut nec facet/;"	v
lookAtX	heaps/h3d/Matrix.hx	/^	public static function lookAtX( dir : Vector, ?up : Vector, ?m : Matrix ) {$/;"	f
lookup	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var lookup = new Map();$/;"	v
lookupRec	heaps/h2d/domkit/Style.hx	/^	function lookupRec( obj : h2d.Object, e : hxd.Event ) {$/;"	f
lookupTarget	heaps/h3d/impl/TextureCache.hx	/^	function lookupTarget( name, width, height, format, isCube ) {$/;"	f
loop	heaps/h2d/Anim.hx	/^	public var loop : Bool = true;$/;"	v
loop	heaps/h2d/KeyFrames.hx	/^	public var loop : Bool = false;$/;"	v
loop	heaps/h2d/Video.hx	/^	public var loop(get, set) : Bool;$/;"	v
loop	heaps/h3d/anim/Animation.hx	/^	public var loop : Bool;$/;"	v
loop	heaps/h3d/impl/VarBinding.hx	/^		function loop(e : Expr) {$/;"	f
loop	heaps/h3d/parts/Data.hx	/^	public var loop	: Bool;$/;"	v
loop	heaps/h3d/shader/AnimatedTexture.hx	/^		@const var loop : Bool;$/;"	v
loop	heaps/h3d/shader/UVAnim.hx	/^		@const var loop : Bool;$/;"	v
loop	heaps/hxd/fmt/hmd/Data.hx	/^	public var loop : Bool;$/;"	v
loop	heaps/hxd/snd/Channel.hx	/^	public var loop = false;$/;"	v
loop	heaps/hxd/snd/openal/Emulator.hx	/^	public var loop = false;$/;"	v
loop	heaps/hxsl/Checker.hx	/^			function loop( e : Expr ) {$/;"	f
loop	heaps/hxsl/Checker.hx	/^			var loop = typeExpr(loop, NoValue);$/;"	v
loop	heaps/hxsl/Dce.hx	/^			var loop = mapExpr(loop, false);$/;"	v
loop	heaps/hxsl/Eval.hx	/^			var loop = evalExpr(loop, false);$/;"	v
loop	heaps/hxsl/MacroParser.hx	/^			function loop( e : Expr ) {$/;"	f
loopCounter	heaps/h3d/shader/GpuParticle.hx	/^		@param var loopCounter : Float;$/;"	v
loopFunc	heaps/hxd/System.flash.hx	/^	static var loopFunc : Void -> Void;$/;"	v
loopFunc	heaps/hxd/System.hl.hx	/^	static var loopFunc : Void -> Void;$/;"	v
loopFunc	heaps/hxd/System.hx	/^	static var loopFunc : Void -> Void;$/;"	v
loopFunc	heaps/hxd/System.js.hx	/^	static var loopFunc : Void -> Void;$/;"	v
loopInit	heaps/hxd/System.js.hx	/^	static var loopInit = false;$/;"	v
loopInterpolate	heaps/h2d/KeyFrames.hx	/^	public var loopInterpolate : Bool = false;$/;"	v
loopRec	heaps/hxd/fmt/fbx/HMDOut.hx	/^			function loopRec( o : TmpObject ) {$/;"	f
loopVideo	heaps/h2d/Video.hx	/^	var loopVideo : Bool;$/;"	v
lostUp	heaps/h3d/Camera.hx	/^	public function lostUp() {$/;"	f
lout	heaps/hxd/res/NanoJpeg.hx	/^		var lout = new FastBytes(cout);$/;"	v
lout	heaps/hxd/res/NanoJpeg.hx	/^		var lout = new FastBytes(out);$/;"	v
lowPass	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var lowPass : BiquadFilterNode;$/;"	v
lowpass	heaps/samples/Sound.hx	/^		var lowpass = new hxd.snd.effect.LowPass();$/;"	v
lpass	heaps/h3d/scene/pbr/Renderer.hx	/^		var lpass = screenLightPass;$/;"	v
lprops	heaps/h2d/CdbLevel.hx	/^		var lprops = null;$/;"	v
ls	heaps/h3d/scene/pbr/Renderer.hx	/^		var ls = hxd.impl.Api.downcast(getLightSystem(), h3d.scene.pbr.LightSystem);$/;"	v
lt	heaps/samples/Pad.hx	/^	var lt : h2d.Graphics;$/;"	v
ltan	heaps/h3d/scene/pbr/Environment.hx	/^			var ltan = vec3( sq * cos(alpha),  sq * sin(alpha), sqrt(p.x));$/;"	v
ltan	heaps/h3d/scene/pbr/Environment.hx	/^			var ltan = vec3(sinT * cos(phi), sinT * sin(phi), cosT);$/;"	v
lum	heaps/h3d/scene/fwd/PointLight.hx	/^		var lum = hxd.Math.max(hxd.Math.max(color.r, color.g), color.b);$/;"	v
lum	heaps/h3d/shader/Bloom.hx	/^			var lum = c.rgb.dot(vec3(0.2126, 0.7152, 0.0722));$/;"	v
lumA	heaps/h3d/pass/FXAA.hx	/^			var lumA = vec3(0.299, 0.587, 0.114);$/;"	v
lumB	heaps/h3d/Matrix.hx	/^	static inline var lumB = 0.072169;$/;"	v
lumB	heaps/h3d/pass/FXAA.hx	/^			var lumB = dot(rgbB, lumA);$/;"	v
lumG	heaps/h3d/Matrix.hx	/^	static inline var lumG = 0.71516;$/;"	v
lumMax	heaps/h3d/pass/FXAA.hx	/^			var lumMax = max(lumMid, max(max(lumNW, lumNE), max(lumSW, lumSE)));$/;"	v
lumMid	heaps/h3d/pass/FXAA.hx	/^			var lumMid = mid.dot(lumA);$/;"	v
lumMin	heaps/h3d/pass/FXAA.hx	/^			var lumMin = min(lumMid, min(min(lumNW, lumNE), min(lumSW, lumSE)));$/;"	v
lumNE	heaps/h3d/pass/FXAA.hx	/^			var lumNE = ne.dot(lumA);$/;"	v
lumNW	heaps/h3d/pass/FXAA.hx	/^			var lumNW = nw.dot(lumA);$/;"	v
lumR	heaps/h3d/Matrix.hx	/^	static inline var lumR = 0.212671;$/;"	v
lumSE	heaps/h3d/pass/FXAA.hx	/^			var lumSE = se.dot(lumA);$/;"	v
lumSW	heaps/h3d/pass/FXAA.hx	/^			var lumSW = sw.dot(lumA);$/;"	v
lut	heaps/h3d/scene/pbr/Environment.hx	/^	public var lut(get,never) : h3d.mat.Texture;$/;"	v
lv	heaps/h2d/Scene.hx	/^			var lv = 0;$/;"	v
lv	heaps/h3d/mat/Texture.hx	/^		var lv = 1;$/;"	v
lv1	heaps/h2d/Scene.hx	/^			var lv1 = level;$/;"	v
lv2	heaps/h2d/Scene.hx	/^			var lv2 = getLevel(i2);$/;"	v
lw	heaps/hxd/Pixels.hx	/^			var lw = level[0].width;$/;"	v
lx	heaps/h2d/col/Ray.hx	/^	public var lx : Float;$/;"	v
lx	heaps/h3d/col/HeightMap.hx	/^		var lx = r.lx, ly = r.ly, lz = r.lz;$/;"	v
lx	heaps/h3d/col/Ray.hx	/^		var lx = b.x - a.x;$/;"	v
lx	heaps/h3d/col/Ray.hx	/^	public var lx : Float;$/;"	v
ly	heaps/h2d/col/Ray.hx	/^	public var ly : Float;$/;"	v
ly	heaps/h3d/col/Ray.hx	/^		var ly = b.y - a.y;$/;"	v
ly	heaps/h3d/col/Ray.hx	/^	public var ly : Float;$/;"	v
lz	heaps/h3d/col/Ray.hx	/^		var lz = b.z - a.z;$/;"	v
lz	heaps/h3d/col/Ray.hx	/^	public var lz : Float;$/;"	v
m	heaps/h2d/Drawable.hx	/^			var m = colorMatrix;$/;"	v
m	heaps/h2d/HtmlText.hx	/^			var m = dropMatrix.matrix;$/;"	v
m	heaps/h2d/Object.hx	/^		var m = new h2d.col.Matrix();$/;"	v
m	heaps/h2d/col/Matrix.hx	/^		var m = new Matrix();$/;"	v
m	heaps/h2d/col/Polynomial.hx	/^	public var m : Int;$/;"	v
m	heaps/h2d/col/Polynomial.hx	/^	var m : Int;$/;"	v
m	heaps/h2d/filter/ColorMatrix.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/h3d/Camera.hx	/^	public var m : Matrix;$/;"	v
m	heaps/h3d/Matrix.hx	/^		var m = new Matrix();$/;"	v
m	heaps/h3d/Matrix.hx	/^		var m = this.clone();$/;"	v
m	heaps/h3d/Quat.hx	/^			var m = len.invSqrt();$/;"	v
m	heaps/h3d/Vector.hx	/^		var m = brightness - c \/ 2;$/;"	v
m	heaps/h3d/anim/BufferAnimation.hx	/^			var m = o.matrix;$/;"	v
m	heaps/h3d/anim/LinearAnimation.hx	/^			var m = o.matrix;$/;"	v
m	heaps/h3d/anim/LinearAnimation.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/h3d/anim/SmoothTarget.hx	/^			var m = @:privateAccess if( o.targetSkin != null ) o.targetSkin.currentRelPose[o.targetJoint]/;"	v
m	heaps/h3d/anim/SmoothTransition.hx	/^			var m = o.outMatrix;$/;"	v
m	heaps/h3d/col/Bounds.hx	/^			var m = p.nx * (p.nx > 0 ? xMax : xMin) + p.ny * (p.ny > 0 ? yMax : yMin) + p.nz * (p.nz > 0 /;"	v
m	heaps/h3d/col/Bounds.hx	/^		var m = p.nx * (p.nx > 0 ? xMax : xMin) + p.ny * (p.ny > 0 ? yMax : yMin) + p.nz * (p.nz > 0 ?/;"	v
m	heaps/h3d/col/Capsule.hx	/^		var m = AB.dot(RD) \/ ABdotAB;$/;"	v
m	heaps/h3d/col/SkinCollider.hx	/^				var m = skin.currentPalette[j.bindIndex];$/;"	v
m	heaps/h3d/impl/Benchmark.hx	/^				var m = new h3d.Matrix();$/;"	v
m	heaps/h3d/impl/GlDriver.hx	/^			var m = pass.colorMask;$/;"	v
m	heaps/h3d/impl/GlDriver.hx	/^		var m = @:privateAccess v.buffer.vbuf;$/;"	v
m	heaps/h3d/impl/ManagedBuffer.hx	/^		var m = 0;$/;"	v
m	heaps/h3d/impl/MemoryManager.hx	/^		var m = buffers[stride], prev = null;$/;"	v
m	heaps/h3d/impl/MemoryManager.hx	/^ 			var m = new ManagedBuffer(stride, b.vertices, flags);$/;"	v
m	heaps/h3d/impl/Stage3dDriver.hx	/^			var m = pass.colorMask;$/;"	v
m	heaps/h3d/impl/Stage3dDriver.hx	/^		var m = v.buffer.vbuf;$/;"	v
m	heaps/h3d/mat/Material.hx	/^		var m = m == null ? new Material() : cast m;$/;"	v
m	heaps/h3d/mat/PbrMaterial.hx	/^		var m = m == null ? new PbrMaterial() : cast m;$/;"	v
m	heaps/h3d/parts/GpuParticles.hx	/^			var m = camera.m;$/;"	v
m	heaps/h3d/parts/GpuParticles.hx	/^			var m = materials[i];$/;"	v
m	heaps/h3d/parts/Particles.hx	/^			var m = ctx.camera.m;$/;"	v
m	heaps/h3d/pass/Blur.hx	/^			var m = gain \/ (values.length * 2 - 1);$/;"	v
m	heaps/h3d/pass/ShaderManager.hx	/^				var m = v[i];$/;"	v
m	heaps/h3d/pass/ShaderManager.hx	/^			var m : h3d.Matrix = v;$/;"	v
m	heaps/h3d/prim/ModelCache.hx	/^			var m = loadLibraryData(forModel);$/;"	v
m	heaps/h3d/prim/ModelCache.hx	/^		var m = loadLibraryData(res);$/;"	v
m	heaps/h3d/prim/ModelCache.hx	/^		var m = models.get(path);$/;"	v
m	heaps/h3d/prim/Polygon.hx	/^		var m = new Map<UV,Bool>();$/;"	v
m	heaps/h3d/scene/CameraController.hx	/^				var m = 0.001 * curPos.x * panSpeed \/ 25;$/;"	v
m	heaps/h3d/scene/Mesh.hx	/^		var m = o == null ? new Mesh(null,material) : cast o;$/;"	v
m	heaps/h3d/scene/MeshBatch.hx	/^				var m : h3d.Matrix = curShader.getParamValue(p.index);$/;"	v
m	heaps/h3d/scene/MultiMaterial.hx	/^			var m = materials[i];$/;"	v
m	heaps/h3d/scene/MultiMaterial.hx	/^		var m = o == null ? new MultiMaterial(null, materials) : cast o;$/;"	v
m	heaps/h3d/scene/Object.hx	/^			var m = hxd.impl.Api.downcast(this, Mesh);$/;"	v
m	heaps/h3d/scene/Object.hx	/^			var m = o.getMaterialByName(name);$/;"	v
m	heaps/h3d/scene/Object.hx	/^		var m = hxd.impl.Api.downcast(this, Mesh);$/;"	v
m	heaps/h3d/scene/Object.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/h3d/scene/Scene.hx	/^					var m = i.invPos;$/;"	v
m	heaps/h3d/scene/Skin.hx	/^				var m = currentAbsPose[j.index];$/;"	v
m	heaps/h3d/scene/Skin.hx	/^				var m = materials[skinData.splitJoints[i].material];$/;"	v
m	heaps/h3d/scene/Skin.hx	/^			var m = currentAbsPose[id];$/;"	v
m	heaps/h3d/scene/Skin.hx	/^			var m = currentPalette[j.bindIndex];$/;"	v
m	heaps/h3d/scene/World.hx	/^					var m = e.transform;$/;"	v
m	heaps/h3d/scene/World.hx	/^				var m = new WorldModelGeometry(wmat);$/;"	v
m	heaps/h3d/scene/World.hx	/^		var m = new WorldMaterial();$/;"	v
m	heaps/h3d/scene/World.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/h3d/scene/World.hx	/^		var m = textures.get(texturePath);$/;"	v
m	heaps/h3d/scene/World.hx	/^	public var m : WorldMaterial;$/;"	v
m	heaps/hxd/BitmapData.hx	/^			var m = tmpMatrix;$/;"	v
m	heaps/hxd/BitmapData.hx	/^		var m = tmpMatrix;$/;"	v
m	heaps/hxd/Charset.hx	/^		inline function m(a, b) {$/;"	f
m	heaps/hxd/Window.hl.hx	/^		var m : {idx: Int, mode: DisplaySetting } = {$/;"	v
m	heaps/hxd/Window.hl.hx	/^		var m = dx.Window.getMonitors()[monitorId];$/;"	v
m	heaps/hxd/Window.hl.hx	/^		var m = if(monitor == null) currentMonitorIndex else monitor;$/;"	v
m	heaps/hxd/Worker.hx	/^		var m = Type.createEnumIndex(enumValue, curMessage.code, curMessage.args);$/;"	v
m	heaps/hxd/earcut/Earcut.hx	/^		var m = null;$/;"	v
m	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var m = toFloats(t);$/;"	v
m	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var m = getModel(modelNames[0]);$/;"	v
m	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/hxd/fmt/fbx/Geometry.hx	/^			var m = m2[0];$/;"	v
m	heaps/hxd/fmt/fbx/Geometry.hx	/^			var m = mids[pos++];$/;"	v
m	heaps/hxd/fmt/fbx/Geometry.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var m = d.materials[mid];$/;"	v
m	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var m = models[0];$/;"	v
m	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var m = ref.model == null ? new hxd.fmt.fbx.BaseLibrary.DefaultMatrixes() : getDefaultMatrixe/;"	v
m	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var m = new hl.Format.Mikktspace();$/;"	v
m	heaps/hxd/fmt/grd/Reader.hx	/^		var m = h \/ w;$/;"	v
m	heaps/hxd/fmt/hmd/Data.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/hxd/fmt/hmd/Dump.hx	/^					var m = m.materials[i];$/;"	v
m	heaps/hxd/fmt/hmd/Dump.hx	/^			var m = h.materials[k];$/;"	v
m	heaps/hxd/fmt/hmd/Dump.hx	/^			var m = h.models[k];$/;"	v
m	heaps/hxd/fmt/hmd/Library.hx	/^					var m = map;$/;"	v
m	heaps/hxd/fmt/hmd/Library.hx	/^				var m = map;$/;"	v
m	heaps/hxd/fmt/hmd/Library.hx	/^		var m = header.materials[mid];$/;"	v
m	heaps/hxd/fmt/hmd/Reader.hx	/^			var m = new Material();$/;"	v
m	heaps/hxd/fmt/hmd/Reader.hx	/^			var m = new Model();$/;"	v
m	heaps/hxd/res/DynamicText.hx	/^						var m = ignoreMeta;$/;"	v
m	heaps/hxd/res/DynamicText.hx	/^		var m = new DynamicTextMeta();$/;"	v
m	heaps/hxd/res/Embed.hx	/^		var m = Context.getLocalClass().get().module;$/;"	v
m	heaps/hxd/res/FontBuilder.hx	/^			var m = new flash.geom.Matrix();$/;"	v
m	heaps/hxsl/AgalOut.hx	/^				var m = OMov( new Reg(RTemp, w, sw), new Reg(r.t, r.index, sr) );$/;"	v
m	heaps/hxsl/DynamicShader.hx	/^			var m = new h3d.Matrix();$/;"	v
m	heaps/hxsl/GlslOut.hx	/^		var m = new Map();$/;"	v
m	heaps/hxsl/HlslOut.hx	/^		var m = new Map();$/;"	v
m	heaps/hxsl/Macros.hx	/^		var m = Context.follow(Context.getType(path));$/;"	v
m	heaps/samples/CubeTexture.hx	/^		var m = new h3d.scene.Mesh(sp, null, s3d);$/;"	v
m	heaps/samples/Filters.hx	/^			var m = new h3d.Matrix();$/;"	v
m	heaps/samples/Interactive.hx	/^			var m = new h3d.scene.Mesh(c, s3d);$/;"	v
m	heaps/samples/Interactive.hx	/^			var m = o.toMesh();$/;"	v
m	heaps/samples/Lights.hx	/^			var m = new h3d.scene.Mesh(box, s3d);$/;"	v
m	heaps/samples/Lights.hx	/^			var m = new h3d.scene.Mesh(sp, s3d);$/;"	v
m	heaps/samples/Pbr.hx	/^		var m = new h3d.Matrix();$/;"	v
m	heaps/samples/Sao.hx	/^		var m = new h3d.scene.Mesh(floor, s3d);$/;"	v
m	heaps/samples/ShaderAdvanced.hx	/^			var m = new h3d.Matrix();$/;"	v
m	heaps/samples/ShaderAdvanced.hx	/^		var m = new h3d.scene.Mesh(prim, s3d);$/;"	v
m	heaps/samples/Shadows.hx	/^		var m = new h3d.scene.Mesh(floor, s3d);$/;"	v
m	heaps/tools/mikktspace/Mikktspace.hx	/^		var m = new hl.Format.Mikktspace();$/;"	v
m0	heaps/hxd/fmt/fbx/Geometry.hx	/^			var m0 = mats[0];$/;"	v
m1	heaps/h2d/col/Delaunay.hx	/^			var m1;$/;"	v
m1	heaps/h3d/anim/SmoothTransition.hx	/^			var m1 = o.tmpMatrix;$/;"	v
m11	heaps/h3d/Matrix.hx	/^		var m11 = a._11; var m12 = a._12; var m13 = a._13;$/;"	v
m11	heaps/h3d/Matrix.hx	/^		var m11 = m._11, m12 = m._12, m13 = m._13;$/;"	v
m11	heaps/h3d/Matrix.hx	/^		var m11 = m._11; var m12 = m._12; var m13 = m._13; var m14 = m._14;$/;"	v
m11	heaps/h3d/Matrix.hx	/^		var m11 = m._11; var m12 = m._12; var m13 = m._13;$/;"	v
m14	heaps/h3d/anim/SmoothTarget.hx	/^				var m14 = m._14, m24 = m._24, m34 = m._34; \/\/ backup (used in BufferedAnimation)$/;"	v
m2	heaps/h2d/col/Delaunay.hx	/^			var m2;$/;"	v
m2	heaps/h2d/col/Polynomial.hx	/^		var m2 = new Matrix(m, n);$/;"	v
m2	heaps/h3d/anim/BufferAnimation.hx	/^					var m2 = a.targetSkin.getSkinData().allJoints[a.targetJoint].defMat;$/;"	v
m2	heaps/h3d/anim/SmoothTransition.hx	/^			var m2 = if( !o.isAnim2 ) o.def else if( o.targetSkin != null ) o.targetSkin.currentRelPose[o/;"	v
m2	heaps/h3d/col/Frustum.hx	/^		var m2 = new h3d.Matrix();$/;"	v
m2	heaps/h3d/col/Plane.hx	/^		var m2 = new h3d.Matrix();$/;"	v
m2	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var m2 = getModel(name);$/;"	v
m2	heaps/hxd/fmt/fbx/Geometry.hx	/^		var m2 = g.getMaterials();$/;"	v
m21	heaps/h3d/Matrix.hx	/^		var m21 = a._21; var m22 = a._22; var m23 = a._23;$/;"	v
m21	heaps/h3d/Matrix.hx	/^		var m21 = m._21, m22 = m._22, m23 = m._23;$/;"	v
m21	heaps/h3d/Matrix.hx	/^		var m21 = m._21; var m22 = m._22; var m23 = m._23; var m24 = m._24;$/;"	v
m21	heaps/h3d/Matrix.hx	/^		var m21 = m._21; var m22 = m._22; var m23 = m._23;$/;"	v
m31	heaps/h3d/Matrix.hx	/^		var m31 = m._31, m32 = m._32, m33 = m._33;$/;"	v
m31	heaps/h3d/Matrix.hx	/^		var m31 = m._31; var m32 = m._32; var m33 = m._33; var m34 = m._34;$/;"	v
m31	heaps/h3d/Matrix.hx	/^		var m31 = m._31; var m32 = m._32; var m33 = m._33;$/;"	v
m41	heaps/h3d/Matrix.hx	/^		var m41 = m._41, m42 = m._42, m43 = m._43;$/;"	v
m41	heaps/h3d/Matrix.hx	/^		var m41 = m._41; var m42 = m._42; var m43 = m._43; var m44 = m._44;$/;"	v
m44	heaps/hxsl/AgalOptim.hx	/^						var m44 = false;$/;"	v
m_ActiveEdges	heaps/hxd/clipper/Clipper.hx	/^	var m_ActiveEdges : TEdge;$/;"	v
m_ClipFillType	heaps/hxd/clipper/Clipper.hx	/^	var m_ClipFillType : PolyFillType;$/;"	v
m_ClipType	heaps/hxd/clipper/Clipper.hx	/^	var m_ClipType : ClipType;$/;"	v
m_CurrentLM	heaps/hxd/clipper/Clipper.hx	/^	var m_CurrentLM : LocalMinima;$/;"	v
m_ExecuteLocked	heaps/hxd/clipper/Clipper.hx	/^	var m_ExecuteLocked : Bool;$/;"	v
m_GhostJoins	heaps/hxd/clipper/Clipper.hx	/^	var m_GhostJoins : Array<Join>;$/;"	v
m_IntersectList	heaps/hxd/clipper/Clipper.hx	/^	var m_IntersectList : Array<IntersectNode>;$/;"	v
m_Joins	heaps/hxd/clipper/Clipper.hx	/^	var m_Joins : Array<Join>;$/;"	v
m_MinimaList	heaps/hxd/clipper/Clipper.hx	/^	var m_MinimaList : LocalMinima;$/;"	v
m_PolyOuts	heaps/hxd/clipper/Clipper.hx	/^	var m_PolyOuts : Array<OutRec>;$/;"	v
m_Scanbeam	heaps/hxd/clipper/Clipper.hx	/^	var m_Scanbeam : Scanbeam;$/;"	v
m_SortedEdges	heaps/hxd/clipper/Clipper.hx	/^	var m_SortedEdges : TEdge;$/;"	v
m_StepsPerRad	heaps/hxd/clipper/Clipper.hx	/^	private var m_StepsPerRad : Float;$/;"	v
m_SubjFillType	heaps/hxd/clipper/Clipper.hx	/^	var m_SubjFillType : PolyFillType;$/;"	v
m_UsingPolyTree	heaps/hxd/clipper/Clipper.hx	/^	var m_UsingPolyTree : Bool;$/;"	v
m_cos	heaps/hxd/clipper/Clipper.hx	/^	private var m_cos : Float;$/;"	v
m_delta	heaps/hxd/clipper/Clipper.hx	/^	private var m_delta : Float;$/;"	v
m_destPoly	heaps/hxd/clipper/Clipper.hx	/^	private var m_destPoly : IPolygon;$/;"	v
m_destPolys	heaps/hxd/clipper/Clipper.hx	/^	private var m_destPolys : IPolygons;$/;"	v
m_edges	heaps/hxd/clipper/Clipper.hx	/^	var m_edges : Array<Array<TEdge>>;$/;"	v
m_lowest	heaps/hxd/clipper/Clipper.hx	/^	private var m_lowest : IPoint;$/;"	v
m_miterLim	heaps/hxd/clipper/Clipper.hx	/^	private var m_miterLim : Float;$/;"	v
m_normals	heaps/hxd/clipper/Clipper.hx	/^	private var m_normals : Array<Point>;$/;"	v
m_polyNodes	heaps/hxd/clipper/Clipper.hx	/^	private var m_polyNodes : PolyNode;$/;"	v
m_sin	heaps/hxd/clipper/Clipper.hx	/^	private var m_sin : Float;$/;"	v
m_sinA	heaps/hxd/clipper/Clipper.hx	/^	private var m_sinA : Float;$/;"	v
m_srcPoly	heaps/hxd/clipper/Clipper.hx	/^	private var m_srcPoly : IPolygon;$/;"	v
ma	heaps/h2d/Graphics.hx	/^	var ma : Float = 1.;$/;"	v
main	Main.hx	/^	static function main() {$/;"	f
main	heaps/h2d/Tile.hx	/^		var main = new Tile(tex, 0, 0, bmp.width, bmp.height);$/;"	v
main	heaps/hxd/fmt/hmd/Dump.hx	/^	public static function main() {$/;"	f
main	heaps/hxd/fmt/pak/Build.hx	/^	static function main() {$/;"	f
main	heaps/hxsl/CacheFileBuilder.hx	/^	public static function main() {$/;"	f
main	heaps/samples/AdjustColor.hx	/^	public static function main() {$/;"	f
main	heaps/samples/Base2D.hx	/^	static function main() {$/;"	f
main	heaps/samples/Base3D.hx	/^	static function main() {$/;"	f
main	heaps/samples/Blur.hx	/^	static function main() {$/;"	f
main	heaps/samples/Bounds.hx	/^	static function main() {$/;"	f
main	heaps/samples/Camera2D.hx	/^	static function main() {$/;"	f
main	heaps/samples/CollideCheck.hx	/^	static function main() {$/;"	f
main	heaps/samples/CubeTexture.hx	/^	static function main() {$/;"	f
main	heaps/samples/Cursor.hx	/^	static function main() {$/;"	f
main	heaps/samples/Domkit.hx	/^	static function main() {$/;"	f
main	heaps/samples/DrawingTiles.hx	/^	static function main() {$/;"	f
main	heaps/samples/ExtraTests.hx	/^	static function main() {$/;"	f
main	heaps/samples/Filters.hx	/^	static function main() {$/;"	f
main	heaps/samples/Flows.hx	/^	static function main() {$/;"	f
main	heaps/samples/Fullscreen.hx	/^	static function main() {$/;"	f
main	heaps/samples/FxView.hx	/^	static function main() {$/;"	f
main	heaps/samples/GpuParticles.hx	/^	static function main() {$/;"	f
main	heaps/samples/GraphicsDraw.hx	/^	static function main() {$/;"	f
main	heaps/samples/Helpers.hx	/^	static function main() {$/;"	f
main	heaps/samples/HtmlText.hx	/^	static function main() {$/;"	f
main	heaps/samples/Input.hx	/^	static function main() {$/;"	f
main	heaps/samples/Interactive.hx	/^	static function main() {$/;"	f
main	heaps/samples/Interactive2D.hx	/^	static function main() {$/;"	f
main	heaps/samples/Lights.hx	/^	static function main() {$/;"	f
main	heaps/samples/Mask.hx	/^	static function main() {$/;"	f
main	heaps/samples/MeshBatch.hx	/^	static function main() {$/;"	f
main	heaps/samples/Network.hx	/^	static function main() {$/;"	f
main	heaps/samples/Pad.hx	/^	static function main() {$/;"	f
main	heaps/samples/Pad.hx	/^	var main : h2d.Graphics;$/;"	v
main	heaps/samples/Particles2d.hx	/^	static function main() {$/;"	f
main	heaps/samples/Pbr.hx	/^	static function main() {$/;"	f
main	heaps/samples/PointLights.hx	/^	static function main() {$/;"	f
main	heaps/samples/Polygons.hx	/^	static function main() {$/;"	f
main	heaps/samples/Quaternion.hx	/^	static function main() {$/;"	f
main	heaps/samples/Sao.hx	/^	static function main() {$/;"	f
main	heaps/samples/ScaleMode2D.hx	/^	static function main() {$/;"	f
main	heaps/samples/ShaderAdvanced.hx	/^	static function main() {$/;"	f
main	heaps/samples/Shadows.hx	/^	static function main() {$/;"	f
main	heaps/samples/Skin.hx	/^	static function main() {$/;"	f
main	heaps/samples/Sound.hx	/^	static function main() {$/;"	f
main	heaps/samples/Stencil.hx	/^	static function main() {$/;"	f
main	heaps/samples/Text.hx	/^	static function main() {$/;"	f
main	heaps/samples/Tiled.hx	/^	static function main() {$/;"	f
main	heaps/samples/Video.hx	/^	static function main() {$/;"	f
main	heaps/samples/World.hx	/^	static function main() {$/;"	f
main	heaps/tools/hxsl/Main.hx	/^	static function main() {$/;"	f
main	heaps/tools/mikktspace/Mikktspace.hx	/^	static function main() {$/;"	f
mainLoop	heaps/hxd/App.hx	/^	function mainLoop() {$/;"	f
mainLoop	heaps/hxd/System.hl.hx	/^	static function mainLoop() : Bool {$/;"	f
mainPass	heaps/h3d/mat/BaseMaterial.hx	/^	public var mainPass(get, never) : Pass;$/;"	v
mainThread	heaps/hxd/System.hl.hx	/^	static var mainThread : sys.thread.Thread;$/;"	v
make	heaps/h3d/col/TransformCollider.hx	/^	public static function make( mat : h3d.Matrix, col ) {$/;"	f
make	heaps/hxd/fmt/pak/Build.hx	/^	public static function make( dir = "res", out = "res", ?pakDiff ) {$/;"	f
make	heaps/hxsl/HlslOut.hx	/^	public function make( v : TVar, arr : Array<Int> ) : Array<Int> {$/;"	f
makeAnimation	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function makeAnimation( anim : h3d.anim.Animation ) {$/;"	f
makeAnimation	heaps/hxd/fmt/hmd/Library.hx	/^	function makeAnimation( a : Animation ) {$/;"	f
makeAssign	heaps/h3d/impl/VarBinding.hx	/^		function makeAssign( path : Array<String>, expr : Expr ) : Expr {$/;"	f
makeBatchShader	heaps/hxsl/Cache.hx	/^	public function makeBatchShader( rt : RuntimeShader, shaders ) : BatchShader {$/;"	f
makeCRC	heaps/hxd/Save.hx	/^	static function makeCRC( data : String ) {$/;"	f
makeCall	heaps/hxsl/Checker.hx	/^			function makeCall(e1) {$/;"	f
makeCameraMatrix	heaps/h3d/Camera.hx	/^	function makeCameraMatrix( m : Matrix ) {$/;"	f
makeCircle	heaps/h2d/col/Polygon.hx	/^	public static function makeCircle( x : Float, y : Float, radius : Float, npoints = 0 ) {$/;"	f
makeColor	heaps/h3d/Vector.hx	/^	public function makeColor( hue : Float, saturation : Float = 1., brightness : Float = 0.5 ) {$/;"	f
makeCommmand	heaps/hxd/fs/FileConverter.hx	/^	function makeCommmand( obj : Dynamic ) : { cmd : ConvertCommand, priority : Int } {$/;"	f
makeCompiler	heaps/h3d/impl/GlDriver.hx	/^	function makeCompiler() {$/;"	f
makeConfig	heaps/hxd/fs/FileConverter.hx	/^	function makeConfig( obj : Dynamic ) {$/;"	f
makeContextCurrent	heaps/hxd/snd/openal/Emulator.hx	/^	public static function makeContextCurrent(context : Context) : Bool {$/;"	f
makeDebugObj	heaps/h3d/col/Bounds.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/Capsule.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/Collider.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/Collider.hx	/^	public function makeDebugObj() : h3d.scene.Object;$/;"	f
makeDebugObj	heaps/h3d/col/HeightMap.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/ObjectCollider.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/Polygon.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/PolygonBuffer.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/SkinCollider.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/Sphere.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDebugObj	heaps/h3d/col/TransformCollider.hx	/^	public function makeDebugObj() : h3d.scene.Object {$/;"	f
makeDef	heaps/hxsl/Macros.hx	/^	static function makeDef( t : Type, pos : Position ) : haxe.macro.Expr {$/;"	f
makeDefaultShader	heaps/hxsl/CacheFile.hx	/^	function makeDefaultShader() {$/;"	f
makeFeatures	heaps/h3d/impl/GlDriver.hx	/^	function makeFeatures() {$/;"	f
makeFrustumMatrix	heaps/h3d/Camera.hx	/^	function makeFrustumMatrix( m : Matrix ) {$/;"	f
makeID	heaps/hxd/res/DynamicText.hx	/^	public static function makeID( path : String, ident : Expr ) {$/;"	f
makeId	heaps/h3d/scene/World.hx	/^	inline function makeId( cx : Int, cy : Int ) {$/;"	f
makeIdent	heaps/hxd/res/FileTree.hx	/^	function makeIdent( s : String ) {$/;"	f
makeInit	heaps/hxsl/Macros.hx	/^	static function makeInit( e : Ast.TExpr ) : haxe.macro.Expr {$/;"	f
makeInstance	heaps/hxsl/SharedShader.hx	/^	function makeInstance( constBits : Int )  {$/;"	f
makeLineBreak	heaps/h2d/HtmlText.hx	/^			inline function makeLineBreak() {$/;"	f
makeLineBreak	heaps/h2d/HtmlText.hx	/^		inline function makeLineBreak()$/;"	f
makeLineInfo	heaps/h2d/HtmlText.hx	/^	inline function makeLineInfo( width : Float, height : Float, baseLine : Float ) : LineInfo {$/;"	f
makeLinearAnimation	heaps/hxd/fmt/hmd/Library.hx	/^	function makeLinearAnimation( a : Animation ) {$/;"	f
makeMaterial	heaps/hxd/fmt/hmd/Library.hx	/^	function makeMaterial( model : Model, mid : Int, loadTexture : String -> h3d.mat.Texture ) {$/;"	f
makeObject	heaps/hxd/fmt/hmd/Library.hx	/^	public function makeObject( ?loadTexture : String -> h3d.mat.Texture ) : h3d.scene.Object {$/;"	f
makeOutExpr	heaps/hxsl/Cache.hx	/^		function makeOutExpr( v : Output, rem : Int ) : TExpr {$/;"	f
makeOutput	heaps/hxsl/Cache.hx	/^		function makeOutput( v : Output ) : TExpr {$/;"	f
makePak	heaps/hxd/fmt/pak/Build.hx	/^	function makePak() {$/;"	f
makePosition	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function makePosition( m : h3d.Matrix ) {$/;"	f
makePrimitive	heaps/hxd/fmt/hmd/Library.hx	/^	function makePrimitive( id : Int ) {$/;"	f
makeSkin	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function makeSkin( skin : h3d.anim.Skin, obj : TmpObject ) {$/;"	f
makeSkin	heaps/hxd/fmt/hmd/Library.hx	/^	function makeSkin( skin : Skin, geom : Geometry ) {$/;"	f
makeSquare	heaps/hxd/Pixels.hx	/^	public function makeSquare( ?copy : Bool ) {$/;"	f
makeTexturePath	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function makeTexturePath( tex : FbxNode ) {$/;"	f
makeTiles	heaps/h2d/Particles.hx	/^	function makeTiles() {$/;"	f
makeTree	heaps/hxd/fs/EmbedFileSystem.hx	/^	static function makeTree( t : hxd.res.FileTree.FileTreeData ) : Dynamic {$/;"	f
makeType	heaps/hxsl/Macros.hx	/^	static function makeType( t : Type ) : ComplexType {$/;"	f
makeVar	heaps/hxsl/Cache.hx	/^		function makeVar( name : String, t, parent : TVar ) {$/;"	f
makeVar	heaps/hxsl/Checker.hx	/^	function makeVar( v : VarDecl, pos : Position, ?parent : TVar ) {$/;"	f
makeVarType	heaps/hxsl/Checker.hx	/^	function makeVarType( vt : Type, parent : TVar, pos : Position ) {$/;"	f
makeVec	heaps/hxsl/Cache.hx	/^		function makeVec( g, size, args : Array<Output>, makeOutExpr : Output -> Int -> TExpr ) {$/;"	f
manager	heaps/h2d/RenderContext.hx	/^	var manager : h3d.pass.ShaderManager;$/;"	v
manager	heaps/h3d/pass/Default.hx	/^	var manager : ShaderManager;$/;"	v
manager	heaps/h3d/pass/ScreenFx.hx	/^	var manager : ShaderManager;$/;"	v
manager	heaps/h3d/scene/MeshBatch.hx	/^				var manager = cast(ctx,h3d.pass.Default).manager;$/;"	v
manager	heaps/hxd/res/Sound.hx	/^				var manager = hxd.snd.Manager.get();$/;"	v
manager	heaps/hxd/snd/Channel.hx	/^	var manager : Manager;$/;"	v
manager	heaps/hxd/snd/NativeChannel.hx	/^	var manager : Manager;$/;"	v
managerDriver	heaps/hxd/snd/Effect.hx	/^		var managerDriver = hxd.snd.Manager.get().driver;$/;"	v
map	heaps/h2d/ZGroup.hx	/^	var map      : Map<Object, DepthEntry>;$/;"	v
map	heaps/hxd/Charset.hx	/^	var map : Map<Int,Int>;$/;"	v
map	heaps/hxd/Window.hl.hx	/^		var map = new Map<String,DisplaySetting>();$/;"	v
map	heaps/hxd/fmt/hmd/Library.hx	/^		var map = null, stride = 0;$/;"	v
map	heaps/hxd/res/DynamicText.hx	/^			var map = new Map();$/;"	v
map	heaps/hxd/res/Gradients.hx	/^		var map  = new Map<String, h3d.mat.Texture>();$/;"	v
map	heaps/hxd/res/Gradients.hx	/^		var map = new Map<String, h2d.Tile>();$/;"	v
map	heaps/hxsl/AgalOptim.hx	/^	inline function map( mop : Opcode, r : Reg -> Bool -> Reg ) {$/;"	f
map	heaps/hxsl/Ast.hx	/^	public static function map( e : TExpr, f : TExpr -> TExpr ) : TExpr {$/;"	f
map	heaps/hxsl/Globals.hx	/^	var map : Map<Int,Dynamic>;$/;"	v
mapCol	heaps/samples/CollideCheck.hx	/^	function mapCol( dist : h2d.col.Point -> Float, scale = 1. ) {$/;"	f
mapConsts	heaps/hxsl/Flatten.hx	/^	function mapConsts( e : TExpr ) : TExpr {$/;"	f
mapCount	heaps/h3d/impl/DirectXDriver.hx	/^	var mapCount : Int;$/;"	v
mapExpr	heaps/hxsl/Dce.hx	/^	function mapExpr( e : TExpr, isVar ) : TExpr {$/;"	f
mapExpr	heaps/hxsl/Flatten.hx	/^	function mapExpr( e : TExpr ) : TExpr {$/;"	f
mapExprVar	heaps/hxsl/Linker.hx	/^	function mapExprVar( e : TExpr ) {$/;"	f
mapFun	heaps/hxsl/Flatten.hx	/^	function mapFun( f : TFunction, mapExpr : TExpr -> TExpr ) : TFunction {$/;"	f
mapTriangleToNodes	heaps/hxd/poly2tri/SweepContext.hx	/^	public function mapTriangleToNodes(triangle:Triangle)$/;"	f
mapVar	heaps/hxsl/Eval.hx	/^	function mapVar( v : TVar ) {$/;"	f
mapVars	heaps/hxsl/Splitter.hx	/^	function mapVars( e : TExpr ) {$/;"	f
marginBottom	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var marginBottom = 0;$/;"	v
marginLeft	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var marginLeft = 0;$/;"	v
marginRight	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var marginRight = 0;$/;"	v
marginTop	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var marginTop = 0;$/;"	v
mark	heaps/h3d/impl/VarBinding.hx	/^	public var mark : Bool;$/;"	v
mark	heaps/h3d/scene/Renderer.hx	/^	function mark(id: String) {$/;"	f
markAsKeep	heaps/hxsl/Dce.hx	/^	var markAsKeep : Bool;$/;"	v
markConstrainedEdgeByEdge	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function markConstrainedEdgeByEdge(edge:Edge)$/;"	f
markConstrainedEdgeByPoints	heaps/hxd/poly2tri/Triangle.hx	/^	public function markConstrainedEdgeByPoints(p:Point, q:Point)$/;"	f
markNeighbor	heaps/hxd/poly2tri/Triangle.hx	/^	public function markNeighbor(t:Triangle, p1:Point, p2:Point)$/;"	f
markNeighborTriangle	heaps/hxd/poly2tri/Triangle.hx	/^	public function markNeighborTriangle(that:Triangle)$/;"	f
markRec	heaps/h3d/impl/VarBinding.hx	/^		function markRec( i : Init ) {$/;"	f
markRec	heaps/hxsl/Dce.hx	/^	function markRec( v : VarDeps ) {$/;"	f
markReturn	heaps/hxsl/Eval.hx	/^	var markReturn : Bool;$/;"	v
marked	heaps/hxsl/Linker.hx	/^	public var marked : Null<Bool>;$/;"	v
marker	heaps/hxd/res/NanoJpeg.hx	/^				var marker = get(0);$/;"	v
mask	heaps/h2d/filter/AbstractMask.hx	/^	public var mask(default, set) : h2d.Object;$/;"	v
mask	heaps/h2d/filter/Mask.hx	/^		@param var mask : Sampler2D;$/;"	v
mask	heaps/h2d/filter/Mask.hx	/^		var mask = getMaskTexture(ctx, t);$/;"	v
mask	heaps/h3d/impl/DirectXDriver.hx	/^		var mask = pass.colorMask;$/;"	v
mask	heaps/h3d/impl/Stage3dDriver.hx	/^		var mask = 0;$/;"	v
mask	heaps/h3d/pass/ColorMatrix.hx	/^		@param var mask : Sampler2D;$/;"	v
mask	heaps/h3d/pass/HardwarePick.hx	/^			var mask = h3d.mat.Pass.blendSrc_mask | h3d.mat.Pass.blendDst_mask | h3d.mat.Pass.blendAlphaD/;"	v
mask	heaps/hxd/Pixels.hx	/^		var mask = preserveMask;$/;"	v
mask	heaps/hxd/impl/BitsBuilder.hx	/^				var mask = (1 << bits) - 1;$/;"	v
mask	heaps/hxsl/AgalOptim.hx	/^			var mask = 0;$/;"	v
mask	heaps/hxsl/AgalOptim.hx	/^		var mask = 0, ncomps = 0;$/;"	v
mask	heaps/samples/Filters.hx	/^	var mask : h2d.Graphics;$/;"	v
mask	heaps/samples/Mask.hx	/^	var mask : h2d.Mask;$/;"	v
maskBits	heaps/h3d/mat/Stencil.hx	/^	var maskBits  : Int = 0;$/;"	v
maskChannel	heaps/h3d/pass/ColorMatrix.hx	/^		@param var maskChannel : Vec4;$/;"	v
maskInvert	heaps/h3d/pass/ColorMatrix.hx	/^		@const var maskInvert : Bool;$/;"	v
maskMatA	heaps/h2d/filter/Mask.hx	/^		@param var maskMatA : Vec3;$/;"	v
maskMatA	heaps/h3d/pass/ColorMatrix.hx	/^		@param var maskMatA : Vec3;$/;"	v
maskMatB	heaps/h2d/filter/Mask.hx	/^		@param var maskMatB : Vec3;$/;"	v
maskMatB	heaps/h3d/pass/ColorMatrix.hx	/^		@param var maskMatB : Vec3;$/;"	v
maskMatrix	heaps/h2d/filter/AbstractMask.hx	/^	var maskMatrix : h2d.col.Matrix;$/;"	v
maskPower	heaps/h3d/pass/ColorMatrix.hx	/^		@param var maskPower : Float;$/;"	v
maskPower	heaps/h3d/pass/ColorMatrix.hx	/^	public var maskPower(get, set) : Float;$/;"	v
maskVisible	heaps/h2d/filter/AbstractMask.hx	/^	public var maskVisible : Bool;$/;"	v
maskVisible	heaps/h2d/filter/AbstractMask.hx	/^	public var maskVisible(default, set) : Bool;$/;"	v
maskWith	heaps/h2d/Mask.hx	/^	public static function maskWith( ctx : RenderContext, object : Object, width : Int, height : In/;"	f
maskedBounds	heaps/h2d/Interactive.hx	/^	var maskedBounds : h2d.col.Bounds;$/;"	v
masterChannelGroup	heaps/hxd/snd/Manager.hx	/^	public var masterChannelGroup (default, null) : ChannelGroup;$/;"	v
masterGain	heaps/hxd/snd/webaudio/Context.hx	/^	public static var masterGain : GainNode;$/;"	v
masterGain	heaps/hxd/snd/webaudio/Driver.hx	/^	public var masterGain(get, never) : GainNode;$/;"	v
masterSoundGroup	heaps/hxd/snd/Manager.hx	/^	public var masterSoundGroup   (default, null) : SoundGroup;$/;"	v
masterVolume	heaps/hxd/snd/Manager.hx	/^	public var masterVolume	: Float;$/;"	v
mat	heaps/h3d/anim/BufferAnimation.hx	/^				var mat = o.targetObject.toMesh().material;$/;"	v
mat	heaps/h3d/anim/LinearAnimation.hx	/^				var mat = o.targetObject.toMesh().material;$/;"	v
mat	heaps/h3d/anim/SmoothTarget.hx	/^			var mat = null;$/;"	v
mat	heaps/h3d/col/ObjectCollider.hx	/^		var mat = TMP_MAT;$/;"	v
mat	heaps/h3d/col/TransformCollider.hx	/^		var mat = TMP_MAT;$/;"	v
mat	heaps/h3d/col/TransformCollider.hx	/^	public var mat(default, set) : h3d.Matrix;$/;"	v
mat	heaps/h3d/mat/Material.hx	/^		var mat = h3d.mat.MaterialSetup.current.createMaterial();$/;"	v
mat	heaps/h3d/parts/GpuParticles.hx	/^				var mat = parent.materials[index];$/;"	v
mat	heaps/h3d/pass/CubeCopy.hx	/^		@param var mat : Mat3;$/;"	v
mat	heaps/h3d/scene/MeshBatch.hx	/^			var mat = materials[index];$/;"	v
mat	heaps/h3d/scene/World.hx	/^				var mat = lib.header.materials[m.materials[mid]];$/;"	v
mat	heaps/h3d/scene/World.hx	/^	public var mat : hxd.fmt.hmd.Data.Material;$/;"	v
mat	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var mat = dl.shadows.getShadowProj();$/;"	v
mat	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var mat = sl.shadows.getShadowProj();$/;"	v
mat	heaps/h3d/shader/MinMaxShader.hx	/^		@param var mat : Mat3;$/;"	v
mat	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var mat = new Material();$/;"	v
mat	heaps/hxd/fmt/hmd/Library.hx	/^		var mat = h3d.mat.MaterialSetup.current.createMaterial();$/;"	v
mat	heaps/samples/Base3D.hx	/^		var mat = h3d.mat.Material.create(tex);$/;"	v
matA	heaps/h2d/Camera.hx	/^	var matA : Float;$/;"	v
matA	heaps/h2d/Object.hx	/^		var matA, matB, matC, matD, absX, absY;$/;"	v
matA	heaps/h2d/Object.hx	/^	var matA : Float;$/;"	v
matA	heaps/h2d/RenderContext.hx	/^		var matA, matB, matC, matD, absX, absY;$/;"	v
matA	heaps/h2d/Scene.hx	/^		var matA, matB, matC, matD, absX, absY;$/;"	v
matB	heaps/h2d/Camera.hx	/^	var matB : Float;$/;"	v
matB	heaps/h2d/Object.hx	/^	var matB : Float;$/;"	v
matC	heaps/h2d/Camera.hx	/^	var matC : Float;$/;"	v
matC	heaps/h2d/Object.hx	/^	var matC : Float;$/;"	v
matCount	heaps/hxd/fmt/hmd/Reader.hx	/^			var matCount = i.readByte();$/;"	v
matD	heaps/h2d/Camera.hx	/^	var matD : Float;$/;"	v
matD	heaps/h2d/Object.hx	/^	var matD : Float;$/;"	v
matIndex	heaps/h3d/scene/MeshBatch.hx	/^	public var matIndex : Int;$/;"	v
matInfo	heaps/h3d/scene/MeshBatch.hx	/^			var matInfo = @:privateAccess instanced.primitive.getMaterialIndexes(index);$/;"	v
matMap	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var matMap = [], matCount = 0;$/;"	v
match	heaps/hxd/clipper/Clipper.hx	/^        var match = true;$/;"	v
match	heaps/hxd/fs/FileConverter.hx	/^		var match = null;$/;"	v
material	heaps/h3d/anim/Skin.hx	/^	public var material : Int;$/;"	v
material	heaps/h3d/parts/GpuParticles.hx	/^	public var material = {};$/;"	v
material	heaps/h3d/pass/HardwarePick.hx	/^	var material : h3d.mat.Pass;$/;"	v
material	heaps/h3d/scene/Mesh.hx	/^	public var material : h3d.mat.Material;$/;"	v
material	heaps/h3d/scene/MeshBatch.hx	/^			var material = materials[p.matIndex];$/;"	v
materialData	heaps/h3d/scene/Trail.hx	/^	public var materialData = {};$/;"	v
materialIndex	heaps/hxd/fmt/hmd/Data.hx	/^	public var materialIndex : Int;$/;"	v
materials	heaps/h3d/scene/Interactive.hx	/^		var materials = debugObj.getMaterials();$/;"	v
materials	heaps/h3d/scene/MultiMaterial.hx	/^	public var materials : Array<h3d.mat.Material>;$/;"	v
materials	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var materials = getChilds(m, "Material");$/;"	v
materials	heaps/hxd/fmt/hmd/Data.hx	/^	public var materials : Array<Material>;$/;"	v
materials	heaps/hxd/fmt/hmd/Data.hx	/^	public var materials : Null<Array<Index<Material>>>;$/;"	v
matrix	heaps/h2d/filter/ColorMatrix.hx	/^	public var matrix(get, set) : h3d.Matrix;$/;"	v
matrix	heaps/h3d/anim/BufferAnimation.hx	/^	public var matrix : h3d.Matrix;$/;"	v
matrix	heaps/h3d/anim/LinearAnimation.hx	/^	public var matrix : h3d.Matrix;$/;"	v
matrix	heaps/h3d/pass/ColorMatrix.hx	/^		@param var matrix : Mat4;$/;"	v
matrix	heaps/h3d/pass/ColorMatrix.hx	/^	public var matrix(get, set) : h3d.Matrix;$/;"	v
matrix	heaps/h3d/shader/ColorMatrix.hx	/^		@param var matrix : Mat4;$/;"	v
matrix	heaps/h3d/shader/VolumeDecal.hx	/^			var matrix = camera.inverseViewProj * global.modelViewInverse;$/;"	v
matrix	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var matrix = camera.inverseViewProj * global.modelViewInverse;$/;"	v
matrix2	heaps/h3d/pass/ColorMatrix.hx	/^		@param var matrix2 : Mat4;$/;"	v
mats	heaps/hxd/fmt/fbx/Geometry.hx	/^		var mats = [];$/;"	v
mats	heaps/hxd/fmt/fbx/Geometry.hx	/^		var mats = getMaterials();$/;"	v
mats	heaps/hxd/fmt/fbx/Geometry.hx	/^		var mats = root.get("LayerElementMaterial",true);$/;"	v
mats	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var mats = geom.getMaterials();$/;"	v
max	heaps/h2d/HtmlText.hx	/^				var max = if( align == MultilineCenter || align == MultilineRight ) hxd.Math.ceil(calcWidth)/;"	v
max	heaps/h2d/HtmlText.hx	/^		var max = 0.;$/;"	v
max	heaps/h2d/Layers.hx	/^			var max = layersIndexes[layer];$/;"	v
max	heaps/h2d/Layers.hx	/^		var max = layersIndexes[layer];$/;"	v
max	heaps/h2d/Text.hx	/^			var max = if( align == MultilineCenter || align == MultilineRight ) hxd.Math.ceil(calcWidth) /;"	v
max	heaps/h2d/TileGroup.hx	/^		var max = content.triCount();$/;"	v
max	heaps/h3d/Vector.hx	/^	    var max = hxd.Math.max(hxd.Math.max(r, g), b);$/;"	v
max	heaps/h3d/anim/Animation.hx	/^		var max = endFrame();$/;"	v
max	heaps/h3d/anim/Skin.hx	/^		var max = b.length;$/;"	v
max	heaps/h3d/impl/DirectXDriver.hx	/^			var max = -1;$/;"	v
max	heaps/h3d/impl/MemoryManager.hx	/^		var max = b.flags.has(Quads) ? 65532 : b.flags.has(Triangles) ? 65533 : 65534;$/;"	v
max	heaps/h3d/impl/Stage3dDriver.hx	/^		var max = format.agal.Tools.getProps(RConst, !s.vertex, agalVersion).count;$/;"	v
max	heaps/h3d/parts/GpuParticles.hx	/^			var max = (1 + emitDist) * 0.5;$/;"	v
max	heaps/h3d/parts/GpuParticles.hx	/^			var max = 1 + g.emitDist;$/;"	v
max	heaps/hxd/Math.hx	/^	public static inline function max( a : Float, b : Float ) {$/;"	f
max	heaps/hxd/net/Socket.hx	/^		var max = len < this.len ? len : this.len;$/;"	v
max	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^		var max = source.driver.ctx.sampleRate \/ 2;$/;"	v
max	heaps/hxsl/AgalOptim.hx	/^		var max = format.agal.Tools.getProps(RTemp, data.fragmentShader, data.version).count;$/;"	v
max	heaps/samples/Pbr.hx	/^		var max = 8;$/;"	v
maxAlpha	heaps/h3d/shader/Outline2D.hx	/^			var maxAlpha = 0.;$/;"	v
maxAudible	heaps/hxd/snd/SoundGroup.hx	/^	public var maxAudible           : Int;$/;"	v
maxAuxiliarySends	heaps/hxd/snd/openal/Driver.hx	/^	public var maxAuxiliarySends(default, null) : Int;$/;"	v
maxBones	heaps/h3d/scene/Skin.hx	/^			var maxBones = 0;$/;"	v
maxBonesPerSkin	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var maxBonesPerSkin = 34;$/;"	v
maxChannels	heaps/hxsl/Globals.hx	/^	var maxChannels : Int;$/;"	v
maxChildH	heaps/h2d/Flow.hx	/^			var maxChildH = 0;$/;"	v
maxChildW	heaps/h2d/Flow.hx	/^			var maxChildW = 0;$/;"	v
maxColWidth	heaps/h2d/Flow.hx	/^			var maxColWidth = 0;$/;"	v
maxCompressedTexturesSupport	heaps/h3d/impl/GlDriver.hx	/^	var maxCompressedTexturesSupport = 0;$/;"	v
maxDelta	heaps/h2d/KeyFrames.hx	/^			var maxDelta = 1 \/ yVal;$/;"	v
maxDeltaTime	heaps/hxd/Timer.hx	/^	public static var maxDeltaTime = 0.5;$/;"	v
maxDist	heaps/h3d/parts/GpuParticles.hx	/^			var maxDist = speedMin * (1 + speedIncr * life) * life - gravity * life * life;$/;"	v
maxDist	heaps/h3d/pass/DirShadowMap.hx	/^			var maxDist = maxDist < 0 ? ctx.camera.zFar : maxDist;$/;"	v
maxDist	heaps/h3d/pass/DirShadowMap.hx	/^	public var maxDist = -1.0;$/;"	v
maxDist	heaps/hxd/snd/openal/SpatializationDriver.hx	/^		var maxDist : Float = e.maxDistance == null ? 3.40282347e38 : e.maxDistance;$/;"	v
maxDist	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^		var maxDist : Float = e.maxDistance == null ? 3.40282347e38 : e.maxDistance;$/;"	v
maxDistance	heaps/h3d/scene/CameraController.hx	/^	public var maxDistance : Float = 1e20;$/;"	v
maxDistance	heaps/hxd/snd/effect/Spatialization.hx	/^	public var maxDistance  : Null<Float>;$/;"	v
maxExtent	heaps/h2d/Object.hx	/^			var maxExtent = filter.boundsExtend;$/;"	v
maxHeight	heaps/h2d/Flow.hx	/^	public var maxHeight(default, set) : Null<Int>;$/;"	v
maxHeight	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var maxHeight : Null<Int>;$/;"	v
maxHistorySize	heaps/h2d/TextInput.hx	/^	var maxHistorySize = 100;$/;"	v
maxIdxCurAttribs	heaps/h3d/impl/GlDriver.hx	/^	var maxIdxCurAttribs : Int = 0;$/;"	v
maxInHeight	heaps/h2d/Flow.hx	/^		var maxInHeight = maxTotHeight - (paddingTop + paddingBottom + (borderTop + borderBottom));$/;"	v
maxInWidth	heaps/h2d/Flow.hx	/^		var maxInWidth = maxTotWidth - (paddingLeft + paddingRight + (borderLeft + borderRight));$/;"	v
maxInstance	heaps/h3d/scene/MeshBatch.hx	/^	public var maxInstance : Int;$/;"	v
maxKeepTime	heaps/hxd/impl/CacheAllocator.hx	/^	public var maxKeepTime = 60.;$/;"	v
maxLayers	heaps/h3d/shader/Parallax.hx	/^		@const var maxLayers : Int = 24;$/;"	v
maxLife	heaps/h2d/Particles.hx	/^	public var maxLife : Float;$/;"	v
maxLife	heaps/h3d/parts/GpuParticles.hx	/^			var maxLife = g.life * (1 + g.lifeRand + 1 - g.emitSync) + g.emitDelay;$/;"	v
maxLightsPerObject	heaps/h3d/scene/fwd/LightSystem.hx	/^	public var maxLightsPerObject = 6;$/;"	v
maxLineHeight	heaps/h2d/Flow.hx	/^			var maxLineHeight = 0;$/;"	v
maxParts	heaps/h3d/parts/Data.hx	/^	public var maxParts : Int;$/;"	v
maxRegs	heaps/hxsl/AgalOptim.hx	/^	var maxRegs : Int;$/;"	v
maxSamplers	heaps/h3d/impl/DirectXDriver.hx	/^	var maxSamplers = 16;$/;"	v
maxSize	heaps/hxd/impl/Air3File.hx	/^	var maxSize : Int;$/;"	v
maxT	heaps/h2d/KeyFrames.hx	/^			var maxT = 1.;$/;"	v
maxT	heaps/hxd/snd/openal/Emulator.hx	/^			var maxT = source.duration;$/;"	v
maxTextures	heaps/h3d/impl/Stage3dDriver.hx	/^		var maxTextures = format.agal.Tools.getProps(RTexture, !s.vertex, agalVersion).count;$/;"	v
maxTime	heaps/h3d/parts/GpuParticles.hx	/^	var maxTime : Float = -1.;$/;"	v
maxTime	heaps/h3d/shader/GpuParticle.hx	/^		@param var maxTime : Float;$/;"	v
maxTime	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var maxTime = allTimes[allTimes.length - 1];$/;"	v
maxTotHeight	heaps/h2d/Flow.hx	/^		var maxTotHeight = realMaxHeight < 0 ? 100000000 : Math.floor(realMaxHeight);$/;"	v
maxTotWidth	heaps/h2d/Flow.hx	/^		var maxTotWidth = realMaxWidth < 0 ? 100000000 : Math.floor(realMaxWidth);$/;"	v
maxTri	heaps/h3d/Engine.hx	/^		var maxTri = Std.int(indexes.count \/ 3);$/;"	v
maxTx	heaps/h3d/col/Bounds.hx	/^		var maxTx = (xMax - r.px) \/ r.lx;$/;"	v
maxTy	heaps/h3d/col/Bounds.hx	/^		var maxTy = (yMax - r.py) \/ r.ly;$/;"	v
maxTz	heaps/h3d/col/Bounds.hx	/^		var maxTz = (zMax - r.pz) \/ r.lz;$/;"	v
maxValue	heaps/h2d/Slider.hx	/^	public var maxValue(default, set) : Float = 1;$/;"	v
maxValue	heaps/hxd/Perlin.hx	/^	public function maxValue( octaves : Int, persist : Float ) {$/;"	f
maxVarying	heaps/h3d/impl/Stage3dDriver.hx	/^		var maxVarying = format.agal.Tools.getProps(RVar, !s.vertex, agalVersion).count;$/;"	v
maxWidth	heaps/h2d/Flow.hx	/^	public var maxWidth(default, set) : Null<Int>;$/;"	v
maxWidth	heaps/h2d/HtmlText.hx	/^			var maxWidth = realMaxWidth < 0 ? Math.POSITIVE_INFINITY : realMaxWidth;$/;"	v
maxWidth	heaps/h2d/Text.hx	/^		var maxWidth = realMaxWidth;$/;"	v
maxWidth	heaps/h2d/Text.hx	/^	public var maxWidth(default, set) : Null<Float>;$/;"	v
maxWidth	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var maxWidth : Null<Int>;$/;"	v
maxX	heaps/hxd/earcut/Earcut.hx	/^			var maxX, maxY;$/;"	v
maxmin	heaps/h3d/col/Bounds.hx	/^		var maxmin = Math.max( Math.max(realMinTx, realMinTy), realMinTz);$/;"	v
mb	heaps/h2d/Graphics.hx	/^	var mb : Float = 0.;$/;"	v
mbToNp	heaps/hxd/snd/openal/ReverbDriver.hx	/^		inline function mbToNp(mb : Float) { return Math.pow(10, mb \/ 100 \/ 20); }$/;"	f
mbheight	heaps/hxd/res/NanoJpeg.hx	/^	var mbheight : Int;$/;"	v
mbsizex	heaps/hxd/res/NanoJpeg.hx	/^	var mbsizex : Int;$/;"	v
mbsizey	heaps/hxd/res/NanoJpeg.hx	/^	var mbsizey : Int;$/;"	v
mbwidth	heaps/hxd/res/NanoJpeg.hx	/^	var mbwidth : Int;$/;"	v
mbx	heaps/hxd/res/NanoJpeg.hx	/^		var mbx = 0, mby = 0;$/;"	v
mc	heaps/h2d/Graphics.hx	/^	var mc : Float = 0.;$/;"	v
mcam	heaps/h3d/Camera.hx	/^	public var mcam : Matrix;$/;"	v
mcamInv	heaps/h3d/Camera.hx	/^	var mcamInv : Matrix;$/;"	v
md	heaps/h2d/Graphics.hx	/^	var md : Float = 1.;$/;"	v
md	heaps/hxd/fmt/hmd/Dump.hx	/^					var md = h.materials[m];$/;"	v
me	heaps/hxd/res/DynamicText.hx	/^							var me = m.get(p);$/;"	v
me	heaps/hxd/res/DynamicText.hx	/^			var me = parseMetaDataRec(e);$/;"	v
measure	heaps/h3d/impl/Benchmark.hx	/^	public function measure( name : String ) {$/;"	f
measureCpu	heaps/h3d/impl/Benchmark.hx	/^	public var measureCpu = false;$/;"	v
median	heaps/h3d/shader/SignedDistanceField.hx	/^		function median(r : Float, g : Float, b : Float) : Float {$/;"	f
mem	heaps/h3d/Engine.hx	/^	public var mem(default,null) : h3d.impl.MemoryManager;$/;"	v
mem	heaps/h3d/Indexes.hx	/^	var mem : h3d.impl.MemoryManager;$/;"	v
mem	heaps/h3d/impl/ManagedBuffer.hx	/^	var mem : MemoryManager;$/;"	v
mem	heaps/h3d/impl/MemoryManager.hx	/^		var mem = m.size * m.stride * 4;$/;"	v
mem	heaps/h3d/impl/Stage3dDriver.hx	/^				var mem : UInt = f.count * b.stride * 4;$/;"	v
mem	heaps/h3d/mat/Texture.hx	/^	var mem : h3d.impl.MemoryManager;$/;"	v
memSize	heaps/h3d/impl/MemoryManager.hx	/^	function memSize( t : h3d.mat.Texture ) {$/;"	f
merge	heaps/h3d/anim/Skin.hx	/^	function merge( permuts : Array<Permut> ) {$/;"	f
merge	heaps/h3d/pass/DirShadowMap.hx	/^			var merge = ctx.textures.allocTarget("mergedDirShadowMap", size, size, false, format);$/;"	v
merge	heaps/h3d/pass/PointShadowMap.hx	/^		var merge : h3d.mat.Texture = null;$/;"	v
merge	heaps/h3d/pass/PointShadowMap.hx	/^	function merge( dynamicTex : h3d.mat.Texture ) : h3d.mat.Texture{$/;"	f
merge	heaps/h3d/pass/SpotShadowMap.hx	/^			var merge = ctx.textures.allocTarget("mergedSpotShadowMap", size, size, false, format);$/;"	v
merge	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function merge( g : Geometry, materials : Array<Int> ) {$/;"	f
merge	heaps/hxd/fs/FileConverter.hx	/^		var merge = mergeRec(def, conf);$/;"	v
mergeModels	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function mergeModels( modelNames : Array<String> ) {$/;"	f
mergePass	heaps/h3d/pass/DirShadowMap.hx	/^	var mergePass = new h3d.pass.ScreenFx(new h3d.shader.MinMaxShader());$/;"	v
mergePass	heaps/h3d/pass/PointShadowMap.hx	/^	var mergePass = new h3d.pass.ScreenFx(new h3d.shader.MinMaxShader.CubeMinMaxShader());$/;"	v
mergePass	heaps/h3d/pass/SpotShadowMap.hx	/^	var mergePass = new h3d.pass.ScreenFx(new h3d.shader.MinMaxShader());$/;"	v
mergeRec	heaps/hxd/fs/FileConverter.hx	/^	function mergeRec( a : Dynamic, b : Dynamic ) {$/;"	f
mergeVar	heaps/hxsl/Linker.hx	/^	function mergeVar( path : String, v : TVar, v2 : TVar, p : Position, shaderName : String ) {$/;"	f
merged	heaps/hxsl/Linker.hx	/^	public var merged : Array<TVar>;$/;"	v
meshClean	heaps/hxd/poly2tri/SweepContext.hx	/^	public function meshClean(t:Triangle)$/;"	f
meshes	heaps/samples/MeshBatch.hx	/^	var meshes : Array<MeshInst>;$/;"	v
metalness	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var metalness : Float;$/;"	v
metalness	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var metalness : Float;$/;"	v
metalness	heaps/h3d/shader/pbr/PropsImport.hx	/^		var metalness : Float;$/;"	v
metalness	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var metalness : Float;$/;"	v
metalness	heaps/h3d/shader/pbr/PropsValues.hx	/^		var metalness : Float;$/;"	v
metalness	heaps/h3d/shader/pbr/Slides.hx	/^		var metalness : Float;$/;"	v
metalnessValue	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var metalnessValue : Float;$/;"	v
metas	heaps/hxsl/Macros.hx	/^		var metas = [{ name : ":noCompletion", pos : pos }, { name : ":keep", pos : pos }];$/;"	v
metrics	heaps/h2d/HtmlText.hx	/^		var metrics : Array<LineInfo> = [ makeLineInfo(0, font.lineHeight, font.baseLine) ];$/;"	v
metrics	heaps/h2d/HtmlText.hx	/^		var metrics = [makeLineInfo(0, font.lineHeight, font.baseLine)];$/;"	v
mh	heaps/h3d/mat/Texture.hx	/^		var mh = this.height >> mip; if( mh == 0 ) mh = 1;$/;"	v
microOcclusion	heaps/h3d/shader/SAO.hx	/^		@ignore @param var microOcclusion : Channel;$/;"	v
microOcclusionIntensity	heaps/h3d/shader/SAO.hx	/^		@param var microOcclusionIntensity : Float;$/;"	v
mid	heaps/h3d/anim/Skin.hx	/^			var mid = triangleMaterials == null ? 0 : triangleMaterials[tri];$/;"	v
mid	heaps/h3d/pass/FXAA.hx	/^			var mid = origin.rgb;$/;"	v
mid	heaps/hxd/fmt/fbx/Geometry.hx	/^			var mid = materials[0];$/;"	v
mid	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var mid = d.materials.length;$/;"	v
mid	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var mid = hmat.get(m.getId());$/;"	v
mid	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var mid;$/;"	v
mid	heaps/hxd/fmt/hmd/Library.hx	/^		var mid = -1;$/;"	v
midPoint	heaps/h3d/col/Capsule.hx	/^		var midPoint = new Point(full.x \/ 2, full.y \/ 2, full.z \/ 2);$/;"	v
midSpace	heaps/h2d/Flow.hx	/^			var midSpace = 0, curAlign = null;$/;"	v
middle	heaps/hxd/poly2tri/SweepContext.hx	/^		var middle = new Node( triangle.points[0], triangle );$/;"	v
middleInside	heaps/hxd/earcut/Earcut.hx	/^	function middleInside(a:EarNode, b:EarNode) {$/;"	f
midpoint	heaps/hxd/fmt/grd/Data.hx	/^	public var midpoint : Int;$/;"	v
mids	heaps/hxd/fmt/fbx/Geometry.hx	/^		var mids = getMaterials();$/;"	v
mids	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var mids : Array<Int> = [];$/;"	v
mime	heaps/hxd/fs/BytesFileSystem.hx	/^		var mime = switch fullPath.extension().toLowerCase() {$/;"	v
min	heaps/h2d/TileGroup.hx	/^		var min = rangeMin < 0 ? 0 : rangeMin * 2;$/;"	v
min	heaps/h3d/Vector.hx	/^		var min = hxd.Math.min(hxd.Math.min(r, g), b);$/;"	v
min	heaps/h3d/parts/GpuParticles.hx	/^				var min = g.emitStartDist * 0.5;$/;"	v
min	heaps/hxd/Math.hx	/^	public static inline function min( a : Float, b : Float ) {$/;"	f
min	heaps/hxd/Pad.hx	/^					var min = c.minValue, max = c.maxValue;$/;"	v
min	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^		var min = 40;$/;"	v
minArgs	heaps/hxsl/Checker.hx	/^		var minArgs = 1000, maxArgs = -1000, sel = [];$/;"	v
minBg	heaps/samples/ScaleMode2D.hx	/^		var minBg = new h2d.Bitmap(h2d.Tile.fromColor(0x222222), s2d);$/;"	v
minColWidth	heaps/h2d/Flow.hx	/^			var minColWidth = this.colWidth != null ? colWidth : (this.realMinWidth >= 0 && !multiline) ?/;"	v
minDT	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var minDT = maxTime;$/;"	v
minDepth	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var minDepth = getDepth(bones[0]);$/;"	v
minDif	heaps/h3d/anim/Skin.hx	/^			var minDif = 100000, minTot = 100000, minP1 : Permut = null, minP2 : Permut = null;$/;"	v
minDist	heaps/h2d/col/Polygon.hx	/^		var minDist = maxDist * maxDist;$/;"	v
minDist	heaps/h3d/pass/DirShadowMap.hx	/^			var minDist = minDist < 0 ? ctx.camera.zNear : minDist;$/;"	v
minDist	heaps/h3d/pass/DirShadowMap.hx	/^	public var minDist = -1.0;$/;"	v
minDistSq	heaps/h2d/col/Polygon.hx	/^		var minDistSq = 1e10;$/;"	v
minDistance	heaps/h3d/scene/CameraController.hx	/^	public var minDistance : Float = 0.;$/;"	v
minHeight	heaps/h2d/Flow.hx	/^	public var minHeight : Null<Int>;$/;"	v
minHeight	heaps/h2d/Flow.hx	/^	public var minHeight(default, set) : Null<Int>;$/;"	v
minISize	heaps/h3d/prim/DynamicPrimitive.hx	/^	public var minISize = 0;$/;"	v
minLayers	heaps/h3d/shader/Parallax.hx	/^		@const var minLayers : Int = 6;$/;"	v
minLen	heaps/hxsl/CacheFile.hx	/^		var minLen = hxd.Math.imin(r1.spec.instances.length, r2.spec.instances.length);$/;"	v
minLineHeight	heaps/h2d/Flow.hx	/^			var minLineHeight = this.lineHeight != null ? lineHeight : (this.realMinHeight >= 0 && !multi/;"	v
minPos	heaps/hxsl/AgalOptim.hx	/^		var minPos = 10000000, mask = 0;$/;"	v
minScale	heaps/h3d/scene/pbr/PointLight.hx	/^		var minScale = 1.0;$/;"	v
minT	heaps/h2d/KeyFrames.hx	/^			var minT = 0.;$/;"	v
minTX	heaps/hxd/earcut/Earcut.hx	/^		var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),$/;"	v
minTx	heaps/h3d/col/Bounds.hx	/^		var minTx = (xMin - r.px) \/ r.lx;$/;"	v
minTy	heaps/h3d/col/Bounds.hx	/^		var minTy = (yMin - r.py) \/ r.ly;$/;"	v
minTz	heaps/h3d/col/Bounds.hx	/^		var minTz = (zMin - r.pz) \/ r.lz;$/;"	v
minVSize	heaps/h3d/prim/DynamicPrimitive.hx	/^	public var minVSize = 0;$/;"	v
minVal	heaps/h3d/pass/Blur.hx	/^		var minVal = values[0] * (0.01 \/ qadj);$/;"	v
minValue	heaps/h2d/Slider.hx	/^	public var minValue(default, set) : Float = 0;$/;"	v
minWidth	heaps/h2d/Flow.hx	/^	public var minWidth : Null<Int>;$/;"	v
minWidth	heaps/h2d/Flow.hx	/^	public var minWidth(default, set) : Null<Int>;$/;"	v
minX	heaps/hxd/earcut/Earcut.hx	/^	var minX : Float;$/;"	v
minY	heaps/hxd/earcut/Earcut.hx	/^	var minY : Float;$/;"	v
minZ	heaps/hxd/earcut/Earcut.hx	/^		var minZ = zOrder(minTX, minTY),$/;"	v
mindex	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var mindex = [];$/;"	v
minmax	heaps/h3d/col/Bounds.hx	/^		var minmax = Math.min( Math.min(realMaxTx, realMaxTy), realMaxTz);$/;"	v
minv	heaps/h3d/Camera.hx	/^	var minv : Matrix;$/;"	v
minv	heaps/h3d/scene/Scene.hx	/^				var minv = i.getInvPos();$/;"	v
mip	heaps/h3d/impl/GlDriver.hx	/^				var mip = Type.enumIndex(t.mipMap);$/;"	v
mipLevel	heaps/h3d/Engine.hx	/^	public var mipLevel : Int;$/;"	v
mipLevel	heaps/hxd/res/Image.hx	/^			var mipLevel = 0;$/;"	v
mipLevels	heaps/h3d/mat/Texture.hx	/^	public var mipLevels(get, never) : Int;$/;"	v
mipLevels	heaps/h3d/scene/pbr/Environment.hx	/^		var mipLevels = 1;$/;"	v
mipLevels	heaps/h3d/scene/pbr/Environment.hx	/^		var mipLevels = getMipLevels();$/;"	v
mipLevels	heaps/hxd/res/Image.hx	/^	public var mipLevels(default,null) : Int = 1;$/;"	v
mipMap	heaps/h3d/mat/Texture.hx	/^	public var mipMap(default,set) : MipMap;$/;"	v
mips	heaps/h3d/impl/DirectXDriver.hx	/^		var mips = 1;$/;"	v
mips	heaps/hxd/fs/Convert.hx	/^		var mips = hasParam("mips") && getParam("mips") == true;$/;"	v
missingShader	heaps/hxsl/CacheFile.hx	/^			var missingShader = false;$/;"	v
missingStr	heaps/hxd/res/DynamicText.hx	/^		var missingStr = false;$/;"	v
mkInt	heaps/hxsl/Flatten.hx	/^	inline function mkInt(v:Int,pos) {$/;"	f
mod	heaps/hxd/fmt/blend/Data.hx	/^		var mod = pos % 4;$/;"	v
mod289	heaps/h3d/shader/NoiseLib.hx	/^function mod289(x:Float) : Float {$/;"	f
mod289_3	heaps/h3d/shader/NoiseLib.hx	/^function mod289_3(x:Vec3) : Vec3 {$/;"	f
mode	heaps/h2d/CdbLevel.hx	/^		var mode : cdb.Data.LayerMode = lprops != null && lprops.mode != null ? lprops.mode : Tiles;$/;"	v
mode	heaps/h3d/impl/GlDriver.hx	/^					var mode = getBindType(t);$/;"	v
mode	heaps/h3d/impl/GlDriver.hx	/^					var mode = pt.mode;$/;"	v
mode	heaps/h3d/impl/GlDriver.hx	/^		var mode = 0;$/;"	v
mode	heaps/h3d/mat/PbrMaterial.hx	/^			var mode = props == null ? PBR : (props:PbrProps).mode;$/;"	v
mode	heaps/h3d/mat/PbrMaterial.hx	/^	var mode : PbrMode;$/;"	v
mode	heaps/h3d/pass/Shadows.hx	/^	public var mode(default,set) : RenderMode = None;$/;"	v
mode	heaps/h3d/scene/pbr/Renderer.hx	/^	var mode : DisplayMode;$/;"	v
mode	heaps/h3d/shader/GenTexture.hx	/^		@const var mode : Int;$/;"	v
mode	heaps/h3d/shader/pbr/Slides.hx	/^	public var mode(get,set) : DebugMode;$/;"	v
mode	heaps/h3d/shader/pbr/ToneMapping.hx	/^		@const var mode : Int;$/;"	v
mode	heaps/hxd/Window.hl.hx	/^			var mode = getBestDisplayMode(width, height, framerate != null ? framerate : cds.framerate);$/;"	v
mode	heaps/samples/Sao.hx	/^	public var mode = 0;$/;"	v
mode	heaps/samples/ScaleMode2D.hx	/^		var mode:Int = 0;$/;"	v
model	heaps/h3d/mat/Material.hx	/^	public var model : hxd.res.Resource;$/;"	v
model	heaps/h3d/scene/World.hx	/^			var model = e.model;$/;"	v
model	heaps/h3d/scene/World.hx	/^		var model = new WorldModel(r);$/;"	v
model	heaps/h3d/scene/World.hx	/^	public var model : WorldModel;$/;"	v
model	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var model = modelByName.get(obj);$/;"	v
model	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var model = getParent(cn, "Model", true);$/;"	v
model	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var model = getParent(n,"Model",true);$/;"	v
model	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var model : FbxNode;$/;"	v
model	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var model = new Model();$/;"	v
model2	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var model2 = getParent(geom, "Model");$/;"	v
modelByName	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var modelByName = new Map();$/;"	v
modelRoot	heaps/h3d/scene/Object.hx	/^	public var modelRoot(get, set) : Bool;$/;"	v
modelView	heaps/h3d/shader/BaseMesh.hx	/^			@perObject var modelView : Mat4;$/;"	v
modelView	heaps/h3d/shader/LineShader.hx	/^			@perObject var modelView : Mat4;$/;"	v
modelView	heaps/h3d/shader/NormalMap.hx	/^            @perObject var modelView : Mat4;$/;"	v
modelView	heaps/h3d/shader/ParticleShader.hx	/^			@perObject var modelView : Mat4;$/;"	v
modelView	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			@perObject var modelView : Mat4;$/;"	v
modelViewID	heaps/h3d/scene/MeshBatch.hx	/^	static var modelViewID = hxsl.Globals.allocID("global.modelView");$/;"	v
modelViewInverse	heaps/h3d/shader/BaseMesh.hx	/^			@perObject var modelViewInverse : Mat4;$/;"	v
modelViewInverse	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			@perObject var modelViewInverse : Mat4;$/;"	v
modelViewInverseID	heaps/h3d/scene/MeshBatch.hx	/^	static var modelViewInverseID = hxsl.Globals.allocID("global.modelViewInverse");$/;"	v
models	heaps/h3d/prim/ModelCache.hx	/^	var models : Map<String, { lib : hxd.fmt.hmd.Library, props : HideProps, col : Array<h3d.col.Tr/;"	v
models	heaps/h3d/scene/World.hx	/^		var models = lib.header.models;$/;"	v
models	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var models = getAllModels();$/;"	v
models	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var models = getParents(geoms[0],"Model");$/;"	v
models	heaps/hxd/fmt/hmd/Data.hx	/^	public var models : Array<Model>;$/;"	v
models	heaps/hxd/fmt/hmd/Library.hx	/^		var models = modelIndex < 0 ? header.models : [header.models[modelIndex]];$/;"	v
modes	heaps/samples/Lights.hx	/^		var modes = ([Dynamic,Static,Mixed,None] : Array<h3d.pass.Shadows.RenderMode>);$/;"	v
mon	heaps/hxd/Window.hl.hx	/^			var mon = selectedMonitor();$/;"	v
mon	heaps/hxd/Window.hl.hx	/^		var mon = monitorId != null ? getMonitors()[monitorId] : null;$/;"	v
monitor	heaps/hxd/Window.hl.hx	/^	public var monitor : Null<Int> = null;$/;"	v
mono	heaps/hxd/snd/Manager.hx	/^		var mono = grp.mono;$/;"	v
mono	heaps/hxd/snd/SoundGroup.hx	/^	public var mono					: Bool;$/;"	v
mouseCheckMove	heaps/hxd/SceneEvents.hx	/^	public var mouseCheckMove = true;$/;"	v
mouseDownButton	heaps/h2d/Interactive.hx	/^	var mouseDownButton : Int = -1;$/;"	v
mouseDownButton	heaps/h3d/scene/Interactive.hx	/^	var mouseDownButton : Int = -1;$/;"	v
mouseLock	heaps/hxd/Window.flash.hx	/^	public var mouseLock(get, set) : Bool;$/;"	v
mouseLock	heaps/hxd/Window.hl.hx	/^	public var mouseLock(get, set) : Bool;$/;"	v
mouseLock	heaps/hxd/Window.hx	/^	public var mouseLock(get, set) : Bool;$/;"	v
mouseLock	heaps/hxd/Window.js.hx	/^	public var mouseLock(get, set) : Bool;$/;"	v
mouseX	heaps/h2d/Scene.hx	/^	public var mouseX(get, null) : Float;$/;"	v
mouseX	heaps/hxd/SceneEvents.hx	/^	var mouseX = -1.;$/;"	v
mouseX	heaps/hxd/Window.flash.hx	/^	public var mouseX(get, never) : Int;$/;"	v
mouseX	heaps/hxd/Window.hl.hx	/^	public var mouseX(get, never) : Int;$/;"	v
mouseX	heaps/hxd/Window.hx	/^	public var mouseX(get, never) : Int;$/;"	v
mouseX	heaps/hxd/Window.js.hx	/^	public var mouseX(get, never) : Int;$/;"	v
mouseY	heaps/h2d/Scene.hx	/^	public var mouseY(get, null) : Float;$/;"	v
mouseY	heaps/hxd/SceneEvents.hx	/^	var mouseY = -1.;$/;"	v
mouseY	heaps/hxd/Window.flash.hx	/^	public var mouseY(get, never) : Int;$/;"	v
mouseY	heaps/hxd/Window.hl.hx	/^	public var mouseY(get, never) : Int;$/;"	v
mouseY	heaps/hxd/Window.hx	/^	public var mouseY(get, never) : Int;$/;"	v
mouseY	heaps/hxd/Window.js.hx	/^	public var mouseY(get, never) : Int;$/;"	v
mout	heaps/h3d/anim/SmoothTarget.hx	/^			var mout = o.tmpMatrix;$/;"	v
mov	heaps/hxsl/AgalOut.hx	/^	function mov(dst, src, t) {$/;"	f
movableParticleGroup	heaps/samples/Particles2d.hx	/^	var movableParticleGroup : ParticleGroup;$/;"	v
move	heaps/h2d/Camera.hx	/^	public inline function move( dx : Float, dy : Float ) {$/;"	f
move	heaps/h2d/Object.hx	/^	public function move( dx : Float, dy : Float ) {$/;"	f
move	heaps/h2d/ObjectFollower.hx	/^			var move = scene.camera.pos.sub(pos).normalized();$/;"	v
movePosAxis	heaps/h3d/Camera.hx	/^	public function movePosAxis( dx : Float, dy : Float, dz = 0. ) {$/;"	f
moveSpeed	Player.hx	/^	var moveSpeed = 3000;$/;"	v
moveTargetAxis	heaps/h3d/Camera.hx	/^	public function moveTargetAxis( dx : Float, dy : Float, dz = 0. ) {$/;"	f
moveTo	heaps/h2d/Graphics.hx	/^	public inline function moveTo(x,y) {$/;"	f
moveTo	heaps/h3d/scene/Graphics.hx	/^	public function moveTo( x : Float, y : Float, z : Float ) {$/;"	f
moveX	heaps/h3d/scene/CameraController.hx	/^	var moveX = 0.;$/;"	v
moveY	heaps/h3d/scene/CameraController.hx	/^	var moveY = 0.;$/;"	v
movementMax	heaps/h3d/scene/Trail.hx	/^	public var movementMax : Float = 0.5;$/;"	v
movementMin	heaps/h3d/scene/Trail.hx	/^	public var movementMin : Float = 0.1;$/;"	v
moving	heaps/samples/GpuParticles.hx	/^	var moving = false;$/;"	v
moving	heaps/samples/Particles2d.hx	/^	var moving : Bool = false;$/;"	v
movingFlow	heaps/samples/Flows.hx	/^	var movingFlow : Flow;$/;"	v
movingObjects	heaps/samples/Lights.hx	/^	var movingObjects : Array<{ m : h3d.scene.Mesh, cx : Float, cy : Float, pos : Float, ray : Floa/;"	v
mp	heaps/h3d/scene/Skin.hx	/^				var mp = j.parent == null ? absPos : currentAbsPose[j.parent.index];$/;"	v
mp	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var mp = getDefaultMatrixes(parent);$/;"	v
mp	heaps/hxd/snd/Mp3Data.hx	/^		var mp = new format.mp3.Reader(new haxe.io.BytesInput(bytes)).read();$/;"	v
mparams	heaps/hxd/res/DynamicText.hx	/^		var mparams = new Map();$/;"	v
mproj	heaps/h3d/Camera.hx	/^	public var mproj : Matrix;$/;"	v
mprojInv	heaps/h3d/Camera.hx	/^	var mprojInv : Matrix;$/;"	v
mpts	heaps/h3d/prim/HMDModel.hx	/^		var mpts = new Map();$/;"	v
mrt	heaps/samples/Sao.hx	/^	var mrt : h3d.pass.Output;$/;"	v
mrtExt	heaps/h3d/impl/GlDriver.hx	/^	var mrtExt : { function drawBuffersWEBGL( colors : Array<Int> ) : Void; };$/;"	v
ms	heaps/hxd/res/DynamicText.hx	/^				var ms = parseMetaDataRec(e);$/;"	v
msg	heaps/hxd/Worker.hx	/^				var msg = readMessage();$/;"	v
msg	heaps/hxsl/Ast.hx	/^	public var msg : String;$/;"	v
msg	heaps/hxsl/Printer.hx	/^			var msg = e+"\\n    in\\n" + shaderToString(s, true);$/;"	v
mshader	heaps/h3d/mat/Material.hx	/^	var mshader : h3d.shader.BaseMesh;$/;"	v
mt	heaps/h3d/col/TransformCollider.hx	/^		var mt = new h3d.Matrix();$/;"	v
mtmp	heaps/h3d/pass/DirShadowMap.hx	/^			var mtmp = new h3d.Matrix();$/;"	v
mtype	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var mtype = model.getType();$/;"	v
multiline	heaps/h2d/Flow.hx	/^	public var multiline(default,set) : Bool = false;$/;"	v
multiline	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var multiline : Bool;$/;"	v
multilineText	heaps/samples/HtmlText.hx	/^		var multilineText = "This is a multiline <font color=\\"#FF00FF\\">text.<br\/>Lorem<\/font> ip/;"	v
multilineText	heaps/samples/Text.hx	/^		var multilineText = "This is a multiline text.\\nLorem ipsum dolor";$/;"	v
multipleWindowsSupport	heaps/hxd/Window.flash.hx	/^	var multipleWindowsSupport = false;$/;"	v
multiply	heaps/h2d/col/IPoint.hx	/^	public inline function multiply( v : Int ) {$/;"	f
multiply	heaps/h2d/col/Matrix.hx	/^	public function multiply( a : Matrix, b : Matrix ) {$/;"	f
multiply	heaps/h2d/col/Point.hx	/^	public inline function multiply( v : Float ) {$/;"	f
multiply	heaps/h2d/impl/PointApi.hx	/^	function multiply( v : Unit ) : Point;$/;"	f
multiply	heaps/h3d/Matrix.hx	/^	public function multiply( a : Matrix, b : Matrix ) {$/;"	f
multiply	heaps/h3d/Quat.hx	/^	public function multiply( q1 : Quat, q2 : Quat ) {$/;"	f
multiply	heaps/h3d/Vector.hx	/^	public inline function multiply( v : Float ) {$/;"	f
multiply	heaps/h3d/col/IPoint.hx	/^	public inline function multiply( v : Int ) {$/;"	f
multiply	heaps/h3d/col/Point.hx	/^	public inline function multiply( v : Float ) {$/;"	f
multiply3x4	heaps/h3d/Matrix.hx	/^	public function multiply3x4( a : Matrix, b : Matrix ) {$/;"	f
multiply3x4inline	heaps/h3d/Matrix.hx	/^	public inline function multiply3x4inline( a : Matrix, b : Matrix ) {$/;"	f
multiplyAlpha	heaps/h2d/filter/Outline.hx	/^	public var multiplyAlpha(get, set) : Bool;$/;"	v
multiplyAlpha	heaps/h3d/pass/Outline.hx	/^	public var multiplyAlpha : Bool;$/;"	v
multiplyAlpha	heaps/h3d/shader/Outline2D.hx	/^		@param @const var multiplyAlpha : Int;$/;"	v
multiplyValue	heaps/h3d/Matrix.hx	/^	public function multiplyValue( v : Float ) {$/;"	f
music	heaps/samples/Sound.hx	/^	var music : hxd.snd.Channel;$/;"	v
musicPosition	heaps/samples/Sound.hx	/^	var musicPosition : h2d.Text;$/;"	v
mute	heaps/hxd/snd/ChannelBase.hx	/^	public var mute           : Bool = false;$/;"	v
mw	heaps/h3d/mat/Texture.hx	/^		var mw = this.width >> mip; if( mw == 0 ) mw = 1;$/;"	v
mx	heaps/h2d/Graphics.hx	/^	var mx : Float = 0.;$/;"	v
mx	heaps/h2d/col/Bounds.hx	/^		var mx = (xMax + xMin) * 0.5;$/;"	v
mx	heaps/h2d/col/Line.hx	/^		var mx = dx * k + p1.x - p.x;$/;"	v
mx	heaps/h2d/col/Point.hx	/^		var mx = m.a * x + m.c * y + m.x;$/;"	v
mx	heaps/h2d/col/Point.hx	/^		var mx = m.a * x + m.c * y;$/;"	v
mx	heaps/h3d/col/Bounds.hx	/^		var mx = (xMax + xMin) * 0.5;$/;"	v
mx1	heaps/h2d/col/Delaunay.hx	/^			var mx1;$/;"	v
mx2	heaps/h2d/col/Delaunay.hx	/^			var mx2;$/;"	v
my	heaps/h2d/Graphics.hx	/^	var my : Float = 0.;$/;"	v
my	heaps/h2d/col/Bounds.hx	/^		var my = (yMax + yMin) * 0.5;$/;"	v
my	heaps/h2d/col/Line.hx	/^		var my = dy * k + p1.y - p.y;$/;"	v
my	heaps/h2d/col/Point.hx	/^		var my = m.b * x + m.d * y + m.y;$/;"	v
my	heaps/h2d/col/Point.hx	/^		var my = m.b * x + m.d * y;$/;"	v
my	heaps/h3d/col/Bounds.hx	/^		var my = (yMax + yMin) * 0.5;$/;"	v
my-haxe-libraries	ra/README.md	/^# my-haxe-libraries$/;"	c
my1	heaps/h2d/col/Delaunay.hx	/^			var my1;$/;"	v
my2	heaps/h2d/col/Delaunay.hx	/^			var my2;$/;"	v
mz	heaps/h3d/col/Bounds.hx	/^		var mz = (zMax + zMin) * 0.5;$/;"	v
mzero	heaps/h3d/anim/SmoothTransition.hx	/^		var mzero = MZERO;$/;"	v
n	heaps/h2d/Object.hx	/^		var n = children.length;$/;"	v
n	heaps/h2d/SpriteBatch.hx	/^		var n = e;$/;"	v
n	heaps/h2d/col/Polynomial.hx	/^		var n = xVals.length;$/;"	v
n	heaps/h2d/col/Polynomial.hx	/^	public var n : Int;$/;"	v
n	heaps/h2d/col/Polynomial.hx	/^	var n : Int;$/;"	v
n	heaps/h3d/anim/SmoothTarget.hx	/^			var n = objects.get(o.objectName);$/;"	v
n	heaps/h3d/col/Bounds.hx	/^			var n = p.nx * (p.nx > 0 ? xMin : xMax) + p.ny * (p.ny > 0 ? yMin : yMax) + p.nz * (p.nz > 0 /;"	v
n	heaps/h3d/col/Bounds.hx	/^		var n = p.nx * (p.nx > 0 ? xMin : xMax) + p.ny * (p.ny > 0 ? yMin : yMax) + p.nz * (p.nz > 0 ?/;"	v
n	heaps/h3d/col/Capsule.hx	/^		var n = AB.dot(AO) \/ ABdotAB;$/;"	v
n	heaps/h3d/col/Plane.hx	/^		var n = d1.cross(d2);$/;"	v
n	heaps/h3d/col/Polygon.hx	/^		var n = d1.cross(d2);$/;"	v
n	heaps/h3d/col/PolygonBuffer.hx	/^			var n = d1.cross(d2);$/;"	v
n	heaps/h3d/impl/Benchmark.hx	/^				var n = q.next;$/;"	v
n	heaps/h3d/impl/Benchmark.hx	/^				var n = st.next;$/;"	v
n	heaps/h3d/impl/DirectXDriver.hx	/^			var n = new hl.NativeArray(layout.length);$/;"	v
n	heaps/h3d/impl/ManagedBuffer.hx	/^					var n = new FreeCell(b.position, nvert, f);$/;"	v
n	heaps/h3d/impl/MemoryManager.hx	/^			var n = b;$/;"	v
n	heaps/h3d/mat/Texture.hx	/^				var n = Std.random(256);$/;"	v
n	heaps/h3d/parts/Emitter.hx	/^			var n = p.next;$/;"	v
n	heaps/h3d/parts/GpuParticles.hx	/^				var n = p.next;$/;"	v
n	heaps/h3d/parts/GpuParticles.hx	/^		var n = 0;$/;"	v
n	heaps/h3d/pass/PassList.hx	/^		var n = 0;$/;"	v
n	heaps/h3d/pass/ShaderManager.hx	/^				var n = v[i];$/;"	v
n	heaps/h3d/pass/ShaderManager.hx	/^		var n = p.instance;$/;"	v
n	heaps/h3d/prim/HMDModel.hx	/^			var n = pol.normals[ids[i]];$/;"	v
n	heaps/h3d/prim/ModelCache.hx	/^		var n = props.animations.get(resName);$/;"	v
n	heaps/h3d/prim/Polygon.hx	/^				var n = [];$/;"	v
n	heaps/h3d/prim/Polygon.hx	/^				var n = normals[k];$/;"	v
n	heaps/h3d/prim/Polygon.hx	/^			var n = normals[i0];$/;"	v
n	heaps/h3d/prim/Polygon.hx	/^			var n = p1.sub(p0).cross(p2.sub(p0));$/;"	v
n	heaps/h3d/prim/Polygon.hx	/^		var n = super.triCount();$/;"	v
n	heaps/h3d/prim/Quads.hx	/^				var n = normals[i];$/;"	v
n	heaps/h3d/prim/Quads.hx	/^			var n = p1.sub(p0).cross(p2.sub(p0));$/;"	v
n	heaps/h3d/scene/Trail.hx	/^			var n = left.cross(delta);$/;"	v
n	heaps/h3d/scene/World.hx	/^					var n = new h3d.Vector(nx, ny, nz);$/;"	v
n	heaps/h3d/scene/pbr/Environment.hx	/^			var n = getNormal();$/;"	v
n	heaps/h3d/scene/pbr/Environment.hx	/^			var n = vec3(0);$/;"	v
n	heaps/h3d/scene/pbr/Environment.hx	/^			var n = vec3(0, 0, 1.);$/;"	v
n	heaps/h3d/shader/Blur.hx	/^					var n = unpackNormal(normalTexture.get(uv));$/;"	v
n	heaps/h3d/shader/CubeMap.hx	/^			var n = if( reflection ) reflect(-normalize(camera.position - pixelTransformedPosition), tran/;"	v
n	heaps/h3d/shader/Displacement.hx	/^			var n = unpackNormal(normalMap.get(input.uv * normalScale + normalPos));$/;"	v
n	heaps/h3d/shader/NoiseLib.hx	/^  var n = dot(t4, w);$/;"	v
n	heaps/h3d/shader/NormalMap.hx	/^			var n = transformedNormal;$/;"	v
n	heaps/h3d/shader/Parallax.hx	/^				var n = vertexTransformedNormal.normalize();$/;"	v
n	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var n = worldNormal;$/;"	v
n	heaps/hxd/Perlin.hx	/^		var n = 1.;$/;"	v
n	heaps/hxd/Rand.hx	/^		var n : haxe.Int32 = n;$/;"	v
n	heaps/hxd/clipper/Clipper.hx	/^				var n = m_normals[len - 1];$/;"	v
n	heaps/hxd/clipper/Clipper.hx	/^			var n = 0;$/;"	v
n	heaps/hxd/earcut/Earcut.hx	/^		var n = allocated;$/;"	v
n	heaps/hxd/earcut/Earcut.hx	/^		var n = cache;$/;"	v
n	heaps/hxd/fmt/blend/Data.hx	/^		var n = dna.names[nameIndex];$/;"	v
n	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var n = getDepth(b) - minDepth;$/;"	v
n	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var n = ids.get(id);$/;"	v
n	heaps/hxd/fmt/hmd/Dump.hx	/^						var n = f.getName();$/;"	v
n	heaps/hxd/fmt/hmd/Reader.hx	/^		var n = HMD_STRINGS.get(name);$/;"	v
n	heaps/hxd/fmt/hmd/Reader.hx	/^		var n = i.readByte();$/;"	v
n	heaps/hxd/snd/Manager.hx	/^			var n = c.next;$/;"	v
n	heaps/hxsl/AgalOut.hx	/^		var n = regSize(t);$/;"	v
n	heaps/hxsl/Ast.hx	/^		var n = g.getName();$/;"	v
n	heaps/hxsl/Checker.hx	/^			var n = v.args.length;$/;"	v
n	heaps/hxsl/GlslOut.hx	/^			var n = "" + g;$/;"	v
n	heaps/hxsl/GlslOut.hx	/^		var n = varNames.get(v.id);$/;"	v
n	heaps/hxsl/HlslOut.hx	/^			var n = "" + g;$/;"	v
n	heaps/hxsl/HlslOut.hx	/^		var n = varNames.get(v.id);$/;"	v
n	heaps/hxsl/Serializer.hx	/^			var n = id >> 8;$/;"	v
n	heaps/hxsl/Splitter.hx	/^		var n = varNames.get(v.name);$/;"	v
n	heaps/samples/CollideCheck.hx	/^		var n = r.getNormalAt(pt);$/;"	v
n0	heaps/h3d/prim/Cylinder.hx	/^			var n0 = new Point(Math.cos(a), Math.sin(a), 0);$/;"	v
n0x	heaps/h2d/Graphics.hx	/^				var n0x = next.x - p.x;$/;"	v
n0y	heaps/h2d/Graphics.hx	/^				var n0y = next.y - p.y;$/;"	v
n1	heaps/h3d/prim/Cylinder.hx	/^			var n1 = new Point(Math.cos(a2), Math.sin(a2), 0);$/;"	v
n1	heaps/hxd/poly2tri/Triangle.hx	/^		var n1:Triangle =  t.neighborCCW( p);$/;"	v
n2	heaps/hxd/poly2tri/Triangle.hx	/^		var n2:Triangle =  t.neighborCW ( p);$/;"	v
n3	heaps/hxd/poly2tri/Triangle.hx	/^		var n3:Triangle = ot.neighborCCW(op);$/;"	v
n4	heaps/hxd/poly2tri/Triangle.hx	/^		var n4:Triangle = ot.neighborCW (op);$/;"	v
nArcs	heaps/h2d/col/Voronoi.hx	/^		var nArcs = disappearingTransitions.length,$/;"	v
name	heaps/h2d/CdbLevel.hx	/^					var name = s.opts.name;$/;"	v
name	heaps/h2d/CdbLevel.hx	/^	public var name : String;$/;"	v
name	heaps/h2d/CdbLevel.hx	/^	var name : String;$/;"	v
name	heaps/h2d/Font.hx	/^	public var name(default, null) : String;$/;"	v
name	heaps/h2d/KeyFrames.hx	/^	var name : String;$/;"	v
name	heaps/h2d/Object.hx	/^	public var name : String;$/;"	v
name	heaps/h2d/Particles.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/anim/Animation.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/anim/Skin.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/impl/Benchmark.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/impl/DirectXDriver.hx	/^					var name = hxsl.HlslOut.semanticName(v.name);$/;"	v
name	heaps/h3d/impl/GlDriver.hx	/^		var name = "";$/;"	v
name	heaps/h3d/impl/LogDriver.hx	/^					var name = null;$/;"	v
name	heaps/h3d/impl/Stage3dDriver.hx	/^				var name = "C" + cid;$/;"	v
name	heaps/h3d/mat/BaseMaterial.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/mat/MaterialDatabase.hx	/^				var name = path.pop();$/;"	v
name	heaps/h3d/mat/MaterialDatabase.hx	/^		var name = path.pop();$/;"	v
name	heaps/h3d/mat/MaterialSetup.hx	/^	public var name(default,null) : String;$/;"	v
name	heaps/h3d/mat/Pass.hx	/^	public var name(default, null) : String;$/;"	v
name	heaps/h3d/mat/Texture.hx	/^	public var name(default, null) : String;$/;"	v
name	heaps/h3d/parts/GpuParticles.hx	/^		var name = h3d.mat.MaterialSetup.current.name;$/;"	v
name	heaps/h3d/parts/GpuParticles.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/pass/Base.hx	/^	public var name(default, null) : String;$/;"	v
name	heaps/h3d/pass/ShaderManager.hx	/^		var name = path.split(".").pop();$/;"	v
name	heaps/h3d/prim/ModelCache.hx	/^				var name = path.split("\/").pop();$/;"	v
name	heaps/h3d/scene/Object.hx	/^	public var name : Null<String>;$/;"	v
name	heaps/h3d/scene/Renderer.hx	/^	public var name : String;$/;"	v
name	heaps/h3d/scene/Trail.hx	/^		var name = h3d.mat.MaterialSetup.current.name;$/;"	v
name	heaps/h3d/scene/World.hx	/^	public var name : String;$/;"	v
name	heaps/haxelib.json	/^	"name" : "heaps",$/;"	s
name	heaps/hxd/Cursor.hx	/^	var name : String;$/;"	v
name	heaps/hxd/Direction.hx	/^	public var name(get, never) : String;$/;"	v
name	heaps/hxd/Pad.hx	/^	public var name : String;$/;"	v
name	heaps/hxd/Pad.hx	/^	public var name(get, never) : String;$/;"	v
name	heaps/hxd/System.flash.hx	/^		var name;$/;"	v
name	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var name : String = bytes.readUntil(0);$/;"	v
name	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var name = name.toString();$/;"	v
name	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var name = c.props[3];$/;"	v
name	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var name = modelNames[i];$/;"	v
name	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var name = n.getName();$/;"	v
name	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var name = model.getName();$/;"	v
name	heaps/hxd/fmt/fbx/Data.hx	/^	var name : String;$/;"	v
name	heaps/hxd/fmt/fbx/Parser.hx	/^		var name : String = readBinaryString(getByte());$/;"	v
name	heaps/hxd/fmt/fbx/Parser.hx	/^		var name = switch( t ) {$/;"	v
name	heaps/hxd/fmt/grd/Data.hx	/^	public var name              : String;$/;"	v
name	heaps/hxd/fmt/grd/Reader.hx	/^		var name = readUnicode(i, len);$/;"	v
name	heaps/hxd/fmt/hmd/Data.hx	/^	public var name : String;$/;"	v
name	heaps/hxd/fmt/hmd/Reader.hx	/^		var name = readCachedName();$/;"	v
name	heaps/hxd/fmt/hmd/Reader.hx	/^		var name = readName();$/;"	v
name	heaps/hxd/fmt/kframes/Data.hx	/^	var name : String; \/\/ COMP$/;"	v
name	heaps/hxd/fmt/kframes/Data.hx	/^	var name : String;$/;"	v
name	heaps/hxd/fmt/pak/Build.hx	/^				var name = outPrefix + (id == 0 ? "" : "" + id) + ".pak";$/;"	v
name	heaps/hxd/fmt/pak/Data.hx	/^	public var name : String;$/;"	v
name	heaps/hxd/fmt/pak/Loader.hx	/^			var name = "res" + (resCount == 0 ? "" : "" + resCount) + ".pak";$/;"	v
name	heaps/hxd/fmt/spine/Data.hx	/^	public var name : String;$/;"	v
name	heaps/hxd/fmt/spine/JsonData.hx	/^	var name : String;$/;"	v
name	heaps/hxd/fs/EmbedFileSystem.hx	/^		var name = resolve(path);$/;"	v
name	heaps/hxd/fs/FileConverter.hx	/^		var name = dirPos < 0 ? path : path.substr(dirPos + 1);$/;"	v
name	heaps/hxd/fs/FileEntry.hx	/^	public var name(default, null) : String;$/;"	v
name	heaps/hxd/impl/BitsBuilder.hx	/^				var name = f.name;$/;"	v
name	heaps/hxd/res/DynamicText.hx	/^				var name = vars[i];$/;"	v
name	heaps/hxd/res/FileTree.hx	/^			var name = "R_" + invalidChars.replace(file.relPath, "_");$/;"	v
name	heaps/hxd/res/FileTree.hx	/^		var name = makeIdent(d.relPath);$/;"	v
name	heaps/hxd/res/FileTree.hx	/^	var name : String;$/;"	v
name	heaps/hxd/res/Font.hx	/^		var name = "R_" + ~\/[^A-Za-z0-9_]\/g.replace(entry.path, "_");$/;"	v
name	heaps/hxd/res/Resource.hx	/^	public var name(get, never) : String;$/;"	v
name	heaps/hxd/res/TiledMap.hx	/^	var name : String;$/;"	v
name	heaps/hxd/snd/ChannelGroup.hx	/^	public var name (default, null) : String;$/;"	v
name	heaps/hxd/snd/SoundGroup.hx	/^	public var name (default, null) : String;$/;"	v
name	heaps/hxsl/Ast.hx	/^	var name : String;$/;"	v
name	heaps/hxsl/Cache.hx	/^					var name = @:privateAccess s.shader.data.name;$/;"	v
name	heaps/hxsl/Cache.hx	/^					var name = path.pop();$/;"	v
name	heaps/hxsl/Cache.hx	/^				var name = p.name;$/;"	v
name	heaps/hxsl/CacheFile.hx	/^				var name = readString();$/;"	v
name	heaps/hxsl/CacheFile.hx	/^			var name = readString();$/;"	v
name	heaps/hxsl/CacheFile.hx	/^		var name = s.instance.shader.name;$/;"	v
name	heaps/hxsl/CacheFileBuilder.hx	/^					var name = data.getString(4,len);$/;"	v
name	heaps/hxsl/GlslOut.hx	/^			var name = "val" + (exprIds++);$/;"	v
name	heaps/hxsl/HlslOut.hx	/^			var name = "val" + (exprIds++);$/;"	v
name	heaps/hxsl/Linker.hx	/^	public var name : String;$/;"	v
name	heaps/hxsl/Macros.hx	/^						var name = Std.string(c);$/;"	v
name	heaps/hxsl/Macros.hx	/^				var name = v.name + "__";$/;"	v
name	heaps/hxsl/Macros.hx	/^			var name = suffix == null ? v.name : v.name + suffix;$/;"	v
name	heaps/hxsl/RuntimeShader.hx	/^	public var name : String;$/;"	v
name	heaps/samples/Generator.hx	/^				var name = d.substr(0,-5);$/;"	v
name	heaps/samples/Generator.hx	/^			var name = title.charAt(0).toLowerCase() + title.substr(1);$/;"	v
name	heaps/samples/Input.hx	/^		var name = hxd.Key.getKeyName(id);$/;"	v
name	heaps/samples/templates/.vscode/launch.json	/^			"name": "Chrome WebGL",$/;"	s	object:configurations.1
name	heaps/samples/templates/.vscode/launch.json	/^			"name": "HashLink",$/;"	s	object:configurations.0
name	heaps/samples/templates/.vscode/launch.json	/^            "name": "Flash",$/;"	s	object:configurations.2
nameId	heaps/hxd/fmt/blend/Data.hx	/^				var nameId = readChars(4); \/\/ NAME$/;"	v
nameIndex	heaps/hxd/fmt/blend/Data.hx	/^			var nameIndex = ds.fieldNames[i];$/;"	v
nameIndex	heaps/hxd/fmt/blend/Data.hx	/^		var nameIndex = ds.fieldNames[index];$/;"	v
nameParts	heaps/h2d/domkit/Style.hx	/^		var nameParts = [];$/;"	v
nameValue	heaps/hxd/fmt/hdr/Reader.hx	/^			var nameValue = line.split("=");$/;"	v
named	heaps/hxsl/HlslOut.hx	/^	var named : Map<String, Int>;$/;"	v
namedConnect	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var namedConnect : Map<Int,Map<String,Int>>;$/;"	v
namedJoints	heaps/h3d/anim/Skin.hx	/^	public var namedJoints(default,null) : Map<String,Joint>;$/;"	v
names	heaps/h3d/impl/Driver.hx	/^	public var names(default,null) : Array<String>;$/;"	v
names	heaps/h3d/impl/NullDriver.hx	/^		var names = [];$/;"	v
names	heaps/h3d/impl/VulkanDriver.hx	/^		var names = [];$/;"	v
names	heaps/h3d/prim/Polygon.hx	/^		var names = ["position"];$/;"	v
names	heaps/hxd/fmt/blend/Data.hx	/^	public var names:Array<String> = [];$/;"	v
names	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var names = [];$/;"	v
names	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var names = getAnimationNames();$/;"	v
names	heaps/hxd/fs/MultiFileSystem.hx	/^		var names = new Map();$/;"	v
names	heaps/hxsl/HlslOut.hx	/^		var names = null;$/;"	v
namesCount	heaps/hxd/fmt/blend/Data.hx	/^				var namesCount = read32();$/;"	v
native	heaps/hxd/snd/NativeChannel.hx	/^	var native : NativeChannel;$/;"	v
nativeChannels	heaps/hxd/snd/NativeChannel.hx	/^	static var nativeChannels : Array<ALChannel>;$/;"	v
nativeFormat	heaps/h3d/mat/Texture.hx	/^	public static var nativeFormat(default,never) : TextureFormat =$/;"	v
nativeUpdate	heaps/hxd/snd/NativeChannel.hx	/^	static var nativeUpdate : haxe.MainLoop.MainEvent;$/;"	v
nattr	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var nattr = getParent(cn, "NodeAttribute", true);$/;"	v
nb	heaps/h3d/shader/Buffers.hx	/^		var nb = s.bufferCount;$/;"	v
nbones	heaps/h3d/col/SkinCollider.hx	/^		var nbones = obj.skinData.bonesPerVertex;$/;"	v
nbones	heaps/hxd/fmt/spine/Library.hx	/^				var nbones = Std.int(vertices[pos++]);$/;"	v
nbytes	heaps/hxd/Pixels.hx	/^			var nbytes = haxe.io.Bytes.alloc(this.height * this.width * 4);$/;"	v
nbytes	heaps/hxd/Pixels.hx	/^			var nbytes = haxe.io.Bytes.alloc(width * height * 4);$/;"	v
nbytes	heaps/hxd/Pixels.hx	/^			var nbytes = haxe.io.Bytes.alloc(width * height);$/;"	v
nc	heaps/h2d/HtmlText.hx	/^						var nc = text.charCodeAt(k+1);$/;"	v
nc	heaps/h2d/HtmlText.hx	/^				var nc = text.charCodeAt(i+1);$/;"	v
nc	heaps/h2d/Text.hx	/^					var nc = text.charCodeAt(k+1);$/;"	v
nc	heaps/h2d/Text.hx	/^			var nc = text.charCodeAt(i+1);$/;"	v
nc	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var nc = namedConnect.get(parent);$/;"	v
nc	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var nc = namedConnect.get(node.getId());$/;"	v
ncomp	heaps/hxd/res/NanoJpeg.hx	/^	var ncomp : Int;$/;"	v
ncomps	heaps/hxsl/Checker.hx	/^		var ncomps = switch( e.t ) {$/;"	v
ncur	heaps/h3d/shader/Blur.hx	/^				var ncur = unpackNormal(normalTexture.get(input.uv));$/;"	v
nd	heaps/h3d/col/Polygon.hx	/^		var nd = d - (r.px * nx + r.py * ny + r.pz * nz);$/;"	v
nd	heaps/h3d/col/Ray.hx	/^		var nd = p.d - (px * p.nx + py * p.ny + pz * p.nz);$/;"	v
ndata	heaps/hxd/net/Socket.hx	/^			var ndata = js.node.Buffer.alloc(nsize);$/;"	v
ndata	heaps/hxd/net/Socket.hx	/^			var ndata = new hl.Bytes(nsize);$/;"	v
ne	heaps/h3d/pass/FXAA.hx	/^			var ne = texture.get(tuv + vec2(1, -1) * delta).rgb;$/;"	v
nearZero	heaps/hxd/clipper/Clipper.hx	/^	public static inline function nearZero (v : Float) : Bool {$/;"	f
nearest	heaps/h2d/filter/Shader.hx	/^	public var nearest : Bool;$/;"	v
need	heaps/hxd/snd/OggData.hx	/^			var need = sampleCount - sampleStart;$/;"	v
needClear	heaps/h3d/impl/GlDriver.hx	/^		var needClear = false;$/;"	v
needDispose	heaps/h2d/Object.hx	/^		var needDispose = s == null;$/;"	v
needFlushTarget	heaps/h3d/Engine.hx	/^	var needFlushTarget : Bool;$/;"	v
needInsert	heaps/hxd/fs/FileConverter.hx	/^		var needInsert = false;$/;"	v
needInv	heaps/h3d/Camera.hx	/^	var needInv : Bool;$/;"	v
needPreRot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var needPreRot = true;$/;"	v
needRebuild	heaps/h2d/Particles.hx	/^	var needRebuild = true;$/;"	v
needRebuild	heaps/h3d/parts/GpuParticles.hx	/^	var needRebuild = true;$/;"	v
needRedraw	heaps/h2d/CdbLevel.hx	/^	public var needRedraw = true;$/;"	v
needReflow	heaps/h2d/Flow.hx	/^	public var needReflow(default, set) : Bool = true;$/;"	v
needSort	heaps/h3d/parts/GpuParticles.hx	/^		var needSort = g.sortMode != None && visible;$/;"	v
needSync	heaps/h3d/parts/GpuParticles.hx	/^		var needSync = false;$/;"	v
needUpdate	heaps/h2d/ScaleGrid.hx	/^		var needUpdate = false;$/;"	v
needUpload	heaps/h3d/scene/MeshBatch.hx	/^	var needUpload = false;$/;"	v
needed	heaps/h3d/impl/GlDriver.hx	/^		var needed = streamPos + length;$/;"	v
needsInline	heaps/hxsl/Eval.hx	/^	function needsInline(f:TFunction) {$/;"	f
needsRebuild	heaps/h2d/Text.hx	/^	var needsRebuild : Bool;$/;"	v
neg	heaps/hxd/Math.hx	/^		var neg;$/;"	v
negate	heaps/h3d/Quat.hx	/^	public inline function negate() {$/;"	f
neighbor	heaps/hxd/poly2tri/SweepContext.hx	/^				var neighbor = this.front.locatePoint(triangle.pointCW(triangle.points[n]));$/;"	v
neighborAcross	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function neighborAcross(p:Point):Triangle { return this.neighbors[getPointIndexOf/;"	f
neighborCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function neighborCCW(p:Point):Triangle$/;"	f
neighborCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function neighborCW(p:Point):Triangle$/;"	f
neighbors	heaps/h2d/col/Voronoi.hx	/^		var neighbors = [],$/;"	v
neighbors	heaps/hxd/poly2tri/Triangle.hx	/^	public var neighbors:Array<Triangle>;$/;"	v
net	heaps/samples/Network.hx	/^	var net : Network;$/;"	v
networkAllow	heaps/samples/Network.hx	/^	public function networkAllow( op : hxbit.NetworkSerializable.Operation, propId : Int, client : /;"	f
new	Laser.hx	/^	public override function new(?parent:Object, x:Float, y:Float, rotation:Float, color:Int = 0xFF/;"	f
new	Player.hx	/^	public override function new(?parent:Object, color:Int) {$/;"	f
new	_old/Canvas.hx	/^	public function new() {$/;"	f
new	heaps/h2d/Anim.hx	/^	public function new( ?frames : Array<Tile>, speed : Float = 15, ?parent : h2d.Object ) {$/;"	f
new	heaps/h2d/Bitmap.hx	/^	public function new( ?tile : Tile, ?parent : h2d.Object ) {$/;"	f
new	heaps/h2d/Camera.hx	/^	public function new( ?scene : Scene ) {$/;"	f
new	heaps/h2d/CdbLevel.hx	/^	public function new() {$/;"	f
new	heaps/h2d/CdbLevel.hx	/^	public function new(allLevels:cdb.Types.Index<Dynamic>,index:Int,?parent) {$/;"	f
new	heaps/h2d/CdbLevel.hx	/^	public function new(level) {$/;"	f
new	heaps/h2d/CdbLevel.hx	/^	public function new(name, tset, x, y, w, h, val) {$/;"	f
new	heaps/h2d/CdbLevel.hx	/^	public function new(tset, x, y, w, h) {$/;"	f
new	heaps/h2d/CheckBox.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/Console.hx	/^	public function new(font:h2d.Font,?parent) {$/;"	f
new	heaps/h2d/Drawable.hx	/^	function new(parent : h2d.Object) {$/;"	f
new	heaps/h2d/Dropdown.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/Dropdown.hx	/^	public function new(dd : Dropdown) {$/;"	f
new	heaps/h2d/Flow.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/Flow.hx	/^	public function new(elt) {$/;"	f
new	heaps/h2d/Font.hx	/^	function new(name : String, size : Int, ?type : FontType) {$/;"	f
new	heaps/h2d/Font.hx	/^	public function new(c, o) {$/;"	f
new	heaps/h2d/Font.hx	/^	public function new(t,w) {$/;"	f
new	heaps/h2d/Graphics.hx	/^	public function new() {$/;"	f
new	heaps/h2d/Graphics.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/Interactive.hx	/^	public function new( width, height, ?parent, ?shape ) {$/;"	f
new	heaps/h2d/KeyFrames.hx	/^	public function new( file : KeyframesFile, ?filePrefix : String, ?parent ) {$/;"	f
new	heaps/h2d/Layers.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/Mask.hx	/^	public function new(width, height, ?parent) {$/;"	f
new	heaps/h2d/Object.hx	/^	public function new( ?parent : Object ) {$/;"	f
new	heaps/h2d/ObjectFollower.hx	/^	public function new( obj, ?parent ) {$/;"	f
new	heaps/h2d/Particles.hx	/^	public function new( ?parent ) {$/;"	f
new	heaps/h2d/Particles.hx	/^	public function new(group) {$/;"	f
new	heaps/h2d/Particles.hx	/^	public function new(p) {$/;"	f
new	heaps/h2d/RenderContext.hx	/^	public function new(scene) {$/;"	f
new	heaps/h2d/ScaleGrid.hx	/^	public function new( tile, borderL, borderT, ?borderR, ?borderB, ?parent ) {$/;"	f
new	heaps/h2d/Scene.hx	/^	public function new() {$/;"	f
new	heaps/h2d/Slider.hx	/^	public function new(?width:Int = 50, ?height:Int = 10, ?parent) {$/;"	f
new	heaps/h2d/SpriteBatch.hx	/^	public function new( t : Tile ) {$/;"	f
new	heaps/h2d/SpriteBatch.hx	/^	public function new(t,?parent) {$/;"	f
new	heaps/h2d/SpriteBatch.hx	/^	public inline function new(e) {$/;"	f
new	heaps/h2d/Text.hx	/^	public function new( font : Font, ?parent : h2d.Object ) {$/;"	f
new	heaps/h2d/TextInput.hx	/^	public function new(font, ?parent) {$/;"	f
new	heaps/h2d/Tile.hx	/^	function new(tex : h3d.mat.Texture, x : Float, y : Float, w : Float, h : Float, dx : Float=0, d/;"	f
new	heaps/h2d/TileGroup.hx	/^	public function new() {$/;"	f
new	heaps/h2d/TileGroup.hx	/^	public function new(?t : Tile, ?parent : h2d.Object) {$/;"	f
new	heaps/h2d/Video.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/ZGroup.hx	/^	public function new() { }$/;"	f
new	heaps/h2d/ZGroup.hx	/^	public function new() {$/;"	f
new	heaps/h2d/ZGroup.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h2d/col/Bounds.hx	/^	public inline function new() {$/;"	f
new	heaps/h2d/col/Circle.hx	/^	public inline function new( x : Float, y : Float, ray : Float ) {$/;"	f
new	heaps/h2d/col/Delaunay.hx	/^	public function new(p1, p2) {$/;"	f
new	heaps/h2d/col/Delaunay.hx	/^	public function new(p1,p2,p3) {$/;"	f
new	heaps/h2d/col/IBounds.hx	/^	public inline function new() {$/;"	f
new	heaps/h2d/col/IPoint.hx	/^	public inline function new(x = 0, y = 0) {$/;"	f
new	heaps/h2d/col/IPolygon.hx	/^	public inline function new( ?points ) {$/;"	f
new	heaps/h2d/col/IPolygons.hx	/^	public inline function new( ?polygons ) {$/;"	f
new	heaps/h2d/col/Line.hx	/^	public inline function new(p1,p2) {$/;"	f
new	heaps/h2d/col/Matrix.hx	/^	public function new() {$/;"	f
new	heaps/h2d/col/PixelsCollider.hx	/^	public function new(pixels: hxd.Pixels, alphaCutoff:Int = 127, redCutoff:Int = 255, greenCutoff/;"	f
new	heaps/h2d/col/Point.hx	/^	public inline function new(x = 0., y = 0.) {$/;"	f
new	heaps/h2d/col/Polygon.hx	/^	public inline function new( ?points ) {$/;"	f
new	heaps/h2d/col/PolygonCollider.hx	/^	public function new( polygons:Polygons, isConvex : Bool = false ) {$/;"	f
new	heaps/h2d/col/Polygons.hx	/^	public inline function new( ?polygons ) {$/;"	f
new	heaps/h2d/col/Polynomial.hx	/^	public function new( mat : Matrix ) {$/;"	f
new	heaps/h2d/col/Polynomial.hx	/^	public function new(m, n) {$/;"	f
new	heaps/h2d/col/Ray.hx	/^	public inline function new() {$/;"	f
new	heaps/h2d/col/RoundRect.hx	/^	public inline function new(x:Float,y:Float,w:Float,h:Float,rotation:Float) {$/;"	f
new	heaps/h2d/col/Segment.hx	/^	public inline function new( p1 : Point, p2 : Point ) {$/;"	f
new	heaps/h2d/col/Triangle.hx	/^	public inline function new( a : Point, b : Point, c : Point ) {$/;"	f
new	heaps/h2d/col/Voronoi.hx	/^	public function new( epsilon = 1e-9 ) {$/;"	f
new	heaps/h2d/col/Voronoi.hx	/^	public function new() {$/;"	f
new	heaps/h2d/col/Voronoi.hx	/^	public function new(edge, lPoint:Point, rPoint:Point) {$/;"	f
new	heaps/h2d/col/Voronoi.hx	/^	public function new(id, point) {$/;"	f
new	heaps/h2d/col/Voronoi.hx	/^	public function new(lPoint, rPoint) {$/;"	f
new	heaps/h2d/domkit/BaseComponents.hx	/^	public function new() {$/;"	f
new	heaps/h2d/domkit/Style.hx	/^	public function new() {$/;"	f
new	heaps/h2d/filter/AbstractMask.hx	/^	function new(mask) {$/;"	f
new	heaps/h2d/filter/AbstractMask.hx	/^	public function new() {$/;"	f
new	heaps/h2d/filter/Ambient.hx	/^	public function new( mask, ?m : h3d.Matrix ) {$/;"	f
new	heaps/h2d/filter/Bloom.hx	/^	public function new( power = 2., amount = 1., radius = 1., gain = 1., quality = 1. ) {$/;"	f
new	heaps/h2d/filter/Blur.hx	/^	public function new( radius = 1., gain = 1., quality = 1., linear = 0. ) {$/;"	f
new	heaps/h2d/filter/ColorMatrix.hx	/^	public function new( ?m : h3d.Matrix ) {$/;"	f
new	heaps/h2d/filter/Displacement.hx	/^	public function new( normalMap : h2d.Tile, dispX : Float = 5., dispY = 5., wrap = true ) {$/;"	f
new	heaps/h2d/filter/DropShadow.hx	/^	public function new( distance : Float = 4., angle : Float = 0.785, color : Int = 0, alpha = 1.,/;"	f
new	heaps/h2d/filter/Filter.hx	/^	function new() {$/;"	f
new	heaps/h2d/filter/Glow.hx	/^	public function new( color : Int = 0xFFFFFF, alpha = 1., radius = 1., gain = 1., quality = 1., /;"	f
new	heaps/h2d/filter/Group.hx	/^	public function new( ?filters : Array<Filter> ) {$/;"	f
new	heaps/h2d/filter/InnerGlow.hx	/^	public function new( color : Int = 0xFFFFFF, alpha = 1., radius = 1., gain = 1., quality = 1. )/;"	f
new	heaps/h2d/filter/Mask.hx	/^	public function new(mask, maskVisible=false, smoothAlpha=false) {$/;"	f
new	heaps/h2d/filter/Nothing.hx	/^	public function new() {$/;"	f
new	heaps/h2d/filter/Outline.hx	/^	public function new(size = 4.0, color = 0x000000, quality = 0.3, multiplyAlpha = true) {$/;"	f
new	heaps/h2d/filter/Shader.hx	/^	public function new( shader : T, textureParam = "texture" ) {$/;"	f
new	heaps/h2d/impl/BatchDrawState.hx	/^	public function new( texture : h3d.mat.Texture ) {$/;"	f
new	heaps/h2d/impl/BatchDrawState.hx	/^	public function new() {$/;"	f
new	heaps/h3d/Buffer.hx	/^	public function new(buffer, offset) {$/;"	f
new	heaps/h3d/Buffer.hx	/^	public function new(vertices, stride, ?flags : Array<BufferFlag> ) {$/;"	f
new	heaps/h3d/Camera.hx	/^	public function new( fovY = 25., zoom = 1., screenRatio = 1.333333, zNear = 0.02, zFar = 4000.,/;"	f
new	heaps/h3d/Engine.hx	/^	function new() {$/;"	f
new	heaps/h3d/Engine.hx	/^	public function new(t, n, l, m) {$/;"	f
new	heaps/h3d/Indexes.hx	/^	public function new(count,is32=false) {$/;"	f
new	heaps/h3d/Matrix.hx	/^	public function new() {$/;"	f
new	heaps/h3d/Quat.hx	/^	public inline function new( x = 0., y = 0., z = 0., w = 1. ) {$/;"	f
new	heaps/h3d/Vector.hx	/^	public inline function new( x = 0., y = 0., z = 0., w = 1. ) {$/;"	f
new	heaps/h3d/anim/Animation.hx	/^	function new(name, frameCount, sampling) {$/;"	f
new	heaps/h3d/anim/Animation.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/anim/BufferAnimation.hx	/^	public function new( objectName, dataOffset ) {$/;"	f
new	heaps/h3d/anim/BufferAnimation.hx	/^	public function new(name,frame,sampling) {$/;"	f
new	heaps/h3d/anim/LinearAnimation.hx	/^	public function new() {$/;"	f
new	heaps/h3d/anim/LinearAnimation.hx	/^	public function new(name,frame,sampling) {$/;"	f
new	heaps/h3d/anim/SimpleBlend.hx	/^	public function new( anim1 : Animation, anim2 : Animation, objects : Map < String, Bool > ) {$/;"	f
new	heaps/h3d/anim/Skin.hx	/^	public function new( name, vertexCount, bonesPerVertex ) {$/;"	f
new	heaps/h3d/anim/Skin.hx	/^	public function new() {$/;"	f
new	heaps/h3d/anim/Skin.hx	/^	public function new(j, w) {$/;"	f
new	heaps/h3d/anim/SmoothTarget.hx	/^	public function new( target : h3d.anim.Animation, duration = 0.5 ) {$/;"	f
new	heaps/h3d/anim/SmoothTarget.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/anim/SmoothTransition.hx	/^	public function new(current, target, duration) {$/;"	f
new	heaps/h3d/anim/SmoothTransition.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/anim/Transition.hx	/^	public function new( transitionName : String, anim1 : Animation, anim2 : Animation ) {$/;"	f
new	heaps/h3d/col/Bounds.hx	/^	public inline function new() {$/;"	f
new	heaps/h3d/col/Capsule.hx	/^	public inline function new(a : Point, b : Point, r : Float) {$/;"	f
new	heaps/h3d/col/Collider.hx	/^	public function new(a, b) {$/;"	f
new	heaps/h3d/col/Collider.hx	/^	public function new(colliders) {$/;"	f
new	heaps/h3d/col/FPoint.hx	/^	public inline function new(x=0.,y=0.,z=0.) {$/;"	f
new	heaps/h3d/col/Frustum.hx	/^	public function new( ?mvp : h3d.Matrix ) {$/;"	f
new	heaps/h3d/col/IPoint.hx	/^	public inline function new(x=0,y=0,z=0) {$/;"	f
new	heaps/h3d/col/ObjectCollider.hx	/^	public function new(obj, collider) {$/;"	f
new	heaps/h3d/col/Plane.hx	/^	public inline function new(nx, ny, nz, d) {$/;"	f
new	heaps/h3d/col/Point.hx	/^	public inline function new(x=0.,y=0.,z=0.) {$/;"	f
new	heaps/h3d/col/Polygon.hx	/^	public function new() {$/;"	f
new	heaps/h3d/col/PolygonBuffer.hx	/^	public function new() {$/;"	f
new	heaps/h3d/col/Ray.hx	/^	public inline function new() {$/;"	f
new	heaps/h3d/col/Seg.hx	/^	public inline function new( p1 : Point, p2 : Point ) {$/;"	f
new	heaps/h3d/col/SkinCollider.hx	/^	public function new( obj, col ) {$/;"	f
new	heaps/h3d/col/SkinCollider.hx	/^	public function new(col : SkinCollider) {$/;"	f
new	heaps/h3d/col/Sphere.hx	/^	public inline function new(x=0., y=0., z=0., r=0.) {$/;"	f
new	heaps/h3d/col/TransformCollider.hx	/^	public function new(mat, collider) {$/;"	f
new	heaps/h3d/impl/Benchmark.hx	/^	public function new() {$/;"	f
new	heaps/h3d/impl/Benchmark.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/impl/DirectXDriver.hx	/^	public function new() {$/;"	f
new	heaps/h3d/impl/DirectXDriver.hx	/^	public function new(kind) {$/;"	f
new	heaps/h3d/impl/DirectXDriver.hx	/^	public function new(shader) {$/;"	f
new	heaps/h3d/impl/Driver.hx	/^	function new(names) {$/;"	f
new	heaps/h3d/impl/GlDriver.hx	/^	public function new() {$/;"	f
new	heaps/h3d/impl/GlDriver.hx	/^	public function new(antiAlias=0) {$/;"	f
new	heaps/h3d/impl/GlDriver.hx	/^	public function new(s,vertex,shader) {$/;"	f
new	heaps/h3d/impl/InstanceBuffer.hx	/^	public function new() {$/;"	f
new	heaps/h3d/impl/LogDriver.hx	/^	public function new( driver : Driver ) {$/;"	f
new	heaps/h3d/impl/ManagedBuffer.hx	/^	function new(pos,count,next) {$/;"	f
new	heaps/h3d/impl/ManagedBuffer.hx	/^	public function new( stride, size, ?flags : Array<Buffer.BufferFlag> ) {$/;"	f
new	heaps/h3d/impl/MemoryManager.hx	/^	public function new(driver) {$/;"	f
new	heaps/h3d/impl/NullDriver.hx	/^	public function new() {$/;"	f
new	heaps/h3d/impl/RenderContext.hx	/^	function new() {$/;"	f
new	heaps/h3d/impl/Stage3dDriver.hx	/^	function new(vbuf, b) {$/;"	f
new	heaps/h3d/impl/Stage3dDriver.hx	/^	public function new(antiAlias=0) {$/;"	f
new	heaps/h3d/impl/Stage3dDriver.hx	/^	public function new(s) {$/;"	f
new	heaps/h3d/impl/TextureCache.hx	/^	public function new(ctx) {$/;"	f
new	heaps/h3d/impl/VarBinding.hx	/^	public function new(path,expr, isInit=false) {$/;"	f
new	heaps/h3d/impl/VulkanDriver.hx	/^	public function new() {$/;"	f
new	heaps/h3d/mat/BaseMaterial.hx	/^	function new(?shader:hxsl.Shader) {$/;"	f
new	heaps/h3d/mat/BigTexture.hx	/^	public function new(id, size, bgColor = 0xFF8080FF ) {$/;"	f
new	heaps/h3d/mat/BigTexture.hx	/^	public function new(t, q, du, dv, su, sv) {$/;"	f
new	heaps/h3d/mat/BigTexture.hx	/^	public function new(x, y, w, h) {$/;"	f
new	heaps/h3d/mat/DepthBuffer.hx	/^	public function new( width : Int, height : Int, ?format : DepthFormat ) {$/;"	f
new	heaps/h3d/mat/Material.hx	/^	function new(?texture) {$/;"	f
new	heaps/h3d/mat/MaterialDatabase.hx	/^	public function new() {$/;"	f
new	heaps/h3d/mat/MaterialSetup.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/mat/Pass.hx	/^	public function new(name, ?shaders, ?parent) {$/;"	f
new	heaps/h3d/mat/PbrMaterialSetup.hx	/^	public function new(?name="PBR") {$/;"	f
new	heaps/h3d/mat/Stencil.hx	/^	public function new() {$/;"	f
new	heaps/h3d/mat/Texture.hx	/^	public function new(w, h, ?flags : Array<TextureFlags>, ?format : TextureFormat ) {$/;"	f
new	heaps/h3d/mat/TextureArray.hx	/^	public function new(w, h, layers, ?flags : Array<TextureFlags>, ?format : TextureFormat ) {$/;"	f
new	heaps/h3d/mat/TextureChannels.hx	/^	public function new(w, h, ?flags : Array<TextureFlags>, ?format : TextureFormat ) {$/;"	f
new	heaps/h3d/parts/Data.hx	/^	public function new() {$/;"	f
new	heaps/h3d/parts/Data.hx	/^	public function new(time, r, g, b) {$/;"	f
new	heaps/h3d/parts/Data.hx	/^	public function new(x, y, z) {$/;"	f
new	heaps/h3d/parts/Emitter.hx	/^	public function new(?state,?parent) {$/;"	f
new	heaps/h3d/parts/GpuParticles.hx	/^	public function new( ?parent ) {$/;"	f
new	heaps/h3d/parts/GpuParticles.hx	/^	public function new() {$/;"	f
new	heaps/h3d/parts/GpuParticles.hx	/^	public function new(parent) {$/;"	f
new	heaps/h3d/parts/Particle.hx	/^	public function new() {$/;"	f
new	heaps/h3d/parts/Particles.hx	/^	public function new( ?texture, ?parent) {$/;"	f
new	heaps/h3d/parts/Particles.hx	/^	public inline function new(p) {$/;"	f
new	heaps/h3d/pass/Base.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/pass/Blur.hx	/^	public function new( radius = 1., gain = 1., linear = 0., quality = 1. ) {$/;"	f
new	heaps/h3d/pass/Border.hx	/^	public function new( width : Int, height : Int, size : Int = 1 ) {$/;"	f
new	heaps/h3d/pass/ColorMatrix.hx	/^	public function new( ?m : h3d.Matrix ) {$/;"	f
new	heaps/h3d/pass/Copy.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/CubeCopy.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/Default.hx	/^	public function new(name) {$/;"	f
new	heaps/h3d/pass/DefaultShadowMap.hx	/^	public function new(size=1024,?format:hxd.PixelFormat) {$/;"	f
new	heaps/h3d/pass/DirShadowMap.hx	/^	public function new( light : h3d.scene.Light ) {$/;"	f
new	heaps/h3d/pass/FXAA.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/HardwarePick.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/Outline.hx	/^	public function new(size = 4.0, color = 0x000000, quality = 0.3, multiplyAlpha = true) {$/;"	f
new	heaps/h3d/pass/Output.hx	/^	public function new( name, outputs ) {$/;"	f
new	heaps/h3d/pass/PassList.hx	/^	public function new(?current) {$/;"	f
new	heaps/h3d/pass/PassList.hx	/^	public inline function new(o) {$/;"	f
new	heaps/h3d/pass/PassObject.hx	/^	function new() {$/;"	f
new	heaps/h3d/pass/PointShadowMap.hx	/^	public function new( light : h3d.scene.Light, useWorldDist : Bool ) {$/;"	f
new	heaps/h3d/pass/ScalableAO.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/ScreenFx.hx	/^	public function new(shader, ?output) {$/;"	f
new	heaps/h3d/pass/ShaderManager.hx	/^	public function new(?output:Array<hxsl.Output>) {$/;"	f
new	heaps/h3d/pass/Shadows.hx	/^	public function new(light) {$/;"	f
new	heaps/h3d/pass/SortByMaterial.hx	/^	public function new() {$/;"	f
new	heaps/h3d/pass/SpotShadowMap.hx	/^	public function new( light : h3d.scene.Light ) {$/;"	f
new	heaps/h3d/prim/BigPrimitive.hx	/^	public function new(stride, isRaw=false ) {$/;"	f
new	heaps/h3d/prim/Cube.hx	/^	public function new( x = 1., y = 1., z = 1., centered = false )$/;"	f
new	heaps/h3d/prim/Cylinder.hx	/^	public function new( segs : Int, ray = 1.0, height = 1.0, centered = false ) {$/;"	f
new	heaps/h3d/prim/Disc.hx	/^	public function new( radius = 0.5, segments = 8, thetaStart = 0.0, ?thetaLength : Float ) {$/;"	f
new	heaps/h3d/prim/DynamicPrimitive.hx	/^	public function new( stride : Int ) {$/;"	f
new	heaps/h3d/prim/GeoSphere.hx	/^	public function new( subdiv = 2 ) {$/;"	f
new	heaps/h3d/prim/Grid.hx	/^	public function new( width : Int, height : Int, cellWidth = 1., cellHeight = 1. ) {$/;"	f
new	heaps/h3d/prim/HMDModel.hx	/^	public function new(data, dataPos, lib) {$/;"	f
new	heaps/h3d/prim/Instanced.hx	/^	public function new() {$/;"	f
new	heaps/h3d/prim/ModelCache.hx	/^	public function new() {$/;"	f
new	heaps/h3d/prim/Plane2D.hx	/^	public function new() {$/;"	f
new	heaps/h3d/prim/Polygon.hx	/^	public function new( points, ?idx ) {$/;"	f
new	heaps/h3d/prim/Quads.hx	/^	public function new( pts, ?uvs, ?normals ) {$/;"	f
new	heaps/h3d/prim/RawPrimitive.hx	/^	public function new( inf : { vbuf : hxd.FloatBuffer, stride : Int, ?ibuf : hxd.IndexBuffer, ?qu/;"	f
new	heaps/h3d/prim/Sphere.hx	/^	public function new( ray = 1., segsW = 8, segsH = 6, portion = 1. ) {$/;"	f
new	heaps/h3d/prim/UV.hx	/^	public function new(u,v) {$/;"	f
new	heaps/h3d/scene/Box.hx	/^	public function new( ?color = 0xFFFF0000, ?bounds : h3d.col.Bounds, ?depth = true, ?parent) {$/;"	f
new	heaps/h3d/scene/CameraController.hx	/^	public function new(?distance,?parent) {$/;"	f
new	heaps/h3d/scene/Graphics.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/scene/Graphics.hx	/^	public function new(x, y, z, r, g, b, a) {$/;"	f
new	heaps/h3d/scene/Interactive.hx	/^	public function new(shape, ?parent) {$/;"	f
new	heaps/h3d/scene/Light.hx	/^	function new(shader,?parent) {$/;"	f
new	heaps/h3d/scene/LightSystem.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/Mesh.hx	/^	public function new( primitive, ?material, ?parent ) {$/;"	f
new	heaps/h3d/scene/MeshBatch.hx	/^	public function new( primitive, ?material, ?parent ) {$/;"	f
new	heaps/h3d/scene/MeshBatch.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/MultiMaterial.hx	/^	public function new( prim, ?mats, ?parent ) {$/;"	f
new	heaps/h3d/scene/Object.hx	/^	public function new( ?parent : Object ) {$/;"	f
new	heaps/h3d/scene/Object.hx	/^	public inline function new(value) {$/;"	f
new	heaps/h3d/scene/RenderContext.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/RenderContext.hx	/^	public function new(gid, value) {$/;"	f
new	heaps/h3d/scene/Renderer.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/Scene.hx	/^	public function new( ?createRenderer = true, ?createLightSystem = true ) {$/;"	f
new	heaps/h3d/scene/Skin.hx	/^	public function new(s, ?mat, ?parent) {$/;"	f
new	heaps/h3d/scene/Skin.hx	/^	public function new(skin, j : h3d.anim.Skin.Joint ) {$/;"	f
new	heaps/h3d/scene/Sphere.hx	/^	public function new( ?color = 0xFFFF0000, ?radius : Float=1.0, ?depth = true, ?parent) {$/;"	f
new	heaps/h3d/scene/Trail.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/Trail.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new( chunkSize : Int, parent, ?autoCollect = true ) {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new( model, mat, optimized ) {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new(cx, cy) {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new(m) {$/;"	f
new	heaps/h3d/scene/World.hx	/^	public function new(r) {$/;"	f
new	heaps/h3d/scene/fwd/DirLight.hx	/^	public function new(?dir: h3d.Vector, ?parent) {$/;"	f
new	heaps/h3d/scene/fwd/LightSystem.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/fwd/PointLight.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/scene/fwd/Renderer.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/pbr/Decal.hx	/^	public function new( primitive, ?material, ?parent ) {$/;"	f
new	heaps/h3d/scene/pbr/DirLight.hx	/^	public function new(?dir: h3d.Vector, ?parent) {$/;"	f
new	heaps/h3d/scene/pbr/Environment.hx	/^	public function new( src : h3d.mat.Texture, ?diffSize = 64, ?specSize = 512, ?sampleBits = 12 )/;"	f
new	heaps/h3d/scene/pbr/Light.hx	/^	function new(shader,?parent) {$/;"	f
new	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/pbr/LightSystem.hx	/^	public function new() {$/;"	f
new	heaps/h3d/scene/pbr/PointLight.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/scene/pbr/Renderer.hx	/^	public function new(?env) {$/;"	f
new	heaps/h3d/scene/pbr/SpotLight.hx	/^	public function new(?parent) {$/;"	f
new	heaps/h3d/shader/AlphaMap.hx	/^	public function new(texture, useAlphaChannel=false) {$/;"	f
new	heaps/h3d/shader/AnimatedTexture.hx	/^	public function new( texture, frameDivisionX : Int, frameDivisionY : Int, totalFrames = -1, ?sp/;"	f
new	heaps/h3d/shader/BaseMesh.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/Buffers.hx	/^	public function new( s : hxsl.RuntimeShader ) {$/;"	f
new	heaps/h3d/shader/Buffers.hx	/^	public function new( s : hxsl.RuntimeShader.RuntimeShaderData ) {$/;"	f
new	heaps/h3d/shader/ColorAdd.hx	/^	public function new( color : Int = 0 ) {$/;"	f
new	heaps/h3d/shader/ColorKey.hx	/^	public function new( v = 0 ) {$/;"	f
new	heaps/h3d/shader/ColorMatrix.hx	/^	public function new( ?m : Array<Float> ) {$/;"	f
new	heaps/h3d/shader/CubeMap.hx	/^	public function new(texture, reflection=false) {$/;"	f
new	heaps/h3d/shader/DirLight.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/DirShadow.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/FixedColor.hx	/^	public function new( color = 0, alpha = 1. ) {$/;"	f
new	heaps/h3d/shader/KillAlpha.hx	/^	public function new(threshold = 0.) {$/;"	f
new	heaps/h3d/shader/LineShader.hx	/^	public function new( width = 1.5, lengthScale = 1. ) {$/;"	f
new	heaps/h3d/shader/NormalMap.hx	/^    public function new(?texture) {$/;"	f
new	heaps/h3d/shader/ParticleShader.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/PointLight.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/PointShadow.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/SAO.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/Shadow.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/SinusDeform.hx	/^	public function new( frequency = 10., amplitude = 0.01, speed = 1. ) {$/;"	f
new	heaps/h3d/shader/SkinBase.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/SpecularTexture.hx	/^	public function new(?tex) {$/;"	f
new	heaps/h3d/shader/SpotShadow.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/Texture.hx	/^	public function new(?tex) {$/;"	f
new	heaps/h3d/shader/Texture2.hx	/^	public function new(?tex) {$/;"	f
new	heaps/h3d/shader/UVAnim.hx	/^	public function new(frameDivision : Int, totalFrames = -1, ?speed = 1.) {$/;"	f
new	heaps/h3d/shader/UVDelta.hx	/^	public function new( dx = 0., dy = 0., sx = 1., sy = 1. ) {$/;"	f
new	heaps/h3d/shader/UVScroll.hx	/^	public function new( vx = 0., vy = 0. ) {$/;"	f
new	heaps/h3d/shader/VolumeDecal.hx	/^	public function new( objectWidth : Float, objectHeight : Float ) {$/;"	f
new	heaps/h3d/shader/ZCut.hx	/^	public function new(zMin = 0., zMax = 1.) {$/;"	f
new	heaps/h3d/shader/pbr/CubeLod.hx	/^	public function new(?texture) {$/;"	f
new	heaps/h3d/shader/pbr/PropsTexture.hx	/^	public function new(?t) {$/;"	f
new	heaps/h3d/shader/pbr/PropsValues.hx	/^	public function new(metalness=0.,roughness=1.,occlusion=1.,emissive=0.,custom1=0.,custom2=0.) {$/;"	f
new	heaps/h3d/shader/pbr/StrengthValues.hx	/^	public function new(albedoStrength=1.,normalStrength=1.,pbrStrength=1., emissiveStrength=1.) {$/;"	f
new	heaps/h3d/shader/pbr/ToneMapping.hx	/^	public function new() {$/;"	f
new	heaps/h3d/shader/pbr/VolumeDecal.hx	/^	public function new( ) {$/;"	f
new	heaps/hxd/App.hx	/^	public function new() {$/;"	f
new	heaps/hxd/BitmapData.hx	/^	public function new() {$/;"	f
new	heaps/hxd/BitmapData.hx	/^	public function new(width:Int, height:Int) {$/;"	f
new	heaps/hxd/BytesBuffer.hx	/^	public inline function new() {$/;"	f
new	heaps/hxd/Charset.hx	/^	function new() {$/;"	f
new	heaps/hxd/Cursor.hx	/^	public function new( frames, speed, offsetX, offsetY ) {$/;"	f
new	heaps/hxd/Direction.hx	/^	inline function new(v) {$/;"	f
new	heaps/hxd/Event.hx	/^	public function new(k,x=0.,y=0.) {$/;"	f
new	heaps/hxd/FloatBuffer.hx	/^	public function new(length) {$/;"	f
new	heaps/hxd/FloatBuffer.hx	/^	public inline function new( b : InnerData )  {$/;"	f
new	heaps/hxd/FloatBuffer.hx	/^	public inline function new(length = 0) {$/;"	f
new	heaps/hxd/IndexBuffer.hx	/^	public inline function new( b : InnerData )  {$/;"	f
new	heaps/hxd/IndexBuffer.hx	/^	public inline function new(length = 0) {$/;"	f
new	heaps/hxd/Pad.hx	/^	function new() {$/;"	f
new	heaps/hxd/Perlin.hx	/^	public function new() {$/;"	f
new	heaps/hxd/Pixels.hx	/^	public function new(width : Int, height : Int, bytes : haxe.io.Bytes, format : hxd.PixelFormat,/;"	f
new	heaps/hxd/Rand.hx	/^	public function new( seed : Int ) {$/;"	f
new	heaps/hxd/SceneEvents.hx	/^	public function new( ?window ) {$/;"	f
new	heaps/hxd/WaitEvent.hx	/^	public function new() {$/;"	f
new	heaps/hxd/Window.flash.hx	/^	function new() : Void {$/;"	f
new	heaps/hxd/Window.hl.hx	/^	function new(title:String, width:Int, height:Int, fixed:Bool = false) {$/;"	f
new	heaps/hxd/Window.hx	/^	function new() : Void {$/;"	f
new	heaps/hxd/Window.js.hx	/^	public function new( ?canvas : js.html.CanvasElement, ?globalEvents ) : Void {$/;"	f
new	heaps/hxd/Worker.hx	/^	public function new( e : Enum<T> ) {$/;"	f
new	heaps/hxd/clipper/Clipper.hx	/^	function new()$/;"	f
new	heaps/hxd/clipper/Clipper.hx	/^	public function new (miterLimit = 2.0, arcTolerance = 0.25) {$/;"	f
new	heaps/hxd/clipper/Clipper.hx	/^	public function new() {$/;"	f
new	heaps/hxd/clipper/Clipper.hx	/^	public function new()$/;"	f
new	heaps/hxd/clipper/Clipper.hx	/^	public inline function new(?v:T) {$/;"	f
new	heaps/hxd/clipper/Rect.hx	/^	public function new(l=0,t=0,r=0,b=0) {$/;"	f
new	heaps/hxd/earcut/Earcut.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/bfnt/Reader.hx	/^	public function new( i : Input ) {$/;"	f
new	heaps/hxd/fmt/bfnt/Writer.hx	/^	public function new( out : Output ) {$/;"	f
new	heaps/hxd/fmt/blend/Data.hx	/^	public function new() {}$/;"	f
new	heaps/hxd/fmt/blend/Data.hx	/^	public function new(bytes: haxe.io.Bytes) {$/;"	f
new	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function new( fileName ) {$/;"	f
new	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function new(def, object) {$/;"	f
new	heaps/hxd/fmt/fbx/Filter.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/fbx/Geometry.hx	/^	public function new(l, root) {$/;"	f
new	heaps/hxd/fmt/fbx/Parser.hx	/^	function new() {$/;"	f
new	heaps/hxd/fmt/grd/Data.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/grd/Data.hx	/^	public function new() {}$/;"	f
new	heaps/hxd/fmt/grd/Reader.hx	/^	public function new(i) {$/;"	f
new	heaps/hxd/fmt/hbson/Reader.hx	/^	public function new( data : haxe.io.Bytes, globalStrings ) {$/;"	f
new	heaps/hxd/fmt/hbson/Writer.hx	/^	public function new( out : haxe.io.Output ) {$/;"	f
new	heaps/hxd/fmt/hmd/Data.hx	/^	inline function new(v) {$/;"	f
new	heaps/hxd/fmt/hmd/Data.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/hmd/Data.hx	/^	public function new(name, format) {$/;"	f
new	heaps/hxd/fmt/hmd/Dump.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/hmd/Library.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/hmd/Library.hx	/^	public function new(res,  header) {$/;"	f
new	heaps/hxd/fmt/hmd/Library.hx	/^	public function new(size, offset, def, next) {$/;"	f
new	heaps/hxd/fmt/hmd/Reader.hx	/^	public function new(i) {$/;"	f
new	heaps/hxd/fmt/hmd/Writer.hx	/^	public function new(out) {$/;"	f
new	heaps/hxd/fmt/pak/Build.hx	/^	function new() {$/;"	f
new	heaps/hxd/fmt/pak/Data.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function new(fs, parent, f, p) {$/;"	f
new	heaps/hxd/fmt/pak/Loader.hx	/^	public function new(s2d:h2d.Scene, onDone) {$/;"	f
new	heaps/hxd/fmt/pak/Reader.hx	/^	public function new(i) {$/;"	f
new	heaps/hxd/fmt/pak/Writer.hx	/^	public function new(o) {$/;"	f
new	heaps/hxd/fmt/spine/Data.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/spine/Data.hx	/^	public function new(bone) {$/;"	f
new	heaps/hxd/fmt/spine/Library.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fmt/tiff/Data.hx	/^	public inline function new(v) {$/;"	f
new	heaps/hxd/fmt/tiff/Reader.hx	/^	public function new(f:FileInput) {$/;"	f
new	heaps/hxd/fmt/tiff/Writer.hx	/^	public function new(f) {$/;"	f
new	heaps/hxd/fs/BytesFileSystem.hx	/^	function new() {$/;"	f
new	heaps/hxd/fs/BytesFileSystem.hx	/^	public function new(path, bytes) {$/;"	f
new	heaps/hxd/fs/Convert.hx	/^	public function new( sourceExts, destExt ) {$/;"	f
new	heaps/hxd/fs/Convert.hx	/^	public function new() {$/;"	f
new	heaps/hxd/fs/Convert.hx	/^	public function new(fr,to,cmd:String,args:Array<String>) {$/;"	f
new	heaps/hxd/fs/EmbedFileSystem.hx	/^	function new(fs, name, relPath, data) {$/;"	f
new	heaps/hxd/fs/EmbedFileSystem.hx	/^	function new(root) {$/;"	f
new	heaps/hxd/fs/FileConverter.hx	/^	public function new(baseDir,configuration) {$/;"	f
new	heaps/hxd/fs/FileInput.hx	/^	function new(entry) {$/;"	f
new	heaps/hxd/fs/LoadedBitmap.hx	/^	public inline function new(data) {$/;"	f
new	heaps/hxd/fs/LocalFileSystem.hx	/^	function new(fs, name, relPath, file) {$/;"	f
new	heaps/hxd/fs/LocalFileSystem.hx	/^	public function new( dir : String ) {$/;"	f
new	heaps/hxd/fs/LocalFileSystem.hx	/^	public function new( dir : String, configuration : String ) {$/;"	f
new	heaps/hxd/fs/MultiFileSystem.hx	/^	public function new(fs) {$/;"	f
new	heaps/hxd/fs/MultiFileSystem.hx	/^	public function new(fs, el) {$/;"	f
new	heaps/hxd/fs/NotFound.hx	/^	public function new(path) {$/;"	f
new	heaps/hxd/impl/Air3File.hx	/^	public function new(file) {$/;"	f
new	heaps/hxd/impl/AllocPos.hx	/^	public function new() {$/;"	f
new	heaps/hxd/impl/Allocator.hx	/^	public function new() {$/;"	f
new	heaps/hxd/impl/ArrayIterator.hx	/^	public inline function new(a) {$/;"	f
new	heaps/hxd/impl/AsyncLoader.hx	/^	public function new() {$/;"	f
new	heaps/hxd/impl/CacheAllocator.hx	/^	public function new( ?dispose ) {$/;"	f
new	heaps/hxd/impl/UncheckedBytes.hx	/^	inline function new(v) {$/;"	f
new	heaps/hxd/net/BinaryLoader.hx	/^	public function new( url : String ) {$/;"	f
new	heaps/hxd/net/Socket.hx	/^	public function new() {$/;"	f
new	heaps/hxd/net/Socket.hx	/^	public function new(s) {$/;"	f
new	heaps/hxd/net/Socket.hx	/^	public function new(sock) {$/;"	f
new	heaps/hxd/net/SocketHost.hx	/^	public function new() {$/;"	f
new	heaps/hxd/net/SocketHost.hx	/^	public function new(host, s) {$/;"	f
new	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public function new(head:Node, tail:Node)$/;"	f
new	heaps/hxd/poly2tri/Basin.hx	/^	public function new()$/;"	f
new	heaps/hxd/poly2tri/Edge.hx	/^	public function new(p1:Point, p2:Point)$/;"	f
new	heaps/hxd/poly2tri/EdgeEvent.hx	/^	public function new()$/;"	f
new	heaps/hxd/poly2tri/Node.hx	/^	public function new(point:Point = null, triangle:Triangle = null)$/;"	f
new	heaps/hxd/poly2tri/Point.hx	/^	public function new(x,y)$/;"	f
new	heaps/hxd/poly2tri/Sweep.hx	/^	public function new(context)$/;"	f
new	heaps/hxd/poly2tri/SweepContext.hx	/^	public function new()$/;"	f
new	heaps/hxd/poly2tri/Triangle.hx	/^	public function new(p1:Point, p2:Point, p3:Point, fixOrientation = false, checkOrientation = tr/;"	f
new	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function new()$/;"	f
new	heaps/hxd/res/Any.hx	/^	public function new(loader, entry) {$/;"	f
new	heaps/hxd/res/Any.hx	/^	public function new(path, bytes) {$/;"	f
new	heaps/hxd/res/BDFFont.hx	/^	public function new( code, width, height, xoffset, yoffset, stride ) {$/;"	f
new	heaps/hxd/res/BitmapFont.hx	/^	public function new( entry ) {$/;"	f
new	heaps/hxd/res/DynamicText.hx	/^	public function new( id : String, f : T -> String ) {$/;"	f
new	heaps/hxd/res/FileTree.hx	/^			private inline function new(loader) this = loader;$/;"	f
new	heaps/hxd/res/FileTree.hx	/^	public function new(dir) {$/;"	f
new	heaps/hxd/res/FontBuilder.hx	/^	function new(name, size, opt) {$/;"	f
new	heaps/hxd/res/Image.hx	/^	public function new() {$/;"	f
new	heaps/hxd/res/Loader.hx	/^	public function new(fs) {$/;"	f
new	heaps/hxd/res/NanoJpeg.hx	/^	function new() {$/;"	f
new	heaps/hxd/res/NanoJpeg.hx	/^	public function new() {$/;"	f
new	heaps/hxd/res/NanoJpeg.hx	/^	public inline function new(b:haxe.io.Bytes) {$/;"	f
new	heaps/hxd/res/Resource.hx	/^	public function new(entry) {$/;"	f
new	heaps/hxd/snd/Channel.hx	/^	function new() {$/;"	f
new	heaps/hxd/snd/ChannelBase.hx	/^	function new() {$/;"	f
new	heaps/hxd/snd/ChannelGroup.hx	/^	public function new(name : String) {$/;"	f
new	heaps/hxd/snd/Driver.hx	/^	public function new() {}$/;"	f
new	heaps/hxd/snd/Effect.hx	/^	public function new(type : String) {$/;"	f
new	heaps/hxd/snd/Listener.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/LoadingData.hx	/^	public function new(snd) {$/;"	f
new	heaps/hxd/snd/Manager.hx	/^	private function new() {$/;"	f
new	heaps/hxd/snd/Manager.hx	/^	public function new(driver : Driver) {$/;"	f
new	heaps/hxd/snd/Mp3Data.hx	/^	public function new( bytes : haxe.io.Bytes ) {$/;"	f
new	heaps/hxd/snd/NativeChannel.hx	/^	public function new( bufferSamples : Int ) {$/;"	f
new	heaps/hxd/snd/NativeChannel.hx	/^	public function new(samples, native) {$/;"	f
new	heaps/hxd/snd/OggData.hx	/^	public function new( bytes : haxe.io.Bytes ) {$/;"	f
new	heaps/hxd/snd/OggData.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/SoundGroup.hx	/^	public function new(name : String) {$/;"	f
new	heaps/hxd/snd/WavData.hx	/^	public function new(bytes) {$/;"	f
new	heaps/hxd/snd/effect/LowPass.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/effect/Pitch.hx	/^	public function new(value = 1.0) {$/;"	f
new	heaps/hxd/snd/effect/Reverb.hx	/^	public function new(?preset : ReverbPreset) {$/;"	f
new	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public function new( $/;"	f
new	heaps/hxd/snd/effect/Spatialization.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/openal/AudioTypes.hx	/^	public function new() { }$/;"	f
new	heaps/hxd/snd/openal/AudioTypes.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/openal/Driver.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/openal/Emulator.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/openal/Emulator.hx	/^	public function new(d) {$/;"	f
new	heaps/hxd/snd/openal/Emulator.hx	/^	public function new(source, samples) {$/;"	f
new	heaps/hxd/snd/openal/LowPassDriver.hx	/^	public function new(driver) {$/;"	f
new	heaps/hxd/snd/openal/ReverbDriver.hx	/^	public function new(driver) {$/;"	f
new	heaps/hxd/snd/openal/SpatializationDriver.hx	/^	public function new(driver) {$/;"	f
new	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function new() { }$/;"	f
new	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function new()$/;"	f
new	heaps/hxd/snd/webaudio/Context.hx	/^	public function new( channels : Int, samples : Int, rate : Int ) {$/;"	f
new	heaps/hxd/snd/webaudio/Driver.hx	/^	public function new()$/;"	f
new	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	public function new() {$/;"	f
new	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/AgalOptim.hx	/^	public function new(debug = false) {$/;"	f
new	heaps/hxsl/AgalOptim.hx	/^	public function new(i) {$/;"	f
new	heaps/hxsl/AgalOut.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Ast.hx	/^	public function new( msg, pos ) {$/;"	f
new	heaps/hxsl/Cache.hx	/^	function new() {$/;"	f
new	heaps/hxsl/Cache.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/CacheFile.hx	/^	public function new( allowCompile, recompileRT = false ) {$/;"	f
new	heaps/hxsl/CacheFileBuilder.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/CacheFileBuilder.hx	/^	public function new(build) {$/;"	f
new	heaps/hxsl/Checker.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Clone.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Dce.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Dce.hx	/^	public function new(v) {$/;"	f
new	heaps/hxsl/DynamicShader.hx	/^	public function new( s : SharedShader ) {$/;"	f
new	heaps/hxsl/DynamicShader.hx	/^	public function new(kind,index,fields) {$/;"	f
new	heaps/hxsl/Eval.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Flatten.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Flatten.hx	/^	public function new(g, t, pos, size) {$/;"	f
new	heaps/hxsl/Globals.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Globals.hx	/^	public inline function new(name:String) {$/;"	f
new	heaps/hxsl/GlslOut.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/HlslOut.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Linker.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Linker.hx	/^	public function new(batchMode=false) {$/;"	f
new	heaps/hxsl/Linker.hx	/^	public function new(n, v) {$/;"	f
new	heaps/hxsl/MacroParser.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Printer.hx	/^	public function new(varId = false) {$/;"	f
new	heaps/hxsl/RuntimeShader.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/RuntimeShader.hx	/^	public function new(name, pos, instance, index, type) {$/;"	f
new	heaps/hxsl/RuntimeShader.hx	/^	public function new(pos, path, type) {$/;"	f
new	heaps/hxsl/RuntimeShader.hx	/^	public function new(shader, bits) {$/;"	f
new	heaps/hxsl/Serializer.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Shader.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/ShaderList.hx	/^	public function new(s, ?n) {$/;"	f
new	heaps/hxsl/ShaderList.hx	/^	public inline function new(l,last) {$/;"	f
new	heaps/hxsl/SharedShader.hx	/^	public function new(shader) {$/;"	f
new	heaps/hxsl/SharedShader.hx	/^	public function new(src:String) {$/;"	f
new	heaps/hxsl/SharedShader.hx	/^	public function new(v, gid) {$/;"	f
new	heaps/hxsl/SharedShader.hx	/^	public function new(v, pos, bits) {$/;"	f
new	heaps/hxsl/Splitter.hx	/^	public function new() {$/;"	f
new	heaps/hxsl/Splitter.hx	/^	public function new(v) {$/;"	f
new	heaps/samples/Domkit.hx	/^	public function new( ?parent ) {$/;"	f
new	heaps/samples/Domkit.hx	/^	public function new(align:h2d.Flow.FlowAlign, ?parent) {$/;"	f
new	heaps/samples/Domkit.hx	/^	public function new(align:h2d.Flow.FlowAlign,icons:Array<h2d.Tile>,?parent) {$/;"	f
new	heaps/samples/DrawingTiles.hx	/^	public function new( t ) {$/;"	f
new	heaps/samples/Helpers.hx	/^	public function new( ?parent : Object, size = 10.0, divisions = 10, color1 = 0x444444, color2 =/;"	f
new	heaps/samples/Helpers.hx	/^	public function new( ?parent : h3d.scene.Object, size = 2.0, colorX = 0xEB304D, colorY = 0x7FC3/;"	f
new	heaps/samples/Helpers.hx	/^	public function new( light : h3d.scene.fwd.PointLight, sphereSize = 0.5 ) {$/;"	f
new	heaps/samples/HtmlText.hx	/^	public function new(parent:h2d.Scene, font: Font, str:String, align:h2d.Text.Align){$/;"	f
new	heaps/samples/Interactive2D.hx	/^	public function new() {$/;"	f
new	heaps/samples/Mask.hx	/^	public function new(?parent:Object) {$/;"	f
new	heaps/samples/MeshBatch.hx	/^	public function new() {$/;"	f
new	heaps/samples/Network.hx	/^	public function new( color, uid=0 ) {$/;"	f
new	heaps/samples/Pad.hx	/^	public function new( p : hxd.Pad, parent : h2d.Object ){$/;"	f
new	heaps/samples/Pbr.hx	/^	function new() {$/;"	f
new	heaps/samples/Sao.hx	/^	public function new() {$/;"	f
new	heaps/samples/Sound.hx	/^	public function new() {$/;"	f
new	heaps/samples/Text.hx	/^	public function new(parent:h2d.Scene, font: Font, str:String, align:h2d.Text.Align){$/;"	f
new	heaps/tools/hxsl/Main.hx	/^	function new() {$/;"	f
new2D	heaps/hxd/App.hx	/^		var new2D = hxd.impl.Api.downcast(scene, h2d.Scene);$/;"	v
new3D	heaps/hxd/App.hx	/^		var new3D = hxd.impl.Api.downcast(scene, h3d.scene.Scene);$/;"	v
newAngle	heaps/h2d/Particles.hx	/^			var newAngle = a * 0.5 * Math.PI * rand;$/;"	v
newArc	heaps/h2d/col/Voronoi.hx	/^		var newArc = this.createBeachsection(point);$/;"	v
newArray	heaps/hxd/FloatBuffer.hx	/^			var newArray = new Float32Array(newSize);$/;"	v
newArray	heaps/hxd/FloatBuffer.hx	/^			var newArray = new Float32Array(v);$/;"	v
newBytes	heaps/h3d/impl/GlDriver.hx	/^		var newBytes = new hl.Bytes(newLen);$/;"	v
newFrontTriangle	heaps/hxd/poly2tri/Sweep.hx	/^	public function newFrontTriangle(point:Point, node:Node) :Node$/;"	f
newLen	heaps/h3d/impl/GlDriver.hx	/^		var newLen = streamLen == 0 ? 0x10000 : streamLen;$/;"	v
newLine	heaps/h2d/HtmlText.hx	/^	var newLine : Bool;$/;"	v
newLine	heaps/hxsl/GlslOut.hx	/^	function newLine( e : TExpr ) {$/;"	f
newLine	heaps/hxsl/HlslOut.hx	/^	function newLine( e : TExpr ) {$/;"	f
newNode	heaps/hxd/clipper/Clipper.hx	/^					var newNode = new IntersectNode();$/;"	v
newNode	heaps/hxd/clipper/Clipper.hx	/^		var newNode = new PolyNode();$/;"	v
newOffset	heaps/hxd/fmt/blend/Data.hx	/^				var newOffset = offset;$/;"	v
newP	heaps/hxd/poly2tri/Sweep.hx	/^			var newP:Point = Sweep.nextFlipPoint(ep, eq, ot, op);$/;"	v
newP	heaps/hxd/poly2tri/Sweep.hx	/^			var newP:Point = nextFlipPoint(ep, eq, ot, op);$/;"	v
newSamples	heaps/hxd/snd/Data.hx	/^		var newSamples = Math.ceil(samples * (rate \/ samplingRate));$/;"	v
newSb	heaps/hxd/clipper/Clipper.hx	/^			var newSb = new Scanbeam();$/;"	v
newSize	heaps/hxd/FloatBuffer.hx	/^			var newSize = this.array.length << 1;$/;"	v
newTile	heaps/h2d/KeyFrames.hx	/^				var newTile = l.tiles[curTile];$/;"	v
newTime	heaps/hxd/Cursor.hx	/^		var newTime : Float = frameTime + dt;$/;"	v
newTime	heaps/hxd/Timer.hx	/^		var newTime = haxe.Timer.stamp();$/;"	v
new_node	heaps/hxd/poly2tri/Sweep.hx	/^		var new_node = new Node(point);$/;"	v
new_node	heaps/hxd/poly2tri/Sweep.hx	/^		var new_node = null;$/;"	v
newbyte	heaps/hxd/res/NanoJpeg.hx	/^			var newbyte = get(0);$/;"	v
newline	heaps/h2d/HtmlText.hx	/^				var newline = cc == '\\n'.code;$/;"	v
newline	heaps/h2d/Text.hx	/^			var newline = cc == '\\n'.code;$/;"	v
newt	heaps/h3d/impl/TextureCache.hx	/^		var newt = new h3d.mat.Texture(width, height, flags, format);$/;"	v
next	heaps/h2d/Font.hx	/^	public var next : Null<Kerning>;$/;"	v
next	heaps/h2d/Graphics.hx	/^			var next = pts[(i + 1) % pts.length];$/;"	v
next	heaps/h2d/Graphics.hx	/^	public function next() {$/;"	f
next	heaps/h2d/KeyFrames.hx	/^		var next = f.key_values[index + 1];$/;"	v
next	heaps/h2d/SpriteBatch.hx	/^	public inline function next() {$/;"	f
next	heaps/h2d/SpriteBatch.hx	/^	var next : BatchElement;$/;"	v
next	heaps/h2d/ZGroup.hx	/^				var next = e.next;$/;"	v
next	heaps/h2d/ZGroup.hx	/^	public var next  : DepthEntry;$/;"	v
next	heaps/h2d/col/IPolygon.hx	/^		var next = 0;$/;"	v
next	heaps/h2d/impl/BatchDrawState.hx	/^	public var next:StateEntry;$/;"	v
next	heaps/h3d/Buffer.hx	/^	public var next : BufferOffset;$/;"	v
next	heaps/h3d/Buffer.hx	/^	public var next(default,null) : Buffer;$/;"	v
next	heaps/h3d/Engine.hx	/^	public var next : TargetTmp;$/;"	v
next	heaps/h3d/col/Polygon.hx	/^	public var next : TriPlane = null;$/;"	v
next	heaps/h3d/impl/Benchmark.hx	/^	public var next : QueryObject;$/;"	v
next	heaps/h3d/impl/Benchmark.hx	/^	public var next : StatsObject;$/;"	v
next	heaps/h3d/impl/ManagedBuffer.hx	/^	var next : FreeCell;$/;"	v
next	heaps/h3d/impl/ManagedBuffer.hx	/^	var next : ManagedBuffer;$/;"	v
next	heaps/h3d/mat/MaterialDatabase.hx	/^			var next = Reflect.field(root, path[i]);$/;"	v
next	heaps/h3d/parts/Data.hx	/^	public var next : ColorKey;$/;"	v
next	heaps/h3d/parts/GpuParticles.hx	/^	public var next : GpuPart;$/;"	v
next	heaps/h3d/parts/Particle.hx	/^	public var next : Particle;$/;"	v
next	heaps/h3d/parts/Particles.hx	/^	public inline function next() {$/;"	f
next	heaps/h3d/pass/PassList.hx	/^	public inline function next() {$/;"	f
next	heaps/h3d/pass/PassObject.hx	/^	@:noCompletion public var next : PassObject;$/;"	v
next	heaps/h3d/scene/Graphics.hx	/^			var next = pts[(i + 1) % pts.length];$/;"	v
next	heaps/h3d/scene/Light.hx	/^	@:noCompletion public var next : Light; \/\/ used internaly (public to allow sorting)$/;"	v
next	heaps/h3d/scene/MeshBatch.hx	/^				var next = haxe.io.Bytes.alloc(Std.int(primitiveSubBytes.length*3\/2));$/;"	v
next	heaps/h3d/scene/MeshBatch.hx	/^	public var next : BatchData;$/;"	v
next	heaps/hxd/FloatBuffer.hx	/^	public inline function next() {$/;"	f
next	heaps/hxd/IndexBuffer.hx	/^	public inline function next() : Int {$/;"	f
next	heaps/hxd/clipper/Clipper.hx	/^			var next:TEdge = edge1.nextInAEL;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^			var next:TEdge = edge1.nextInSEL;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^			var next:TEdge = edge2.nextInAEL;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^			var next:TEdge = edge2.nextInSEL;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^	public var next : LocalMinima;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^	public var next : OutPt;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^	public var next : Scanbeam;$/;"	v
next	heaps/hxd/clipper/Clipper.hx	/^	public var next : TEdge;$/;"	v
next	heaps/hxd/earcut/Earcut.hx	/^	public var next : EarNode;$/;"	v
next	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var next = parseCode(k.att.id);$/;"	v
next	heaps/hxd/fmt/bfnt/FontParser.hx	/^			inline function next() : Void {$/;"	f
next	heaps/hxd/fmt/fbx/Parser.hx	/^	function next() {$/;"	f
next	heaps/hxd/fmt/grd/Reader.hx	/^		var next = trns[index];$/;"	v
next	heaps/hxd/fmt/hmd/Library.hx	/^	public var next : FormatMap;$/;"	v
next	heaps/hxd/fmt/tiff/Reader.hx	/^				var next = f.tell();$/;"	v
next	heaps/hxd/impl/ArrayIterator.hx	/^	public inline function next() : T {$/;"	f
next	heaps/hxd/poly2tri/Node.hx	/^	public var next:Node;$/;"	v
next	heaps/hxd/snd/Channel.hx	/^	@:noCompletion public var next : Channel;$/;"	v
next	heaps/hxd/snd/Effect.hx	/^	@:noCompletion public var next : Effect;$/;"	v
next	heaps/hxd/snd/Manager.hx	/^			var next = c.next; \/\/ save next, since we might release this channel$/;"	v
next	heaps/hxsl/Cache.hx	/^	public var next : Map<Int,SearchMap>;$/;"	v
next	heaps/hxsl/RuntimeShader.hx	/^	public var next : AllocGlobal;$/;"	v
next	heaps/hxsl/RuntimeShader.hx	/^	public var next : AllocParam;$/;"	v
next	heaps/hxsl/ShaderList.hx	/^	public inline function next() {$/;"	f
next	heaps/hxsl/ShaderList.hx	/^	public var next : ShaderList;$/;"	v
next	heaps/hxsl/SharedShader.hx	/^	public var next : ShaderConst;$/;"	v
nextAlloc	heaps/h3d/pass/PassObject.hx	/^	var nextAlloc : PassObject;$/;"	v
nextAuxiliarySend	heaps/hxd/snd/openal/AudioTypes.hx	/^	var nextAuxiliarySend     : Int;$/;"	v
nextChar	heaps/hxd/fmt/fbx/Parser.hx	/^	inline function nextChar() {$/;"	f
nextCol	heaps/hxd/res/Gradients.hx	/^				var nextCol = colors[ci + 1].value;$/;"	v
nextFlipPoint	heaps/hxd/poly2tri/Sweep.hx	/^	static public function nextFlipPoint(ep:Point, eq:Point, ot:Triangle, op:Point):Point$/;"	f
nextFlipTriangle	heaps/hxd/poly2tri/Sweep.hx	/^	public function nextFlipTriangle(o:Int, t:Triangle, ot:Triangle, p:Point, op:Point):Triangle {$/;"	f
nextFrame	heaps/h3d/shader/AnimatedTexture.hx	/^			var nextFrame = if( loop ) (frame + 1) % totalFrames else min(frame + 1, totalFrames - 1);$/;"	v
nextFrame	heaps/h3d/shader/GpuParticle.hx	/^				var nextFrame = (frame + 1) % totalFrames;$/;"	v
nextFrame	heaps/hxd/impl/CacheAllocator.hx	/^	public function nextFrame() {$/;"	f
nextID	heaps/h3d/pass/HardwarePick.hx	/^	inline function nextID() {$/;"	f
nextInAEL	heaps/hxd/clipper/Clipper.hx	/^	public var nextInAEL : TEdge;$/;"	v
nextInLML	heaps/hxd/clipper/Clipper.hx	/^	public var nextInLML : TEdge;$/;"	v
nextInSEL	heaps/hxd/clipper/Clipper.hx	/^	public var nextInSEL : TEdge;$/;"	v
nextLine	heaps/h2d/HtmlText.hx	/^	inline function nextLine( align : Align, size : Float )$/;"	f
nextLoc	heaps/hxd/res/Gradients.hx	/^				var nextLoc = colors[ci + 1].loc;$/;"	v
nextPOT	heaps/hxd/Math.hx	/^	public static inline function nextPOT(v : Int) : Int {$/;"	f
nextPass	heaps/h3d/mat/Pass.hx	/^	var nextPass : Pass;$/;"	v
nextPass	heaps/h3d/scene/RenderContext.hx	/^	public inline function nextPass() {$/;"	f
nextPath	heaps/hxd/fmt/pak/Build.hx	/^	var nextPath : String;$/;"	v
nextReadPos	heaps/hxd/fs/FileInput.hx	/^	var nextReadPos : Int = 0;$/;"	v
nextToken	heaps/hxd/fmt/fbx/Parser.hx	/^	function nextToken() {$/;"	f
nextZ	heaps/hxd/earcut/Earcut.hx	/^	public var nextZ : EarNode;$/;"	v
nf	heaps/h3d/shader/NormalMap.hx	/^			var nf = unpackNormal(texture.get(calculatedUV));$/;"	v
nf	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var nf = unpackNormal(normal);$/;"	v
ng	heaps/h3d/shader/Buffers.hx	/^		var ng = s.globalsSize << 2;$/;"	v
nh	heaps/h3d/parts/Data.hx	/^			var nh = Std.int(t.height \/ t.width);$/;"	v
nid	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var nid = child.getId();$/;"	v
nid	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var nid = pmap[vid];$/;"	v
nidx	heaps/h3d/prim/GeoSphere.hx	/^			var nidx = new hxd.IndexBuffer();$/;"	v
ninf	heaps/hxsl/Splitter.hx	/^					var ninf = get(nv);$/;"	v
njByteAlign	heaps/hxd/res/NanoJpeg.hx	/^	inline function njByteAlign() {$/;"	f
njClip	heaps/hxd/res/NanoJpeg.hx	/^	inline static function njClip(x) {$/;"	f
njColIDCT	heaps/hxd/res/NanoJpeg.hx	/^	inline function njColIDCT( bp, out : FastBytes, po, stride ) {$/;"	f
njConvert	heaps/hxd/res/NanoJpeg.hx	/^	function njConvert() {$/;"	f
njDecode	heaps/hxd/res/NanoJpeg.hx	/^	function njDecode() {$/;"	f
njDecode16	heaps/hxd/res/NanoJpeg.hx	/^	inline function njDecode16(p) {$/;"	f
njDecodeBlock	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeBlock( c : Component, po ) {$/;"	f
njDecodeDHT	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeDHT() {$/;"	f
njDecodeDQT	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeDQT() {$/;"	f
njDecodeDRI	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeDRI() {$/;"	f
njDecodeLength	heaps/hxd/res/NanoJpeg.hx	/^	inline function njDecodeLength() {$/;"	f
njDecodeSOF	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeSOF() {$/;"	f
njDecodeScan	heaps/hxd/res/NanoJpeg.hx	/^	function njDecodeScan() {$/;"	f
njGetBits	heaps/hxd/res/NanoJpeg.hx	/^	inline function njGetBits(bits) {$/;"	f
njGetVLC	heaps/hxd/res/NanoJpeg.hx	/^	inline function njGetVLC( vlc : haxe.io.Bytes ) {$/;"	f
njInit	heaps/hxd/res/NanoJpeg.hx	/^	function njInit( bytes, pos, size, filter ) {$/;"	f
njRowIDCT	heaps/hxd/res/NanoJpeg.hx	/^	inline function njRowIDCT( bp ) {$/;"	f
njShowBits	heaps/hxd/res/NanoJpeg.hx	/^	function njShowBits(bits) {$/;"	f
njSkip	heaps/hxd/res/NanoJpeg.hx	/^	inline function njSkip(count) {$/;"	f
njSkipBits	heaps/hxd/res/NanoJpeg.hx	/^	inline function njSkipBits(bits) {$/;"	f
njSkipMarker	heaps/hxd/res/NanoJpeg.hx	/^	inline function njSkipMarker() {$/;"	f
njUpsample	heaps/hxd/res/NanoJpeg.hx	/^	function njUpsample( c : Component ) {$/;"	f
njUpsampleH	heaps/hxd/res/NanoJpeg.hx	/^	function njUpsampleH( c : Component ) {$/;"	f
njUpsampleV	heaps/hxd/res/NanoJpeg.hx	/^	function njUpsampleV( c : Component ) {$/;"	f
njZZ	heaps/hxd/res/NanoJpeg.hx	/^	var njZZ : haxe.ds.Vector<Int>;$/;"	v
nm	heaps/hxd/fmt/grd/Reader.hx	/^			var nm : String = obj.Nm;$/;"	v
nnx	heaps/h2d/Graphics.hx	/^				var nnx = -ny;$/;"	v
nny	heaps/h2d/Graphics.hx	/^				var nny = nx;$/;"	v
no	heaps/hxd/poly2tri/Triangle.hx	/^		var no:Int = offset;$/;"	v
noExt	heaps/hxd/res/FileTree.hx	/^				var noExt = extParts.shift();$/;"	v
noGarbage	heaps/h3d/scene/World.hx	/^	static function noGarbage() {}$/;"	f
noSwiz	heaps/hxsl/AgalOptim.hx	/^	inline function noSwiz( r : Reg ) {$/;"	f
noWrite	heaps/hxsl/Dce.hx	/^			var noWrite = [];$/;"	v
node	heaps/h2d/HtmlText.hx	/^	var node : Xml;$/;"	v
node	heaps/hxd/clipper/Clipper.hx	/^		var node = parent;$/;"	v
node	heaps/hxd/earcut/Earcut.hx	/^			var node = setLinkedList(points, s, e, false);$/;"	v
node	heaps/hxd/earcut/Earcut.hx	/^		var node = allocNode(-1, 0, 0, null);$/;"	v
node	heaps/hxd/poly2tri/AdvancingFront.hx	/^		var node:Node = this.search_node;$/;"	v
node	heaps/hxd/poly2tri/Sweep.hx	/^			var node  = this.pointEvent(point);$/;"	v
node	heaps/hxd/poly2tri/Sweep.hx	/^		var node = this.context.locateNode(point);$/;"	v
node	heaps/hxd/poly2tri/Sweep.hx	/^		var node:Node;$/;"	v
node	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var node : AudioBufferSourceNode;$/;"	v
node	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^		var node = ctx.createBiquadFilter();$/;"	v
node	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^		var node = ctx.createPanner();$/;"	v
nodeName	heaps/h2d/HtmlText.hx	/^			var nodeName = e.nodeName.toLowerCase();$/;"	v
nodeName	heaps/h2d/HtmlText.hx	/^			var nodeName = xml.nodeName.toLowerCase();$/;"	v
nodes	heaps/hxd/fmt/fbx/Parser.hx	/^				var nodes : Array<FbxNode> = [firstNode];$/;"	v
nodes	heaps/hxd/fmt/fbx/Parser.hx	/^		var nodes = [];$/;"	v
noiseScale	heaps/h3d/shader/SAO.hx	/^		@param var noiseScale : Vec2;$/;"	v
noiseSeed	heaps/h3d/shader/NoiseLib.hx	/^var noiseSeed : Int;$/;"	v
noiseTexture	heaps/h3d/shader/SAO.hx	/^		@param var noiseTexture : Sampler2D;$/;"	v
noiseTextureKeys	heaps/h3d/mat/Texture.hx	/^	static var noiseTextureKeys = new Map<Int,{}>();$/;"	v
noiseUv	heaps/h3d/shader/SAO.hx	/^			var noiseUv : Vec2;$/;"	v
normT	heaps/h3d/shader/GpuParticle.hx	/^		var normT : Float;$/;"	v
normal	heaps/h3d/scene/World.hx	/^	public var normal : h3d.mat.BigTexture.BigTextureElement;$/;"	v
normal	heaps/h3d/scene/fwd/Renderer.hx	/^	public var normal : h3d.pass.Base = new NormalPass();$/;"	v
normal	heaps/h3d/shader/BaseMesh.hx	/^			var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/LineShader.hx	/^			var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/NormalMap.hx	/^            var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/ParticleShader.hx	/^			var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/SAO.hx	/^			var normal = normalTexture.get(vUV);$/;"	v
normal	heaps/h3d/shader/Skin.hx	/^			var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/SkinTangent.hx	/^			var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/VolumeDecal.hx	/^		@param var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/pbr/Lighting.hx	/^						var normal = (vec3( uvToScreen(calculatedUV), 1. ) * cameraInvViewProj.mat3x4()).normalize/;"	v
normal	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/pbr/PropsImport.hx	/^		var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/pbr/Slides.hx	/^		var normal : Vec3;$/;"	v
normal	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var normal = normalTexture.get(calculatedUV).rgba;$/;"	v
normal	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var normal : Vec3;$/;"	v
normal	heaps/samples/Sao.hx	/^		var normal = allocTarget("normal");$/;"	v
normalDistributionGGX	heaps/h3d/shader/pbr/BDRF.hx	/^		function normalDistributionGGX( NdH : Float, roughness: Float ) : Float {$/;"	f
normalDistributionGGXAnisotropic	heaps/h3d/shader/pbr/BDRF.hx	/^		function normalDistributionGGXAnisotropic( at : Float, ab : Float, NdH : Float, TdH : Float, B/;"	f
normalMap	heaps/h2d/filter/Displacement.hx	/^	public var normalMap : h2d.Tile;$/;"	v
normalMap	heaps/h3d/mat/Material.hx	/^	public var normalMap(get,set) : h3d.mat.Texture;$/;"	v
normalMap	heaps/h3d/scene/World.hx	/^		var normalMap = null;$/;"	v
normalMap	heaps/h3d/shader/Displacement.hx	/^		@param var normalMap : Sampler2D;$/;"	v
normalMap	heaps/hxd/fmt/hmd/Data.hx	/^	public var normalMap : Null<String>;$/;"	v
normalMapId	heaps/h3d/scene/fwd/Renderer.hx	/^	var normalMapId : Int;$/;"	v
normalPos	heaps/h3d/shader/Displacement.hx	/^		@param var normalPos : Vec2;$/;"	v
normalPos	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var normalPos = 0;$/;"	v
normalScale	heaps/h3d/shader/Displacement.hx	/^		@param var normalScale : Vec2;$/;"	v
normalShader	heaps/h3d/mat/Material.hx	/^	var normalShader : h3d.shader.NormalMap;$/;"	v
normalState	heaps/h2d/ZGroup.hx	/^	var normalState : State;$/;"	v
normalStrength	heaps/h3d/shader/pbr/StrengthValues.hx	/^		@param var normalStrength : Float;$/;"	v
normalStrength	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var normalStrength : Float;$/;"	v
normalTex	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var normalTex : Sampler2D;$/;"	v
normalTexture	heaps/h3d/shader/Blur.hx	/^		@param var normalTexture : Sampler2D;$/;"	v
normalTexture	heaps/h3d/shader/SAO.hx	/^		@ignore @param var normalTexture : Channel3;$/;"	v
normalTexture	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var normalTexture : Sampler2D;$/;"	v
normalize	heaps/h2d/col/Point.hx	/^	public inline function normalize() {$/;"	f
normalize	heaps/h2d/col/Ray.hx	/^	function normalize() {$/;"	f
normalize	heaps/h2d/impl/PointApi.hx	/^	function normalize() : Void;$/;"	f
normalize	heaps/h3d/Quat.hx	/^	public function normalize() {$/;"	f
normalize	heaps/h3d/Vector.hx	/^	public inline function normalize() {$/;"	f
normalize	heaps/h3d/col/Plane.hx	/^	public inline function normalize() {$/;"	f
normalize	heaps/h3d/col/Point.hx	/^	public inline function normalize() {$/;"	f
normalize	heaps/h3d/col/Ray.hx	/^	function normalize() {$/;"	f
normalize	heaps/hxd/Perlin.hx	/^	public var normalize : Bool;$/;"	v
normalizeFast	heaps/h3d/Vector.hx	/^	@:noCompletion public inline function normalizeFast() {$/;"	f
normalizeScaleOrient	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var normalizeScaleOrient : Bool = true;$/;"	v
normalized	heaps/h2d/col/Point.hx	/^	public inline function normalized() {$/;"	f
normalized	heaps/h2d/impl/PointApi.hx	/^	function normalized() : Point;$/;"	f
normalized	heaps/h3d/Vector.hx	/^	public inline function normalized() {$/;"	f
normalized	heaps/h3d/col/Point.hx	/^	public inline function normalized() {$/;"	f
normalmap	heaps/samples/DrawingTiles.hx	/^		var normalmap = hxd.Res.normalmap.toTile();$/;"	v
normals	heaps/h3d/prim/Cylinder.hx	/^		var normals = new Array();$/;"	v
normals	heaps/h3d/prim/Polygon.hx	/^	public var normals : Array<Point>;$/;"	v
normals	heaps/h3d/prim/Quads.hx	/^	var normals : Array<Point>;$/;"	v
normals	heaps/hxd/fmt/fbx/Geometry.hx	/^		var normals = getNormals();$/;"	v
normals	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var normals = geom.getNormals();$/;"	v
normalsRecomputed	heaps/h3d/prim/HMDModel.hx	/^	var normalsRecomputed : String;$/;"	v
notImplemented	heaps/hxd/BitmapData.hx	/^	static inline function notImplemented() {$/;"	f
notSupported	heaps/hxd/res/NanoJpeg.hx	/^	function notSupported() {$/;"	f
not_legalized	heaps/hxd/poly2tri/Sweep.hx	/^					var not_legalized:Bool;$/;"	v
nout	heaps/hxd/fmt/fbx/Geometry.hx	/^			var nout = [];$/;"	v
now	heaps/hxd/impl/CacheAllocator.hx	/^		var now = haxe.Timer.stamp();$/;"	v
now	heaps/hxd/snd/Manager.hx	/^			var now = haxe.Timer.stamp();$/;"	v
now	heaps/hxd/snd/Manager.hx	/^	var now      : Float;$/;"	v
now	heaps/hxd/snd/openal/Emulator.hx	/^			var now = haxe.Timer.stamp();$/;"	v
np	heaps/h3d/shader/Buffers.hx	/^		var np = s.paramsSize << 2;$/;"	v
np	heaps/hxsl/Splitter.hx	/^						var np = new VarProps(nv);$/;"	v
nparts	heaps/h2d/Particles.hx	/^	public var nparts(default, set) : Int 		= 100;$/;"	v
nparts	heaps/h3d/parts/GpuParticles.hx	/^	public var nparts(default, set) : Int 		= 100;$/;"	v
nq	heaps/hxsl/Serializer.hx	/^		var nq = input.readByte();$/;"	v
nrm	heaps/h2d/col/Polynomial.hx	/^			var nrm = 0.;$/;"	v
nrm	heaps/hxd/fmt/fbx/Geometry.hx	/^		var nrm = vect.getFloats();$/;"	v
ns	heaps/h2d/Graphics.hx	/^			var ns = Math.invSqrt(nx * nx + ny * ny);$/;"	v
ns	heaps/h3d/scene/Graphics.hx	/^			var ns = Math.invSqrt(nx * nx + ny * ny);$/;"	v
ns1	heaps/h2d/Graphics.hx	/^			var ns1 = Math.invSqrt(nx1 * nx1 + ny1 * ny1);$/;"	v
ns1	heaps/h3d/scene/Graphics.hx	/^			var ns1 = Math.invSqrt(nx1 * nx1 + ny1 * ny1);$/;"	v
ns2	heaps/h2d/Graphics.hx	/^			var ns2 = Math.invSqrt(nx2 * nx2 + ny2 * ny2);$/;"	v
ns2	heaps/h3d/scene/Graphics.hx	/^			var ns2 = Math.invSqrt(nx2 * nx2 + ny2 * ny2);$/;"	v
nsegments	heaps/h2d/TileGroup.hx	/^		var nsegments = Math.ceil(radius * 3.14 * 2 \/ 2);$/;"	v
nsegments	heaps/h2d/TileGroup.hx	/^		var nsegments = Math.ceil(ray * 3.14 * 2 \/ 2);$/;"	v
nsegments	heaps/h2d/TileGroup.hx	/^		var nsegments = Math.ceil(ray * 3.14 * 2 \/ 4);$/;"	v
nsegments	heaps/h3d/scene/Sphere.hx	/^		var nsegments = 32;$/;"	v
nsize	heaps/hxd/net/Socket.hx	/^			var nsize = size == 0 ? 1024 : size;$/;"	v
nt	heaps/h3d/shader/Buffers.hx	/^		var nt = s.texturesCount;$/;"	v
ntex	heaps/hxsl/HlslOut.hx	/^		var ntex = switch( v.type ) {$/;"	v
ntri	heaps/h3d/Engine.hx	/^			var ntri = Std.int(b.vertices \/ vertPerTri);$/;"	v
nullChar	heaps/h2d/Font.hx	/^	var nullChar : FontChar;$/;"	v
nullDrawable	heaps/h2d/Object.hx	/^	static var nullDrawable : h2d.Drawable;$/;"	v
nullReg	heaps/hxsl/AgalOut.hx	/^	var nullReg : Reg;$/;"	v
nullTexture	heaps/h3d/Engine.hx	/^	var nullTexture : h3d.mat.Texture;$/;"	v
numAudible	heaps/hxd/snd/SoundGroup.hx	/^	var numAudible : Int;$/;"	v
numChildren	heaps/h2d/Object.hx	/^	public var numChildren(get, never) : Int;$/;"	v
numChildren	heaps/h3d/scene/Object.hx	/^	public var numChildren(get, never) : Int;$/;"	v
numFrames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var numFrames = numFrames;$/;"	v
numFrames	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var numFrames = maxTime == 0 ? 1 : 1 + Std.int((maxTime - allTimes[0]) \/ minDT);$/;"	v
numLayers	heaps/h3d/shader/Parallax.hx	/^				var numLayers = mix(float(maxLayers), float(minLayers), abs(viewNS.z));$/;"	v
numProperties	heaps/hxd/fmt/fbx/Parser.hx	/^		var numProperties : Int = getVersionedInt32();$/;"	v
numProperties	heaps/hxd/fmt/grd/Reader.hx	/^		var numProperties = i.readInt32();$/;"	v
numSamples	heaps/h3d/scene/pbr/Environment.hx	/^			var numSamples = 1 << samplesBits;$/;"	v
numTargets	heaps/h3d/impl/GlDriver.hx	/^	var numTargets : Int;$/;"	v
nv	heaps/h2d/col/Delaunay.hx	/^		var nv = points.length;$/;"	v
nv	heaps/h3d/scene/World.hx	/^						var nv = vertexRemap[v];$/;"	v
nv	heaps/h3d/scene/World.hx	/^				var nv = vertexRemap[v];$/;"	v
nv	heaps/hxd/Pixels.hx	/^				var nv = fbytes.getUInt16(i << 1);$/;"	v
nv	heaps/hxsl/Splitter.hx	/^					var nv : TVar = {$/;"	v
nv	heaps/hxsl/Splitter.hx	/^				var nv : TVar = {$/;"	v
nvect	heaps/h2d/Graphics.hx	/^		var nvect = tmp.length >> 3;$/;"	v
nvert	heaps/h3d/Buffer.hx	/^		var nvert = Std.int(v.length \/ stride);$/;"	v
nvert	heaps/h3d/impl/ManagedBuffer.hx	/^		var nvert = b.vertices;$/;"	v
nvert	heaps/hxd/impl/Allocator.hx	/^		var nvert = Std.int(v.length \/ stride);$/;"	v
nverts	heaps/h2d/RenderContext.hx	/^		var nverts = Std.int(bufPos \/ stride);$/;"	v
nw	heaps/h3d/parts/Data.hx	/^			var nw = Std.int(t.width \/ t.height);$/;"	v
nw	heaps/h3d/pass/FXAA.hx	/^			var nw = texture.get(tuv + vec2(-1, -1) * delta).rgb;$/;"	v
nw	heaps/hxd/Window.flash.hx	/^		var nw : flash.events.EventDispatcher = Reflect.field(stage, "nativeWindow");$/;"	v
nx	heaps/h2d/Graphics.hx	/^			var nx = nx1 * ns1 + nx2 * ns2;$/;"	v
nx	heaps/h2d/col/Polynomial.hx	/^		var nx = b.n;$/;"	v
nx	heaps/h3d/col/Plane.hx	/^	var nx : Float;$/;"	v
nx	heaps/h3d/col/Polygon.hx	/^	var nx : Float;$/;"	v
nx	heaps/h3d/prim/BigPrimitive.hx	/^				var nx = buf[p++];$/;"	v
nx	heaps/h3d/scene/Graphics.hx	/^			var nx = nx1 * ns1 + nx2 * ns2;$/;"	v
nx	heaps/h3d/scene/Graphics.hx	/^		var nx = x - curX;$/;"	v
nx	heaps/h3d/scene/World.hx	/^					var nx = vl[p++];$/;"	v
nx	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var nx = normals[k * 3];$/;"	v
nx	heaps/hxd/poly2tri/AdvancingFront.hx	/^		var nx = node.point.x;$/;"	v
nx	heaps/hxd/poly2tri/SweepContext.hx	/^			var nx = polyline[(n + 1) % polyline.length];$/;"	v
nx1	heaps/h2d/Graphics.hx	/^			var nx1 = prev.y - p.y;$/;"	v
nx1	heaps/h3d/scene/Graphics.hx	/^			var nx1 = prev.y - p.y;$/;"	v
nx2	heaps/h2d/Graphics.hx	/^			var nx2 = p.y - next.y;$/;"	v
nx2	heaps/h3d/scene/Graphics.hx	/^			var nx2 = p.y - next.y;$/;"	v
ny	heaps/h2d/Graphics.hx	/^			var ny = ny1 * ns1 + ny2 * ns2;$/;"	v
ny	heaps/h3d/col/Plane.hx	/^	var ny : Float;$/;"	v
ny	heaps/h3d/col/Polygon.hx	/^	var ny : Float;$/;"	v
ny	heaps/h3d/prim/BigPrimitive.hx	/^				var ny = buf[p++];$/;"	v
ny	heaps/h3d/scene/Graphics.hx	/^			var ny = ny1 * ns1 + ny2 * ns2;$/;"	v
ny	heaps/h3d/scene/Graphics.hx	/^		var ny = y - curY;$/;"	v
ny	heaps/h3d/scene/World.hx	/^					var ny = vl[p++];$/;"	v
ny	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var ny = normals[k * 3 + 1];$/;"	v
ny1	heaps/h2d/Graphics.hx	/^			var ny1 = p.x - prev.x;$/;"	v
ny1	heaps/h3d/scene/Graphics.hx	/^			var ny1 = p.x - prev.x;$/;"	v
ny2	heaps/h2d/Graphics.hx	/^			var ny2 = next.x - p.x;$/;"	v
ny2	heaps/h3d/scene/Graphics.hx	/^			var ny2 = next.x - p.x;$/;"	v
nz	heaps/h3d/col/Plane.hx	/^	var nz : Float;$/;"	v
nz	heaps/h3d/col/Polygon.hx	/^	var nz : Float;$/;"	v
nz	heaps/h3d/prim/BigPrimitive.hx	/^				var nz = buf[p++];$/;"	v
nz	heaps/h3d/scene/Graphics.hx	/^		var nz = z - curZ;$/;"	v
nz	heaps/h3d/scene/World.hx	/^					var nz = vl[p++];$/;"	v
nz	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var nz = normals[k * 3 + 2];$/;"	v
o	heaps/h2d/CdbLevel.hx	/^					var o = new LevelObject(l.tileset, t%l.tileset.stride, Std.int(t\/l.tileset.stride), 1, 1);$/;"	v
o	heaps/h2d/CdbLevel.hx	/^					var o = new LevelObject(t, s.x, s.y, s.w, s.h);$/;"	v
o	heaps/h2d/Object.hx	/^			var o = c.getObjectByName(name);$/;"	v
o	heaps/h2d/Particles.hx	/^		var o : Dynamic = {};$/;"	v
o	heaps/h2d/domkit/Style.hx	/^				var o = obj;$/;"	v
o	heaps/h3d/anim/BufferAnimation.hx	/^		var o = new BufferObject(objectName, dataOffset);$/;"	v
o	heaps/h3d/anim/LinearAnimation.hx	/^		var o = new LinearObject(objectName);$/;"	v
o	heaps/h3d/anim/SmoothTarget.hx	/^			var o = old[i];$/;"	v
o	heaps/h3d/col/Capsule.hx	/^		var o = r.getPos();$/;"	v
o	heaps/h3d/impl/Stage3dDriver.hx	/^		var o = new haxe.io.BytesOutput();$/;"	v
o	heaps/h3d/mat/BigTexture.hx	/^			var o = { t : t, q : q, alpha : alphaChannel, skip : false };$/;"	v
o	heaps/h3d/parts/GpuParticles.hx	/^		var o : GpuSave = _o;$/;"	v
o	heaps/h3d/parts/GpuParticles.hx	/^		var o = {$/;"	v
o	heaps/h3d/pass/Default.hx	/^		var o = @:privateAccess new h3d.pass.PassObject();$/;"	v
o	heaps/h3d/pass/PassList.hx	/^	var o : PassObject;$/;"	v
o	heaps/h3d/prim/Cube.hx	/^		var o = new UV(1, 0);$/;"	v
o	heaps/h3d/scene/Object.hx	/^			var o = c.getObjectByName(name);$/;"	v
o	heaps/h3d/scene/RenderContext.hx	/^		var o = allocPool;$/;"	v
o	heaps/h3d/scene/Scene.hx	/^		var o : Object = cast i;$/;"	v
o	heaps/h3d/scene/Skin.hx	/^		var o = super.getObjectByName(name);$/;"	v
o	heaps/hxd/File.hx	/^			var o = new flash.filesystem.FileStream();$/;"	v
o	heaps/hxd/File.hx	/^		var o = new flash.filesystem.FileStream();$/;"	v
o	heaps/hxd/Pixels.hx	/^		var o = new haxe.io.BytesOutput();$/;"	v
o	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var o = c.att.offset.split(" ");$/;"	v
o	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var o = new TmpObject();$/;"	v
o	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var o = new AnimationObject();$/;"	v
o	heaps/hxd/fmt/hmd/Library.hx	/^		var o = objs[0];$/;"	v
o	heaps/hxd/fmt/hmd/Reader.hx	/^				var o = new AnimationObject();$/;"	v
o	heaps/hxd/fmt/pak/Writer.hx	/^	var o : haxe.io.Output;$/;"	v
o	heaps/hxd/fs/EmbedFileSystem.hx	/^		var o = {};$/;"	v
o	heaps/hxd/poly2tri/Sweep.hx	/^				var o:Int = Orientation.orient2d(eq, op, ep);$/;"	v
o	heaps/hxd/res/DynamicText.hx	/^				var o = {};$/;"	v
o	heaps/hxsl/AgalOptim.hx	/^			var o = code[i];$/;"	v
o	heaps/hxsl/AgalOut.hx	/^					var o = offset(r, i);$/;"	v
o	heaps/hxsl/AgalOut.hx	/^			var o = allocReg(a.t);$/;"	v
o	heaps/samples/DrawingTiles.hx	/^					var o = new CustomSprite(normalmap.sub((normalmap.width - tileSize) * Math.random(), (norma/;"	v
o1	heaps/hxd/poly2tri/Sweep.hx	/^		var o1:Int   = Orientation.orient2d(eq, p1, ep);$/;"	v
o2	heaps/hxd/poly2tri/Sweep.hx	/^		var o2:Int   = Orientation.orient2d(eq, p2, ep);$/;"	v
o2d	heaps/hxd/poly2tri/Sweep.hx	/^		var o2d:Int = Orientation.orient2d(eq, op, ep);$/;"	v
oRec	heaps/hxd/clipper/Clipper.hx	/^                var oRec = m_PolyOuts[j];$/;"	v
oabd	heaps/hxd/poly2tri/Utils.hx	/^		var oabd   = adxbdy - bdxady;$/;"	v
oabd	heaps/hxd/poly2tri/Utils.hx	/^		var oabd = adxbdy - bdxady;$/;"	v
obj	heaps/h2d/CdbLevel.hx	/^	public var obj : LevelObject;$/;"	v
obj	heaps/h2d/Particles.hx	/^		var obj : Dynamic = { type : "particles2D", version : VERSION, groups : [for( g in groups ) g./;"	v
obj	heaps/h2d/domkit/Style.hx	/^		var obj = inspectPreviewObjects[0];$/;"	v
obj	heaps/h2d/filter/AbstractMask.hx	/^	var obj : h2d.Object;$/;"	v
obj	heaps/h3d/anim/Animation.hx	/^			var obj = base.getObjectByName(a.objectName);$/;"	v
obj	heaps/h3d/col/Capsule.hx	/^		var obj = new h3d.scene.Object();$/;"	v
obj	heaps/h3d/col/ObjectCollider.hx	/^	public var obj : h3d.scene.Object;$/;"	v
obj	heaps/h3d/col/SkinCollider.hx	/^	var obj : h3d.scene.Skin;$/;"	v
obj	heaps/h3d/col/TransformCollider.hx	/^		var obj = collider.makeDebugObj();$/;"	v
obj	heaps/h3d/pass/PassObject.hx	/^	public var obj : h3d.scene.Object;$/;"	v
obj	heaps/h3d/prim/ModelCache.hx	/^			var obj = ctx.local3d.getChildAt(0);$/;"	v
obj	heaps/hxd/Save.hx	/^		var obj : Dynamic = haxe.Unserializer.run(data);$/;"	v
obj	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var obj : h3d.scene.Object;$/;"	v
obj	heaps/hxd/fmt/grd/Reader.hx	/^			var obj = obj.Grad;$/;"	v
obj	heaps/hxd/fmt/grd/Reader.hx	/^		var obj = { name : name, type : type }$/;"	v
obj	heaps/hxd/fmt/hbson/Reader.hx	/^			var obj = {};$/;"	v
obj	heaps/hxd/fmt/hmd/Library.hx	/^			var obj : h3d.scene.Object;$/;"	v
obj	heaps/hxd/fs/FileConverter.hx	/^			var obj = try haxe.Json.parse(content) catch( e : Dynamic ) throw "Failed to parse "+propsFil/;"	v
obj	heaps/hxd/fs/FileConverter.hx	/^	var obj : Dynamic;$/;"	v
obj	heaps/hxd/res/DynamicText.hx	/^		var obj = {};$/;"	v
obj	heaps/hxsl/DynamicShader.hx	/^			var obj = values[a.index];$/;"	v
obj	heaps/samples/Base2D.hx	/^	var obj : h2d.Object;$/;"	v
obj	heaps/samples/Filters.hx	/^	var obj : h2d.Object;$/;"	v
obj	heaps/samples/Interactive.hx	/^	var obj : h3d.scene.Object;$/;"	v
obj	heaps/samples/Mask.hx	/^	var obj : h2d.Object;$/;"	v
obj	heaps/samples/Skin.hx	/^		var obj = cache.loadModel(hxd.Res.Model);$/;"	v
obj	heaps/samples/Stencil.hx	/^			var obj = new Mesh(prim, h3d.mat.Material.create(tex), root);$/;"	v
obj	heaps/samples/Stencil.hx	/^			var obj = new Mesh(prim, root);$/;"	v
obj	heaps/samples/Tiled.hx	/^	var obj:h2d.Object;$/;"	v
obj1	heaps/samples/Base3D.hx	/^	var obj1 : Mesh;$/;"	v
obj2	heaps/samples/Base3D.hx	/^	var obj2 : Mesh;$/;"	v
objShaders	heaps/h2d/RenderContext.hx	/^		var objShaders = obj.shaders;$/;"	v
object	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var object : String;$/;"	v
objectDistance	heaps/h3d/scene/fwd/Light.hx	/^	var objectDistance : Float; \/\/ used internaly$/;"	v
objectName	heaps/h3d/anim/Animation.hx	/^	public var objectName : String;$/;"	v
objects	heaps/h2d/CdbLevel.hx	/^	public var objects : Array<LevelObject>;$/;"	v
objects	heaps/h3d/anim/Animation.hx	/^		var objects = [for( a in this.objects ) a.clone()];$/;"	v
objects	heaps/h3d/anim/Animation.hx	/^	var objects : Array<AnimatedObject>;$/;"	v
objects	heaps/h3d/anim/SmoothTarget.hx	/^		var objects = [for( o in getSmoothObjects() ) o.objectName => o];$/;"	v
objects	heaps/h3d/anim/SmoothTarget.hx	/^		var objects = getSmoothObjects();$/;"	v
objects	heaps/h3d/anim/SmoothTransition.hx	/^		var objects : Array<SmoothedObject> = cast objects;$/;"	v
objects	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var objects = new Array<TmpObject>();$/;"	v
objects	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var objects : Array<h3d.anim.LinearAnimation.LinearObject> = cast @:privateAccess anim.objects/;"	v
objects	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var objects = [], joints = [], skins = [], foundSkin : Array<TmpObject> = null;$/;"	v
objects	heaps/hxd/fmt/hmd/Data.hx	/^	public var objects : Array<AnimationObject>;$/;"	v
objects	heaps/hxd/res/TiledMap.hx	/^	var objects : Array<{ x: Int, y : Int, name : String, type : String }>;$/;"	v
objectsBehind	heaps/h2d/CdbLevel.hx	/^	public var objectsBehind(default, set) : Bool;$/;"	v
objectsMap	heaps/h3d/anim/SimpleBlend.hx	/^	public var objectsMap : Map<String,Bool>;$/;"	v
objs	heaps/h2d/CdbLevel.hx	/^			var objs = [];$/;"	v
objs	heaps/hxd/fmt/hmd/Library.hx	/^		var objs = [];$/;"	v
objs	heaps/hxd/res/TiledMap.hx	/^			var objs = [];$/;"	v
observer	heaps/hxd/Window.js.hx	/^	var observer : Dynamic;$/;"	v
ocad	heaps/hxd/poly2tri/Utils.hx	/^		var ocad = cdxady - adxcdy;$/;"	v
occlusion	heaps/h3d/scene/pbr/Renderer.hx	/^	var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/SAO.hx	/^			var occlusion = 0.0;$/;"	v
occlusion	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/Light.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/PropsImport.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/PropsValues.hx	/^		var occlusion : Float;$/;"	v
occlusion	heaps/h3d/shader/pbr/Slides.hx	/^		var occlusion : Float;$/;"	v
occlusionFactor	heaps/h3d/scene/pbr/Light.hx	/^	public var occlusionFactor : Float;$/;"	v
occlusionFactor	heaps/h3d/shader/pbr/Light.hx	/^		@param var occlusionFactor = 0.0;$/;"	v
occlusionPower	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var occlusionPower : Float;$/;"	v
occlusionValue	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var occlusionValue : Float;$/;"	v
ocode	heaps/hxsl/AgalOptim.hx	/^		var ocode = [];$/;"	v
octaves	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^		var octaves = js.lib.Math.log(max \/ min) \/ js.lib.Math.LN2;$/;"	v
ofFloats	heaps/h3d/Buffer.hx	/^	public static function ofFloats( v : hxd.FloatBuffer, stride : Int, ?flags ) {$/;"	f
ofFloats	heaps/hxd/impl/Allocator.hx	/^	public function ofFloats( v : hxd.FloatBuffer, stride : Int, flags : BufferFlags ) {$/;"	f
ofIndexes	heaps/hxd/impl/Allocator.hx	/^	public function ofIndexes( ib: hxd.IndexBuffer, length = -1) {$/;"	f
ofInt	heaps/hxd/snd/openal/Emulator.hx	/^	public static inline function ofInt(i) return all.get(i);$/;"	f
ofPixels	heaps/hxd/fmt/tiff/Writer.hx	/^	public static function ofPixels( pix : hxd.Pixels ) {$/;"	f
ofSubFloats	heaps/h3d/Buffer.hx	/^	public static function ofSubFloats( v : hxd.FloatBuffer, stride : Int, vertices : Int, ?flags )/;"	f
off	heaps/h3d/mat/TextureChannels.hx	/^		var off = hxd.Pixels.getChannelOffset(pixels.format, c);$/;"	v
offIndex	heaps/h3d/impl/GlDriver.hx	/^			var offIndex = bytes.getInt32(p+8);$/;"	v
offInstance	heaps/h3d/impl/GlDriver.hx	/^			var offInstance = bytes.getInt32(p+16);$/;"	v
offPt	heaps/hxd/clipper/Clipper.hx	/^	public var offPt : IPoint;$/;"	v
offScale	heaps/h3d/shader/DirShadow.hx	/^					var offScale = texelSize * pcfScale;$/;"	v
offVertex	heaps/h3d/impl/GlDriver.hx	/^			var offVertex = bytes.getInt32(p+12);$/;"	v
offlineServer	heaps/hxd/net/SocketHost.hx	/^	public function offlineServer() {$/;"	f
offs	heaps/h2d/Text.hx	/^			var offs = e.getKerningOffset(prevChar);$/;"	v
offs	heaps/hxsl/Flatten.hx	/^		var offs = a.t == null ? a.pos : a.pos >> 2;$/;"	v
offset	heaps/h2d/Font.hx	/^	public var offset : Float;$/;"	v
offset	heaps/h2d/col/Bounds.hx	/^	public inline function offset( dx : Float, dy : Float ) {$/;"	f
offset	heaps/h2d/col/IBounds.hx	/^	public inline function offset( dx : Int, dy : Int ) {$/;"	f
offset	heaps/h2d/col/IPolygon.hx	/^	public function offset( delta : Float, kind : OffsetKind, withHoles = true ) : IPolygons {$/;"	f
offset	heaps/h2d/col/IPolygons.hx	/^	public function offset( delta : Float, kind : IPolygon.OffsetKind, withHoles = true ) : IPolygo/;"	f
offset	heaps/h3d/Buffer.hx	/^	public var offset : Int;$/;"	v
offset	heaps/h3d/col/Bounds.hx	/^	public inline function offset( dx : Float, dy : Float, dz : Float ) {$/;"	f
offset	heaps/h3d/impl/GlDriver.hx	/^			var offset = 8;$/;"	v
offset	heaps/h3d/impl/GlDriver.hx	/^	public var offset : Int;$/;"	v
offset	heaps/h3d/parts/GpuParticles.hx	/^					var offset = camDir;$/;"	v
offset	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var offset = (MAX_DIR_LIGHT * DIR_LIGHT_INFO_SIZE + MAX_POINT_LIGHT * POINT_LIGHT_INFO_SIZE) /;"	v
offset	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var offset = MAX_DIR_LIGHT * DIR_LIGHT_INFO_SIZE * 4;$/;"	v
offset	heaps/h3d/shader/DirShadow.hx	/^						var offset = poissonDisk[i].xy * offScale;$/;"	v
offset	heaps/h3d/shader/GpuParticle.hx	/^		@param var offset : Vec3;$/;"	v
offset	heaps/h3d/shader/PointShadow.hx	/^									var offset = vec3(i, j, k) * pcfScale;$/;"	v
offset	heaps/h3d/shader/SpotShadow.hx	/^								var offset = poissonDiskHigh[i].xy * texelSize * pcfScale;$/;"	v
offset	heaps/h3d/shader/SpotShadow.hx	/^								var offset = poissonDiskLow[i].xy * texelSize * pcfScale;$/;"	v
offset	heaps/hxd/Pixels.hx	/^	public var offset : Int;$/;"	v
offset	heaps/hxd/fmt/blend/Data.hx	/^	public var offset:Int = 0; \/\/ Block data bytes offset$/;"	v
offset	heaps/hxd/fmt/hmd/Library.hx	/^			var offset = 0;$/;"	v
offset	heaps/hxd/fmt/hmd/Library.hx	/^	public var offset : Int;$/;"	v
offset	heaps/hxd/fmt/tiff/Reader.hx	/^					var offset = f.readInt32();$/;"	v
offset	heaps/hxd/fmt/tiff/Reader.hx	/^		var offset = f.readInt32();$/;"	v
offset	heaps/hxd/impl/BitsBuilder.hx	/^			var offset = inf.current;$/;"	v
offset	heaps/hxd/snd/Data.hx	/^			var offset = targetSample - isample;$/;"	v
offset	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var offset : Float; \/\/ Buffer offset. Modified when applying effects.$/;"	v
offset	heaps/hxsl/AgalOptim.hx	/^	inline function offset( r : Reg, n : Int ) : Reg {$/;"	f
offset	heaps/hxsl/AgalOut.hx	/^	inline function offset( r : Reg, k : Int ) : Reg {$/;"	f
offset	heaps/hxsl/Flatten.hx	/^		var offset : TExpr = index == 0 ? delta : { e : TBinop(OpAdd, delta, mkInt(index, pos)), t : T/;"	v
offset	heaps/hxsl/HlslOut.hx	/^			var offset = 0;$/;"	v
offset	heaps/samples/DrawingTiles.hx	/^	public var offset : Float;$/;"	v
offset1	heaps/h3d/anim/BufferAnimation.hx	/^			var offset1 = stride * frame1 + o.dataOffset;$/;"	v
offset2	heaps/h3d/anim/BufferAnimation.hx	/^			var offset2 = stride * frame2 + o.dataOffset;$/;"	v
offsetParticles	heaps/h3d/parts/Particles.hx	/^	public function offsetParticles( dx : Float, dy : Float, dz = 0. ) {$/;"	f
offsetPoint	heaps/hxd/clipper/Clipper.hx	/^    function offsetPoint(j : Int, k : Int, jointype : JoinType)$/;"	f
offsetRay	heaps/h3d/anim/Skin.hx	/^	public var offsetRay : Float;$/;"	v
offsetX	heaps/h2d/Flow.hx	/^	public var offsetX = 0;$/;"	v
offsetX	heaps/h2d/Font.hx	/^	var offsetX:Float = 0;$/;"	v
offsetX	heaps/h2d/ObjectFollower.hx	/^	public var offsetX = 0.;$/;"	v
offsetX	heaps/h2d/Scene.hx	/^	var offsetX(default, null) : Float;$/;"	v
offsetX	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var offsetX : Int;$/;"	v
offsetX	heaps/hxd/Cursor.hx	/^	var offsetX : Int;$/;"	v
offsetY	heaps/h2d/Flow.hx	/^	public var offsetY = 0;$/;"	v
offsetY	heaps/h2d/Font.hx	/^	var offsetY:Float = 0;$/;"	v
offsetY	heaps/h2d/ObjectFollower.hx	/^	public var offsetY = 0.;$/;"	v
offsetY	heaps/h2d/Scene.hx	/^	var offsetY(default, null) : Float;$/;"	v
offsetY	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var offsetY : Int;$/;"	v
offsetY	heaps/hxd/Cursor.hx	/^	var offsetY : Int;$/;"	v
offsetZ	heaps/h2d/ObjectFollower.hx	/^	public var offsetZ = 0.;$/;"	v
offsets	heaps/h3d/anim/Skin.hx	/^	public var offsets : h3d.col.Bounds;$/;"	v
offsets	heaps/h3d/impl/DirectXDriver.hx	/^	public var offsets : Array<Int>;$/;"	v
offsets	heaps/h3d/impl/DirectXDriver.hx	/^	var offsets : Array<Int> = [];$/;"	v
offsets	heaps/h3d/pass/Blur.hx	/^	var offsets : Array<Float>;$/;"	v
offsets	heaps/h3d/scene/MeshBatch.hx	/^			var offsets = @:privateAccess prim.getBuffer("Batch_Start");$/;"	v
offsets	heaps/h3d/shader/Blur.hx	/^		@param var offsets : Array<Float,Quality>;$/;"	v
offsets	heaps/hxd/fmt/tiff/Reader.hx	/^		var offsets = Utils.get(tif, StripOffsets);$/;"	v
offsets	heaps/hxd/fmt/tiff/Writer.hx	/^		var offsets = [], lengths = [];$/;"	v
ofields	heaps/hxd/res/FileTree.hx	/^		var ofields = [];$/;"	v
oh	heaps/h2d/Bitmap.hx	/^		var oh = tile.height;$/;"	v
oi	heaps/hxd/poly2tri/Sweep.hx	/^				var oi:Int = ot.index(op);$/;"	v
ok	heaps/h3d/anim/Skin.hx	/^					var ok = true;$/;"	v
ok	heaps/hxd/res/DynamicText.hx	/^		var ok = true;$/;"	v
ok	heaps/hxd/res/Embed.hx	/^		var ok = true;$/;"	v
ok	heaps/hxsl/AgalOptim.hx	/^				var ok = true;$/;"	v
ok	heaps/samples/Generator.hx	/^			var ok = new sys.io.Process("haxelib",["path",l]).exitCode() == 0;$/;"	v
old	heaps/h2d/Anim.hx	/^			var old = ctx.globalAlpha;$/;"	v
old	heaps/h2d/Camera.hx	/^			var old = ctx.inFilter;$/;"	v
old	heaps/h2d/Drawable.hx	/^		var old = shaders;$/;"	v
old	heaps/h2d/Layers.hx	/^			var old = s.allocated;$/;"	v
old	heaps/h2d/Layers.hx	/^		var old = ctx.globalAlpha;$/;"	v
old	heaps/h2d/Object.hx	/^			var old = ctx.globalAlpha;$/;"	v
old	heaps/h2d/Object.hx	/^			var old = s.allocated;$/;"	v
old	heaps/h2d/Particles.hx	/^		var old = blendMode;$/;"	v
old	heaps/h2d/Text.hx	/^		var old = realMaxWidth;$/;"	v
old	heaps/h2d/TextInput.hx	/^		var old = interactive.visible;$/;"	v
old	heaps/h2d/filter/Blur.hx	/^		var old = out.filter;$/;"	v
old	heaps/h2d/filter/Glow.hx	/^		var old = tex.filter;$/;"	v
old	heaps/h2d/filter/Outline.hx	/^		var old = out.filter;$/;"	v
old	heaps/h3d/anim/SmoothTarget.hx	/^		var old : Array<SmoothObject> = getSmoothObjects();$/;"	v
old	heaps/h3d/impl/Benchmark.hx	/^		var old = labels;$/;"	v
old	heaps/h3d/impl/DirectXDriver.hx	/^		var old = hxd.System.allowTimeout;$/;"	v
old	heaps/h3d/impl/GlDriver.hx	/^		var old = curTarget;$/;"	v
old	heaps/h3d/impl/LogDriver.hx	/^		var old = driver.logEnable;$/;"	v
old	heaps/h3d/impl/Stage3dDriver.hx	/^		var old = ctx;$/;"	v
old	heaps/h3d/mat/BigTexture.hx	/^		var old = pending;$/;"	v
old	heaps/h3d/mat/BigTexture.hx	/^		var old = space;$/;"	v
old	heaps/h3d/mat/Texture.hx	/^		var old = lastFrame;$/;"	v
old	heaps/h3d/mat/TextureArray.hx	/^		var old = lastFrame;$/;"	v
old	heaps/h3d/parts/Emitter.hx	/^		var old = time;$/;"	v
old	heaps/h3d/parts/GpuParticles.hx	/^				var old = g.maxTime;$/;"	v
old	heaps/h3d/pass/Copy.hx	/^			var old = pass;$/;"	v
old	heaps/h3d/pass/CubeCopy.hx	/^				var old = pass;$/;"	v
old	heaps/h3d/pass/DirShadowMap.hx	/^		var old = staticTexture;$/;"	v
old	heaps/h3d/prim/HMDModel.hx	/^		var old = bufferAliases.get(name);$/;"	v
old	heaps/h3d/prim/MeshPrimitive.hx	/^		var old = bufferCache.get(id);$/;"	v
old	heaps/h3d/scene/Object.hx	/^			var old = o.allocated;$/;"	v
old	heaps/h3d/scene/Object.hx	/^			var old = parent;$/;"	v
old	heaps/h3d/scene/Object.hx	/^		var old = ctx.visibleFlag;$/;"	v
old	heaps/h3d/scene/Scene.hx	/^		var old = ctx.elapsedTime;$/;"	v
old	heaps/h3d/scene/Skin.hx	/^		var old = primitive;$/;"	v
old	heaps/hxd/File.hx	/^			var old = hxd.System.allowTimeout;$/;"	v
old	heaps/hxd/Pixels.hx	/^		var old = bytes;$/;"	v
old	heaps/hxd/SceneEvents.hx	/^		var old = pendingEvents;$/;"	v
old	heaps/hxd/clipper/Clipper.hx	/^		var old = null;$/;"	v
old	heaps/hxd/fmt/hmd/Writer.hx	/^		var old = out;$/;"	v
old	heaps/hxd/fmt/pak/FileSystem.hx	/^		var old = openedBytes;$/;"	v
old	heaps/hxd/fmt/pak/Reader.hx	/^		var old = i;$/;"	v
old	heaps/hxd/res/Loader.hx	/^			var old = currentInstance;$/;"	v
old	heaps/hxd/res/Sound.hx	/^		var old = this.data;$/;"	v
old	heaps/hxsl/AgalOptim.hx	/^		var old = code;$/;"	v
old	heaps/hxsl/Checker.hx	/^				var old = vars.get(v.name);$/;"	v
old	heaps/hxsl/Checker.hx	/^			var old = saveVars();$/;"	v
old	heaps/hxsl/Checker.hx	/^		var old = new Map();$/;"	v
old	heaps/hxsl/Checker.hx	/^		var old = saveVars();$/;"	v
old	heaps/hxsl/Eval.hx	/^						var old = constants.get(v.id);$/;"	v
old	heaps/hxsl/Eval.hx	/^						var old = varMap.get(v);$/;"	v
old	heaps/hxsl/Eval.hx	/^				var old = unrollLoops;$/;"	v
old	heaps/hxsl/GlslOut.hx	/^			var old = tabs;$/;"	v
old	heaps/hxsl/GlslOut.hx	/^			var old = v.type;$/;"	v
old	heaps/hxsl/HlslOut.hx	/^			var old = tabs;$/;"	v
old	heaps/hxsl/HlslOut.hx	/^			var old = v.type;$/;"	v
old	heaps/hxsl/Printer.hx	/^					var old = regVars;$/;"	v
old	heaps/hxsl/Printer.hx	/^			var old = tabs;$/;"	v
old	heaps/hxsl/Splitter.hx	/^						var old = fvars.get(v.id);$/;"	v
oldA	heaps/h2d/Object.hx	/^		var oldA = shader.filterMatrixA.clone();$/;"	v
oldA	heaps/h2d/Text.hx	/^			var oldA = color.a;$/;"	v
oldAlign	heaps/h2d/HtmlText.hx	/^			var oldAlign = align;$/;"	v
oldAlpha	heaps/h2d/Object.hx	/^			var oldAlpha = ctx.globalAlpha;$/;"	v
oldAlpha	heaps/h2d/Object.hx	/^		var oldAlpha = ctx.globalAlpha;$/;"	v
oldB	heaps/h2d/Object.hx	/^		var oldB = shader.filterMatrixB.clone();$/;"	v
oldB	heaps/h2d/Text.hx	/^			var oldB = color.b;$/;"	v
oldBG	heaps/h2d/Scene.hx	/^		var oldBG = ctx.engine.backgroundColor;$/;"	v
oldCount	heaps/h3d/impl/GlDriver.hx	/^		var oldCount = numTargets;$/;"	v
oldE1WindCnt	heaps/hxd/clipper/Clipper.hx	/^				var oldE1WindCnt = e1.windCnt;$/;"	v
oldF	heaps/h3d/anim/Animation.hx	/^					var oldF = frame, oldDT = dt;$/;"	v
oldF	heaps/h3d/mat/Texture.hx	/^		var oldF = filter, oldM = mipMap, oldWrap = wrap;$/;"	v
oldG	heaps/h2d/Text.hx	/^			var oldG = color.g;$/;"	v
oldH	heaps/h2d/Console.hx	/^		var oldH = logTxt.textHeight;$/;"	v
oldIndex	heaps/h2d/TextInput.hx	/^		var oldIndex = cursorIndex;$/;"	v
oldL	heaps/hxsl/Checker.hx	/^				var oldL = inLoop;$/;"	v
oldL	heaps/hxsl/Checker.hx	/^			var oldL = inLoop, oldW = inWhile;$/;"	v
oldLayer	heaps/h3d/impl/GlDriver.hx	/^		var oldLayer = curTargetLayer;$/;"	v
oldMip	heaps/h3d/impl/GlDriver.hx	/^		var oldMip = curTargetMip;$/;"	v
oldMode	heaps/hxd/Window.hl.hx	/^		var oldMode = window.displayMode;$/;"	v
oldName	heaps/hxsl/Splitter.hx	/^			var oldName = v.name;$/;"	v
oldOnEnterFilter	heaps/h2d/ZGroup.hx	/^		var oldOnEnterFilter = ctx.onEnterFilter;$/;"	v
oldOnLeaveFilter	heaps/h2d/ZGroup.hx	/^		var oldOnLeaveFilter = ctx.onLeaveFilter;$/;"	v
oldPak	heaps/hxd/fmt/pak/Build.hx	/^				var oldPak = new Reader(sys.io.File.read(name)).readHeader();$/;"	v
oldR	heaps/h2d/Text.hx	/^			var oldR = color.r;$/;"	v
oldRules	heaps/h2d/domkit/Style.hx	/^		var oldRules = rules;$/;"	v
oldT	heaps/h3d/mat/BigTexture.hx	/^		var oldT = tex;$/;"	v
oldText	heaps/h2d/TextInput.hx	/^		var oldText = text;$/;"	v
oldTrace	heaps/hxsl/Cache.hx	/^		var oldTrace = haxe.Log.trace;$/;"	v
oldW	heaps/h2d/Flow.hx	/^		var oldW = realMaxWidth, oldH = realMaxHeight;$/;"	v
oldW	heaps/h2d/Flow.hx	/^		var oldW = realMinWidth, oldH = realMinHeight;$/;"	v
oldW	heaps/h3d/mat/Texture.hx	/^		var oldW = e.width, oldH = e.height;$/;"	v
oldX	heaps/h2d/Dropdown.hx	/^			var oldX = item.absX;$/;"	v
oldX	heaps/h2d/HtmlText.hx	/^			var oldX = absX, oldY = absY;$/;"	v
oldX	heaps/h2d/Text.hx	/^			var oldX = absX, oldY = absY;$/;"	v
oldX	heaps/h3d/col/ObjectCollider.hx	/^		var oldX = s.x, oldY = s.y, oldZ = s.z, oldR = s.r;$/;"	v
oldX	heaps/h3d/col/Sphere.hx	/^		var oldX = x, oldY = y, oldZ = z, oldR = r;$/;"	v
oldX	heaps/h3d/col/TransformCollider.hx	/^		var oldX = s.x, oldY = s.y, oldZ = s.z, oldR = s.r;$/;"	v
oldX	heaps/hxd/SceneEvents.hx	/^		var oldX = event.relX, oldY = event.relY, overCandidateCount = 0;$/;"	v
oldY	heaps/h2d/Dropdown.hx	/^			var oldY = item.absY;$/;"	v
onAdd	heaps/h2d/Console.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h2d/Interactive.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h2d/Object.hx	/^	function onAdd() {$/;"	f
onAdd	heaps/h2d/Scene.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h2d/Text.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h3d/scene/CameraController.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h3d/scene/Interactive.hx	/^	override function onAdd() {$/;"	f
onAdd	heaps/h3d/scene/Mesh.hx	/^	override private function onAdd()$/;"	f
onAdd	heaps/h3d/scene/Object.hx	/^	function onAdd() {$/;"	f
onAnimEnd	heaps/h3d/anim/Animation.hx	/^	public var onAnimEnd : Void -> Void;$/;"	v
onBeginDraw	heaps/h2d/RenderContext.hx	/^	public var onBeginDraw : h2d.Drawable->Bool;$/;"	v
onBeginDraw	heaps/h2d/ZGroup.hx	/^	public var onBeginDraw : h2d.Drawable->Bool;$/;"	v
onBeginOpaqueDraw	heaps/h2d/ZGroup.hx	/^	function onBeginOpaqueDraw(obj : h2d.Drawable) : Bool {$/;"	f
onBeginTranspDraw	heaps/h2d/ZGroup.hx	/^	function onBeginTranspDraw(obj : h2d.Drawable) : Bool {$/;"	f
onBufferConsumed	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	function onBufferConsumed ( e : js.html.Event ) {$/;"	f
onCameraParameterChanged	heaps/samples/Camera2D.hx	/^	private function onCameraParameterChanged() {$/;"	f
onChange	heaps/h2d/domkit/Style.hx	/^	function onChange( ntry : Int = 0 ) {$/;"	f
onContentChanged	heaps/h2d/Object.hx	/^	inline function onContentChanged() {$/;"	f
onContextLost	heaps/h3d/impl/DirectXDriver.hx	/^	var onContextLost : Void -> Void;$/;"	v
onContextLost	heaps/h3d/impl/MemoryManager.hx	/^	public function onContextLost() {$/;"	f
onContextLost	heaps/h3d/prim/RawPrimitive.hx	/^	public var onContextLost : Void -> { vbuf : hxd.FloatBuffer, stride : Int, ?ibuf : hxd.IndexBuf/;"	v
onContextLost	heaps/h3d/scene/Scene.hx	/^	public function onContextLost() {$/;"	f
onContextLost	heaps/h3d/scene/World.hx	/^	public function onContextLost() {$/;"	f
onContextLost	heaps/hxd/App.hx	/^	function onContextLost() {$/;"	f
onContextLost	heaps/hxd/impl/Allocator.hx	/^	public function onContextLost() {$/;"	f
onContextLost	heaps/hxd/impl/CacheAllocator.hx	/^	override function onContextLost() {$/;"	f
onCreate	heaps/h3d/Engine.hx	/^	function onCreate( disposed ) {$/;"	f
onCreate	heaps/h3d/impl/Stage3dDriver.hx	/^	function onCreate(_) {$/;"	f
onCreateCallback	heaps/h3d/impl/Stage3dDriver.hx	/^	var onCreateCallback : Bool -> Void;$/;"	v
onDXError	heaps/h3d/impl/DirectXDriver.hx	/^	function onDXError(code:Int,reason:Int,line:Int) {$/;"	f
onData	heaps/hxd/net/Socket.hx	/^	function onData(buf:js.node.Buffer, recv:Int) {$/;"	f
onData	heaps/hxd/net/Socket.hx	/^	function onData(recvData:hl.Bytes, recv:Int) {$/;"	f
onDeactivate	heaps/hxd/Key.hx	/^	static function onDeactivate(_) {$/;"	f
onDetect	heaps/hxd/Pad.hx	/^	static function onDetect( d : GameController, active : Bool ){$/;"	f
onDispose	heaps/hxd/impl/CacheAllocator.hx	/^	public var onDispose : T -> Void;$/;"	v
onDone	heaps/hxd/fmt/pak/Loader.hx	/^	var onDone : Void -> Void;$/;"	v
onEnd	heaps/hxd/snd/Mp3Data.hx	/^	var onEnd : Void -> Void;$/;"	v
onEnterFilter	heaps/h2d/RenderContext.hx	/^	public var onEnterFilter : h2d.Object->Bool;$/;"	v
onEnterFilter	heaps/h2d/ZGroup.hx	/^	function onEnterFilter(spr : Object) {$/;"	f
onEnterFilterCached	heaps/h2d/ZGroup.hx	/^	var onEnterFilterCached : Object -> Bool;$/;"	v
onEvent	Main.hx	/^	function onEvent(event : hxd.Event) {$/;"	f
onEvent	heaps/h2d/Console.hx	/^	function onEvent( e : hxd.Event ) {$/;"	f
onEvent	heaps/h3d/anim/Animation.hx	/^	public var onEvent : String -> Void;$/;"	v
onEvent	heaps/h3d/scene/CameraController.hx	/^	function onEvent( e : hxd.Event ) {$/;"	f
onEvent	heaps/h3d/scene/pbr/Renderer.hx	/^	function onEvent(e:hxd.Event) {$/;"	f
onEvent	heaps/hxd/Key.hx	/^	static function onEvent( e : Event ) {$/;"	f
onEvent	heaps/hxd/Pad.hx	/^	static function onEvent( e : Event ){$/;"	f
onEvent	heaps/hxd/SceneEvents.hx	/^	function onEvent( e : hxd.Event ) {$/;"	f
onEvent	heaps/hxd/Window.hl.hx	/^	function onEvent( e : #if hldx dx.Event #else sdl.Event #end ) : Bool {$/;"	f
onEvent	heaps/samples/Polygons.hx	/^	override function onEvent( e : hxd.Event ) {$/;"	f
onFlashSample	heaps/hxd/snd/NativeChannel.hx	/^	function onFlashSample( event : flash.events.SampleDataEvent ) {$/;"	f
onFocus	heaps/hxd/Window.js.hx	/^	function onFocus(b: Bool) {$/;"	f
onHierarchyMoved	heaps/h2d/Flow.hx	/^	override function onHierarchyMoved(parentChanged:Bool) {$/;"	f
onHierarchyMoved	heaps/h2d/Interactive.hx	/^	override private function onHierarchyMoved(parentChanged:Bool)$/;"	f
onHierarchyMoved	heaps/h2d/Object.hx	/^	function onHierarchyMoved( parentChanged : Bool ) {$/;"	f
onInvalidProperty	heaps/h2d/domkit/Style.hx	/^	override function onInvalidProperty(e:domkit.Properties<Dynamic>, s:domkit.CssStyle.RuleStyle, /;"	f
onKeyDown	heaps/hxd/Window.flash.hx	/^	function onKeyDown(e:flash.events.KeyboardEvent) {$/;"	f
onKeyDown	heaps/hxd/Window.js.hx	/^	function onKeyDown(e:js.html.KeyboardEvent) {$/;"	f
onKeyPress	heaps/hxd/Window.js.hx	/^	function onKeyPress(e:js.html.KeyboardEvent) {$/;"	f
onKeyUp	heaps/hxd/Window.flash.hx	/^	function onKeyUp(e:flash.events.KeyboardEvent) {$/;"	f
onKeyUp	heaps/hxd/Window.js.hx	/^	function onKeyUp(e:js.html.KeyboardEvent) {$/;"	f
onLeaveFilter	heaps/h2d/RenderContext.hx	/^	public var onLeaveFilter : h2d.Object->Void;$/;"	v
onLeaveFilter	heaps/h2d/ZGroup.hx	/^	function onLeaveFilter(spr : Object) {$/;"	f
onLeaveFilterCached	heaps/h2d/ZGroup.hx	/^	var onLeaveFilterCached : Object -> Void;$/;"	v
onLoad	heaps/h3d/impl/GlDriver.hx	/^			function onLoad() {$/;"	f
onLoop	heaps/hxd/System.flash.hx	/^	static function onLoop(_) {$/;"	f
onMouseDown	heaps/hxd/Window.flash.hx	/^	function onMouseDown(e:Dynamic) {$/;"	f
onMouseDown	heaps/hxd/Window.js.hx	/^	function onMouseDown(e:js.html.MouseEvent) {$/;"	f
onMouseLeave	heaps/hxd/Window.js.hx	/^	function onMouseLeave(e:js.html.MouseEvent) {$/;"	f
onMouseMove	heaps/hxd/Window.flash.hx	/^	function onMouseMove(e:flash.events.MouseEvent) {$/;"	f
onMouseMove	heaps/hxd/Window.js.hx	/^	function onMouseMove(e:js.html.MouseEvent) {$/;"	f
onMouseUp	heaps/hxd/Window.flash.hx	/^	function onMouseUp(e:Dynamic) {$/;"	f
onMouseUp	heaps/hxd/Window.js.hx	/^	function onMouseUp(e:js.html.MouseEvent) {$/;"	f
onMouseWheel	heaps/h2d/Flow.hx	/^	function onMouseWheel( e : hxd.Event ) {$/;"	f
onMouseWheel	heaps/hxd/Window.flash.hx	/^	function onMouseWheel(e:flash.events.MouseEvent) {$/;"	f
onMouseWheel	heaps/hxd/Window.js.hx	/^	function onMouseWheel(e:js.html.WheelEvent) {$/;"	f
onMove	heaps/h3d/impl/Benchmark.hx	/^	function onMove(e:hxd.Event) {$/;"	f
onOut	heaps/hxd/SceneEvents.hx	/^	var onOut = new hxd.Event(EOut);$/;"	v
onOver	heaps/hxd/SceneEvents.hx	/^	var onOver = new hxd.Event(EOver);$/;"	v
onPad	heaps/samples/Pad.hx	/^	function onPad( p : hxd.Pad ){$/;"	f
onParentChanged	heaps/h3d/scene/Object.hx	/^	function onParentChanged() {$/;"	f
onRMouseDown	heaps/hxd/Window.flash.hx	/^	function onRMouseDown(e:Dynamic) {$/;"	f
onRMouseUp	heaps/hxd/Window.flash.hx	/^	function onRMouseUp(e:Dynamic) {$/;"	f
onReady	heaps/h2d/Video.hx	/^	var onReady : Void->Void;$/;"	v
onRemove	heaps/h2d/Console.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/Dropdown.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/Graphics.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/Interactive.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/Object.hx	/^	function onRemove() {$/;"	f
onRemove	heaps/h2d/Scene.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/SpriteBatch.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h2d/TileGroup.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/impl/Benchmark.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/parts/GpuParticles.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/CameraController.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/Graphics.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/Interactive.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/Mesh.hx	/^	override private function onRemove()$/;"	f
onRemove	heaps/h3d/scene/MeshBatch.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/Object.hx	/^	function onRemove() {$/;"	f
onRemove	heaps/h3d/scene/pbr/Light.hx	/^	override function onRemove() {$/;"	f
onRemove	heaps/hxd/SceneEvents.hx	/^	function onRemove(i) {$/;"	f
onResize	heaps/hxd/App.hx	/^	function onResize() {$/;"	f
onResize	heaps/hxd/Window.flash.hx	/^	function onResize(e:Dynamic) : Void {$/;"	f
onResize	heaps/hxd/Window.hl.hx	/^	function onResize(e:Dynamic) : Void {$/;"	f
onResize	heaps/hxd/Window.hx	/^	function onResize(e:Dynamic) : Void {$/;"	f
onResize	heaps/hxd/Window.js.hx	/^	function onResize(e:Dynamic) : Void {$/;"	f
onResize	heaps/samples/Base2D.hx	/^	override function onResize() {$/;"	f
onResize	heaps/samples/Camera2D.hx	/^	override function onResize() {$/;"	f
onResize	heaps/samples/Domkit.hx	/^	override function onResize() {$/;"	f
onResize	heaps/samples/Interactive.hx	/^	override function onResize() {$/;"	f
onResize	heaps/samples/Pad.hx	/^	override function onResize() {$/;"	f
onResize	heaps/samples/Sao.hx	/^	override function onResize() {$/;"	f
onSample	heaps/hxd/snd/NativeChannel.hx	/^	@:noDebug function onSample( buf : BufferHandle ) {$/;"	f
onSample	heaps/hxd/snd/NativeChannel.hx	/^	function onSample( out : haxe.io.Float32Array ) {$/;"	f
onSample	heaps/hxd/snd/openal/Emulator.hx	/^	override function onSample( out : haxe.io.Float32Array ) {$/;"	f
onSample	heaps/samples/Sound.hx	/^	override function onSample( buf : haxe.io.Float32Array ) {$/;"	f
onSegment	heaps/h2d/col/Polygon.hx	/^	inline function onSegment(p : h2d.col.Point, q : h2d.col.Point, r : h2d.col.Point) {$/;"	f
onSelect	heaps/hxd/File.hx	/^		function onSelect(_) {$/;"	f
onSelectCallb	heaps/hxd/File.hx	/^		function onSelectCallb(_) {$/;"	f
onStack	heaps/hxsl/Linker.hx	/^	public var onStack : Bool;$/;"	v
onTouchDown	heaps/hxd/Window.flash.hx	/^	function onTouchDown(e:flash.events.TouchEvent) {$/;"	f
onTouchEnd	heaps/hxd/Window.js.hx	/^	function onTouchEnd(e:js.html.TouchEvent) {$/;"	f
onTouchMove	heaps/hxd/Window.flash.hx	/^	function onTouchMove(e:flash.events.TouchEvent) {$/;"	f
onTouchMove	heaps/hxd/Window.js.hx	/^	function onTouchMove(e:js.html.TouchEvent) {$/;"	f
onTouchStart	heaps/hxd/Window.js.hx	/^	function onTouchStart(e:js.html.TouchEvent) {$/;"	f
onTouchUp	heaps/hxd/Window.flash.hx	/^	function onTouchUp(e:flash.events.TouchEvent) {$/;"	f
onUpdate	heaps/hxd/snd/NativeChannel.hx	/^	function onUpdate(){$/;"	f
onWindowEvent	heaps/h2d/domkit/Style.hx	/^	function onWindowEvent( e : hxd.Event ) {$/;"	f
onWindowResize	heaps/h3d/Engine.hx	/^	function onWindowResize() {$/;"	f
onWriteResult	heaps/hxd/net/Socket.hx	/^	var onWriteResult : Bool -> Void;$/;"	v
onlyParams	heaps/hxsl/Linker.hx	/^			var onlyParams = true;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^						var op = AddOutPt(ePrev, ip);$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^				var op = null;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^			var op = new OutPt();$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^			var op:OutPt = outRec.pts.prev;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^			var op:OutPt = outRec.pts;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^			var op:OutPt = outrec.pts;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^		var op = outPt1;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^		var op:OutPt = outRec.pts;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^		var op:OutPt = outrec.pts;$/;"	v
op	heaps/hxd/clipper/Clipper.hx	/^        var op = outPts[0];$/;"	v
op	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var op = hobjects.get(pid);$/;"	v
op	heaps/hxd/poly2tri/Sweep.hx	/^				var op:Point = ot.oppositePoint(t, p);$/;"	v
op	heaps/hxd/poly2tri/Sweep.hx	/^		var op:Point = ot.oppositePoint(t, p);$/;"	v
op	heaps/hxsl/AgalOptim.hx	/^					var op = map(code[wt], function(r, w) {$/;"	v
op	heaps/hxsl/AgalOptim.hx	/^			var op = code[i];$/;"	v
op	heaps/hxsl/AgalOut.hx	/^	inline function op(o) {$/;"	f
op	heaps/hxsl/Serializer.hx	/^			var op = input.readByte();$/;"	v
op1	heaps/hxd/clipper/Clipper.hx	/^							var op1 = AddOutPt(horzEdge, horzEdge.top);$/;"	v
op1	heaps/hxd/clipper/Clipper.hx	/^				var op1 = AddOutPt( horzEdge, horzEdge.top);$/;"	v
op1	heaps/hxd/clipper/Clipper.hx	/^			var op1 = null;$/;"	v
op1	heaps/hxd/clipper/Clipper.hx	/^		var op1 = j.outPt1, op1b;$/;"	v
op1	heaps/hxsl/AgalOptim.hx	/^			var op1 = code[i];$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^									var op2 = AddOutPt(eNextHorz, eNextHorz.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^						var op2 = AddOutPt(e, ip);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^					var op2 = AddOutPt(eNext, e.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^					var op2 = AddOutPt(eNext, horzEdge.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^					var op2 = AddOutPt(ePrev, e.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^					var op2 = AddOutPt(ePrev, horzEdge.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^					var op2 = AddOutPt(rb.prevInAEL, rb.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^				var op2 = AddOutPt(lb.prevInAEL, lb.bot);$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^				var op2 = op.next;$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^			var op2 = new OutPt();$/;"	v
op2	heaps/hxd/clipper/Clipper.hx	/^		var op2 = j.outPt2, op2b;$/;"	v
op2	heaps/hxsl/AgalOptim.hx	/^				var op2 = code[prev];$/;"	v
op3	heaps/hxd/clipper/Clipper.hx	/^						var op3 = op.prev;$/;"	v
op4	heaps/hxd/clipper/Clipper.hx	/^						var op4 = op2.prev;$/;"	v
opBits	heaps/h3d/mat/Stencil.hx	/^	var opBits    : Int = 0;$/;"	v
opIds	heaps/hxsl/AgalOptim.hx	/^		var opIds = new Map();$/;"	v
opName	heaps/hxsl/Checker.hx	/^				var opName = switch( op ) {$/;"	v
opStr	heaps/hxsl/AgalOptim.hx	/^	function opStr(op) {$/;"	f
opStr	heaps/hxsl/Printer.hx	/^	public static function opStr( op : Ast.Binop ) {$/;"	f
opacity	heaps/hxd/fmt/grd/Data.hx	/^	public var opacity   : Float;$/;"	v
opacity	heaps/hxd/fmt/grd/Data.hx	/^	public var opacity  : Float;$/;"	v
opacity	heaps/hxd/res/TiledMap.hx	/^	var opacity : Float;$/;"	v
opaqueState	heaps/h2d/ZGroup.hx	/^	var opaqueState : State;$/;"	v
opcodes	heaps/hxsl/AgalOut.hx	/^	var opcodes : Array<Opcode>;$/;"	v
open	heaps/h2d/Dropdown.hx	/^	public function open() {$/;"	f
open	heaps/hxd/fs/EmbedFileSystem.hx	/^	function open( path : String ) : Class<flash.utils.ByteArray> {$/;"	f
open	heaps/hxd/fs/FileEntry.hx	/^	public function open() return @:privateAccess new FileInput(this);$/;"	f
open	heaps/hxd/fs/LocalFileSystem.hx	/^	function open( path : String, check = true ) {$/;"	f
open	heaps/hxd/fs/MultiFileSystem.hx	/^	override function open() return el[0].open();$/;"	f
openDevice	heaps/hxd/snd/openal/Emulator.hx	/^	public static function openDevice(devicename : Bytes) : Device {$/;"	f
openURL	heaps/hxd/System.flash.hx	/^	public static function openURL( url : String ) : Void {$/;"	f
openURL	heaps/hxd/System.hl.hx	/^	public static function openURL( url : String ) : Void {$/;"	f
openURL	heaps/hxd/System.hx	/^	public static function openURL( url : String ) : Void {}$/;"	f
openURL	heaps/hxd/System.js.hx	/^	public static function openURL( url : String ) : Void {$/;"	f
openedSocks	heaps/hxd/net/Socket.hx	/^	static var openedSocks = [];$/;"	v
oppositePoint	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function oppositePoint(t:Triangle, p:Point):Point$/;"	f
ops	heaps/hxsl/AgalOptim.hx	/^					var ops = regs[r.index].prevWrite;$/;"	v
ops	heaps/hxsl/Serializer.hx	/^		var ops = Binop.createAll();$/;"	v
optOut	heaps/hxd/fmt/hmd/Library.hx	/^			var optOut = 0;$/;"	v
optiDup	heaps/hxsl/AgalOptim.hx	/^	function optiDup() {$/;"	f
optiMat	heaps/hxsl/AgalOptim.hx	/^	function optiMat() {$/;"	f
optiMov	heaps/hxsl/AgalOptim.hx	/^	function optiMov() {$/;"	f
optim	heaps/h3d/impl/Stage3dDriver.hx	/^		var optim = new hxsl.AgalOptim();$/;"	v
optimize	heaps/h2d/col/IPolygon.hx	/^	public function optimize( epsilon : Float ) : IPolygon {$/;"	f
optimize	heaps/h2d/col/IPolygons.hx	/^	public function optimize( epsilon : Float ) : IPolygons {$/;"	f
optimize	heaps/h2d/col/Polygon.hx	/^	public function optimize( epsilon : Float ) : Polygon {$/;"	f
optimize	heaps/h2d/col/Polygons.hx	/^	public function optimize( epsilon : Float ) : Polygons {$/;"	f
optimize	heaps/h3d/scene/World.hx	/^	public function optimize( algo : OptAlgorithm ) {$/;"	f
optimize	heaps/hxsl/AgalOptim.hx	/^	public function optimize( d : Data ) : Data {$/;"	f
optimize	heaps/hxsl/Flatten.hx	/^	function optimize( e : TExpr ) {$/;"	f
optimizeRec	heaps/h2d/col/IPolygon.hx	/^	static function optimizeRec( points : Array<IPoint>, index : Int, len : Int, out : Array<IPoint/;"	f
optimizeRec	heaps/h2d/col/Polygon.hx	/^	static function optimizeRec( points : Array<Point>, start : Int, end : Int, out : Array<Point>,/;"	f
optimizeSkin	heaps/hxd/fmt/fbx/HMDOut.hx	/^	public var optimizeSkin = true;$/;"	v
optimized	heaps/h3d/scene/World.hx	/^	public var optimized : Bool;$/;"	v
options	heaps/h3d/impl/DirectXDriver.hx	/^		var options : dx.Driver.DriverInitFlags = None;$/;"	v
options	heaps/h3d/impl/GlDriver.hx	/^		var options = {alpha:false,stencil:true,antialias:antiAlias>0};$/;"	v
options	heaps/hxd/res/FileTree.hx	/^	var options : EmbedOptions;$/;"	v
options	heaps/hxd/res/FontBuilder.hx	/^	var options : FontBuildOptions;$/;"	v
order	heaps/h3d/impl/VarBinding.hx	/^		var order = [];$/;"	v
order	heaps/hxd/fmt/tiff/Reader.hx	/^		var order = f.readString(2);$/;"	v
orfl	heaps/hxd/clipper/Clipper.hx	/^		var orfl:OutRec = outRec.firstLeft;$/;"	v
orient2d	heaps/hxd/poly2tri/Orientation.hx	/^	public static function orient2d(pa:Point, pb:Point, pc:Point):Int$/;"	f
orientation	heaps/h2d/col/Polygon.hx	/^	inline function orientation(p : h2d.col.Point, q : h2d.col.Point, r : h2d.col.Point) {$/;"	f
origin	heaps/h3d/pass/FXAA.hx	/^			var origin = texture.get(tuv);$/;"	v
origin	heaps/h3d/shader/SAO.hx	/^			var origin = getPosition(vUV);$/;"	v
originScale	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var originScale = 1;$/;"	v
originWS	heaps/h3d/shader/Blur.hx	/^			var originWS = temp.xyz \/ temp.w;$/;"	v
originWS	heaps/h3d/shader/SAO.hx	/^			var originWS = temp.xyz \/ temp.w;$/;"	v
originWS	heaps/h3d/shader/pbr/PropsImport.hx	/^			var originWS = temp.xyz \/ temp.w;$/;"	v
originalFile	heaps/hxd/fs/LocalFileSystem.hx	/^	var originalFile : String;$/;"	v
originalFilename	heaps/hxd/fs/Convert.hx	/^	public var originalFilename : String;$/;"	v
originalUpAxis	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var originalUpAxis = 2;$/;"	v
oroot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var oroot = new TmpObject();$/;"	v
orthoBounds	heaps/h3d/Camera.hx	/^	public var orthoBounds : h3d.col.Bounds;$/;"	v
ot	heaps/hxd/poly2tri/Sweep.hx	/^			var ot:Triangle = t.neighbors[i];$/;"	v
ot	heaps/hxd/poly2tri/Sweep.hx	/^		var ot:Triangle = t.neighborAcross(p);$/;"	v
other	heaps/h3d/shader/pbr/PropsImport.hx	/^			var other = otherTex.get(uv);$/;"	v
other	heaps/hxd/res/NanoJpeg.hx	/^		var other = get(2);$/;"	v
otherFrames	heaps/hxd/fmt/hmd/Library.hx	/^		var otherFrames = [];$/;"	v
otherTex	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var otherTex : Sampler2D;$/;"	v
out	heaps/h2d/CdbLevel.hx	/^		var out : Array<String> = [for( i in 0...level.width * level.height ) null];$/;"	v
out	heaps/h2d/CdbLevel.hx	/^		var out = [for( i in 0...level.width * level.height ) 0];$/;"	v
out	heaps/h2d/col/IPolygon.hx	/^		var out = [];$/;"	v
out	heaps/h2d/col/Polygon.hx	/^		var out = [];$/;"	v
out	heaps/h2d/filter/Ambient.hx	/^		var out = ctx.textures.allocTileTarget("ambientTmp", t);$/;"	v
out	heaps/h2d/filter/Blur.hx	/^		var out = t.getTexture();$/;"	v
out	heaps/h2d/filter/Displacement.hx	/^		var out = ctx.textures.allocTileTarget("displacementOutput", t);$/;"	v
out	heaps/h2d/filter/Mask.hx	/^		var out = ctx.textures.allocTileTarget("maskTmp", t);$/;"	v
out	heaps/h2d/filter/Outline.hx	/^		var out = t.getTexture();$/;"	v
out	heaps/h2d/filter/Shader.hx	/^		var out = ctx.textures.allocTileTarget("shaderTmp", t);$/;"	v
out	heaps/h3d/impl/DirectXDriver.hx	/^					var out = new haxe.io.BytesOutput();$/;"	v
out	heaps/h3d/mat/BaseMaterial.hx	/^		var out = [];$/;"	v
out	heaps/h3d/scene/Trail.hx	/^		var out = 0;$/;"	v
out	heaps/h3d/shader/Outline2D.hx	/^			var out = resultColor * max(float(multiplyAlpha), resultAlpha);$/;"	v
out	heaps/hxd/BitmapData.hx	/^		var out = haxe.io.Bytes.alloc(data.width * data.height * 4);$/;"	v
out	heaps/hxd/Pixels.hx	/^			var out : hxd.impl.UncheckedBytes = nbytes;$/;"	v
out	heaps/hxd/Pixels.hx	/^			var out = haxe.io.Bytes.alloc(width * height * 4);$/;"	v
out	heaps/hxd/Pixels.hx	/^		var out = haxe.io.Bytes.alloc(height * stride);$/;"	v
out	heaps/hxd/Pixels.hx	/^		var out = haxe.io.Bytes.alloc(tw * th * bpp);$/;"	v
out	heaps/hxd/clipper/Clipper.hx	/^				var out = GetHorzDirection(horzEdge);$/;"	v
out	heaps/hxd/clipper/Clipper.hx	/^			var out = AddOutPt(prevE, pt);$/;"	v
out	heaps/hxd/clipper/Clipper.hx	/^			var out = GetOverlap(op1.pt.x, op1b.pt.x, op2.pt.x, op2b.pt.x);$/;"	v
out	heaps/hxd/clipper/Clipper.hx	/^			var out = clpr.execute(ClipType.Union, PolyFillType.Negative, PolyFillType.Negative);$/;"	v
out	heaps/hxd/fmt/bfnt/Writer.hx	/^	var out : Output;$/;"	v
out	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var out = [];$/;"	v
out	heaps/hxd/fmt/fbx/Data.hx	/^			var out = [];$/;"	v
out	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var out = 0;$/;"	v
out	heaps/hxd/fmt/hbson/Writer.hx	/^	var out : haxe.io.Output;$/;"	v
out	heaps/hxd/fmt/hmd/Dump.hx	/^			var out = new haxe.io.BytesOutput();$/;"	v
out	heaps/hxd/fmt/hmd/Library.hx	/^		var out = Math.NaN;$/;"	v
out	heaps/hxd/fmt/hmd/Writer.hx	/^	var out : haxe.io.Output;$/;"	v
out	heaps/hxd/fmt/pak/Build.hx	/^		var out = [];$/;"	v
out	heaps/hxd/fmt/pak/Build.hx	/^	var out : { bytes : Array<haxe.io.Bytes>, size : Float };$/;"	v
out	heaps/hxd/fs/Convert.hx	/^		var out = new haxe.io.BytesOutput();$/;"	v
out	heaps/hxd/net/Socket.hx	/^	public var out(default, null) : SocketOutput;$/;"	v
out	heaps/hxd/res/NanoJpeg.hx	/^		var out = alloc((c.width * c.height) << 1);$/;"	v
out	heaps/hxd/res/NanoJpeg.hx	/^		var out = alloc(c.width * c.height);$/;"	v
out	heaps/hxd/res/NanoJpeg.hx	/^		var out = new FastBytes(c.pixels);$/;"	v
out	heaps/hxd/snd/Data.hx	/^		var out = haxe.io.Bytes.alloc(channels * newSamples * formatBytes(format));$/;"	v
out	heaps/hxsl/AgalOptim.hx	/^		var out = [];$/;"	v
out	heaps/hxsl/AgalOut.hx	/^				var out = allocReg();$/;"	v
out	heaps/hxsl/AgalOut.hx	/^		var out = [for( i in 0...w ) allocReg()];$/;"	v
out	heaps/hxsl/Cache.hx	/^				var out = [];$/;"	v
out	heaps/hxsl/Cache.hx	/^				var out = [for( a in alloc ) if( a.v != null ) new AllocGlobal(a.pos, getPath(a.v), a.v.type/;"	v
out	heaps/hxsl/Cache.hx	/^			var out = [];$/;"	v
out	heaps/hxsl/CacheFile.hx	/^		var out = new haxe.io.BytesOutput();$/;"	v
out	heaps/hxsl/CacheFileBuilder.hx	/^			var out = new HlslOut();$/;"	v
out	heaps/hxsl/CacheFileBuilder.hx	/^			var out = new ps.gnm.PsslOut();$/;"	v
out	heaps/hxsl/Checker.hx	/^			var out = [];$/;"	v
out	heaps/hxsl/Dce.hx	/^			var out = [];$/;"	v
out	heaps/hxsl/Eval.hx	/^				var out = [];$/;"	v
out	heaps/hxsl/Eval.hx	/^			var out = [];$/;"	v
out	heaps/hxsl/GlslOut.hx	/^		var out = new GlslOut();$/;"	v
out	heaps/hxsl/Serializer.hx	/^	var out : haxe.io.BytesBuffer;$/;"	v
out	heaps/samples/Sao.hx	/^	var out : h3d.mat.Texture;$/;"	v
out	heaps/tools/hxsl/Main.hx	/^	var out : js.html.InputElement;$/;"	v
outArgs	heaps/hxsl/Checker.hx	/^				var outArgs = [];$/;"	v
outCount	heaps/h3d/impl/GlDriver.hx	/^				var outCount = 0;$/;"	v
outDepth	heaps/h3d/pass/Blur.hx	/^		var outDepth = output.depthBuffer;$/;"	v
outDepth	heaps/h3d/pass/Outline.hx	/^		var outDepth = output.depthBuffer;$/;"	v
outExprs	heaps/hxsl/Dce.hx	/^		var outExprs = [];$/;"	v
outExprs	heaps/hxsl/Eval.hx	/^				var outExprs = [], undo = [];$/;"	v
outFile	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var outFile = fileName+".out";$/;"	v
outFile	heaps/hxd/fmt/pak/Build.hx	/^		var outFile = outPrefix + ".pak";$/;"	v
outFile	heaps/hxd/fs/FileConverter.hx	/^		var outFile = tmpDir;$/;"	v
outFmt	heaps/hxd/res/Image.hx	/^		var outFmt = requestedFmt;$/;"	v
outIdx	heaps/hxd/clipper/Clipper.hx	/^		var outIdx = edge1.outIdx;$/;"	v
outIdx	heaps/hxd/clipper/Clipper.hx	/^	public var outIdx : Int;$/;"	v
outIndex	heaps/hxd/fmt/hmd/Library.hx	/^		var outIndex = new hxd.IndexBuffer();$/;"	v
outIndex	heaps/hxsl/GlslOut.hx	/^	var outIndex : Int = 0;$/;"	v
outIndexes	heaps/hxsl/GlslOut.hx	/^	var outIndexes : Map<Int, Int>;$/;"	v
outLink	heaps/tools/hxsl/Main.hx	/^			var outLink = cache.getLinkShader(outputs);$/;"	v
outMatrix	heaps/h3d/anim/SmoothTransition.hx	/^	public var outMatrix : h3d.Matrix;$/;"	v
outOfMem	heaps/h3d/impl/GlDriver.hx	/^		var outOfMem = false;$/;"	v
outOfMem	heaps/h3d/impl/GlDriver.hx	/^		var outOfMem = outOfMemoryCheck && gl.getError() == GL.OUT_OF_MEMORY;$/;"	v
outOfMemoryCheck	heaps/h3d/impl/GlDriver.hx	/^	public static var outOfMemoryCheck = #if js false #else true #end;$/;"	v
outP	heaps/hxd/Pixels.hx	/^		var outP = 0;$/;"	v
outPath	heaps/hxd/clipper/Clipper.hx	/^        var outPath = new IPolygon();$/;"	v
outPos	heaps/hxd/Pixels.hx	/^		var outPos = 0;$/;"	v
outPrefix	heaps/hxd/fmt/pak/Build.hx	/^	public var outPrefix : String;$/;"	v
outPt1	heaps/hxd/clipper/Clipper.hx	/^	public var outPt1 : OutPt;$/;"	v
outPt2	heaps/hxd/clipper/Clipper.hx	/^	public var outPt2 : OutPt;$/;"	v
outPts	heaps/hxd/clipper/Clipper.hx	/^        var outPts = [];$/;"	v
outRec	heaps/hxd/clipper/Clipper.hx	/^			var outRec = CreateOutRec();$/;"	v
outRec	heaps/hxd/clipper/Clipper.hx	/^			var outRec = m_PolyOuts[e.outIdx];$/;"	v
outRec	heaps/hxd/clipper/Clipper.hx	/^		var outRec = m_PolyOuts[index];$/;"	v
outRec1	heaps/hxd/clipper/Clipper.hx	/^		var outRec1 = m_PolyOuts[e1.outIdx];$/;"	v
outRec1	heaps/hxd/clipper/Clipper.hx	/^          var outRec1 = GetOutRec(join.outPt1.idx);$/;"	v
outRec2	heaps/hxd/clipper/Clipper.hx	/^		var outRec2 = m_PolyOuts[e2.outIdx];$/;"	v
outRec2	heaps/hxd/clipper/Clipper.hx	/^          var outRec2 = GetOutRec(join.outPt2.idx);$/;"	v
outSize	heaps/hxd/Pixels.hx	/^		var outSize = 0;$/;"	v
outVars	heaps/hxsl/Cache.hx	/^		var outVars = new Map<String,TVar>();$/;"	v
outVars	heaps/hxsl/Flatten.hx	/^	var outVars : Array<TVar>;$/;"	v
outVars	heaps/hxsl/Linker.hx	/^		var outVars = [];$/;"	v
outVertex	heaps/hxd/fmt/hmd/Library.hx	/^		var outVertex = new hxd.FloatBuffer();$/;"	v
outer	heaps/hxd/clipper/Clipper.hx	/^			var outer = new IPolygon();$/;"	v
outerHeight	heaps/h2d/Flow.hx	/^	public var outerHeight(get, never) : Int;$/;"	v
outerLen	heaps/hxd/earcut/Earcut.hx	/^        var outerLen = hasHoles ? holes[0] : points.length;$/;"	v
outerWidth	heaps/h2d/Flow.hx	/^	public var outerWidth(get, never) : Int;$/;"	v
output	heaps/h3d/pass/HardwarePick.hx	/^		var output : {$/;"	v
output	heaps/h3d/scene/pbr/Renderer.hx	/^	var output = new h3d.pass.Output("default",[$/;"	v
output	heaps/h3d/shader/Base2d.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/BaseMesh.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/FixedColor.hx	/^		var output : { color : Vec4 };$/;"	v
output	heaps/h3d/shader/LineShader.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/ScreenShader.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var output : {color : Vec4, metalness : Float, roughness : Float, occlusion : Float, emissive /;"	v
output	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/pbr/PropsValues.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/pbr/StrengthValues.hx	/^		var output : {$/;"	v
output	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var output : {$/;"	v
output	heaps/hxd/fmt/hdr/Reader.hx	/^				inline function output( v : Float ) {$/;"	f
output	heaps/hxd/snd/OggData.hx	/^		var output : hl.Bytes = out;$/;"	v
output	heaps/hxd/snd/OggData.hx	/^	var output : BytesOutput;$/;"	v
output	heaps/hxsl/CacheFile.hx	/^		var output : {$/;"	v
output	heaps/tools/hxsl/Main.hx	/^		var output = out.value;$/;"	v
outputCount	heaps/hxsl/Cache.hx	/^		var outputCount = 0;$/;"	v
outputData	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var outputData = new haxe.io.BytesBuffer();$/;"	v
outputHeight	heaps/h3d/impl/DirectXDriver.hx	/^	var outputHeight : Int;$/;"	v
outputPosition	heaps/h3d/shader/Base2d.hx	/^		var outputPosition : Vec4;$/;"	v
outputScale	heaps/h2d/ObjectFollower.hx	/^	var outputScale : Float = 1.;$/;"	v
outputWidth	heaps/h3d/impl/DirectXDriver.hx	/^	var outputWidth : Int;$/;"	v
outputs	heaps/h3d/pass/Output.hx	/^	var outputs : Array<hxsl.Output>;$/;"	v
outputs	heaps/tools/hxsl/Main.hx	/^		var outputs = [for( o in output.split(",") ) hxsl.Output.Value(StringTools.trim(o))];$/;"	v
outrec	heaps/hxd/clipper/Clipper.hx	/^			var outrec:OutRec = m_PolyOuts[i++];$/;"	v
outrec	heaps/hxd/clipper/Clipper.hx	/^		var outrec:OutRec = m_PolyOuts[idx];$/;"	v
outrec2	heaps/hxd/clipper/Clipper.hx	/^						var outrec2 = CreateOutRec();$/;"	v
outsideBounds	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function outsideBounds( localPos : Vec3 ) : Bool {$/;"	f
outsideBounds	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		function outsideBounds() : Bool {$/;"	f
ov	heaps/hxsl/Cache.hx	/^			var ov : TVar = {$/;"	v
over	heaps/h2d/Layers.hx	/^	public function over( s : Object ) {$/;"	f
overCandidates	heaps/hxd/SceneEvents.hx	/^	var overCandidates : Array<{ i : Interactive, s : InteractiveScene, x : Float, y : Float, z : F/;"	v
overIndex	heaps/hxd/SceneEvents.hx	/^	var overIndex : Int = -1;$/;"	v
overList	heaps/hxd/SceneEvents.hx	/^	var overList : Array<Interactive>;$/;"	v
overflow	heaps/h2d/Flow.hx	/^	public var overflow(default, set) : FlowOverflow = Expand;$/;"	v
overflow	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var overflow: h2d.Flow.FlowOverflow;$/;"	v
overrideCursor	heaps/samples/Cursor.hx	/^		var overrideCursor:hxd.Cursor = Custom(new hxd.Cursor.CustomCursor([defOverride], 0, 0, 0));$/;"	v
ow	heaps/h2d/Bitmap.hx	/^		var ow = tile.width;$/;"	v
ow	heaps/h2d/Scene.hx	/^		var ow = width, oh = height, ova = viewportA, ovd = viewportD, ovx = viewportX, ovy = viewport/;"	v
ow	heaps/h2d/Text.hx	/^			var ow = calcWidth, oh = calcHeight, osh = calcSizeHeight, ox = calcXMin, oy = calcYMin;$/;"	v
ow	heaps/samples/DrawingTiles.hx	/^		var ow = logo.width;$/;"	v
ownColor	heaps/h3d/shader/Outline2D.hx	/^			var ownColor : Vec4 = texture.get(input.uv);$/;"	v
ox	heaps/h2d/CdbLevel.hx	/^				var ox = Std.int(o.x \/ tileset.size);$/;"	v
ox	heaps/h2d/domkit/Style.hx	/^		var ox = e.relX, oy = e.relY;$/;"	v
ox	heaps/hxd/SceneEvents.hx	/^				var ox = e.relX, oy = e.relY;$/;"	v
ox	heaps/hxd/SceneEvents.hx	/^		var ox = event.relX, oy = event.relY;$/;"	v
oy	heaps/h2d/CdbLevel.hx	/^				var oy = Std.int(o.y \/ tileset.size);$/;"	v
p	heaps/h2d/Dropdown.hx	/^		var p = getProperties(arrow);$/;"	v
p	heaps/h2d/Flow.hx	/^					var p = propAt(i);$/;"	v
p	heaps/h2d/Flow.hx	/^					var p = propAt(j);$/;"	v
p	heaps/h2d/Flow.hx	/^				var p = getProperties(scrollBar);$/;"	v
p	heaps/h2d/Flow.hx	/^				var p = propAt(i);$/;"	v
p	heaps/h2d/Flow.hx	/^				var p = properties[i++];$/;"	v
p	heaps/h2d/Flow.hx	/^			var p = properties[i++];$/;"	v
p	heaps/h2d/Flow.hx	/^		var p = getProperties(s);$/;"	v
p	heaps/h2d/Flow.hx	/^		var p = scrollBar.getProperties(scrollBarCursor);$/;"	v
p	heaps/h2d/Graphics.hx	/^		var p = pts[0];$/;"	v
p	heaps/h2d/Layers.hx	/^				var p = i;$/;"	v
p	heaps/h2d/Layers.hx	/^				var p = pos - 1;$/;"	v
p	heaps/h2d/Object.hx	/^		var p = 0, len = children.length;$/;"	v
p	heaps/h2d/Object.hx	/^		var p = this;$/;"	v
p	heaps/h2d/ObjectFollower.hx	/^		var p = scene.camera.project(pos.x, pos.y, pos.z, width * outputScale, height * outputScale, t/;"	v
p	heaps/h2d/Particles.hx	/^			var p = new Particle(this);$/;"	v
p	heaps/h2d/Scene.hx	/^			var p : Object = i;$/;"	v
p	heaps/h2d/SpriteBatch.hx	/^			var p = Math.pow(friction, dt * 60);$/;"	v
p	heaps/h2d/ZGroup.hx	/^		var p = null;$/;"	v
p	heaps/h2d/col/Polygon.hx	/^			var p = points[i];$/;"	v
p	heaps/h2d/col/Voronoi.hx	/^		var p = new Point(), ec = 0;$/;"	v
p	heaps/h2d/col/Voronoi.hx	/^		var p = node,$/;"	v
p	heaps/h2d/domkit/BaseComponents.hx	/^				var p = loadResource(url);$/;"	v
p	heaps/h2d/domkit/BaseComponents.hx	/^			var p = loadResource(path);$/;"	v
p	heaps/h2d/domkit/BaseComponents.hx	/^		var p = getFlowProps(o);$/;"	v
p	heaps/h2d/domkit/BaseComponents.hx	/^		var p = hxd.impl.Api.downcast(o.parent, h2d.Flow);$/;"	v
p	heaps/h2d/domkit/Style.hx	/^					var p = inspectPreviewObjects[0].parent;$/;"	v
p	heaps/h2d/domkit/Style.hx	/^				var p = dom.currentSet[i];$/;"	v
p	heaps/h2d/domkit/Style.hx	/^		var p = new h2d.Bitmap(h2d.Tile.fromColor(0xFF0000, Math.round(b.width), Math.round(b.height),/;"	v
p	heaps/h2d/filter/AbstractMask.hx	/^			var p = obj;$/;"	v
p	heaps/h3d/Camera.hx	/^				var p = follow.pos;$/;"	v
p	heaps/h3d/Camera.hx	/^		var p = new h3d.Vector(screenX, screenY, camZ);$/;"	v
p	heaps/h3d/Camera.hx	/^		var p = new h3d.col.Point(dx, dy, dz);$/;"	v
p	heaps/h3d/col/Bounds.hx	/^			var p = new Plane(mvp._13, mvp._23, mvp._33, mvp._43);$/;"	v
p	heaps/h3d/col/Bounds.hx	/^			var p = new Plane(mvp._14 - mvp._13, mvp._24 - mvp._23, mvp._34 - mvp._33, mvp._44 - mvp._43)/;"	v
p	heaps/h3d/col/Bounds.hx	/^		var p = new Plane(mvp._14 + mvp._11, mvp._24 + mvp._21 , mvp._34 + mvp._31, mvp._44 + mvp._41)/;"	v
p	heaps/h3d/col/Bounds.hx	/^		var p = new Plane(mvp._14 + mvp._12, mvp._24 + mvp._22 , mvp._34 + mvp._32, mvp._44 + mvp._42)/;"	v
p	heaps/h3d/col/Bounds.hx	/^		var p = new Plane(mvp._14 - mvp._11, mvp._24 - mvp._21 , mvp._34 - mvp._31, mvp._44 - mvp._41)/;"	v
p	heaps/h3d/col/Bounds.hx	/^		var p = new Plane(mvp._14 - mvp._12, mvp._24 - mvp._22 , mvp._34 - mvp._32, mvp._44 - mvp._42)/;"	v
p	heaps/h3d/col/Bounds.hx	/^		var p = new Point(Math.max(xMin, Math.min(s.x, xMax)), Math.max(yMin, Math.min(s.y, yMax)), Ma/;"	v
p	heaps/h3d/col/Frustum.hx	/^		var p = s.getCenter();$/;"	v
p	heaps/h3d/col/PolygonBuffer.hx	/^			var p = rdir.cross(e2);$/;"	v
p	heaps/h3d/col/PolygonBuffer.hx	/^		var p = new FPoint(p.x, p.y, p.z);$/;"	v
p	heaps/h3d/col/Ray.hx	/^		var p = new h3d.Vector(px, py, pz);$/;"	v
p	heaps/h3d/col/SkinCollider.hx	/^			var p = new Point(col.buffer[v], col.buffer[v+1], col.buffer[v+2]);$/;"	v
p	heaps/h3d/impl/GlDriver.hx	/^			var p = 0;$/;"	v
p	heaps/h3d/impl/GlDriver.hx	/^			var p = i * 5 * 4;$/;"	v
p	heaps/h3d/impl/GlDriver.hx	/^		var p = programs.get(shader.id);$/;"	v
p	heaps/h3d/impl/GlDriver.hx	/^	public var p : Program;$/;"	v
p	heaps/h3d/impl/LogDriver.hx	/^					var p = shader.params;$/;"	v
p	heaps/h3d/impl/LogDriver.hx	/^				var p = s.params;$/;"	v
p	heaps/h3d/impl/ManagedBuffer.hx	/^		var p = allocPosition(b.vertices, align);$/;"	v
p	heaps/h3d/impl/ManagedBuffer.hx	/^		var p = allocPosition(vertices, align);$/;"	v
p	heaps/h3d/impl/MemoryManager.hx	/^		var p = 0;$/;"	v
p	heaps/h3d/impl/Stage3dDriver.hx	/^				var p = data.params;$/;"	v
p	heaps/h3d/impl/Stage3dDriver.hx	/^		var p = new CompiledShader(shader);$/;"	v
p	heaps/h3d/impl/Stage3dDriver.hx	/^		var p = programs.get(shader.id);$/;"	v
p	heaps/h3d/impl/Stage3dDriver.hx	/^	public var p : flash.display3D.Program3D;$/;"	v
p	heaps/h3d/impl/VarBinding.hx	/^				var p = i.path.copy();$/;"	v
p	heaps/h3d/mat/BaseMaterial.hx	/^		var p = getPass(name);$/;"	v
p	heaps/h3d/mat/BaseMaterial.hx	/^		var p = new Pass(name, null, inheritMain ? mainPass : null);$/;"	v
p	heaps/h3d/mat/BaseMaterial.hx	/^		var p = passes;$/;"	v
p	heaps/h3d/mat/Material.hx	/^		var p = getPass("shadow");$/;"	v
p	heaps/h3d/mat/MaterialDatabase.hx	/^		var p : Dynamic = getModelData(material.model);$/;"	v
p	heaps/h3d/mat/Pass.hx	/^		var p = new Pass(name, shaders.clone());$/;"	v
p	heaps/h3d/mat/PbrMaterial.hx	/^		var p = passes;$/;"	v
p	heaps/h3d/mat/Texture.hx	/^			var p = hxd.Pixels.alloc(width, height, nativeFormat);$/;"	v
p	heaps/h3d/mat/Texture.hx	/^			var p = y * width * bpp;$/;"	v
p	heaps/h3d/parts/Emitter.hx	/^		var p = head;$/;"	v
p	heaps/h3d/parts/GpuParticles.hx	/^				var p = g.particles;$/;"	v
p	heaps/h3d/parts/GpuParticles.hx	/^			var p = g.particles;$/;"	v
p	heaps/h3d/parts/GpuParticles.hx	/^		var p = Reflect.field(material, name);$/;"	v
p	heaps/h3d/parts/GpuParticles.hx	/^		var p = g.particles;$/;"	v
p	heaps/h3d/parts/GpuParticles.hx	/^		var p = new h3d.col.Point();$/;"	v
p	heaps/h3d/parts/Particles.hx	/^			var p = head;$/;"	v
p	heaps/h3d/parts/Particles.hx	/^		var p = emitParticle();$/;"	v
p	heaps/h3d/parts/Particles.hx	/^		var p = head;$/;"	v
p	heaps/h3d/parts/Particles.hx	/^	var p : Particle;$/;"	v
p	heaps/h3d/pass/Blur.hx	/^		var p = Math.pow(2.718281828459, -(x * x) \/ (2 * sq));$/;"	v
p	heaps/h3d/pass/Default.hx	/^		var p = ctx.extraShaders;$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMax, b.yMax, b.zMax);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMax, b.yMax, b.zMin);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMax, b.yMin, b.zMax);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMax, b.yMin, b.zMin);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMin, b.yMax, b.zMax);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMin, b.yMax, b.zMin);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMin, b.yMin, b.zMax);$/;"	v
p	heaps/h3d/pass/DirShadowMap.hx	/^				var p = new h3d.col.Point(b.xMin, b.yMin, b.zMin);$/;"	v
p	heaps/h3d/pass/PassList.hx	/^		var p = current;$/;"	v
p	heaps/h3d/pass/ShaderManager.hx	/^			var p = s.buffers;$/;"	v
p	heaps/h3d/pass/ShaderManager.hx	/^			var p = s.params;$/;"	v
p	heaps/h3d/pass/ShaderManager.hx	/^			var p = s.textures;$/;"	v
p	heaps/h3d/prim/BigPrimitive.hx	/^			var p = (i + startVert) * stride;$/;"	v
p	heaps/h3d/prim/Cube.hx	/^		var p = [$/;"	v
p	heaps/h3d/prim/GeoSphere.hx	/^		var p = [new Point(0, 0, 1), new Point(0, 0, -1), new Point(-a, -a, 0), new Point(a, -a, 0), n/;"	v
p	heaps/h3d/prim/HMDModel.hx	/^					var p = pts[idx];$/;"	v
p	heaps/h3d/prim/HMDModel.hx	/^				var p = pts[i];$/;"	v
p	heaps/h3d/prim/Polygon.hx	/^			var p = [];$/;"	v
p	heaps/h3d/prim/Polygon.hx	/^			var p = points[k];$/;"	v
p	heaps/h3d/prim/Sphere.hx	/^			var p = 0.;$/;"	v
p	heaps/h3d/scene/CameraController.hx	/^		var p : Object = this;$/;"	v
p	heaps/h3d/scene/Graphics.hx	/^		var p = pts[0];$/;"	v
p	heaps/h3d/scene/MeshBatch.hx	/^			var p = instanceCount * 20;$/;"	v
p	heaps/h3d/scene/MeshBatch.hx	/^		var p = batch.params;$/;"	v
p	heaps/h3d/scene/MeshBatch.hx	/^		var p = dataPasses;$/;"	v
p	heaps/h3d/scene/Object.hx	/^		var p = 0, len = children.length;$/;"	v
p	heaps/h3d/scene/Object.hx	/^		var p = this;$/;"	v
p	heaps/h3d/scene/RenderContext.hx	/^		var p = allocFirst;$/;"	v
p	heaps/h3d/scene/RenderContext.hx	/^		var p = mat.mainPass;$/;"	v
p	heaps/h3d/scene/Renderer.hx	/^		var p = getPassByName(pass.name);$/;"	v
p	heaps/h3d/scene/Renderer.hx	/^		var p = passObjects.get(name);$/;"	v
p	heaps/h3d/scene/Scene.hx	/^					var p = i.hitPoint.clone();$/;"	v
p	heaps/h3d/scene/Scene.hx	/^				var p : h3d.scene.Object = i;$/;"	v
p	heaps/h3d/scene/Scene.hx	/^			var p = ctx.cachedPassObjects[i];$/;"	v
p	heaps/h3d/scene/Scene.hx	/^			var p = curPass, prev = null;$/;"	v
p	heaps/h3d/scene/Scene.hx	/^			var p = hardwarePass;$/;"	v
p	heaps/h3d/scene/Skin.hx	/^		var p = parent;$/;"	v
p	heaps/h3d/scene/Trail.hx	/^			var p = i * 2;$/;"	v
p	heaps/h3d/scene/Trail.hx	/^		var p = Reflect.field(materialData, name);$/;"	v
p	heaps/h3d/scene/World.hx	/^				var p = 0;$/;"	v
p	heaps/h3d/scene/World.hx	/^				var p = hxd.impl.Api.downcast(b.primitive, h3d.prim.BigPrimitive);$/;"	v
p	heaps/h3d/scene/fwd/LightSystem.hx	/^		var p = l1.priority - l2.priority;$/;"	v
p	heaps/h3d/scene/fwd/PointLight.hx	/^		var p = params;$/;"	v
p	heaps/h3d/scene/pbr/Environment.hx	/^				var p = hammersley(i, numSamples);$/;"	v
p	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var p : h3d.scene.pbr.Renderer.RenderProps = pbrRenderer.props;$/;"	v
p	heaps/h3d/scene/pbr/PointLight.hx	/^		var p = parent;$/;"	v
p	heaps/h3d/scene/pbr/SpotLight.hx	/^		var p : h3d.prim.Polygon = @:privateAccess engine.resCache.get(SpotLight);$/;"	v
p	heaps/h3d/shader/Blur.hx	/^					var p = getPosition(uv);$/;"	v
p	heaps/hxd/BitmapData.hx	/^			var p = tmpPoint;$/;"	v
p	heaps/hxd/BitmapData.hx	/^			var p = x + (y + dy) * data.width;$/;"	v
p	heaps/hxd/BitmapData.hx	/^		var p = new Pixels(width, height, haxe.io.Bytes.ofData(bmp.getPixels(bmp.rect)), ARGB);$/;"	v
p	heaps/hxd/Math.hx	/^		var p = Math.pow(k, 1 + easing);$/;"	v
p	heaps/hxd/Pad.hx	/^				var p = new Pad();$/;"	v
p	heaps/hxd/Pad.hx	/^			var p = new hxd.Pad();$/;"	v
p	heaps/hxd/Pad.hx	/^		var p = new Pad();$/;"	v
p	heaps/hxd/Pad.hx	/^		var p = new hxd.Pad();$/;"	v
p	heaps/hxd/Pad.hx	/^		var p = pads.get( e.controller );$/;"	v
p	heaps/hxd/Perlin.hx	/^			var p = i << 5;$/;"	v
p	heaps/hxd/Perlin.hx	/^		var p = 1.;$/;"	v
p	heaps/hxd/Pixels.hx	/^				var p = (i << 2) + offset;$/;"	v
p	heaps/hxd/Pixels.hx	/^				var p = levels[l][i];$/;"	v
p	heaps/hxd/Pixels.hx	/^			var p = (x + yflip(y + dy) * this.width) * bytesPerPixel + offset;$/;"	v
p	heaps/hxd/Pixels.hx	/^			var p = 0;$/;"	v
p	heaps/hxd/Pixels.hx	/^			var p = calcStride(1,format);$/;"	v
p	heaps/hxd/Pixels.hx	/^		var p = ((x + yflip(y) * width) * bytesPerPixel) + offset;$/;"	v
p	heaps/hxd/Pixels.hx	/^		var p = 0, b = offset;$/;"	v
p	heaps/hxd/Pixels.hx	/^		var p = new Pixels(width, height, null, format);$/;"	v
p	heaps/hxd/Pixels.hx	/^		var p = offset;$/;"	v
p	heaps/hxd/System.flash.hx	/^			var p = flash.system.Capabilities.playerType;$/;"	v
p	heaps/hxd/System.hl.hx	/^			var p = size.split("x");$/;"	v
p	heaps/hxd/clipper/Clipper.hx	/^			var p = new IPolygon();$/;"	v
p	heaps/hxd/clipper/Clipper.hx	/^			var p:OutPt = outRec.pts.prev;$/;"	v
p	heaps/hxd/clipper/Clipper.hx	/^		var p:OutPt = btmPt1.prev;$/;"	v
p	heaps/hxd/clipper/Clipper.hx	/^		var p:OutPt = pp.next;$/;"	v
p	heaps/hxd/clipper/Clipper.hx	/^		var p:OutPt = pts;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^				var p = points[i];$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^			var p = root.next;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p : EarNode, q : EarNode, e : EarNode, tail : EarNode, numMerges, pSize, qSize,$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = a,$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = a;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = ear.next.next;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = ear.nextZ;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = node, leftmost = node;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = root;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = start, again;$/;"	v
p	heaps/hxd/earcut/Earcut.hx	/^		var p = start;$/;"	v
p	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var p = getParent(o.model, "Model", true);$/;"	v
p	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var p = 0;$/;"	v
p	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var p = getParents(node, nodeName);$/;"	v
p	heaps/hxd/fmt/fbx/Geometry.hx	/^			var p = p;$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var p = o.parent;$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var p = vid * stride;$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var p = 0;$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var p = points[i];$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var p = new Position();$/;"	v
p	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var p = new Position();$/;"	v
p	heaps/hxd/fmt/hdr/Reader.hx	/^					var p = 0;$/;"	v
p	heaps/hxd/fmt/hmd/Dump.hx	/^						var p = s.joints[j.parent];$/;"	v
p	heaps/hxd/fmt/hmd/Dump.hx	/^			var p = h.models[m.parent];$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^				var p = 0;$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^				var p = i * stride;$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^				var p = s.allJoints[joint.parent];$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^				var p = vidx * 7;$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^			var p = objs[m.parent];$/;"	v
p	heaps/hxd/fmt/hmd/Library.hx	/^		var p = cachedPrimitives[id];$/;"	v
p	heaps/hxd/fmt/hmd/Reader.hx	/^		var p = new Position();$/;"	v
p	heaps/hxd/fmt/pak/Writer.hx	/^		var p = Std.int(f.dataPosition);$/;"	v
p	heaps/hxd/fs/Convert.hx	/^		var p = 0;$/;"	v
p	heaps/hxd/impl/AllocPos.hx	/^					var p = file.indexOf("\/");$/;"	v
p	heaps/hxd/poly2tri/Edge.hx	/^	public var p:Point;$/;"	v
p	heaps/hxd/poly2tri/Sweep.hx	/^				var p:Point  = t.points[i];$/;"	v
p	heaps/hxd/poly2tri/Sweep.hx	/^		var p:Point    = this.context.front.head.next.point;$/;"	v
p	heaps/hxd/poly2tri/VisiblePolygon.hx	/^			var p = sweepContext.points[i];$/;"	v
p	heaps/hxd/res/DynamicText.hx	/^			var p = r.matched(1);$/;"	v
p	heaps/hxd/res/FontBuilder.hx	/^			var p = i << 2;$/;"	v
p	heaps/hxd/res/Image.hx	/^				var p = 0;$/;"	v
p	heaps/hxd/res/Image.hx	/^			var p = try NanoJpeg.decode(bytes) catch( e : Dynamic ) throw "Failed to decode JPG " + entry/;"	v
p	heaps/hxsl/AgalOut.hx	/^				var p = g.pos + i;$/;"	v
p	heaps/hxsl/Cache.hx	/^					var p = params.get(a.v.id);$/;"	v
p	heaps/hxsl/Cache.hx	/^		var p = params;$/;"	v
p	heaps/hxsl/Cache.hx	/^		var p = rt.fragment.params;$/;"	v
p	heaps/hxsl/Cache.hx	/^		var p = rt.vertex.params;$/;"	v
p	heaps/hxsl/Cache.hx	/^		var p = s.globals;$/;"	v
p	heaps/hxsl/Cache.hx	/^		var p = s.params;$/;"	v
p	heaps/hxsl/CacheFileBuilder.hx	/^			var p = new sys.io.Process("orbis-wave-psslc.exe", args);$/;"	v
p	heaps/hxsl/CacheFileBuilder.hx	/^			var p = new sys.io.Process(Sys.getEnv("XboxOneXDKLatest")+ "xdk\\\\FXC\\\\amd64\\\\fxc.exe", /;"	v
p	heaps/hxsl/Checker.hx	/^							var p = parent;$/;"	v
p	heaps/hxsl/Checker.hx	/^					var p = parent;$/;"	v
p	heaps/hxsl/Flatten.hx	/^			var p = s.funs[0].expr.p;$/;"	v
p	heaps/hxsl/Linker.hx	/^			var p = parent.v;$/;"	v
p	heaps/hxsl/Macros.hx	/^			var p = getPath(c.v);$/;"	v
p	heaps/hxsl/Macros.hx	/^		var p = Context.currentPos();$/;"	v
p	heaps/hxsl/RuntimeShader.hx	/^		var p = new AllocParam(name,pos,instance,index,type);$/;"	v
p	heaps/hxsl/Splitter.hx	/^					var p = vfun.expr.p;$/;"	v
p	heaps/samples/Helpers.hx	/^			var p = i * csize;$/;"	v
p	heaps/samples/PointLights.hx	/^				var p = new h3d.scene.Mesh(sphere, l);$/;"	v
p	heaps/samples/Quaternion.hx	/^		var p = new h3d.prim.Cube(1, 1, 1);$/;"	v
p	heaps/samples/Sao.hx	/^			var p = new h3d.scene.Mesh(box, s3d);$/;"	v
p	heaps/samples/Shadows.hx	/^			var p = new h3d.scene.Mesh(sphere, s3d);$/;"	v
p	heaps/samples/Stencil.hx	/^			var p = obj.material.mainPass;$/;"	v
p	heaps/tools/hxsl/Main.hx	/^			var p = gl.createProgram();$/;"	v
p0	heaps/h2d/Graphics.hx	/^		var p0 = pts[0];$/;"	v
p0	heaps/h2d/Tile.hx	/^			var p0 = new flash.geom.Point(0, 0);$/;"	v
p0	heaps/h2d/col/Delaunay.hx	/^		var p0 = new Point( xmid - 2 * dmax, ymid - dmax );$/;"	v
p0	heaps/h2d/col/Polygon.hx	/^		var p0 = points[points.length - 1];$/;"	v
p0	heaps/h3d/col/Polygon.hx	/^				var p0 = p[idx[i*3]];$/;"	v
p0	heaps/h3d/col/Polygon.hx	/^			var p0 = new Point(t.p0x, t.p0y, t.p0z);$/;"	v
p0	heaps/h3d/col/Polygon.hx	/^			var p0 = p[0];$/;"	v
p0	heaps/h3d/col/Polygon.hx	/^		var p0 = new Point(p0x, p0y, p0z);$/;"	v
p0	heaps/h3d/col/PolygonBuffer.hx	/^			var p0 = new FPoint(buffer[i0++], buffer[i0++], buffer[i0]);$/;"	v
p0	heaps/h3d/prim/Polygon.hx	/^			var p0 = points[i0];$/;"	v
p0	heaps/h3d/prim/Quads.hx	/^			var p0 = points[i0];$/;"	v
p0	heaps/h3d/scene/Scene.hx	/^			var p0 = camera.unproject(screenX, screenY, 0);$/;"	v
p0	heaps/h3d/scene/Trail.hx	/^		var p0 = points[0];$/;"	v
p0	heaps/h3d/shader/NoiseLib.hx	/^  var p0 = vec2(i0.x - i0.y * 0.5, i0.y);$/;"	v
p0x	heaps/h3d/col/Polygon.hx	/^	var p0x : Float;$/;"	v
p0y	heaps/h3d/col/Polygon.hx	/^	var p0y : Float;$/;"	v
p0z	heaps/h3d/col/Polygon.hx	/^	var p0z : Float;$/;"	v
p1	heaps/h2d/Graphics.hx	/^			var p1 = points[i];$/;"	v
p1	heaps/h2d/Graphics.hx	/^		var p1 = pts[pts.length - 1];$/;"	v
p1	heaps/h2d/Scene.hx	/^			var p1 : Object = i1;$/;"	v
p1	heaps/h2d/col/Delaunay.hx	/^		var p1 = new Point( xmid, ymid + 2 * dmax );$/;"	v
p1	heaps/h2d/col/Delaunay.hx	/^	public var p1:Point;$/;"	v
p1	heaps/h2d/col/IPolygon.hx	/^			var p1 = points[points.length - 1];$/;"	v
p1	heaps/h2d/col/IPolygon.hx	/^		var p1 = points[points.length - 1];$/;"	v
p1	heaps/h2d/col/IPolygon.hx	/^		var p1 = points[points.length - 2];$/;"	v
p1	heaps/h2d/col/Line.hx	/^	public var p1 : Point;$/;"	v
p1	heaps/h2d/col/Polygon.hx	/^			var p1 = points[i];$/;"	v
p1	heaps/h2d/col/Polygon.hx	/^			var p1 = points[points.length - 1];$/;"	v
p1	heaps/h2d/col/Polygon.hx	/^		var p1 = points[points.length - 1];$/;"	v
p1	heaps/h2d/col/Polygon.hx	/^		var p1 = points[points.length - 2];$/;"	v
p1	heaps/h3d/anim/Skin.hx	/^				var p1 = permuts[i];$/;"	v
p1	heaps/h3d/anim/Skin.hx	/^			var p1 = minP1, p2 = minP2;$/;"	v
p1	heaps/h3d/col/Polygon.hx	/^				var p1 = p[i+1];$/;"	v
p1	heaps/h3d/col/Polygon.hx	/^				var p1 = p[idx[i*3+1]];$/;"	v
p1	heaps/h3d/col/Polygon.hx	/^		var p1 = new Point(d1x + p0x, d1y + p0y, d1z + p0z);$/;"	v
p1	heaps/h3d/col/PolygonBuffer.hx	/^			var p1 = new FPoint(buffer[i1++], buffer[i1++], buffer[i1]);$/;"	v
p1	heaps/h3d/col/Seg.hx	/^	public var p1 : Point;$/;"	v
p1	heaps/h3d/prim/GeoSphere.hx	/^				var p1 = p[idx[i]], p2 = p[idx[i + 1]], p3 = p[idx[i + 2]];$/;"	v
p1	heaps/h3d/prim/Polygon.hx	/^			var p1 = points[i1];$/;"	v
p1	heaps/h3d/prim/Quads.hx	/^			var p1 = points[i1];$/;"	v
p1	heaps/h3d/scene/Scene.hx	/^			var p1 = camera.unproject(screenX, screenY, 1);$/;"	v
p1	heaps/h3d/scene/Trail.hx	/^			var p1 = points[i];$/;"	v
p1	heaps/h3d/shader/NoiseLib.hx	/^  var p1 = vec2(p0.x + i1.x - i1.y * 0.5, p0.y + i1.y);$/;"	v
p1	heaps/hxd/Pixels.hx	/^			var p1 = y * stride + offset;$/;"	v
p1	heaps/hxd/clipper/Clipper.hx	/^			var p1 = new IPoint(Math.round(m_srcPoly[j].x + m_normals[k].x * m_delta), Math.round(m_srcPo/;"	v
p1	heaps/hxd/poly2tri/Sweep.hx	/^		var p1:Point = triangle.pointCCW(point);$/;"	v
p1	heaps/samples/Interactive.hx	/^			var p1 = new h3d.col.Point(0, 0, cheight);$/;"	v
p1_lft	heaps/hxd/clipper/Clipper.hx	/^		var p1_lft = outRec1.pts;$/;"	v
p1_rt	heaps/hxd/clipper/Clipper.hx	/^		var p1_rt = p1_lft.prev;$/;"	v
p2	heaps/h2d/Graphics.hx	/^			var p2 = points[(i + 1) % points.length];$/;"	v
p2	heaps/h2d/ObjectFollower.hx	/^			var p2 = scene.camera.project(pos.x, pos.y, pos.z, width, height, tmpPos);$/;"	v
p2	heaps/h2d/Scene.hx	/^			var p2 : Object = i2;$/;"	v
p2	heaps/h2d/col/Delaunay.hx	/^		var p2 = new Point(xmid + 2 * dmax, ymid - dmax);$/;"	v
p2	heaps/h2d/col/Delaunay.hx	/^	public var p2:Point;$/;"	v
p2	heaps/h2d/col/IPolygon.hx	/^		var p2 = points[points.length - 1];$/;"	v
p2	heaps/h2d/col/Line.hx	/^	public var p2 : Point;$/;"	v
p2	heaps/h2d/col/Polygon.hx	/^				var p2 = points[j];$/;"	v
p2	heaps/h2d/col/Polygon.hx	/^		var p2 = points[points.length - 1];$/;"	v
p2	heaps/h3d/Camera.hx	/^		var p2 = pos.clone();$/;"	v
p2	heaps/h3d/anim/Skin.hx	/^					var p2 = permuts[j];$/;"	v
p2	heaps/h3d/col/Polygon.hx	/^				var p2 = p[i+2];$/;"	v
p2	heaps/h3d/col/Polygon.hx	/^				var p2 = p[idx[i*3+2]];$/;"	v
p2	heaps/h3d/col/Polygon.hx	/^		var p2 = new Point(d2x + p0x, d2y + p0y, d2z + p0z);$/;"	v
p2	heaps/h3d/col/PolygonBuffer.hx	/^			var p2 = new FPoint(buffer[i2++], buffer[i2++], buffer[i2]);$/;"	v
p2	heaps/h3d/col/Seg.hx	/^	public var p2 : Point;$/;"	v
p2	heaps/h3d/col/SkinCollider.hx	/^				var p2 = p.clone();$/;"	v
p2	heaps/h3d/prim/Polygon.hx	/^			var p2 = points[i2];$/;"	v
p2	heaps/h3d/prim/Quads.hx	/^			var p2 = points[i2];$/;"	v
p2	heaps/h3d/shader/NoiseLib.hx	/^  var p2 = vec2(p0.x + 0.5, p0.y + 1.0);$/;"	v
p2	heaps/hxd/Pixels.hx	/^			var p2 = (height - 1 - y) * stride + offset;$/;"	v
p2	heaps/hxd/clipper/Clipper.hx	/^			var p2 = new IPoint(Math.round(m_srcPoly[j].x + m_normals[j].x * m_delta), Math.round(m_srcPo/;"	v
p2	heaps/hxd/poly2tri/Sweep.hx	/^		var p2:Point = triangle.pointCW(point);$/;"	v
p2	heaps/hxsl/Cache.hx	/^			var p2 = new AllocParam(p.name, index, p.instance, p.index, p.type);$/;"	v
p2	heaps/samples/Interactive.hx	/^			var p2 = new h3d.col.Point(0, 0, 0);$/;"	v
p2_lft	heaps/hxd/clipper/Clipper.hx	/^		var p2_lft = outRec2.pts;$/;"	v
p2_rt	heaps/hxd/clipper/Clipper.hx	/^		var p2_rt = p2_lft.prev;$/;"	v
p3	heaps/h2d/Graphics.hx	/^			var p3 = points[(i + 2) % points.length];$/;"	v
p3	heaps/h2d/col/Delaunay.hx	/^	public var p3:Point;$/;"	v
p3	heaps/h2d/col/IPolygon.hx	/^		var p3 = points[0];$/;"	v
p3	heaps/h2d/col/Polygon.hx	/^		var p3 = points[0];$/;"	v
pNext	heaps/h2d/Graphics.hx	/^			var pNext = pts[1];$/;"	v
pNext	heaps/h3d/scene/Graphics.hx	/^			var pNext = pts[1];$/;"	v
pa	heaps/h3d/prim/GeoSphere.hx	/^				var pa = p1.add(p2);$/;"	v
pack	heaps/hxd/impl/AllocPos.hx	/^					var pack = p < 0 ? "" : file.substr(0,p);$/;"	v
pack	heaps/hxsl/Flatten.hx	/^	function pack( name : String, kind : VarKind, vars : Array<TVar>, t : VecType ) {$/;"	f
pack	heaps/hxsl/MacroParser.hx	/^				var pack = pack.copy();$/;"	v
packBuffers	heaps/hxsl/Flatten.hx	/^	function packBuffers( vars : Array<TVar> ) {$/;"	f
packRegisters	heaps/hxsl/AgalOptim.hx	/^	var packRegisters : Bool;$/;"	v
packTextures	heaps/hxsl/Flatten.hx	/^	function packTextures( name : String, vars : Array<TVar>, t : Type ) {$/;"	f
pad	heaps/hxd/Pad.hx	/^				var pad = new hxd.Pad();$/;"	v
pad	heaps/hxd/Pad.hx	/^				var pad = pads.get(p.gamepad.index);$/;"	v
pad	heaps/hxsl/AgalOut.hx	/^		var pad = (va.length - 1) & 3;$/;"	v
pad	heaps/hxsl/Flatten.hx	/^				var pad = (4 - (size % 4)) % 4;$/;"	v
pad	heaps/hxsl/Flatten.hx	/^		var pad = (va.length - 1) & 3;$/;"	v
pad	heaps/samples/Pad.hx	/^	var pad : hxd.Pad;$/;"	v
padding	heaps/h2d/Flow.hx	/^	public var padding(never, set) : Int;$/;"	v
padding	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var padding : Float = 0;$/;"	v
padding	heaps/hxd/res/BDFFont.hx	/^		var padding : Float = ( space.t.height * .5 );$/;"	v
paddingBottom	heaps/h2d/Flow.hx	/^	public var paddingBottom = 0;$/;"	v
paddingBottom	heaps/h2d/Flow.hx	/^	public var paddingBottom(default, set) : Int = 0;$/;"	v
paddingBottom	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var paddingBottom : Int;$/;"	v
paddingHorizontal	heaps/h2d/Flow.hx	/^	public var paddingHorizontal(never, set) : Int;$/;"	v
paddingLeft	heaps/h2d/Flow.hx	/^	public var paddingLeft = 0;$/;"	v
paddingLeft	heaps/h2d/Flow.hx	/^	public var paddingLeft(default, set) : Int = 0;$/;"	v
paddingLeft	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var paddingLeft : Int;$/;"	v
paddingRight	heaps/h2d/Flow.hx	/^	public var paddingRight = 0;$/;"	v
paddingRight	heaps/h2d/Flow.hx	/^	public var paddingRight(default, set) : Int = 0;$/;"	v
paddingRight	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var paddingRight : Int;$/;"	v
paddingTop	heaps/h2d/Flow.hx	/^	public var paddingTop = 0;$/;"	v
paddingTop	heaps/h2d/Flow.hx	/^	public var paddingTop(default, set) : Int = 0;$/;"	v
paddingTop	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var paddingTop : Int;$/;"	v
paddingVertical	heaps/h2d/Flow.hx	/^	public var paddingVertical(never, set) : Int;$/;"	v
pads	heaps/hxd/Pad.hx	/^	static var pads : Array<hxd.Pad> = [];$/;"	v
pads	heaps/hxd/Pad.hx	/^	static var pads : Map<Int, hxd.Pad> = new Map();$/;"	v
pageCount	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var pageCount : Int = 0;$/;"	v
pageCount	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var pageCount = 0;$/;"	v
paintLaser	_old/Canvas.hx	/^	public function paintLaser(x:Float, y:Float, x2:Float, y2:Float) {$/;"	f
paintRectangle	_old/Canvas.hx	/^	public function paintRectangle(x:Float, y:Float, width:Float, height:Float, color:Int = 0xFFFFF/;"	f
pairedExtensions	heaps/hxd/res/Config.hx	/^	public static var pairedExtensions = [$/;"	v
pak	heaps/hxd/Res.hx	/^			var pak = new hxd.fmt.pak.FileSystem();$/;"	v
pak	heaps/hxd/fmt/pak/Build.hx	/^				var pak = new hxd.fmt.pak.Reader(fs).readHeader();$/;"	v
pak	heaps/hxd/fmt/pak/Build.hx	/^		var pak = new Data();$/;"	v
pak	heaps/hxd/fmt/pak/FileSystem.hx	/^		var pak = fs.getFile(pakFile);$/;"	v
pak	heaps/hxd/fmt/pak/FileSystem.hx	/^		var pak = new Reader(file).readHeader();$/;"	v
pak	heaps/hxd/fmt/pak/FileSystem.hx	/^		var pak = new Reader(s).readHeader();$/;"	v
pak	heaps/hxd/fmt/pak/Reader.hx	/^		var pak = new Data();$/;"	v
pakDiff	heaps/hxd/fmt/pak/Build.hx	/^	public var pakDiff = false;$/;"	v
pakFile	heaps/hxd/fmt/pak/Build.hx	/^				var pakFile = args.shift();$/;"	v
pakFile	heaps/hxd/fmt/pak/FileSystem.hx	/^	var pakFile : Int;$/;"	v
paletteChanged	heaps/h3d/scene/Skin.hx	/^	var paletteChanged : Bool;$/;"	v
pan	heaps/h3d/scene/CameraController.hx	/^	function pan(dx, dy, dz = 0.) {$/;"	f
panSpeed	heaps/h3d/scene/CameraController.hx	/^	public var panSpeed = 1.;$/;"	v
panner	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var panner : PannerNode;$/;"	v
parallax	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var parallax : Float;$/;"	v
param	heaps/h2d/col/IPolygon.hx	/^			var param = -1.;$/;"	v
param	heaps/h2d/col/Polygon.hx	/^			var param = -1.;$/;"	v
paramCount	heaps/hxsl/AgalOut.hx	/^		var paramCount = 0, inputCount = 0, outCount = 0, texCount = 0;$/;"	v
paramVars	heaps/hxsl/Cache.hx	/^		var paramVars = new Map();$/;"	v
paramVars	heaps/tools/hxsl/Main.hx	/^			var paramVars = new Map();$/;"	v
params	heaps/h3d/impl/DirectXDriver.hx	/^	public var params : dx.Resource;$/;"	v
params	heaps/h3d/impl/GlDriver.hx	/^	public var params : Uniform;$/;"	v
params	heaps/h3d/scene/MeshBatch.hx	/^	public var params : hxsl.RuntimeShader.AllocParam;$/;"	v
params	heaps/h3d/scene/fwd/PointLight.hx	/^	public var params(get, set) : h3d.Vector;$/;"	v
params	heaps/h3d/shader/Buffers.hx	/^	public var params : ShaderBufferData;$/;"	v
params	heaps/h3d/shader/PointLight.hx	/^		@param var params : Vec3; \/\/ [constant, linear, quadratic]$/;"	v
params	heaps/hxd/fmt/hmd/Dump.hx	/^			var params = Type.enumParameters(p);$/;"	v
params	heaps/hxd/fs/Convert.hx	/^	public var params : Dynamic;$/;"	v
params	heaps/hxsl/BatchShader.hx	/^	public var params : RuntimeShader.AllocParam;$/;"	v
params	heaps/hxsl/Cache.hx	/^		var params = null;$/;"	v
params	heaps/hxsl/Flatten.hx	/^	var params : Array<TVar>;$/;"	v
params	heaps/hxsl/RuntimeShader.hx	/^	public var params : AllocParam;$/;"	v
params	heaps/hxsl/SharedShader.hx	/^	public var params : Map<Int,Int>;$/;"	v
params	heaps/samples/Generator.hx	/^			var params = [];$/;"	v
params1	heaps/hxsl/AgalOptim.hx	/^				var params1 = op1.getParameters();$/;"	v
params2	heaps/hxsl/AgalOptim.hx	/^				var params2 = op2.getParameters();$/;"	v
paramsContent	heaps/h3d/impl/DirectXDriver.hx	/^	public var paramsContent : hl.Bytes;$/;"	v
paramsCount	heaps/h3d/scene/MeshBatch.hx	/^	public var paramsCount : Int;$/;"	v
paramsCount	heaps/hxsl/SharedShader.hx	/^	var paramsCount : Int;$/;"	v
paramsSize	heaps/h3d/impl/DirectXDriver.hx	/^	public var paramsSize : Int;$/;"	v
paramsSize	heaps/hxsl/BatchShader.hx	/^	public var paramsSize : Int;$/;"	v
paramsSize	heaps/hxsl/RuntimeShader.hx	/^	public var paramsSize : Int;$/;"	v
parent	heaps/h2d/Object.hx	/^	public var parent(default, null) : Object;$/;"	v
parent	heaps/h2d/ObjectFollower.hx	/^			var parent = follow;$/;"	v
parent	heaps/h2d/col/Voronoi.hx	/^		var parent = node.rbParent,$/;"	v
parent	heaps/h2d/col/Voronoi.hx	/^		var parent;$/;"	v
parent	heaps/h3d/anim/Skin.hx	/^	public var parent : Joint;$/;"	v
parent	heaps/h3d/impl/VarBinding.hx	/^	public var parent : Init;$/;"	v
parent	heaps/h3d/parts/GpuParticles.hx	/^	var parent : GpuParticles;$/;"	v
parent	heaps/h3d/prim/ModelCache.hx	/^				var parent = lib.header.models[m.parent];$/;"	v
parent	heaps/h3d/scene/Object.hx	/^	public var parent(default, null) : Object;$/;"	v
parent	heaps/h3d/scene/World.hx	/^				var parent = models[parentIdx];$/;"	v
parent	heaps/hxd/clipper/Clipper.hx	/^	public var parent(default,null) : PolyNode;$/;"	v
parent	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var parent = c.props[2].toInt();$/;"	v
parent	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var parent = getParent(model, "Model", true);$/;"	v
parent	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var parent : TmpObject;$/;"	v
parent	heaps/hxd/fmt/hmd/Data.hx	/^	public var parent : Index<Model>;$/;"	v
parent	heaps/hxd/fmt/hmd/Data.hx	/^	public var parent : Index<SkinJoint>;$/;"	v
parent	heaps/hxd/fmt/pak/FileSystem.hx	/^	var parent : PakEntry;$/;"	v
parent	heaps/hxd/fmt/spine/Data.hx	/^	public var parent : Bone;$/;"	v
parent	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var parent : String;$/;"	v
parent	heaps/hxd/fs/FileConverter.hx	/^		var parent = dir == "" ? defaultConfig : loadConfig(dirPos < 0 ? "" : dir.substr(0,dirPos));$/;"	v
parent	heaps/hxsl/Ast.hx	/^	@:optional var parent : TVar;$/;"	v
parent	heaps/hxsl/Cache.hx	/^				var parent : TVar = null;$/;"	v
parent	heaps/hxsl/Linker.hx	/^	public var parent : AllocatedVar;$/;"	v
parent	heaps/samples/Flows.hx	/^									var parent = hxd.impl.Api.downcast(parent.parent, Flow);$/;"	v
parent	heaps/samples/Flows.hx	/^							var parent = hxd.impl.Api.downcast(movingFlow.parent, Flow);$/;"	v
parentContainer	heaps/h2d/Object.hx	/^	var parentContainer : Object;$/;"	v
parentIdx	heaps/h3d/scene/World.hx	/^			var parentIdx = m.parent;$/;"	v
parentPass	heaps/h3d/mat/Pass.hx	/^	var parentPass : Pass;$/;"	v
parentShaders	heaps/h3d/mat/Pass.hx	/^	var parentShaders : hxsl.ShaderList;$/;"	v
parentVars	heaps/hxsl/Cache.hx	/^		var parentVars = new Map();$/;"	v
parents	heaps/h2d/domkit/Style.hx	/^			var parents : Array<h2d.Object> = [];$/;"	v
parents	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var parents = [];$/;"	v
parse	heaps/hxd/fmt/bfnt/FontParser.hx	/^	public static function parse(bytes : haxe.io.Bytes, path : String, resolveTile: String -> h2d.T/;"	f
parse	heaps/hxd/fmt/bfnt/Reader.hx	/^	public static inline function parse(bytes : haxe.io.Bytes, resolveTile : String -> h2d.Tile ) :/;"	f
parse	heaps/hxd/fmt/blend/Data.hx	/^	function parse() {$/;"	f
parse	heaps/hxd/fmt/fbx/Parser.hx	/^	public static function parse( data : Bytes ) {$/;"	f
parse	heaps/hxd/res/DynamicText.hx	/^	public static function parse( data : String ) : Dynamic {$/;"	f
parseAlign	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseAlign( value : CssValue ) {$/;"	f
parseBinaryNode	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseBinaryNode( nextRecord : Int ) : FbxNode {$/;"	f
parseBinaryNodes	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseBinaryNodes( output : Array<FbxNode> ) {$/;"	f
parseBytes	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseBytes( bytes : Bytes ) : FbxNode {$/;"	f
parseCode	heaps/hxd/fmt/bfnt/FontParser.hx	/^				inline function parseCode( code : String ) : Int {$/;"	f
parseColor	heaps/hxd/fmt/spine/Library.hx	/^	function parseColor( color : String ) {$/;"	f
parseColorAdjust	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseColorAdjust(value:CssValue) : h3d.Matrix.ColorAdjust {$/;"	f
parseColorF	heaps/h2d/domkit/BaseComponents.hx	/^	function parseColorF( v : CssValue ) : h3d.Vector {$/;"	f
parseCursor	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseCursor(value) : hxd.Cursor {$/;"	f
parseDimension	heaps/h2d/domkit/BaseComponents.hx	/^	function parseDimension( value ) {$/;"	f
parseEnum	heaps/hxd/fmt/grd/Reader.hx	/^	function parseEnum(i : haxe.io.Input) {$/;"	f
parseExpr	heaps/hxsl/MacroParser.hx	/^	public function parseExpr( e : Expr ) : Ast.Expr {$/;"	f
parseFilter	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseFilter(value) : #if macro Bool #else h2d.filter.Filter #end {$/;"	f
parseFlowBackground	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseFlowBackground(value) : FlowBg {$/;"	f
parseFont	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseFont( value : CssValue ) {$/;"	f
parseFontHeader	heaps/hxd/res/BDFFont.hx	/^	function parseFontHeader( lines : Array<String>, linenum : Int ) : Int {$/;"	f
parseGlyphs	heaps/hxd/res/BDFFont.hx	/^	function parseGlyphs( lines : Array<String>, linenum : Int ) : Int {$/;"	f
parseHAlign	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseHAlign( value ) : #if macro Bool #else h2d.Flow.FlowAlign #end {$/;"	f
parseList	heaps/hxd/fmt/grd/Reader.hx	/^	function parseList(i : haxe.io.Input) {$/;"	f
parseMetaData	heaps/hxd/res/DynamicText.hx	/^	public static function parseMetaData( data : String ) : DynamicTextMeta {$/;"	f
parseMetaDataRec	heaps/hxd/res/DynamicText.hx	/^	static function parseMetaDataRec( x : Access ) : DynamicTextMetaContent {$/;"	f
parseNode	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseNode() : FbxNode {$/;"	f
parseNodes	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseNodes() {$/;"	f
parseObj	heaps/hxd/fmt/grd/Reader.hx	/^	function parseObj(i : haxe.io.Input) : Dynamic {$/;"	f
parsePosition	heaps/h2d/domkit/BaseComponents.hx	/^	function parsePosition( value ) {$/;"	f
parseScale	heaps/h2d/domkit/BaseComponents.hx	/^	function parseScale( value ) {$/;"	f
parseText	heaps/h2d/HtmlText.hx	/^	function parseText( text : String ) {$/;"	f
parseText	heaps/hxd/fmt/fbx/Parser.hx	/^	function parseText( str ) : FbxNode {$/;"	f
parseText	heaps/hxd/res/DynamicText.hx	/^	static function parseText( str : String ) : Dynamic {$/;"	f
parseTextShadow	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseTextShadow( value : CssValue ) {$/;"	f
parseTile	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseTile( v : CssValue) {$/;"	f
parseTilePos	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseTilePos( value ) : { p:Int, ?y:Int } {$/;"	f
parseType	heaps/hxsl/MacroParser.hx	/^	public function parseType( t : ComplexType, pos : Position ) : Ast.Type {$/;"	f
parseVAlign	heaps/h2d/domkit/BaseComponents.hx	/^	public function parseVAlign( value ) : #if macro Bool #else h2d.Flow.FlowAlign #end {$/;"	f
parseVal	heaps/h2d/domkit/BaseComponents.hx	/^		inline function parseVal(vcall: CssValue) {$/;"	f
parseValue	heaps/hxd/fmt/grd/Reader.hx	/^	function parseValue(i : haxe.io.Input) : Dynamic {$/;"	f
parseXmlData	heaps/hxd/res/DynamicText.hx	/^	static function parseXmlData( x : Access ) : Dynamic {$/;"	f
parser	heaps/h2d/domkit/Style.hx	/^			var parser = new domkit.CssParser();$/;"	v
parser	heaps/tools/hxsl/Main.hx	/^			var parser = new hscript.Parser();$/;"	v
part	heaps/h2d/Particles.hx	/^	var part = new h2d.Particles();$/;"	v
partAlloc	heaps/h3d/parts/GpuParticles.hx	/^				var partAlloc = partAlloc;$/;"	v
partAlloc	heaps/h3d/parts/GpuParticles.hx	/^	var partAlloc : GpuPart;$/;"	v
partIndex	heaps/h3d/parts/GpuParticles.hx	/^	var partIndex = 0;$/;"	v
particles	heaps/h3d/parts/GpuParticles.hx	/^	var particles : GpuPart;$/;"	v
particles	heaps/samples/Particles2d.hx	/^	var particles : Particles;$/;"	v
parts	heaps/h2d/Particles.hx	/^			var parts = this.parts;$/;"	v
parts	heaps/h2d/Particles.hx	/^	var parts : Particles;$/;"	v
parts	heaps/h3d/parts/Particle.hx	/^	var parts : Particles;$/;"	v
parts	heaps/h3d/prim/ModelCache.hx	/^				var parts = path.split(".");$/;"	v
parts	heaps/hxd/fmt/fbx/Data.hx	/^		var parts = path.split(".");$/;"	v
parts	heaps/hxd/fmt/hdr/Reader.hx	/^		var parts = f.readLine().split(" ");$/;"	v
parts	heaps/hxd/res/Image.hx	/^			var parts = f.readLine().split(" ");$/;"	v
parts	heaps/samples/GpuParticles.hx	/^	var parts : h3d.parts.GpuParticles;$/;"	v
parts	heaps/samples/World.hx	/^		var parts = new h3d.parts.GpuParticles(world);$/;"	v
pass	heaps/h2d/RenderContext.hx	/^	var pass : h3d.mat.Pass;$/;"	v
pass	heaps/h2d/filter/Ambient.hx	/^	var pass : h3d.pass.ColorMatrix;$/;"	v
pass	heaps/h2d/filter/Blur.hx	/^	var pass : h3d.pass.Blur;$/;"	v
pass	heaps/h2d/filter/ColorMatrix.hx	/^	var pass : h3d.pass.ColorMatrix;$/;"	v
pass	heaps/h2d/filter/Mask.hx	/^	var pass : h3d.pass.ScreenFx<MaskShader>;$/;"	v
pass	heaps/h2d/filter/Outline.hx	/^	var pass : h3d.pass.Outline;$/;"	v
pass	heaps/h2d/filter/Shader.hx	/^	public var pass : h3d.pass.ScreenFx<T>;$/;"	v
pass	heaps/h3d/pass/PassObject.hx	/^	public var pass : h3d.mat.Pass;$/;"	v
pass	heaps/h3d/pass/ScreenFx.hx	/^	public var pass : h3d.mat.Pass;$/;"	v
pass	heaps/h3d/scene/MeshBatch.hx	/^			var pass = p.pass;$/;"	v
pass	heaps/h3d/scene/MeshBatch.hx	/^	public var pass : h3d.mat.Pass;$/;"	v
pass	heaps/h3d/scene/pbr/Environment.hx	/^		var pass = new h3d.pass.ScreenFx(new PanoramaToCube());$/;"	v
pass	heaps/samples/Generator.hx	/^				var pass = false;$/;"	v
passId	heaps/h3d/mat/Pass.hx	/^	var passId : Int;$/;"	v
passId	heaps/h3d/scene/Scene.hx	/^			var passId = curPass.pass.passId;$/;"	v
passIndex	heaps/h3d/scene/Scene.hx	/^		var passIndex = -1;$/;"	v
passObjects	heaps/h3d/scene/Renderer.hx	/^	var passObjects : Map<String,PassObjects>;$/;"	v
passes	heaps/h3d/mat/BaseMaterial.hx	/^	var passes : Pass;$/;"	v
passes	heaps/h3d/scene/RenderContext.hx	/^	var passes : h3d.pass.PassObject;$/;"	v
passes	heaps/h3d/scene/Renderer.hx	/^	public var passes : h3d.pass.PassList;$/;"	v
passes	heaps/h3d/scene/Scene.hx	/^		var passes = [];$/;"	v
passes	heaps/h3d/scene/Scene.hx	/^		var passes = new h3d.pass.PassList(@:privateAccess ctx.passes);$/;"	v
passes	heaps/h3d/scene/pbr/Renderer.hx	/^		var passes = get("shadow");$/;"	v
passes	heaps/h3d/scene/pbr/Renderer.hx	/^		var passes = get(name);$/;"	v
passes	heaps/h3d/scene/pbr/Renderer.hx	/^		var passes = get(passName);$/;"	v
path	heaps/h2d/domkit/BaseComponents.hx	/^			var path = parsePath(v);$/;"	v
path	heaps/h2d/domkit/BaseComponents.hx	/^		var path = null;$/;"	v
path	heaps/h2d/domkit/Style.hx	/^			var path = s.p.name;$/;"	v
path	heaps/h3d/impl/VarBinding.hx	/^	public var path : Array<String>;$/;"	v
path	heaps/h3d/mat/MaterialDatabase.hx	/^		var path = ["materials", setup.name, material.name];$/;"	v
path	heaps/h3d/prim/ModelCache.hx	/^			var path = model.entry.directory;$/;"	v
path	heaps/h3d/prim/ModelCache.hx	/^		var path = anim.entry.path;$/;"	v
path	heaps/h3d/prim/ModelCache.hx	/^		var path = res.entry.path;$/;"	v
path	heaps/h3d/scene/World.hx	/^			var path = path.split("\/");$/;"	v
path	heaps/h3d/scene/World.hx	/^		var path = mat.diffuseTexture;$/;"	v
path	heaps/hxd/File.hx	/^				var path = f.nativePath;$/;"	v
path	heaps/hxd/File.hx	/^			var path = f.nativePath;$/;"	v
path	heaps/hxd/File.hx	/^			var path = hl.UI.loadFile({$/;"	v
path	heaps/hxd/File.hx	/^			var path = hl.UI.saveFile({$/;"	v
path	heaps/hxd/File.hx	/^		var path = flash.Lib.current.loaderInfo.loaderURL.substr(7); \/\/ file:\/\/$/;"	v
path	heaps/hxd/File.hx	/^		var path = path.split("\/");$/;"	v
path	heaps/hxd/clipper/Clipper.hx	/^          var path = c.TranslatePath(pols[i], pattern[0]);$/;"	v
path	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var path = makeTexturePath(texture);$/;"	v
path	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var path = transp.get("FileName").props[0].toString();$/;"	v
path	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var path = tex.get("FileName").props[0].toString();$/;"	v
path	heaps/hxd/fs/FileEntry.hx	/^	public var path(get, never) : String;$/;"	v
path	heaps/hxd/fs/LocalFileSystem.hx	/^			var path = path;$/;"	v
path	heaps/hxd/fs/NotFound.hx	/^	public var path : String;$/;"	v
path	heaps/hxd/impl/BitsBuilder.hx	/^				var path = pack.copy();$/;"	v
path	heaps/hxd/res/Any.hx	/^	var path : String;$/;"	v
path	heaps/hxd/res/DynamicText.hx	/^					var path = path.join(".");$/;"	v
path	heaps/hxd/res/DynamicText.hx	/^				var path = key.split(".");$/;"	v
path	heaps/hxd/res/DynamicText.hx	/^		var path = (path + "." + ipath).split(".");$/;"	v
path	heaps/hxd/res/Embed.hx	/^			var path = Sys.getEnv("SystemRoot") + "\\\\Fonts\\\\" + file;$/;"	v
path	heaps/hxd/res/Embed.hx	/^		var path = Context.resolvePath(file);$/;"	v
path	heaps/hxd/res/Embed.hx	/^		var path = locateFont(file);$/;"	v
path	heaps/hxd/res/FileTree.hx	/^			var path = dir + "\/" + f;$/;"	v
path	heaps/hxd/res/FileTree.hx	/^			var path = sys.FileSystem.fullPath(dir);$/;"	v
path	heaps/hxsl/Cache.hx	/^				var path = p.perObjectGlobal.path.split(".");$/;"	v
path	heaps/hxsl/Cache.hx	/^				var path = v.perObjectGlobal.path.split(".");$/;"	v
path	heaps/hxsl/Cache.hx	/^				var path = vname.split(".");$/;"	v
path	heaps/hxsl/Cache.hx	/^			var path = parent == null ? name : parent.getName() + "." + name;$/;"	v
path	heaps/hxsl/Checker.hx	/^				var path = v.name.split(".");$/;"	v
path	heaps/hxsl/Checker.hx	/^			var path = [];$/;"	v
path	heaps/hxsl/Linker.hx	/^	public var path : String;$/;"	v
path	heaps/hxsl/MacroParser.hx	/^			var path = [];$/;"	v
path	heaps/hxsl/RuntimeShader.hx	/^	public var path : String;$/;"	v
pathCnt	heaps/hxd/clipper/Clipper.hx	/^        var pathCnt = path.length;$/;"	v
paths	heaps/hxd/clipper/Clipper.hx	/^        var paths = Minkowski(pattern, pol, true);$/;"	v
paths	heaps/hxd/clipper/Clipper.hx	/^        var paths = c.Minkowski(pattern, pol, false);$/;"	v
paths	heaps/hxd/res/DynamicText.hx	/^		var paths = FileTree.resolvePaths();$/;"	v
paths	heaps/hxd/res/FileTree.hx	/^		var paths = [];$/;"	v
paths	heaps/hxd/res/FileTree.hx	/^	var paths : Array<String>;$/;"	v
pause	heaps/h2d/Anim.hx	/^	public var pause : Bool = false;$/;"	v
pause	heaps/h2d/KeyFrames.hx	/^	public var pause : Bool = false;$/;"	v
pause	heaps/h3d/anim/Animation.hx	/^	public var pause : Bool;$/;"	v
pause	heaps/hxd/snd/Channel.hx	/^	public var pause(default, set) = false;$/;"	v
pb	heaps/h3d/prim/GeoSphere.hx	/^				var pb = p2.add(p3);$/;"	v
pbottom	heaps/h3d/col/Frustum.hx	/^	public var pbottom : Plane;$/;"	v
pbr	heaps/h3d/scene/pbr/DirLight.hx	/^	var pbr : h3d.shader.pbr.Light.DirLight;$/;"	v
pbr	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pbr = @:privateAccess dl.pbr;$/;"	v
pbr	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pbr = @:privateAccess pl.pbr;$/;"	v
pbr	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pbr = @:privateAccess sl.pbr;$/;"	v
pbr	heaps/h3d/scene/pbr/PointLight.hx	/^	var pbr : h3d.shader.pbr.Light.PointLight;$/;"	v
pbr	heaps/h3d/scene/pbr/SpotLight.hx	/^	var pbr : h3d.shader.pbr.Light.SpotLight;$/;"	v
pbr	heaps/h3d/shader/pbr/PropsImport.hx	/^			var pbr = pbrTex.get(uv);$/;"	v
pbrDirect	heaps/h3d/scene/pbr/Renderer.hx	/^	var pbrDirect = new h3d.shader.pbr.Lighting.Direct();$/;"	v
pbrIndirect	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var pbrIndirect = @:privateAccess pbrRenderer.pbrIndirect;$/;"	v
pbrIndirect	heaps/h3d/scene/pbr/Renderer.hx	/^	var pbrIndirect = new h3d.shader.pbr.Lighting.Indirect();$/;"	v
pbrLightColor	heaps/h3d/shader/pbr/Light.hx	/^		var pbrLightColor : Vec3;$/;"	v
pbrLightColor	heaps/h3d/shader/pbr/Lighting.hx	/^		var pbrLightColor : Vec3;$/;"	v
pbrLightDirection	heaps/h3d/shader/pbr/Light.hx	/^		var pbrLightDirection : Vec3;$/;"	v
pbrLightDirection	heaps/h3d/shader/pbr/Lighting.hx	/^		var pbrLightDirection : Vec3;$/;"	v
pbrLightPass	heaps/h3d/scene/RenderContext.hx	/^	public var pbrLightPass : h3d.mat.Pass;$/;"	v
pbrLightPass	heaps/h3d/scene/pbr/Renderer.hx	/^	var pbrLightPass : h3d.mat.Pass;$/;"	v
pbrLightSystem	heaps/h3d/scene/pbr/Renderer.hx	/^		var pbrLightSystem : h3d.scene.pbr.LightSystem = cast ctx.lightSystem;$/;"	v
pbrOcclusionFactor	heaps/h3d/shader/pbr/Light.hx	/^		var pbrOcclusionFactor : Float;$/;"	v
pbrOcclusionFactor	heaps/h3d/shader/pbr/Lighting.hx	/^		var pbrOcclusionFactor : Float;$/;"	v
pbrOut	heaps/h3d/scene/pbr/Renderer.hx	/^	var pbrOut = new h3d.pass.ScreenFx(new h3d.shader.ScreenShader());$/;"	v
pbrProps	heaps/h3d/scene/pbr/Renderer.hx	/^	var pbrProps = new h3d.shader.pbr.PropsImport();$/;"	v
pbrRenderer	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var pbrRenderer = Std.downcast(r, Renderer);$/;"	v
pbrSpecularColor	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var pbrSpecularColor : Vec3;$/;"	v
pbrSpecularColor	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var pbrSpecularColor : Vec3;$/;"	v
pbrSpecularColor	heaps/h3d/shader/pbr/PropsImport.hx	/^		var pbrSpecularColor : Vec3;$/;"	v
pbrStrength	heaps/h3d/shader/pbr/StrengthValues.hx	/^		@param var pbrStrength : Float;$/;"	v
pbrStrength	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var pbrStrength : Float;$/;"	v
pbrTex	heaps/h3d/shader/pbr/PropsImport.hx	/^		@param var pbrTex : Sampler2D;$/;"	v
pbrTexture	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var pbrTexture : Sampler2D;$/;"	v
pbrValues	heaps/samples/Pbr.hx	/^		var pbrValues = new h3d.shader.pbr.PropsValues(0.2,0.5);$/;"	v
pc	heaps/h3d/prim/GeoSphere.hx	/^				var pc = p3.add(p1);$/;"	v
pcb	heaps/hxd/res/NanoJpeg.hx	/^			var pcb = new FastBytes(comps[1].pixels);$/;"	v
pcfQuality	heaps/h3d/pass/Shadows.hx	/^	public var pcfQuality = 1;$/;"	v
pcfQuality	heaps/h3d/shader/DirShadow.hx	/^	public var pcfQuality(never, set) : Int;$/;"	v
pcfQuality	heaps/h3d/shader/PointShadow.hx	/^		@const var pcfQuality : Int;$/;"	v
pcfQuality	heaps/h3d/shader/SpotShadow.hx	/^		@const var pcfQuality : Int;$/;"	v
pcfScale	heaps/h3d/pass/Shadows.hx	/^	public var pcfScale = 1.0;$/;"	v
pcfScale	heaps/h3d/shader/DirShadow.hx	/^		@param var pcfScale : Float;$/;"	v
pcfScale	heaps/h3d/shader/PointShadow.hx	/^		@param var pcfScale : Float;$/;"	v
pcfScale	heaps/h3d/shader/SpotShadow.hx	/^		@param var pcfScale : Float;$/;"	v
pcr	heaps/hxd/res/NanoJpeg.hx	/^			var pcr = new FastBytes(comps[2].pixels);$/;"	v
pcur	heaps/h3d/shader/Blur.hx	/^				var pcur = getPosition(input.uv);$/;"	v
pdata	heaps/hxd/res/Image.hx	/^			var pdata = png.read();$/;"	v
pdir	heaps/h3d/shader/LineShader.hx	/^		var pdir : Vec4;$/;"	v
pdx	heaps/h2d/col/RoundRect.hx	/^			var pdx = x + tl2 * dx - p.x;$/;"	v
pdx	heaps/h2d/col/Segment.hx	/^			var pdx = x + tl2 * dx - p.x;$/;"	v
pdx	heaps/hxd/poly2tri/Utils.hx	/^		var pdx = pd.x;$/;"	v
pdy	heaps/h2d/col/RoundRect.hx	/^			var pdy = y + tl2 * dy - p.y;$/;"	v
pdy	heaps/h2d/col/Segment.hx	/^			var pdy = y + tl2 * dy - p.y;$/;"	v
pdy	heaps/hxd/poly2tri/Utils.hx	/^		var pdy = pd.y;$/;"	v
peek	heaps/hxd/fmt/fbx/Parser.hx	/^	function peek() {$/;"	f
pen	G.hx	/^	public static var pen:h2d.Graphics; \/\/ todo: maybe there's an auto-import plugin..$/;"	v
pending	heaps/h3d/mat/BigTexture.hx	/^	var pending : Array<{ t : hxd.res.Image, q : QuadTree, alpha : Bool, skip : Bool }>;$/;"	v
pending	heaps/h3d/scene/Trail.hx	/^	var pending = new TrailElement(); \/\/ tmp$/;"	v
pendingEvents	heaps/hxd/SceneEvents.hx	/^	var pendingEvents : Array<hxd.Event>;$/;"	v
perInst	heaps/h3d/impl/DirectXDriver.hx	/^					var perInst = 0;$/;"	v
perObjectGlobal	heaps/hxsl/RuntimeShader.hx	/^	public var perObjectGlobal : AllocGlobal;$/;"	v
perPixelLighting	heaps/h3d/scene/fwd/LightSystem.hx	/^	public var perPixelLighting : Bool = true;$/;"	v
perPixelLighting	heaps/h3d/shader/AmbientLight.hx	/^			@const var perPixelLighting : Bool;$/;"	v
performTriangulationOnce	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function performTriangulationOnce()$/;"	f
perlin	heaps/hxd/Perlin.hx	/^	public function perlin( seed : Int, x : Float, y : Float, octaves : Int, persist : Float = 0.5,/;"	f
perlin1D	heaps/hxd/Perlin.hx	/^	public function perlin1D( seed : Int, x : Float, octaves : Int, persist : Float = 0.5, lacunari/;"	f
permute	heaps/h3d/shader/NoiseLib.hx	/^function permute(x:Float) : Float {$/;"	f
permuts	heaps/h3d/anim/Skin.hx	/^		var permuts = new Array<Permut>();$/;"	v
pext	heaps/hxd/fmt/hmd/Library.hx	/^				var pext = poff.clone();$/;"	v
pf	heaps/hxd/res/Config.hx	/^		var pf =$/;"	v
pfar	heaps/h3d/col/Frustum.hx	/^	public var pfar : Plane;$/;"	v
pfirst	heaps/h2d/col/IPolygon.hx	/^		var pfirst = points[index];$/;"	v
pfirst	heaps/h2d/col/Polygon.hx	/^		var pfirst = points[start];$/;"	v
pft	heaps/hxd/clipper/Clipper.hx	/^		var pft, pft2;$/;"	v
pg	heaps/hxd/clipper/Clipper.hx	/^			var pg:IPolygon = new IPolygon();$/;"	v
pg	heaps/samples/GraphicsDraw.hx	/^	var pg : h2d.Graphics;$/;"	v
ph	heaps/h2d/Flow.hx	/^				var ph = p.paddingTop + p.paddingBottom;$/;"	v
phi	heaps/h2d/Particles.hx	/^					var phi = getAngleFromNormalized(g.emitAngle, srand());$/;"	v
phi	heaps/h3d/parts/Emitter.hx	/^			var phi = Math.acos(rand() * 2 - 1);$/;"	v
phi	heaps/h3d/parts/Emitter.hx	/^			var phi = eval(angle) * rand();$/;"	v
phi	heaps/h3d/parts/GpuParticles.hx	/^				var phi = emitAngle;$/;"	v
phi	heaps/h3d/parts/GpuParticles.hx	/^			var phi = emitAngle + Math.PI\/2;$/;"	v
phi	heaps/h3d/parts/GpuParticles.hx	/^			var phi = g.emitAngle * srand();$/;"	v
phi	heaps/h3d/parts/GpuParticles.hx	/^			var phi = g.emitAngle;$/;"	v
phi	heaps/h3d/scene/CameraController.hx	/^	public var phi(get, never) : Float;$/;"	v
phi	heaps/h3d/scene/pbr/Environment.hx	/^			var phi = 2 * PI * p.x;$/;"	v
phi	heaps/h3d/shader/pbr/Slides.hx	/^						var phi = (1 - uv.x)*3.1415*2;$/;"	v
pi	heaps/hxd/res/NanoJpeg.hx	/^		var pi = 0, po = 0;$/;"	v
pickConfig	heaps/hxd/Pad.hx	/^	public static function pickConfig( name : String ) : PadConfig {$/;"	f
pickX	heaps/h3d/pass/HardwarePick.hx	/^	public var pickX : Float;$/;"	v
pickY	heaps/h3d/pass/HardwarePick.hx	/^	public var pickY : Float;$/;"	v
pickedIndex	heaps/h3d/pass/HardwarePick.hx	/^	public var pickedIndex = -1;$/;"	v
pid	heaps/h3d/prim/HMDModel.hx	/^			var pid = Std.int((px + py + pz) * 10.01);$/;"	v
pid	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var pid = if( p == null ) 0 else p.getId();$/;"	v
pid	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var pid = parent.getId();$/;"	v
pid	heaps/hxd/fmt/hmd/Reader.hx	/^			var pid = i.readUInt16();$/;"	v
pidx	heaps/h3d/parts/GpuParticles.hx	/^		var pidx = 0;$/;"	v
pidx	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var pidx = prevDef.get("Indexes").getInts();$/;"	v
pin	heaps/hxd/res/NanoJpeg.hx	/^			var pin = (y >> yshift) * c.stride;$/;"	v
pindex	heaps/h2d/Graphics.hx	/^	var pindex : Int;$/;"	v
pindex	heaps/h3d/scene/Graphics.hx	/^		var pindex = start;$/;"	v
pitch	heaps/h3d/impl/DirectXDriver.hx	/^		var pitch = 0;$/;"	v
pitch	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var pitch : Float;$/;"	v
pitchFilter	heaps/samples/Sound.hx	/^	var pitchFilter : hxd.snd.effect.Pitch;$/;"	v
pitchShift	heaps/samples/Sound.hx	/^	var pitchShift:Bool = false;$/;"	v
pitchSlider	heaps/samples/Sound.hx	/^	var pitchSlider : h2d.Slider;$/;"	v
pix	heaps/h3d/impl/Stage3dDriver.hx	/^		var pix = bmp.getPixels(bmp.rect);$/;"	v
pix	heaps/h3d/mat/Texture.hx	/^		var pix = mem.driver.capturePixels(this, face, mipLevel, region);$/;"	v
pix	heaps/h3d/mat/TextureChannels.hx	/^				var pix = bmp.getPixels();$/;"	v
pix	heaps/h3d/pass/HardwarePick.hx	/^		var pix = texOut.capturePixels();$/;"	v
pix	heaps/hxd/Pixels.hx	/^		var pix = ((x + y * this.width) << 2) + this.offset;$/;"	v
pix	heaps/hxd/Pixels.hx	/^		var pix = ((x + y * this.width) << 4) + this.offset;$/;"	v
pix	heaps/hxd/fs/Convert.hx	/^		var pix = hxd.Pixels.alloc(w, h, ARGB);$/;"	v
pix	heaps/hxd/res/Image.hx	/^		var pix = new hxd.Pixels(width, height, dst, outFmt);$/;"	v
pix	heaps/hxd/res/NanoJpeg.hx	/^			var pix = new FastBytes(pixels);$/;"	v
pix	heaps/samples/GraphicsDraw.hx	/^		var pix = t.capturePixels();$/;"	v
pix	heaps/samples/Interactive.hx	/^		var pix = null;$/;"	v
pix	heaps/samples/Pbr.hx	/^			var pix = res.getPixels();$/;"	v
pix	heaps/samples/ShaderAdvanced.hx	/^				var pix = t.capturePixels();$/;"	v
pix2	heaps/h2d/Tile.hx	/^		var pix2 = pixels.makeSquare(true);$/;"	v
pix2	heaps/samples/ShaderAdvanced.hx	/^				var pix2 = t.capturePixels();$/;"	v
pixAlpha	heaps/hxd/res/BDFFont.hx	/^		var pixAlpha : Int = 0;$/;"	v
pixBits	heaps/hxd/res/BDFFont.hx	/^		var pixBits : Int = 0;$/;"	v
pixHeight	heaps/h2d/Graphics.hx	/^		var pixHeight = 1 \/ tex.height;$/;"	v
pixLeftInByte	heaps/hxd/res/BDFFont.hx	/^		var pixLeftInByte : Int = 0;$/;"	v
pixPerByte	heaps/hxd/res/BDFFont.hx	/^		var pixPerByte : Int = Math.floor( 8 \/ bitsPerPixel );$/;"	v
pixWidth	heaps/h2d/Graphics.hx	/^		var pixWidth = 1 \/ tex.width;$/;"	v
pixel	heaps/h2d/col/PixelsCollider.hx	/^		var pixel = pixels.getPixel(ix, iy);$/;"	v
pixel	heaps/h2d/filter/Shader.hx	/^				var pixel : Vec4 = texture.get(calculatedUV);$/;"	v
pixel	heaps/h3d/shader/Blur.hx	/^		@param var pixel : Vec2;$/;"	v
pixel	heaps/hxd/BitmapData.hx	/^	var pixel : js.html.ImageData;$/;"	v
pixelAlign	heaps/h3d/shader/Base2d.hx	/^		@const var pixelAlign : Bool;$/;"	v
pixelColor	heaps/h2d/Particles.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/AlphaChannel.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/AlphaMap.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/AlphaMult.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/AmbientLight.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/AnimatedTexture.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/Base2d.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/BaseMesh.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/ColorAdd.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/ColorMatrix.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/ColorMult.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/CubeMap.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/KillAlpha.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/ScreenShader.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/Shadow.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/Texture.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/Texture2.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/VertexColor.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/VertexColorAlpha.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/AlphaMultiply.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/CubeLod.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/GammaCorrect.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/StrengthValues.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/samples/FxView.hx	/^		var pixelColor : Vec4;$/;"	v
pixelColor	heaps/samples/ShaderAdvanced.hx	/^		var pixelColor : Vec4;$/;"	v
pixelFormat	heaps/hxd/res/Image.hx	/^	public var pixelFormat(default,null) : PixelFormat;$/;"	v
pixelShader	heaps/h3d/impl/DirectXDriver.hx	/^	var pixelShader : PipelineState;$/;"	v
pixelSize	heaps/h3d/shader/BaseMesh.hx	/^			var pixelSize : Vec2;$/;"	v
pixelSize	heaps/h3d/shader/LineShader.hx	/^			var pixelSize : Vec2;$/;"	v
pixelSize	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var pixelSize : Vec2;$/;"	v
pixelSnap	heaps/h2d/ObjectFollower.hx	/^	public var pixelSnap = true;$/;"	v
pixelTransformedPosition	heaps/h3d/shader/BaseMesh.hx	/^		var pixelTransformedPosition : Vec3;$/;"	v
pixelTransformedPosition	heaps/h3d/shader/CubeMap.hx	/^		var pixelTransformedPosition : Vec3;$/;"	v
pixelTransformedPosition	heaps/h3d/shader/PointLight.hx	/^		var pixelTransformedPosition : Vec3;$/;"	v
pixelTransformedPosition	heaps/h3d/shader/Shadow.hx	/^		var pixelTransformedPosition : Vec3;$/;"	v
pixelTransformedPosition	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var pixelTransformedPosition : Vec3;$/;"	v
pixels	heaps/h2d/Video.hx	/^	var pixels : hxd.Pixels;$/;"	v
pixels	heaps/h2d/col/PixelsCollider.hx	/^	public var pixels : hxd.Pixels;$/;"	v
pixels	heaps/h3d/impl/DirectXDriver.hx	/^		var pixels : hxd.Pixels;$/;"	v
pixels	heaps/h3d/impl/DirectXDriver.hx	/^		var pixels = bmp.getPixels();$/;"	v
pixels	heaps/h3d/impl/GlDriver.hx	/^			var pixels = bmp.getPixels();$/;"	v
pixels	heaps/h3d/impl/GlDriver.hx	/^		var pixels : hxd.Pixels;$/;"	v
pixels	heaps/h3d/impl/GlDriver.hx	/^		var pixels = bmp.getPixels();$/;"	v
pixels	heaps/h3d/mat/BigTexture.hx	/^					var pixels = bmp.getPixels();$/;"	v
pixels	heaps/h3d/mat/Texture.hx	/^		var pixels = hxd.Pixels.alloc(width, height, ARGB);$/;"	v
pixels	heaps/h3d/mat/TextureChannels.hx	/^	var pixels : hxd.Pixels;$/;"	v
pixels	heaps/h3d/pass/DirShadowMap.hx	/^		var pixels = new hxd.Pixels(size, size, haxe.zip.Uncompress.run(buffer.read(len)), format);$/;"	v
pixels	heaps/h3d/pass/PointShadowMap.hx	/^					var pixels = pixelsForRealloc[i];$/;"	v
pixels	heaps/h3d/pass/PointShadowMap.hx	/^			var pixels = new hxd.Pixels(size, size, haxe.zip.Uncompress.run(buffer.read(len)), format);$/;"	v
pixels	heaps/h3d/pass/SpotShadowMap.hx	/^		var pixels = new hxd.Pixels(size, size, haxe.zip.Uncompress.run(buffer.read(len)), format);$/;"	v
pixels	heaps/hxd/BitmapData.hx	/^		var pixels = data.buffer;$/;"	v
pixels	heaps/hxd/BitmapData.hx	/^		var pixels = getPixels();$/;"	v
pixels	heaps/hxd/BitmapData.hx	/^	public var pixels : haxe.ds.Vector<Int>;$/;"	v
pixels	heaps/hxd/BitmapData.hx	/^	public var pixels : hl.BytesAccess<Int>;$/;"	v
pixels	heaps/hxd/System.hl.hx	/^					var pixels = frame.getPixels();$/;"	v
pixels	heaps/hxd/res/FontBuilder.hx	/^		var pixels = hxd.BitmapData.fromNative(bmp).getPixels();$/;"	v
pixels	heaps/hxd/res/Gradients.hx	/^			var pixels = hxd.Pixels.alloc(twid, thei, ARGB);$/;"	v
pixels	heaps/hxd/res/Image.hx	/^							var pixels = getPixels(tex.format,null,layer * inf.mipLevels + mip);$/;"	v
pixels	heaps/hxd/res/Image.hx	/^		var pixels : hxd.Pixels;$/;"	v
pixels	heaps/hxd/res/Image.hx	/^		var pixels = getPixels();$/;"	v
pixels	heaps/hxd/res/NanoJpeg.hx	/^		var pixels = alloc(width * height * 4);$/;"	v
pixels	heaps/hxd/res/NanoJpeg.hx	/^		var pixels = njConvert();$/;"	v
pixels	heaps/hxd/res/NanoJpeg.hx	/^	public var pixels : haxe.io.Bytes;$/;"	v
pixels	heaps/hxd/res/NanoJpeg.hx	/^	var pixels : haxe.io.Bytes;$/;"	v
pixelsForRealloc	heaps/h3d/pass/PointShadowMap.hx	/^	var pixelsForRealloc : Array<hxd.Pixels> = null;$/;"	v
pixelsForRealloc	heaps/h3d/pass/SpotShadowMap.hx	/^	var pixelsForRealloc : hxd.Pixels = null;$/;"	v
pj	heaps/hxd/res/BDFFont.hx	/^			var pj : String = p.join(" ").trim();$/;"	v
pl	heaps/h3d/anim/Skin.hx	/^			var pl = [];$/;"	v
pl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pl = Std.downcast(l, PointLight);$/;"	v
pl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pl = pointLightsShadow[li];$/;"	v
pl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var pl = pointLights[li];$/;"	v
pl	heaps/h3d/scene/pbr/PointLight.hx	/^		var pl = o == null ? new PointLight(null) : cast o;$/;"	v
pl	heaps/h3d/scene/pbr/Renderer.hx	/^					var pl = Std.downcast(l, Light);$/;"	v
pl	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var pl = p.split("=");$/;"	v
pl	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var pl = [];$/;"	v
pl	heaps/hxd/poly2tri/VisiblePolygon.hx	/^		var pl:Array<Point>;$/;"	v
plast	heaps/h2d/col/IPolygon.hx	/^		var plast = points[len - 1];$/;"	v
plast	heaps/h2d/col/Polygon.hx	/^		var plast = points[end];$/;"	v
platform	heaps/hxd/System.flash.hx	/^	public static var platform(get, never) : Platform;$/;"	v
platform	heaps/hxd/System.hl.hx	/^	public static var platform(get, null) : Platform;$/;"	v
platform	heaps/hxd/System.hx	/^	public static var platform(get, never) : Platform;$/;"	v
platform	heaps/hxd/System.js.hx	/^	public static var platform(get, never) : Platform;$/;"	v
platform	heaps/hxd/res/Config.hx	/^	public static var platform : Platform = init();$/;"	v
platform	heaps/hxsl/CacheFileBuilder.hx	/^	public var platform : CacheFilePlatform;$/;"	v
platforms	heaps/hxsl/CacheFileBuilder.hx	/^	public var platforms : Array<CacheFilePlatform> = [];$/;"	v
play	heaps/h2d/Anim.hx	/^	public function play( frames : Array<Tile>, atFrame = 0. ) {$/;"	f
play	heaps/h2d/KeyFrames.hx	/^	public function play( speed : Float = 1., startFrame = 0 ) {$/;"	f
play	heaps/hxd/res/Sound.hx	/^	public function play( ?loop = false, ?volume = 1., ?channelGroup, ?soundGroup ) {$/;"	f
play	heaps/hxd/snd/Manager.hx	/^	public function play(sound : hxd.res.Sound, ?channelGroup : ChannelGroup, ?soundGroup : SoundGr/;"	f
play	heaps/hxd/snd/openal/Emulator.hx	/^	public function play() {$/;"	f
play	heaps/samples/FxView.hx	/^		function play() {$/;"	f
playAnimation	heaps/h3d/scene/Object.hx	/^	public function playAnimation( a : h3d.anim.Animation ) {$/;"	f
playSource	heaps/hxd/snd/Driver.hx	/^	public function playSource           (source : SourceHandle) : Void;$/;"	f
playSource	heaps/hxd/snd/openal/Driver.hx	/^	public function playSource(source : SourceHandle) : Void {$/;"	f
playSource	heaps/hxd/snd/webaudio/Driver.hx	/^	public function playSource (source : SourceHandle) : Void {$/;"	f
playTime	heaps/h2d/Video.hx	/^	var playTime : Float;$/;"	v
playbackPool	heaps/hxd/snd/webaudio/Driver.hx	/^	var playbackPool : Array<BufferPlayback>;$/;"	v
playedSamples	heaps/hxd/snd/Manager.hx	/^			var playedSamples = driver.getPlayedSampleCount(s.handle);$/;"	v
playedTime	heaps/hxd/snd/openal/Emulator.hx	/^	public var playedTime = 0.;$/;"	v
player	Main.hx	/^	var player:Player;$/;"	v
player2	heaps/h2d/Camera.hx	/^		var player2 = new h2d.Camera(s2d);$/;"	v
playing	heaps/h2d/Video.hx	/^	public var playing(default, null) : Bool;$/;"	v
playing	heaps/hxd/snd/Manager.hx	/^	public var playing = false;$/;"	v
playing	heaps/hxd/snd/openal/AudioTypes.hx	/^	public var playing        : Bool;$/;"	v
playing	heaps/hxd/snd/openal/Emulator.hx	/^	public var playing(get, never) : Bool;$/;"	v
playing	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var playing        : Bool;$/;"	v
pleft	heaps/h3d/col/Frustum.hx	/^	public var pleft : Plane;$/;"	v
plight	heaps/h3d/scene/pbr/LightSystem.hx	/^		var plight = @:privateAccess ctx.lights;$/;"	v
plight	heaps/h3d/scene/pbr/Renderer.hx	/^			var plight = hxd.impl.Api.downcast(light, h3d.scene.pbr.Light);$/;"	v
pmap	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var pmap = [];$/;"	v
pn	heaps/hxd/clipper/Clipper.hx	/^			var pn:PolyNode = new PolyNode();$/;"	v
pname	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var pname = StringTools.trim(pl.shift());$/;"	v
pnear	heaps/h3d/col/Frustum.hx	/^	public var pnear : Plane;$/;"	v
pneeded	heaps/h3d/parts/GpuParticles.hx	/^		var pneeded = Math.ceil(hxd.Math.clamp(g.amount * amount) * g.nparts);$/;"	v
pnext	heaps/h2d/Graphics.hx	/^				var pnext = i == last ? start : pindex + 2;$/;"	v
pnext	heaps/h2d/Graphics.hx	/^				var pnext = i == last ? start : pindex + 3;$/;"	v
pnext	heaps/h3d/scene/Graphics.hx	/^				var pnext = i == last ? start - pindex : 2;$/;"	v
png	heaps/hxd/BitmapData.hx	/^		var png = pixels.toPNG();$/;"	v
png	heaps/hxd/Pixels.hx	/^		var png;$/;"	v
png	heaps/hxd/res/Image.hx	/^			var png = new format.png.Reader(new haxe.io.BytesInput(bytes));$/;"	v
pobjs	heaps/h3d/scene/Scene.hx	/^			var pobjs = ctx.cachedPassObjects[++passIndex];$/;"	v
poff	heaps/hxd/fmt/hmd/Library.hx	/^				var poff = j.parent.offsets;$/;"	v
point	heaps/h2d/col/Voronoi.hx	/^		var point = arc.point,$/;"	v
point	heaps/h2d/col/Voronoi.hx	/^		var point = arc.point;$/;"	v
point	heaps/h2d/col/Voronoi.hx	/^		var point = pointEvents.pop(),$/;"	v
point	heaps/h2d/col/Voronoi.hx	/^	public var point : Point;$/;"	v
point	heaps/hxd/poly2tri/Node.hx	/^	public var point:Point;$/;"	v
point	heaps/hxd/poly2tri/Sweep.hx	/^			var point = this.context.points[i];$/;"	v
pointCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function pointCCW(p:Point):Point$/;"	f
pointCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function pointCW (p:Point):Point$/;"	f
pointCell	heaps/h2d/col/Voronoi.hx	/^	var pointCell : Map<Point,Cell>;$/;"	v
pointEvent	heaps/hxd/poly2tri/Sweep.hx	/^	public function pointEvent(point:Point) :Node$/;"	f
pointEvents	heaps/h2d/col/Voronoi.hx	/^		var pointEvents = points.slice(0);$/;"	v
pointInTriangle	heaps/hxd/earcut/Earcut.hx	/^	inline function pointInTriangle(ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float, px:/;"	f
pointIntersection	heaps/h2d/col/Voronoi.hx	/^	public function pointIntersection(x:Float, y:Float) {$/;"	f
pointLight	heaps/h3d/pass/PointShadowMap.hx	/^		var pointLight = cast(light, h3d.scene.pbr.PointLight);$/;"	v
pointLightColors	heaps/samples/Helpers.hx	/^		var pointLightColors =  [0xEB304D,0x7FC309,0x288DF9];$/;"	v
pointLightCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var pointLightCount = 0;$/;"	v
pointLightCount	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var pointLightCount : Int;$/;"	v
pointLightIntensity	heaps/h3d/shader/pbr/Light.hx	/^		function pointLightIntensity( delta : Vec3, size : Float, invRange4 : Float ) : Float {$/;"	f
pointLightStride	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var pointLightStride : Int;$/;"	v
pointLights	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var pointLights : Array<PointLight> = [];$/;"	v
pointLights	heaps/samples/Helpers.hx	/^	var pointLights = new Array<PointLight>();$/;"	v
pointLightsShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var pointLightsShadow : Array<PointLight> = [];$/;"	v
pointShadow	heaps/h3d/shader/PointShadow.hx	/^		var pointShadow : Float;$/;"	v
pointShadowCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var pointShadowCount = 0;$/;"	v
pointShadowMaps	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var pointShadowMaps : Array<SamplerCube, POINT_SHADOW_COUNT>;$/;"	v
pointSize	heaps/h3d/shader/pbr/Light.hx	/^		@param var pointSize : Float;$/;"	v
pointerSize	heaps/hxd/fmt/blend/Data.hx	/^	public var pointerSize:Int;$/;"	v
points	heaps/h2d/col/IPolygon.hx	/^	public var points(get, never) : Array<IPoint>;$/;"	v
points	heaps/h2d/col/Polygon.hx	/^		var points = [];$/;"	v
points	heaps/h2d/col/Polygon.hx	/^	public var points(get, never) : Array<Point>;$/;"	v
points	heaps/h2d/col/Voronoi.hx	/^	public var points : Array<Point>;$/;"	v
points	heaps/h3d/col/Polygon.hx	/^		var points : Array<Point> = [ p0, d1.add(p0), d2.add(p0) ];$/;"	v
points	heaps/h3d/col/Polygon.hx	/^		var points : Array<Point> = [];$/;"	v
points	heaps/h3d/col/PolygonBuffer.hx	/^		var points = new Array<Point>();$/;"	v
points	heaps/h3d/prim/Polygon.hx	/^	public var points : Array<Point>;$/;"	v
points	heaps/h3d/prim/Quads.hx	/^		var points = pts;$/;"	v
points	heaps/h3d/scene/Trail.hx	/^	var points : Array<TrailElement> = [];$/;"	v
points	heaps/h3d/scene/pbr/SpotLight.hx	/^		var points = new Array<h3d.col.Point>();$/;"	v
points	heaps/hxd/fmt/fbx/Geometry.hx	/^		var points = [];$/;"	v
points	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var points : Array<h3d.col.Point> = [];$/;"	v
points	heaps/hxd/poly2tri/SweepContext.hx	/^	public var points:Array<Point>;$/;"	v
points	heaps/hxd/poly2tri/Triangle.hx	/^	public var points:Array<Point>;$/;"	v
poissonDisk	heaps/h3d/shader/DirShadow.hx	/^		@param var poissonDisk : Array<Vec4,PCF_SAMPLES>;$/;"	v
poissonDiskHigh	heaps/h3d/shader/SpotShadow.hx	/^		@param var poissonDiskHigh : Array<Vec4,12>;$/;"	v
poissonDiskLow	heaps/h3d/shader/SpotShadow.hx	/^		@param var poissonDiskLow : Array<Vec4,4>;$/;"	v
poissonDiskVeryHigh	heaps/h3d/shader/SpotShadow.hx	/^		@param var poissonDiskVeryHigh : Array<Vec4,64>;$/;"	v
pol	heaps/h3d/prim/HMDModel.hx	/^		var pol = new Polygon(pts, idx);$/;"	v
polArea	heaps/hxd/clipper/Clipper.hx	/^	public static function polArea(poly:IPolygon) {$/;"	f
poly	heaps/h3d/prim/HMDModel.hx	/^		var poly = new h3d.col.PolygonBuffer();$/;"	v
poly	heaps/h3d/prim/Polygon.hx	/^		var poly = new h3d.col.Polygon();$/;"	v
poly	heaps/hxd/fmt/fbx/Geometry.hx	/^		var poly = getPolygons();$/;"	v
poly	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var poly = new h3d.prim.Polygon(points, realIdx);$/;"	v
poly	heaps/samples/Interactive2D.hx	/^		var poly : Polygon = new Polygon([$/;"	v
poly0x	heaps/hxd/clipper/Clipper.hx	/^        var poly0x = op.pt.x;$/;"	v
poly0y	heaps/hxd/clipper/Clipper.hx	/^		var poly0y = op.pt.y;$/;"	v
poly1x	heaps/hxd/clipper/Clipper.hx	/^          var poly1x = op.pt.x;$/;"	v
poly1y	heaps/hxd/clipper/Clipper.hx	/^		  var poly1y = op.pt.y;$/;"	v
polyCnt	heaps/hxd/clipper/Clipper.hx	/^        var polyCnt = pattern.length;$/;"	v
polyCount	heaps/hxd/fmt/fbx/Geometry.hx	/^			var polyCount = 0;$/;"	v
polyCount	heaps/hxd/fmt/fbx/Geometry.hx	/^		var polyCount = 0;$/;"	v
polyNode	heaps/hxd/clipper/Clipper.hx	/^	public var polyNode : PolyNode;$/;"	v
polyType	heaps/hxd/clipper/Clipper.hx	/^	public var polyType : PolyType;$/;"	v
polygon	heaps/hxd/clipper/Clipper.hx	/^	var polygon : IPolygon;$/;"	v
polygonShape	heaps/samples/Interactive2D.hx	/^	var polygonShape : PolygonCollider;$/;"	v
polygons	heaps/h2d/col/IPolygons.hx	/^	public var polygons(get, never) : Array<IPolygon>;$/;"	v
polygons	heaps/h2d/col/PolygonCollider.hx	/^	public var polygons : Polygons;$/;"	v
polygons	heaps/h2d/col/Polygons.hx	/^	public var polygons(get, never) : Array<Polygon>;$/;"	v
pool	heaps/h3d/parts/Particles.hx	/^	var pool : Particle;$/;"	v
pool	heaps/hxd/snd/webaudio/Context.hx	/^		var pool = new BufferPool(channels, sampleCount, rate);$/;"	v
pool	heaps/hxd/snd/webaudio/Context.hx	/^	public var pool : Array<AudioBuffer>;$/;"	v
pool	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	var pool : Array<BiquadFilterNode>;$/;"	v
pool	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	var pool : Array<PannerNode>;$/;"	v
popCamera	heaps/h2d/RenderContext.hx	/^	public function popCamera() {$/;"	f
popFilter	heaps/h2d/RenderContext.hx	/^	public function popFilter() {$/;"	f
popRenderZone	heaps/h2d/RenderContext.hx	/^	public function popRenderZone() {$/;"	f
popTarget	heaps/h2d/RenderContext.hx	/^	public function popTarget() {$/;"	f
popTarget	heaps/h3d/Engine.hx	/^	public function popTarget() {$/;"	f
populate	heaps/h2d/ZGroup.hx	/^	function populate(spr : Object) {$/;"	f
portion	heaps/h3d/prim/Sphere.hx	/^	var portion : Float;$/;"	v
pos	heaps/h2d/CdbLevel.hx	/^				var pos = 0;$/;"	v
pos	heaps/h2d/CdbLevel.hx	/^		var pos = 0;$/;"	v
pos	heaps/h2d/Drawable.hx	/^		var pos = ctx.bufPos;$/;"	v
pos	heaps/h2d/HtmlText.hx	/^	var pos : Int;$/;"	v
pos	heaps/h2d/Layers.hx	/^				var pos = 0;$/;"	v
pos	heaps/h2d/Layers.hx	/^		var pos = start;$/;"	v
pos	heaps/h2d/Object.hx	/^		var pos = ctx.bufPos;$/;"	v
pos	heaps/h2d/ObjectFollower.hx	/^		var pos = new h3d.Vector(absPos._41 + offsetX, absPos._42 + offsetY, absPos._43 + offsetZ);$/;"	v
pos	heaps/h2d/SpriteBatch.hx	/^		var pos = 0;$/;"	v
pos	heaps/h2d/TextInput.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/Camera.hx	/^	public var pos : Vector;$/;"	v
pos	heaps/h3d/Engine.hx	/^			var pos = Std.int(b.position \/ vertPerTri);$/;"	v
pos	heaps/h3d/anim/Skin.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/impl/GlDriver.hx	/^				var pos = a.offset;$/;"	v
pos	heaps/h3d/impl/GlDriver.hx	/^				var pos;$/;"	v
pos	heaps/h3d/impl/LogDriver.hx	/^					var pos = p.pos;$/;"	v
pos	heaps/h3d/impl/ManagedBuffer.hx	/^		var pos = free.pos;$/;"	v
pos	heaps/h3d/impl/ManagedBuffer.hx	/^	var pos : Int;$/;"	v
pos	heaps/h3d/impl/Stage3dDriver.hx	/^			var pos = 0, offset = 0;$/;"	v
pos	heaps/h3d/impl/Stage3dDriver.hx	/^		var pos = 0, offset = 0;$/;"	v
pos	heaps/h3d/impl/Stage3dDriver.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/parts/Emitter.hx	/^			var pos = new h3d.Vector(p.x, p.y, p.z);$/;"	v
pos	heaps/h3d/parts/Particles.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/prim/BigPrimitive.hx	/^		var pos = bufPos;$/;"	v
pos	heaps/h3d/prim/HMDModel.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/prim/HMDModel.hx	/^		var pos = lib.getBuffers(data, [new hxd.fmt.hmd.Data.GeometryFormat("position", DVec3)]);$/;"	v
pos	heaps/h3d/prim/ModelCache.hx	/^				var pos = m.position.toMatrix();$/;"	v
pos	heaps/h3d/prim/Polygon.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/prim/Quads.hx	/^		var pos = 0;$/;"	v
pos	heaps/h3d/scene/CameraController.hx	/^		var pos = scene.camera.pos.sub(scene.camera.target);$/;"	v
pos	heaps/h3d/scene/MeshBatch.hx	/^			var pos = startPos + p.pos;$/;"	v
pos	heaps/h3d/scene/World.hx	/^			var pos = m.position.toMatrix();$/;"	v
pos	heaps/h3d/shader/ParticleShader.hx	/^			var pos = input.size * rpos;$/;"	v
pos	heaps/hxd/FloatBuffer.hx	/^	var pos : Int;$/;"	v
pos	heaps/hxd/IndexBuffer.hx	/^	var pos : Int;$/;"	v
pos	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var pos = bytes.position;$/;"	v
pos	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var pos = reg.matchedPos();$/;"	v
pos	heaps/hxd/fmt/blend/Data.hx	/^	public var pos:Int; \/\/ Byte pos of data start in blob$/;"	v
pos	heaps/hxd/fmt/blend/Data.hx	/^	public var pos:Int;$/;"	v
pos	heaps/hxd/fmt/fbx/Geometry.hx	/^		var pos = 0;$/;"	v
pos	heaps/hxd/fmt/fbx/Parser.hx	/^	var pos : Int;$/;"	v
pos	heaps/hxd/fmt/hdr/Reader.hx	/^				var pos = y * width * 16;$/;"	v
pos	heaps/hxd/fmt/hmd/Library.hx	/^			var pos = m.position.toMatrix();$/;"	v
pos	heaps/hxd/fmt/hmd/Library.hx	/^			var pos = o.flags.has(HasPosition), rot = o.flags.has(HasRotation), scale = o.flags.has(HasSc/;"	v
pos	heaps/hxd/fmt/hmd/Library.hx	/^		var pos = 0;$/;"	v
pos	heaps/hxd/fmt/pak/Build.hx	/^			var pos = f.indexOf("=");$/;"	v
pos	heaps/hxd/fmt/pak/Build.hx	/^		var pos = 0.;$/;"	v
pos	heaps/hxd/fmt/spine/Library.hx	/^					var pos = 0;$/;"	v
pos	heaps/hxd/fmt/spine/Library.hx	/^			var pos = 0, uvPos = 0;$/;"	v
pos	heaps/hxd/fmt/tiff/Writer.hx	/^		var pos = 8;$/;"	v
pos	heaps/hxd/impl/AllocPos.hx	/^				var pos = file+":"+line;$/;"	v
pos	heaps/hxd/impl/AsyncLoader.hx	/^				var pos = 128;$/;"	v
pos	heaps/hxd/impl/BitsBuilder.hx	/^		var pos = Context.currentPos();$/;"	v
pos	heaps/hxd/net/Socket.hx	/^	var pos : Int = 0;$/;"	v
pos	heaps/hxd/net/Socket.hx	/^	var pos : Int;$/;"	v
pos	heaps/hxd/res/DynamicText.hx	/^		var pos = Context.currentPos();$/;"	v
pos	heaps/hxd/res/Embed.hx	/^			var pos = Context.currentPos();$/;"	v
pos	heaps/hxd/res/FileTree.hx	/^		var pos = Context.currentPos();$/;"	v
pos	heaps/hxd/res/FileTree.hx	/^	var pos : Position;$/;"	v
pos	heaps/hxd/res/Image.hx	/^					var pos = 128;$/;"	v
pos	heaps/hxd/res/Image.hx	/^			var pos = 128;$/;"	v
pos	heaps/hxd/res/NanoJpeg.hx	/^	var pos : Int;$/;"	v
pos	heaps/hxd/snd/openal/Emulator.hx	/^		var pos = 0;$/;"	v
pos	heaps/hxsl/AgalOptim.hx	/^					var pos = i;$/;"	v
pos	heaps/hxsl/AgalOut.hx	/^			var pos = 0;$/;"	v
pos	heaps/hxsl/Ast.hx	/^	public var pos : Position;$/;"	v
pos	heaps/hxsl/Cache.hx	/^		var pos = null;$/;"	v
pos	heaps/hxsl/CacheFileBuilder.hx	/^			var pos = f.indexOf("=");$/;"	v
pos	heaps/hxsl/Checker.hx	/^			var pos = f.p, f = f.f;$/;"	v
pos	heaps/hxsl/Flatten.hx	/^		var pos = 0;$/;"	v
pos	heaps/hxsl/Flatten.hx	/^	public var pos : Int;$/;"	v
pos	heaps/hxsl/Macros.hx	/^					var pos = expr.pos;$/;"	v
pos	heaps/hxsl/Macros.hx	/^				var pos = prev == null ? 0 : prev.pos + prev.bits;$/;"	v
pos	heaps/hxsl/Macros.hx	/^			var pos = Context.currentPos();$/;"	v
pos	heaps/hxsl/RuntimeShader.hx	/^	public var pos : Int;$/;"	v
pos	heaps/hxsl/SharedShader.hx	/^				var pos = consts == null ? 0 : consts.pos + consts.bits;$/;"	v
pos	heaps/hxsl/SharedShader.hx	/^	public var pos : Int;$/;"	v
pos	heaps/samples/Cursor.hx	/^		var pos = 3;$/;"	v
posChanged	heaps/h2d/Camera.hx	/^	var posChanged : Bool;$/;"	v
posChanged	heaps/h2d/Object.hx	/^	var posChanged : Bool;$/;"	v
posChanged	heaps/h3d/scene/Object.hx	/^	var posChanged(get,set) : Bool;$/;"	v
posLightSpace	heaps/h3d/shader/pbr/Light.hx	/^				var posLightSpace = vec4(transformedPosition, 1.0) * lightProj;$/;"	v
posToLight	heaps/h3d/shader/PointShadow.hx	/^					var posToLight = transformedPosition.xyz - lightPos;$/;"	v
posToLight	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var posToLight = transformedPosition.xyz - lightPos;$/;"	v
posUV	heaps/h3d/shader/pbr/Light.hx	/^				var posUV = screenToUv(posLightSpace.xy\/posLightSpace.w);$/;"	v
position	heaps/h3d/Buffer.hx	/^	public var position(default,null) : Int;$/;"	v
position	heaps/h3d/impl/TextureCache.hx	/^	var position : Int = 0;$/;"	v
position	heaps/h3d/shader/Base2d.hx	/^			var position : Vec2;$/;"	v
position	heaps/h3d/shader/Base2d.hx	/^			var position : Vec4;$/;"	v
position	heaps/h3d/shader/BaseMesh.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/BaseMesh.hx	/^			var position : Vec4;$/;"	v
position	heaps/h3d/shader/CubeMap.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/DirLight.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/LineShader.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/LineShader.hx	/^			var position : Vec4;$/;"	v
position	heaps/h3d/shader/NormalMap.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/ParticleShader.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/PointLight.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/Skin.hx	/^			var position : Vec3;$/;"	v
position	heaps/h3d/shader/SkinTangent.hx	/^			var position : Vec3;$/;"	v
position	heaps/hxd/fmt/hmd/Data.hx	/^	public var position : Position;$/;"	v
position	heaps/hxd/impl/AllocPos.hx	/^	public var position : String;$/;"	v
position	heaps/hxd/snd/Channel.hx	/^	public var position(default, set) = 0.0;$/;"	v
position	heaps/hxd/snd/Listener.hx	/^	public var position : h3d.Vector;$/;"	v
position	heaps/hxd/snd/OggData.hx	/^	var position : Int;$/;"	v
position	heaps/hxd/snd/effect/Spatialization.hx	/^	public var position  : h3d.Vector;$/;"	v
position	heaps/hxsl/CacheFile.hx	/^			var position : Vec4;$/;"	v
positionChanged	heaps/hxd/snd/Channel.hx	/^	var positionChanged = false;$/;"	v
positionStr	heaps/hxd/fmt/hmd/Dump.hx	/^	function positionStr( p : Position ) {$/;"	f
positions	heaps/h3d/prim/Polygon.hx	/^		var positions = [0];$/;"	v
pout	heaps/h3d/col/Polygon.hx	/^		var pout = new Polygon();$/;"	v
pout	heaps/hxd/res/NanoJpeg.hx	/^		var pout = 0;$/;"	v
pow	heaps/hxd/Math.hx	/^	public static inline function pow( v : Float, p : Float ) {$/;"	f
power	heaps/h2d/filter/Ambient.hx	/^	public var power(get, set) : Float;$/;"	v
power	heaps/h2d/filter/Bloom.hx	/^	public var power(get, set) : Float;$/;"	v
power	heaps/h3d/pass/Shadows.hx	/^	public var power = 30.0;$/;"	v
power	heaps/h3d/scene/pbr/Environment.hx	/^	public var power : Float = 1.;$/;"	v
power	heaps/h3d/scene/pbr/Light.hx	/^	public var power : Float = 1.;$/;"	v
power	heaps/h3d/scene/pbr/PointLight.hx	/^		var power = power * 10; \/\/ base scale$/;"	v
power	heaps/h3d/scene/pbr/SpotLight.hx	/^		var power = power;$/;"	v
power	heaps/h3d/shader/Bloom.hx	/^		@param var power : Float;$/;"	v
pp	heaps/h3d/prim/ModelCache.hx	/^					var pp = parent.position.toMatrix();$/;"	v
pp	heaps/hxd/clipper/Clipper.hx	/^		var pp:OutPt = outRec.pts;$/;"	v
pp1	heaps/hxd/clipper/Clipper.hx	/^		var pp1;$/;"	v
pp2	heaps/hxd/clipper/Clipper.hx	/^		var pp2 = pp;$/;"	v
pp2	heaps/hxd/clipper/Clipper.hx	/^		var pp2;$/;"	v
ppos	heaps/h3d/shader/VolumeDecal.hx	/^			var ppos = ruv * camera.inverseViewProj;$/;"	v
ppos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var ppos = ruv * camera.inverseViewProj;$/;"	v
pr	heaps/h3d/anim/Skin.hx	/^			var pr = new Permut();$/;"	v
pr	heaps/hxd/fs/LocalFileSystem.hx	/^		var pr = Sys.programPath();$/;"	v
pre	heaps/h2d/HtmlText.hx	/^						var pre = text.substring(startI, i);$/;"	v
preLaunchTask	heaps/samples/templates/.vscode/launch.json	/^			"preLaunchTask": "HeapsHL"$/;"	s	object:configurations.0
preLaunchTask	heaps/samples/templates/.vscode/launch.json	/^			"preLaunchTask": "HeapsJS"$/;"	s	object:configurations.1
preLaunchTask	heaps/samples/templates/.vscode/launch.json	/^			"preLaunchTask": "HeapsSWF"$/;"	s	object:configurations.2
preRot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var preRot : Null<Point>;$/;"	v
preRotProp	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var preRotProp : FbxNode = {name : "P", props : [PString("PreRotation"), PString("Vector3D/;"	v
prec	heaps/h3d/col/HeightMap.hx	/^		var prec = precision;$/;"	v
prec	heaps/hxd/res/Image.hx	/^					var prec = f.readByte();$/;"	v
preciseShape	heaps/h3d/scene/Interactive.hx	/^	public var preciseShape : Null<h3d.col.Collider>;$/;"	v
precision	heaps/h3d/col/HeightMap.hx	/^	public var precision : Float = 1e-2;$/;"	v
predecessor	heaps/h2d/col/Voronoi.hx	/^		var predecessor = null,$/;"	v
prefab	heaps/samples/FxView.hx	/^		var prefab = hxd.Res.hideEffect.load();$/;"	v
prefix	heaps/h3d/impl/GlDriver.hx	/^		var prefix = s.vertex ? "vertex" : "fragment";$/;"	v
prefix	heaps/hxd/fmt/hmd/Dump.hx	/^	var prefix : String;$/;"	v
prefix	heaps/hxsl/Ast.hx	/^			var prefix = switch( t ) {$/;"	v
prefix	heaps/hxsl/Flatten.hx	/^		var prefix = switch( kind ) {$/;"	v
prefix	heaps/hxsl/Splitter.hx	/^			var prefix = v.name;$/;"	v
prefixTotal	heaps/hxd/fmt/hmd/Dump.hx	/^			var prefixTotal = 0;$/;"	v
prepare	heaps/h2d/col/Voronoi.hx	/^	public function prepare() {$/;"	f
prependRotation	heaps/h3d/Matrix.hx	/^	public function prependRotation( x, y, z ) {$/;"	f
prependRotationAxis	heaps/h3d/Matrix.hx	/^	public function prependRotationAxis( axis, angle ) {$/;"	f
prependScale	heaps/h3d/Matrix.hx	/^	public function prependScale( sx = 1., sy = 1., sz = 1. ) {$/;"	f
prependTranslate	heaps/h2d/col/Matrix.hx	/^	public inline function prependTranslate( x : Float, y : Float ) {$/;"	f
prependTranslateX	heaps/h2d/col/Matrix.hx	/^	public inline function prependTranslateX( x : Float ) {$/;"	f
prependTranslateY	heaps/h2d/col/Matrix.hx	/^	public inline function prependTranslateY( y : Float ) {$/;"	f
prependTranslation	heaps/h3d/Matrix.hx	/^	public function prependTranslation( x = 0., y = 0., z = 0. ) {$/;"	f
present	heaps/h3d/impl/DirectXDriver.hx	/^	override function present() {$/;"	f
present	heaps/h3d/impl/Driver.hx	/^	public function present() {$/;"	f
present	heaps/h3d/impl/GlDriver.hx	/^	override function present() {$/;"	f
present	heaps/h3d/impl/LogDriver.hx	/^	override function present() {$/;"	f
present	heaps/h3d/impl/Stage3dDriver.hx	/^	override function present() {$/;"	f
present	heaps/h3d/impl/VulkanDriver.hx	/^	override function present() {$/;"	f
preserveCollinear	heaps/hxd/clipper/Clipper.hx	/^	public var preserveCollinear : Bool;$/;"	v
prev	heaps/h2d/Anim.hx	/^		var prev = curFrame;$/;"	v
prev	heaps/h2d/Drawable.hx	/^		var prev = null, cur = shaders;$/;"	v
prev	heaps/h2d/Flow.hx	/^		var prev = needReflow;$/;"	v
prev	heaps/h2d/Graphics.hx	/^		var prev = pts[last];$/;"	v
prev	heaps/h2d/HtmlText.hx	/^				var prev = glyphs;$/;"	v
prev	heaps/h2d/KeyFrames.hx	/^		var prev = curFrame;$/;"	v
prev	heaps/h2d/Object.hx	/^		var prev = finalTile;$/;"	v
prev	heaps/h2d/ObjectFollower.hx	/^			var prev = ctx.baseShader.zValue;$/;"	v
prev	heaps/h2d/ObjectFollower.hx	/^			var prev = follow;$/;"	v
prev	heaps/h2d/SpriteBatch.hx	/^	var prev : BatchElement;$/;"	v
prev	heaps/h2d/domkit/Style.hx	/^						var prev = inspectPreviewObjects;$/;"	v
prev	heaps/h2d/domkit/Style.hx	/^					var prev = inspectPreviewObjects;$/;"	v
prev	heaps/h2d/filter/Group.hx	/^			var prev = input;$/;"	v
prev	heaps/h3d/impl/Benchmark.hx	/^			var prev : QueryObject = null;$/;"	v
prev	heaps/h3d/impl/DirectXDriver.hx	/^			var prev = from.lastFrame;$/;"	v
prev	heaps/h3d/impl/ManagedBuffer.hx	/^		var prev : FreeCell = null;$/;"	v
prev	heaps/h3d/mat/BaseMaterial.hx	/^		var prev : Pass = null, cur = passes;$/;"	v
prev	heaps/h3d/mat/BaseMaterial.hx	/^		var prev = null, cur = passes;$/;"	v
prev	heaps/h3d/mat/Pass.hx	/^		var prev = null;$/;"	v
prev	heaps/h3d/parts/Emitter.hx	/^				var prev = ck;$/;"	v
prev	heaps/h3d/parts/GpuParticles.hx	/^		var prev = currentTime;$/;"	v
prev	heaps/h3d/parts/GpuParticles.hx	/^		var prev = null;$/;"	v
prev	heaps/h3d/parts/Particle.hx	/^	public var prev : Particle;$/;"	v
prev	heaps/h3d/parts/Particles.hx	/^			var prev = p;$/;"	v
prev	heaps/h3d/pass/PassList.hx	/^		var prev = null;$/;"	v
prev	heaps/h3d/pass/ScreenFx.hx	/^		var prev : hxsl.ShaderList = null;$/;"	v
prev	heaps/h3d/prim/MeshPrimitive.hx	/^		var prev = null;$/;"	v
prev	heaps/h3d/scene/Graphics.hx	/^		var prev = pts[last];$/;"	v
prev	heaps/h3d/scene/MeshBatch.hx	/^		var prev = ctx.drawPass.index;$/;"	v
prev	heaps/h3d/scene/Trail.hx	/^			var prev = points[points.length - 1];$/;"	v
prev	heaps/h3d/scene/Trail.hx	/^		var prev = points[points.length - 1];$/;"	v
prev	heaps/h3d/scene/pbr/Renderer.hx	/^			var prev = slides.shader.shadowMap;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^			var prev:TEdge = edge1.prevInAEL;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^			var prev:TEdge = edge1.prevInSEL;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^			var prev:TEdge = edge2.prevInAEL;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^			var prev:TEdge = edge2.prevInSEL;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^	public var prev : OutPt;$/;"	v
prev	heaps/hxd/clipper/Clipper.hx	/^	public var prev : TEdge;$/;"	v
prev	heaps/hxd/earcut/Earcut.hx	/^	public var prev : EarNode;$/;"	v
prev	heaps/hxd/fmt/grd/Reader.hx	/^		var prev = trns[index - 1];$/;"	v
prev	heaps/hxd/fs/FileInput.hx	/^		var prev = cache;$/;"	v
prev	heaps/hxd/poly2tri/Node.hx	/^	public var prev:Node;$/;"	v
prev	heaps/hxd/snd/Manager.hx	/^			var prev = channels;$/;"	v
prev	heaps/hxsl/AgalOptim.hx	/^				var prev = opIds.get(sign);$/;"	v
prev	heaps/hxsl/AgalOptim.hx	/^			var prev = sign;$/;"	v
prev	heaps/hxsl/Cache.hx	/^				var prev = prevAll[prevAll.length - 1];$/;"	v
prev	heaps/hxsl/Cache.hx	/^		var prev = s;$/;"	v
prev	heaps/hxsl/Macros.hx	/^				var prev = consts[consts.length - 1];$/;"	v
prev	heaps/hxsl/ShaderList.hx	/^		var prev = null;$/;"	v
prev	heaps/samples/Bounds.hx	/^			var prev = boxes[i - 1];$/;"	v
prevAll	heaps/hxsl/Cache.hx	/^				var prevAll = textures[i-1].all;$/;"	v
prevButtons	heaps/hxd/Pad.hx	/^	var prevButtons : Array<Bool> = [];$/;"	v
prevChar	heaps/h2d/Font.hx	/^	public var prevChar : Int;$/;"	v
prevChar	heaps/h2d/HtmlText.hx	/^					var prevChar = prevChar;$/;"	v
prevChar	heaps/h2d/HtmlText.hx	/^	var prevChar : Int;$/;"	v
prevChar	heaps/h2d/Text.hx	/^				var prevChar = prevChar;$/;"	v
prevChar	heaps/hxd/fmt/bfnt/Reader.hx	/^					var prevChar : Int;$/;"	v
prevChild	heaps/h3d/prim/ModelCache.hx	/^		var prevChild = 0;$/;"	v
prevCol	heaps/hxd/res/Gradients.hx	/^				var prevCol = colors[ci    ].value;$/;"	v
prevCollider	heaps/h3d/pass/Shadows.hx	/^		var prevCollider = null;$/;"	v
prevCollider	heaps/h3d/scene/Object.hx	/^		var prevCollider = ctx.cullingCollider;$/;"	v
prevCollider	heaps/h3d/scene/pbr/Renderer.hx	/^		var prevCollider = null;$/;"	v
prevColor	heaps/h2d/HtmlText.hx	/^			var prevColor = null, prevGlyphs = null;$/;"	v
prevDef	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var prevDef = null;$/;"	v
prevFlow	heaps/h2d/domkit/Style.hx	/^		var prevFlow = new h2d.Flow(p);$/;"	v
prevFrame	heaps/h3d/impl/Benchmark.hx	/^	var prevFrame : Float;$/;"	v
prevInAEL	heaps/hxd/clipper/Clipper.hx	/^	public var prevInAEL : TEdge;$/;"	v
prevInSEL	heaps/hxd/clipper/Clipper.hx	/^	public var prevInSEL : TEdge;$/;"	v
prevInst	heaps/h2d/RenderContext.hx	/^			var prevInst = @:privateAccess t.instance;$/;"	v
prevInt	heaps/h3d/impl/Benchmark.hx	/^		var prevInt = s3d.interactives;$/;"	v
prevLast	heaps/h2d/Graphics.hx	/^			var prevLast = pts[last - 1];$/;"	v
prevLast	heaps/h3d/scene/Graphics.hx	/^			var prevLast = pts[last - 1];$/;"	v
prevLoc	heaps/hxd/res/Gradients.hx	/^				var prevLoc = colors[ci    ].loc;$/;"	v
prevMode	heaps/h2d/ObjectFollower.hx	/^			var prevMode = ctx.pass.depthTest, prevWrite = ctx.pass.depthWrite;$/;"	v
prevPath	heaps/hxd/fmt/pak/Build.hx	/^			var prevPath = nextPath;$/;"	v
prevRead	heaps/hxsl/AgalOptim.hx	/^	public var prevRead : haxe.ds.Vector<Int>;$/;"	v
prevRegs	heaps/hxsl/AgalOptim.hx	/^	var prevRegs : Array<RegInfos>;$/;"	v
prevResult	heaps/h3d/pass/Shadows.hx	/^		var prevResult = true;$/;"	v
prevResult	heaps/h3d/scene/pbr/Renderer.hx	/^		var prevResult = true;$/;"	v
prevScenes	heaps/h3d/impl/Benchmark.hx	/^		var prevScenes = app.sevents.scenes;$/;"	v
prevStates	heaps/h3d/impl/Benchmark.hx	/^		var prevStates = new Map();$/;"	v
prevUV	heaps/h3d/shader/Parallax.hx	/^				var prevUV = curUV - delta;$/;"	v
prevWrite	heaps/hxsl/AgalOptim.hx	/^	public var prevWrite : haxe.ds.Vector<Int>;$/;"	v
prevX	heaps/h2d/TileGroup.hx	/^		var prevX = Math.NEGATIVE_INFINITY;$/;"	v
prevX	heaps/h3d/parts/GpuParticles.hx	/^	var prevX : Float = 0;$/;"	v
prevX1	heaps/h2d/TileGroup.hx	/^		var prevX1 = Math.NEGATIVE_INFINITY;$/;"	v
prevX1	heaps/h3d/parts/Particles.hx	/^			var prevX1 = p.x, prevY1 = p.y, prevZ1 = p.z;$/;"	v
prevX2	heaps/h3d/parts/Particles.hx	/^			var prevX2 = p.x, prevY2 = p.y, prevZ2 = p.z;$/;"	v
prevXMax	heaps/h3d/scene/Box.hx	/^	var prevXMax = -1e9;$/;"	v
prevXMin	heaps/h3d/scene/Box.hx	/^	var prevXMin = 1e9;$/;"	v
prevY	heaps/h2d/TileGroup.hx	/^		var prevY = Math.NEGATIVE_INFINITY;$/;"	v
prevY	heaps/h3d/parts/GpuParticles.hx	/^	var prevY : Float = 0;$/;"	v
prevY1	heaps/h2d/TileGroup.hx	/^		var prevY1 = Math.NEGATIVE_INFINITY;$/;"	v
prevYMax	heaps/h3d/scene/Box.hx	/^	var prevYMax = -1e9;$/;"	v
prevYMin	heaps/h3d/scene/Box.hx	/^	var prevYMin = 1e9;$/;"	v
prevZ	heaps/h3d/parts/GpuParticles.hx	/^	var prevZ : Float = 0;$/;"	v
prevZ	heaps/hxd/earcut/Earcut.hx	/^	public var prevZ : EarNode;$/;"	v
prevZMax	heaps/h3d/scene/Box.hx	/^	var prevZMax = -1e9;$/;"	v
prevZMin	heaps/h3d/scene/Box.hx	/^	var prevZMin = 1e9;$/;"	v
preventAutoDispose	heaps/h3d/mat/Texture.hx	/^	public function preventAutoDispose() {$/;"	f
preventClick	heaps/h2d/Interactive.hx	/^	public function preventClick() {$/;"	f
preventClick	heaps/h3d/scene/Interactive.hx	/^	public function preventClick() {$/;"	f
preventForcedDispose	heaps/h3d/mat/Texture.hx	/^	public function preventForcedDispose() {$/;"	f
previewText	heaps/h2d/domkit/Style.hx	/^		var previewText = new h2d.HtmlText(hxd.res.DefaultFont.get(), prevFlow);$/;"	v
previous versions	heaps/CHANGELOG.md	/^## previous versions$/;"	s
prevs	heaps/h3d/mat/MaterialDatabase.hx	/^		var prevs = [];$/;"	v
pright	heaps/h3d/col/Frustum.hx	/^	public var pright : Plane;$/;"	v
prim	heaps/h3d/col/Bounds.hx	/^		var prim = new h3d.prim.Cube(xMax - xMin, yMax - yMin, zMax - zMin);$/;"	v
prim	heaps/h3d/col/Capsule.hx	/^		var prim = new h3d.prim.Sphere(r, segW, segH, 0.5);$/;"	v
prim	heaps/h3d/col/Polygon.hx	/^		var prim = new h3d.prim.Polygon(points);$/;"	v
prim	heaps/h3d/col/PolygonBuffer.hx	/^		var prim = new h3d.prim.Polygon(points, idx);$/;"	v
prim	heaps/h3d/col/Sphere.hx	/^		var prim = new h3d.prim.Sphere(r, 20, 15);$/;"	v
prim	heaps/h3d/prim/ModelCache.hx	/^				var prim = @:privateAccess lib.makePrimitive(m.geometry);$/;"	v
prim	heaps/h3d/scene/MeshBatch.hx	/^			var prim = cast(primitive,h3d.prim.MeshPrimitive);$/;"	v
prim	heaps/hxd/fmt/hmd/Library.hx	/^				var prim = makePrimitive(m.geometry);$/;"	v
prim	heaps/samples/Base3D.hx	/^		var prim = new h3d.prim.Cube();$/;"	v
prim	heaps/samples/Helpers.hx	/^		var prim = new h3d.prim.Cube( 1, 1, 1, true );$/;"	v
prim	heaps/samples/Helpers.hx	/^		var prim = new h3d.prim.Sphere( sphereSize, 4, 2 );$/;"	v
prim	heaps/samples/Lights.hx	/^		var prim = new h3d.prim.Grid(100,100,1,1);$/;"	v
prim	heaps/samples/PointLights.hx	/^		var prim = new h3d.prim.Cube();$/;"	v
prim	heaps/samples/ShaderAdvanced.hx	/^		var prim = new h3d.prim.Instanced();$/;"	v
prim	heaps/samples/Stencil.hx	/^			var prim = new h3d.prim.Cube(2, 2, 0.0001);$/;"	v
prim	heaps/samples/Stencil.hx	/^		var prim = new h3d.prim.Cube();$/;"	v
primitive	heaps/h3d/anim/Skin.hx	/^	public var primitive : h3d.prim.Primitive;$/;"	v
primitive	heaps/h3d/parts/GpuParticles.hx	/^			var primitive = gid < primitives.length ? primitives[gid] : null;$/;"	v
primitive	heaps/h3d/parts/GpuParticles.hx	/^			var primitive = primitives[groups.indexOf(g)];$/;"	v
primitive	heaps/h3d/parts/GpuParticles.hx	/^		var primitive = primitives[ctx.drawPass.index];$/;"	v
primitive	heaps/h3d/pass/ScreenFx.hx	/^	public var primitive : h3d.prim.Primitive;$/;"	v
primitive	heaps/h3d/prim/Instanced.hx	/^	var primitive : MeshPrimitive;$/;"	v
primitive	heaps/h3d/scene/Mesh.hx	/^	public var primitive(default, set) : h3d.prim.Primitive;$/;"	v
primitive	heaps/h3d/scene/pbr/Light.hx	/^	var primitive : h3d.prim.Primitive;$/;"	v
primitiveBuffers	heaps/h3d/parts/GpuParticles.hx	/^	var primitiveBuffers : Array<hxd.FloatBuffer>;$/;"	v
primitiveSubBytes	heaps/h3d/scene/MeshBatch.hx	/^	var primitiveSubBytes : haxe.io.Bytes;$/;"	v
primitiveSubPart	heaps/h3d/scene/MeshBatch.hx	/^	public var primitiveSubPart : MeshBatchPart;$/;"	v
primitives	heaps/h3d/parts/GpuParticles.hx	/^	var primitives : Array<h3d.prim.Primitive>;$/;"	v
prims	heaps/samples/Pbr.hx	/^		var prims : Array<h3d.prim.Primitive> = [sp, cube];$/;"	v
prio	heaps/hxsl/Linker.hx	/^					var prio : Array<Int>;$/;"	v
priority	heaps/h3d/scene/Interactive.hx	/^	public var priority : Int;$/;"	v
priority	heaps/h3d/scene/Scene.hx	/^			var priority = 0x80000000;$/;"	v
priority	heaps/h3d/scene/fwd/Light.hx	/^	public var priority : Int = 0;$/;"	v
priority	heaps/hxd/fs/FileConverter.hx	/^		var priority = 0;$/;"	v
priority	heaps/hxd/snd/ChannelBase.hx	/^	public var priority       : Float = 0.;$/;"	v
priority	heaps/hxd/snd/Effect.hx	/^	var priority   : Int;$/;"	v
priority	heaps/hxsl/Linker.hx	/^		var priority = 0;$/;"	v
priority	heaps/hxsl/Linker.hx	/^	public var priority : Int;$/;"	v
priority	heaps/hxsl/Shader.hx	/^	public var priority(default,null) : Int = 0;$/;"	v
probeOutput	heaps/h3d/scene/pbr/Renderer.hx	/^		var probeOutput = allocTarget("probeOutput", true, 1.0, RGBA16F);$/;"	v
probePass	heaps/h3d/scene/pbr/Renderer.hx	/^		var probePass = get("lightProbe");$/;"	v
probeSort	heaps/h3d/scene/pbr/Renderer.hx	/^		function probeSort( passes : h3d.pass.PassList ) {$/;"	f
process	heaps/h3d/scene/Renderer.hx	/^	public function process( passes : Array<PassObjects> ) {$/;"	f
processBuffer	heaps/hxd/snd/Mp3Data.hx	/^	function processBuffer( buf : js.html.audio.AudioBuffer ) {$/;"	f
processContext	heaps/hxd/snd/openal/Emulator.hx	/^	public static function processContext(context : Context) {$/;"	f
processShaders	heaps/h3d/pass/Default.hx	/^	function processShaders( p : h3d.pass.PassObject, shaders : hxsl.ShaderList ) {$/;"	f
processValue	heaps/hxd/fmt/bfnt/FontParser.hx	/^			inline function processValue() : String {$/;"	f
processVectors	heaps/hxd/fmt/fbx/Geometry.hx	/^	function processVectors( layer, name, opt = false ) {$/;"	f
processed	heaps/hxsl/Linker.hx	/^	public var processed : Map<Int, Bool>;$/;"	v
processingGlyphHeader	heaps/hxd/res/BDFFont.hx	/^		var processingGlyphHeader : Bool = true;$/;"	v
program	heaps/samples/templates/.vscode/launch.json	/^			"program": "${workspaceRoot}\/::name::.swf",$/;"	s	object:configurations.2
programs	heaps/h3d/impl/GlDriver.hx	/^	var programs : Map<Int, CompiledProgram>;$/;"	v
programs	heaps/h3d/impl/Stage3dDriver.hx	/^	var programs : Map<Int, CompiledShader>;$/;"	v
progressRec	heaps/h2d/HtmlText.hx	/^		function progressRec(e:Xml) {$/;"	f
progressive	heaps/hxd/res/NanoJpeg.hx	/^	var progressive : Bool;$/;"	v
progressiveDecodeBuffer	heaps/hxd/snd/Manager.hx	/^	function progressiveDecodeBuffer( s : Source, snd : hxd.res.Sound, start : Int ) {$/;"	f
proj	heaps/h2d/col/Polygon.hx	/^			var proj = new Segment(p1, p2).project(pt);$/;"	v
proj	heaps/h3d/shader/BaseMesh.hx	/^			var proj : Mat4;$/;"	v
proj	heaps/h3d/shader/LineShader.hx	/^			var proj : Mat4;$/;"	v
projDiag	heaps/h3d/shader/BaseMesh.hx	/^			var projDiag : Vec3;$/;"	v
projFlip	heaps/h3d/shader/BaseMesh.hx	/^			var projFlip : Float;$/;"	v
project	heaps/h2d/col/Line.hx	/^	public inline function project( p : Point ) {$/;"	f
project	heaps/h2d/col/Segment.hx	/^	public inline function project( p : Point ) : Point {$/;"	f
project	heaps/h2d/col/Segments.hx	/^	public function project( p : Point ) : Point {$/;"	f
project	heaps/h3d/Camera.hx	/^	public function project( x : Float, y : Float, z : Float, screenWidth : Float, screenHeight : F/;"	f
project	heaps/h3d/Vector.hx	/^	public inline function project( m : Matrix ) {$/;"	f
project	heaps/h3d/col/Plane.hx	/^	public inline function project( p : Point ) : Point {$/;"	f
projectPoint	heaps/h2d/col/Polygon.hx	/^	public function projectPoint(pt: h2d.col.Point) {$/;"	f
projectTo	heaps/h3d/col/Plane.hx	/^	public inline function projectTo( p : Point, out : Point ) {$/;"	f
projectedPosition	heaps/h3d/shader/BaseMesh.hx	/^		var projectedPosition : Vec4;$/;"	v
projectedPosition	heaps/h3d/shader/LineShader.hx	/^		var projectedPosition : Vec4;$/;"	v
projectedPosition	heaps/h3d/shader/ParticleShader.hx	/^		var projectedPosition : Vec4;$/;"	v
projectedPosition	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var projectedPosition : Vec4;$/;"	v
prop	heaps/hxd/res/Atlas.hx	/^					var prop = line.split(": ");$/;"	v
prop	heaps/hxd/res/Atlas.hx	/^				var prop = line.split(": ");$/;"	v
prop	heaps/hxd/res/BDFFont.hx	/^		var prop : String;$/;"	v
prop	heaps/samples/Flows.hx	/^						var prop = currentFlows[1].getProperties(f);$/;"	v
prop	heaps/samples/Flows.hx	/^						var prop = currentFlows[2].getProperties(f);$/;"	v
propAt	heaps/h2d/Flow.hx	/^		inline function propAt(i: Int) {$/;"	f
propCurrentValue	heaps/h3d/anim/BufferAnimation.hx	/^	public var propCurrentValue : Float;$/;"	v
propCurrentValue	heaps/h3d/anim/LinearAnimation.hx	/^	public var propCurrentValue : Float;$/;"	v
propName	heaps/h3d/anim/BufferAnimation.hx	/^	public var propName:  String;$/;"	v
propName	heaps/h3d/anim/LinearAnimation.hx	/^	public var propName:  String;$/;"	v
propStart	heaps/hxd/fmt/fbx/Parser.hx	/^		var propStart : Int = pos;$/;"	v
propValues	heaps/h3d/anim/LinearAnimation.hx	/^	public var propValues : haxe.ds.Vector<Float>;$/;"	v
propagate	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var propagate : Bool;$/;"	v
propagate	heaps/hxd/Event.hx	/^	public var propagate : Bool;$/;"	v
propagate	heaps/hxd/Window.js.hx	/^		var propagate = canvas.getAttribute("propagateKeyEvents");$/;"	v
propagate	heaps/hxsl/Checker.hx	/^	function propagate( with : WithType ) {$/;"	f
propagateEvents	heaps/h2d/Interactive.hx	/^	public var propagateEvents : Bool = false;$/;"	v
propagateEvents	heaps/h3d/scene/Interactive.hx	/^	public var propagateEvents : Bool = false;$/;"	v
propagateEvents	heaps/hxd/SceneEvents.hx	/^	public var propagateEvents : Bool;$/;"	v
propagateKeyEvents	heaps/hxd/Window.js.hx	/^	public var propagateKeyEvents : Bool;$/;"	v
properties	heaps/h2d/Flow.hx	/^	var properties : Array<FlowProperties> = [];$/;"	v
property	heaps/hxd/fmt/kframes/Data.hx	/^	var property : KFAnimProp;$/;"	v
propertyListLength	heaps/hxd/fmt/fbx/Parser.hx	/^		var propertyListLength : UInt = getVersionedInt32();$/;"	v
props	heaps/h2d/CdbLevel.hx	/^	public var props : Dynamic;$/;"	v
props	heaps/h2d/CdbLevel.hx	/^	var props :	cdb.Data.TilesetProps;$/;"	v
props	heaps/h2d/CdbLevel.hx	/^	var props : cdb.Data.LevelProps;$/;"	v
props	heaps/h3d/mat/Material.hx	/^		var props : DefaultProps = getDefaultProps();$/;"	v
props	heaps/h3d/mat/Material.hx	/^		var props : DefaultProps = props;$/;"	v
props	heaps/h3d/mat/Material.hx	/^		var props : DefaultProps;$/;"	v
props	heaps/h3d/mat/PbrMaterial.hx	/^		var props : PbrProps = getDefaultProps();$/;"	v
props	heaps/h3d/mat/PbrMaterial.hx	/^		var props : PbrProps = props;$/;"	v
props	heaps/h3d/mat/PbrMaterial.hx	/^		var props : PbrProps;$/;"	v
props	heaps/h3d/prim/ModelCache.hx	/^			var props = try {$/;"	v
props	heaps/h3d/scene/pbr/Renderer.hx	/^		var props : RenderProps = props;$/;"	v
props	heaps/h3d/scene/pbr/Renderer.hx	/^		var props : RenderProps = {$/;"	v
props	heaps/h3d/shader/GpuParticle.hx	/^		@input var props : {$/;"	v
props	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var props = rootObject.get("Properties70");$/;"	v
props	heaps/hxd/fmt/fbx/Data.hx	/^	var props : Array<FbxProp>;$/;"	v
props	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var props = getChild(o.model, "NodeAttribute");$/;"	v
props	heaps/hxd/fmt/fbx/Parser.hx	/^		var props : Array<FbxProp> = new Array();$/;"	v
props	heaps/hxd/fmt/fbx/Parser.hx	/^		var props = [], childs = null;$/;"	v
props	heaps/hxd/fmt/hmd/Data.hx	/^	public var props : Array<String>;$/;"	v
props	heaps/hxd/fmt/hmd/Data.hx	/^	public var props : Properties;$/;"	v
props	heaps/hxd/fmt/hmd/Library.hx	/^		var props = h3d.mat.MaterialSetup.current.loadMaterialProps(mat);$/;"	v
props	heaps/hxd/impl/AnyProps.hx	/^	public var props(default, set) : Any;$/;"	v
propsFile	heaps/hxd/fs/FileConverter.hx	/^		var propsFile = (dir == "" ? baseDir : baseDir + dir + "\/")+"props.json";$/;"	v
ps	heaps/h3d/mat/PbrMaterial.hx	/^		var ps = mainPass.getShader(h3d.shader.Parallax);$/;"	v
ps	heaps/h3d/scene/MeshBatch.hx	/^		var ps = primitiveSubPart;$/;"	v
psBytes	heaps/h3d/scene/MeshBatch.hx	/^		var psBytes = primitiveSubBytes;$/;"	v
psdnoise	heaps/h3d/shader/NoiseLib.hx	/^function psdnoise(pos:Vec2, per:Vec2) : Vec3 {$/;"	f
psel	heaps/hxsl/Macros.hx	/^				var psel = getPath(c.v, "Channel");$/;"	v
pshader	heaps/h2d/Particles.hx	/^	var pshader : ParticleShader;$/;"	v
pshader	heaps/h3d/parts/GpuParticles.hx	/^	var pshader = new h3d.shader.GpuParticle();$/;"	v
pshader	heaps/h3d/parts/Particles.hx	/^	var pshader : h3d.shader.ParticleShader;$/;"	v
pshader	heaps/h3d/pass/PointShadowMap.hx	/^	var pshader : h3d.shader.PointShadow;$/;"	v
pshader	heaps/h3d/scene/fwd/PointLight.hx	/^	var pshader : h3d.shader.PointLight;$/;"	v
psnoise	heaps/h3d/shader/NoiseLib.hx	/^function psnoise(pos:Vec2, per:Vec2) : Float {$/;"	f
psrdnoise	heaps/h3d/shader/NoiseLib.hx	/^function psrdnoise(pos:Vec2,per:Vec2,rot:Float) : Vec3 {$/;"	f
psrnoise	heaps/h3d/shader/NoiseLib.hx	/^function psrnoise(pos:Vec2, per:Vec2, rot:Float) : Float {$/;"	f
pt	heaps/h2d/Interactive.hx	/^			var pt = new h2d.col.Point(e.relX, e.relY);$/;"	v
pt	heaps/h2d/Scene.hx	/^		var pt = shapePoint;$/;"	v
pt	heaps/h2d/TextInput.hx	/^				var pt = new h2d.col.Point();$/;"	v
pt	heaps/h3d/col/ObjectCollider.hx	/^		var pt = r.getPoint(hit);$/;"	v
pt	heaps/h3d/col/SkinCollider.hx	/^				var pt = j.offsets.getMax();$/;"	v
pt	heaps/h3d/col/SkinCollider.hx	/^				var pt = j.offsets.getMin();$/;"	v
pt	heaps/h3d/col/TransformCollider.hx	/^		var pt = r.getPoint(hit);$/;"	v
pt	heaps/h3d/impl/GlDriver.hx	/^				var pt = s.textures[i];$/;"	v
pt	heaps/h3d/parts/GpuParticles.hx	/^					var pt = partAlloc;$/;"	v
pt	heaps/h3d/pass/DirShadowMap.hx	/^				var pt = ctx.camera.unproject(x,y,ctx.camera.distanceToDepth(dist)).toPoint();$/;"	v
pt	heaps/h3d/prim/BigPrimitive.hx	/^					var pt = new h3d.col.Point(nx, ny, nz);$/;"	v
pt	heaps/h3d/prim/BigPrimitive.hx	/^					var pt = new h3d.col.Point(tx, ty, tz);$/;"	v
pt	heaps/h3d/prim/BigPrimitive.hx	/^				var pt = new h3d.col.Point(x, y, z);$/;"	v
pt	heaps/h3d/prim/Quads.hx	/^			var pt = pts[i];$/;"	v
pt	heaps/h3d/scene/Skin.hx	/^			var pt = j.offsets.getMax();$/;"	v
pt	heaps/h3d/scene/Skin.hx	/^			var pt = j.offsets.getMin();$/;"	v
pt	heaps/h3d/scene/World.hx	/^					var pt = new h3d.Vector(x,y,z);$/;"	v
pt	heaps/hxd/clipper/Clipper.hx	/^				var pt;$/;"	v
pt	heaps/hxd/clipper/Clipper.hx	/^	public var pt : IPoint;$/;"	v
pt	heaps/hxd/fs/FileConverter.hx	/^			var pt = if( f.charCodeAt(0) == "^".code ) {$/;"	v
pt	heaps/hxd/poly2tri/Triangle.hx	/^				var pt = p3;$/;"	v
pt	heaps/samples/CollideCheck.hx	/^		var pt = new h2d.col.Point();$/;"	v
pt	heaps/samples/CollideCheck.hx	/^		var pt = new h2d.col.Point(px, py);$/;"	v
pt	heaps/samples/CubeTexture.hx	/^		var pt = new h3d.scene.fwd.PointLight(s3d);$/;"	v
pt	heaps/samples/Interactive2D.hx	/^				var pt = it.next();$/;"	v
pt	heaps/samples/Lights.hx	/^		var pt = new h3d.scene.pbr.PointLight(s3d);$/;"	v
pt1	heaps/hxd/clipper/Clipper.hx	/^				var pt1 : IPoint;$/;"	v
pt1	heaps/hxd/fmt/hmd/Library.hx	/^			var pt1, pt2, off = b.getCenter(), r;$/;"	v
ptmp	heaps/h3d/col/ObjectCollider.hx	/^		var ptmp = p.clone();$/;"	v
ptmp	heaps/h3d/col/TransformCollider.hx	/^		var ptmp = p.clone();$/;"	v
ptop	heaps/h3d/col/Frustum.hx	/^	public var ptop : Plane;$/;"	v
ptr	heaps/h3d/impl/DirectXDriver.hx	/^			var ptr = v.res.map(0, WriteDiscard, true, null);$/;"	v
ptr	heaps/h3d/impl/DirectXDriver.hx	/^		var ptr = sbuffer.map(0, WriteDiscard, true, null);$/;"	v
ptr	heaps/h3d/impl/DirectXDriver.hx	/^		var ptr = tmp.map(0, Read, true, null);$/;"	v
ptr	heaps/h3d/impl/DirectXDriver.hx	/^		var ptr = tmp.map(0, Read, true, pitch);$/;"	v
ptr	heaps/h3d/pass/ShaderManager.hx	/^			var ptr = getPtr(buf.globals);$/;"	v
ptr	heaps/h3d/pass/ShaderManager.hx	/^			var ptr = getPtr(buf.params);$/;"	v
pts	heaps/h2d/Graphics.hx	/^		var pts = tmpPoints;$/;"	v
pts	heaps/h3d/prim/Cylinder.hx	/^		var pts = new Array();$/;"	v
pts	heaps/h3d/prim/Disc.hx	/^		var pts = [], idx = new hxd.IndexBuffer();$/;"	v
pts	heaps/h3d/prim/HMDModel.hx	/^		var pts : Array<h3d.col.Point> = [];$/;"	v
pts	heaps/h3d/prim/Quads.hx	/^	var pts : Array<Point>;$/;"	v
pts	heaps/h3d/prim/Sphere.hx	/^		var pts = [], idx = new hxd.IndexBuffer();$/;"	v
pts	heaps/h3d/scene/Graphics.hx	/^		var pts = tmpPoints;$/;"	v
pts	heaps/hxd/clipper/Clipper.hx	/^	public var pts : OutPt;$/;"	v
ptx	heaps/hxd/clipper/Clipper.hx	/^        var ptx = pt.x;$/;"	v
pty	heaps/hxd/clipper/Clipper.hx	/^		var pty = pt.y;$/;"	v
push	heaps/h2d/ZGroup.hx	/^	function push(spr : Object) {$/;"	f
push	heaps/h3d/scene/Graphics.hx	/^		inline function push(v) {$/;"	f
push	heaps/hxd/FloatBuffer.hx	/^	public inline function push( v : hxd.impl.Float32 ) {$/;"	f
push	heaps/hxd/FloatBuffer.hx	/^	public inline function push(v:Float) {$/;"	f
push	heaps/hxd/IndexBuffer.hx	/^	public inline function push( v : Int ) {$/;"	f
pushCamera	heaps/h2d/RenderContext.hx	/^	public function pushCamera( cam : h2d.Camera ) {$/;"	f
pushFilter	heaps/h2d/RenderContext.hx	/^	public function pushFilter( spr : h2d.Object ) {$/;"	f
pushList	heaps/hxd/SceneEvents.hx	/^	var pushList : Array<Interactive>;$/;"	v
pushRenderZone	heaps/h2d/RenderContext.hx	/^	public function pushRenderZone( x : Float, y : Float, w : Float, h : Float ) {$/;"	f
pushStartX	heaps/h3d/scene/CameraController.hx	/^	var pushStartX = 0.;$/;"	v
pushStartY	heaps/h3d/scene/CameraController.hx	/^	var pushStartY = 0.;$/;"	v
pushTarget	heaps/h2d/RenderContext.hx	/^	public function pushTarget( t : h3d.mat.Texture, startX = 0, startY = 0, width = -1, height = -/;"	f
pushTarget	heaps/h3d/Engine.hx	/^	public function pushTarget( tex : h3d.mat.Texture, layer = 0, mipLevel = 0 ) {$/;"	f
pushTargets	heaps/h2d/RenderContext.hx	/^	public function pushTargets( texs : Array<h3d.mat.Texture> ) {$/;"	f
pushTargets	heaps/h3d/Engine.hx	/^	public function pushTargets( textures : Array<h3d.mat.Texture> ) {$/;"	f
pushTime	heaps/h3d/scene/CameraController.hx	/^	var pushTime : Float;$/;"	v
pushX	heaps/h3d/scene/CameraController.hx	/^	var pushX = 0.;$/;"	v
pushY	heaps/h3d/scene/CameraController.hx	/^	var pushY = 0.;$/;"	v
pushed	heaps/h2d/Flow.hx	/^				var pushed = false;$/;"	v
pushing	heaps/h3d/scene/CameraController.hx	/^	var pushing = -1;$/;"	v
put	heaps/hxd/impl/CacheAllocator.hx	/^	public inline function put(v) {$/;"	f
putBuffer	heaps/hxd/snd/webaudio/Context.hx	/^	public static function putBuffer( buf : AudioBuffer ) {$/;"	f
putBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public inline function putBuffer( buf : AudioBuffer ) {$/;"	f
putGain	heaps/hxd/snd/webaudio/Context.hx	/^	public static inline function putGain(gain:GainNode) {$/;"	f
putGain	heaps/hxd/snd/webaudio/Driver.hx	/^	public inline function putGain(gain:GainNode) {$/;"	f
pval	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var pval = StringTools.trim(pl.join("="));$/;"	v
pval	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var pval = p.props[4];$/;"	v
pw	heaps/h2d/Flow.hx	/^				var pw = p.paddingLeft + p.paddingRight;$/;"	v
pw	heaps/h3d/Vector.hx	/^		var pw = x * m._14 + y * m._24 + z * m._34 + w * m._44;$/;"	v
px	heaps/h2d/Flow.hx	/^				var px = switch( halign ) {$/;"	v
px	heaps/h2d/Flow.hx	/^				var px;$/;"	v
px	heaps/h2d/Graphics.hx	/^			var px = ax + d * tobx, py = ay + d * toby;$/;"	v
px	heaps/h2d/Object.hx	/^		var px = (pt.x * matD - pt.y * matC) * invDet;$/;"	v
px	heaps/h2d/Object.hx	/^		var px = pt.x * matA + pt.y * matC + absX;$/;"	v
px	heaps/h2d/Particles.hx	/^			var px = p.x;$/;"	v
px	heaps/h2d/RenderContext.hx	/^				var px = (x + tile.dx) * matA + (y + tile.dy) * matC;$/;"	v
px	heaps/h2d/Slider.hx	/^		var px = getDx();$/;"	v
px	heaps/h2d/SpriteBatch.hx	/^				var px = (t.dx + hx) * e.scaleX, py = (t.dy + hy) * e.scaleY;$/;"	v
px	heaps/h2d/SpriteBatch.hx	/^				var px = (t.dx + hx) * e.scaleX, py = t.dy * e.scaleY;$/;"	v
px	heaps/h2d/SpriteBatch.hx	/^				var px = t.dx * e.scaleX, py = (t.dy + hy) * e.scaleY;$/;"	v
px	heaps/h2d/SpriteBatch.hx	/^				var px = t.dx * e.scaleX, py = t.dy * e.scaleY;$/;"	v
px	heaps/h2d/TileGroup.hx	/^		var px = dx * ca - dy * sa + x;$/;"	v
px	heaps/h2d/col/IPolygon.hx	/^			var px = points[i].x;$/;"	v
px	heaps/h2d/col/Ray.hx	/^	public var px : Float;$/;"	v
px	heaps/h2d/col/RoundRect.hx	/^		var px = p.x - x;$/;"	v
px	heaps/h2d/col/Segment.hx	/^		var px = p.x - x;$/;"	v
px	heaps/h3d/Vector.hx	/^		var px = x * m._11 + y * m._21 + z * m._31 + w * m._41;$/;"	v
px	heaps/h3d/Vector.hx	/^		var px = x * m._11 + y * m._21 + z * m._31;$/;"	v
px	heaps/h3d/col/HeightMap.hx	/^		var px = r.px, py = r.py, pz = r.pz;$/;"	v
px	heaps/h3d/col/Point.hx	/^		var px = x * m._11 + y * m._21 + z * m._31 + m._41;$/;"	v
px	heaps/h3d/col/Point.hx	/^		var px = x * m._11 + y * m._21 + z * m._31;$/;"	v
px	heaps/h3d/col/Polygon.hx	/^		var px = r.px + r.lx * k;$/;"	v
px	heaps/h3d/col/Ray.hx	/^	public var px : Float;$/;"	v
px	heaps/h3d/col/SkinCollider.hx	/^			var px = 0., py = 0., pz = 0.;$/;"	v
px	heaps/h3d/col/Sphere.hx	/^		var px = r.px + r.lx;$/;"	v
px	heaps/h3d/pass/DirShadowMap.hx	/^							var px = dx > 0 ? bounds.xMax : bounds.xMin;$/;"	v
px	heaps/h3d/prim/HMDModel.hx	/^			var px = pos.vertexes[i * 3];$/;"	v
px	heaps/h3d/prim/Sphere.hx	/^				var px = st * Math.cos(p);$/;"	v
px	heaps/hxd/poly2tri/AdvancingFront.hx	/^		var px = point.x;$/;"	v
px	heaps/hxd/res/Gradients.hx	/^			var px = 0;$/;"	v
px	heaps/samples/CollideCheck.hx	/^		var px = s2d.mouseX;$/;"	v
pxsize	heaps/hxd/res/Image.hx	/^		var pxsize = 4;$/;"	v
py	heaps/h2d/Flow.hx	/^				var py = switch( valign ) {$/;"	v
py	heaps/h2d/Flow.hx	/^				var py;$/;"	v
py	heaps/h2d/HtmlText.hx	/^				var py = yPos;$/;"	v
py	heaps/h2d/Object.hx	/^		var py = (-pt.x * matB + pt.y * matA) * invDet;$/;"	v
py	heaps/h2d/Object.hx	/^		var py = pt.x * matB + pt.y * matD + absY;$/;"	v
py	heaps/h2d/RenderContext.hx	/^				var py = (x + tile.dx) * matB + (y + tile.dy) * matD;$/;"	v
py	heaps/h2d/TileGroup.hx	/^		var py = dy * ca + dx * sa + y;$/;"	v
py	heaps/h2d/col/Ray.hx	/^	public var py : Float;$/;"	v
py	heaps/h2d/col/RoundRect.hx	/^		var py = p.y - y;$/;"	v
py	heaps/h2d/col/Segment.hx	/^		var py = p.y - y;$/;"	v
py	heaps/h3d/Vector.hx	/^		var py = x * m._12 + y * m._22 + z * m._32 + w * m._42;$/;"	v
py	heaps/h3d/Vector.hx	/^		var py = x * m._12 + y * m._22 + z * m._32;$/;"	v
py	heaps/h3d/col/Point.hx	/^		var py = x * m._12 + y * m._22 + z * m._32 + m._42;$/;"	v
py	heaps/h3d/col/Point.hx	/^		var py = x * m._12 + y * m._22 + z * m._32;$/;"	v
py	heaps/h3d/col/Polygon.hx	/^		var py = r.py + r.ly * k;$/;"	v
py	heaps/h3d/col/Ray.hx	/^	public var py : Float;$/;"	v
py	heaps/h3d/col/Sphere.hx	/^		var py = r.py + r.ly;$/;"	v
py	heaps/h3d/pass/DirShadowMap.hx	/^							var py = dy > 0 ? bounds.yMax : bounds.yMin;$/;"	v
py	heaps/h3d/prim/HMDModel.hx	/^			var py = pos.vertexes[i * 3 + 1];$/;"	v
py	heaps/h3d/prim/Sphere.hx	/^				var py = st * Math.sin(p);$/;"	v
py	heaps/hxd/res/NanoJpeg.hx	/^			var py = new FastBytes(comps[0].pixels);$/;"	v
py	heaps/samples/CollideCheck.hx	/^		var py = s2d.mouseY;$/;"	v
pz	heaps/h3d/Vector.hx	/^		var pz = x * m._13 + y * m._23 + z * m._33 + w * m._43;$/;"	v
pz	heaps/h3d/Vector.hx	/^		var pz = x * m._13 + y * m._23 + z * m._33;$/;"	v
pz	heaps/h3d/col/Point.hx	/^		var pz = x * m._13 + y * m._23 + z * m._33 + m._43;$/;"	v
pz	heaps/h3d/col/Point.hx	/^		var pz = x * m._13 + y * m._23 + z * m._33;$/;"	v
pz	heaps/h3d/col/Polygon.hx	/^		var pz = r.pz + r.lz * k;$/;"	v
pz	heaps/h3d/col/Ray.hx	/^	public var pz : Float;$/;"	v
pz	heaps/h3d/col/Sphere.hx	/^		var pz = r.pz + r.lz;$/;"	v
pz	heaps/h3d/prim/HMDModel.hx	/^			var pz = pos.vertexes[i * 3 + 2];$/;"	v
pz	heaps/h3d/prim/Sphere.hx	/^			var pz = Math.cos(t);$/;"	v
q	heaps/h2d/col/Voronoi.hx	/^		var q = ax-bbox.xMin;$/;"	v
q	heaps/h2d/domkit/BaseComponents.hx	/^			var q = parseFloat(q);$/;"	v
q	heaps/h3d/Matrix.hx	/^		var q = new h3d.Quat();$/;"	v
q	heaps/h3d/anim/SmoothTarget.hx	/^	public var q : h3d.Quat;$/;"	v
q	heaps/h3d/anim/SmoothTransition.hx	/^				var q = new h3d.Quat();$/;"	v
q	heaps/h3d/col/PolygonBuffer.hx	/^			var q = T.cross(e1);$/;"	v
q	heaps/h3d/impl/Benchmark.hx	/^			var q = waitFrames[0];$/;"	v
q	heaps/h3d/impl/Benchmark.hx	/^		var q = allocQuery();$/;"	v
q	heaps/h3d/impl/Benchmark.hx	/^		var q = cachedQueries;$/;"	v
q	heaps/h3d/impl/Benchmark.hx	/^	public var q : h3d.impl.Driver.Query;$/;"	v
q	heaps/h3d/mat/BigTexture.hx	/^		var q = allocPos(tsize.width,tsize.height);$/;"	v
q	heaps/h3d/mat/BigTexture.hx	/^		var q = allocPos(width, height);$/;"	v
q	heaps/h3d/mat/BigTexture.hx	/^		var q = findBest(space, w, h);$/;"	v
q	heaps/h3d/mat/BigTexture.hx	/^	var q : QuadTree;$/;"	v
q	heaps/h3d/parts/GpuParticles.hx	/^				var q = new h3d.Quat();$/;"	v
q	heaps/h3d/scene/Trail.hx	/^		var q = new h3d.Quat();$/;"	v
q	heaps/h3d/scene/Trail.hx	/^	public var q : h3d.Quat;$/;"	v
q	heaps/hxd/clipper/Clipper.hx	/^			var q = (b2 - b1) \/ (edge1.dx - edge2.dx);$/;"	v
q	heaps/hxd/clipper/Clipper.hx	/^		var q = m_delta \/ r;$/;"	v
q	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var q = new h3d.Quat(), q2 = new h3d.Quat();$/;"	v
q	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var q = new h3d.Quat(), q2 = new h3d.Quat();$/;"	v
q	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var q = new h3d.Quat();$/;"	v
q	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var q = m.toQuaternion(true);$/;"	v
q	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var q = new h3d.Quat();$/;"	v
q	heaps/hxd/fmt/hmd/Data.hx	/^		var q = QTMP;$/;"	v
q	heaps/hxd/poly2tri/Edge.hx	/^	public var q:Point;$/;"	v
q	heaps/hxsl/Serializer.hx	/^				var q = switch( qid ) {$/;"	v
q	heaps/samples/Blur.hx	/^		var q = blur.pass.values.length - 1;$/;"	v
q	heaps/samples/Quaternion.hx	/^		var q = new h3d.Quat();$/;"	v
q1	heaps/h2d/col/Polygon.hx	/^			var q1 = points[i+1];$/;"	v
q1	heaps/h3d/anim/SmoothTarget.hx	/^	var q1 : Quat = new h3d.Quat();$/;"	v
q1	heaps/h3d/anim/SmoothTransition.hx	/^		var q1 = new h3d.Quat(), q2 = new h3d.Quat(), qout = new h3d.Quat();$/;"	v
q1w	heaps/h3d/anim/BufferAnimation.hx	/^					var q1w : Float32 = Math.sqrt(hxd.Math.abs(1 - (q1x*q1x+q1y*q1y+q1z*q1z)));$/;"	v
q1x	heaps/h3d/anim/BufferAnimation.hx	/^					var q1x : Float32 = data[offset1++];$/;"	v
q1y	heaps/h3d/anim/BufferAnimation.hx	/^					var q1y : Float32 = data[offset1++];$/;"	v
q1z	heaps/h3d/anim/BufferAnimation.hx	/^					var q1z : Float32 = data[offset1++];$/;"	v
q2	heaps/h2d/col/Polygon.hx	/^				var q2 = points[(j+1) % points.length];$/;"	v
q2	heaps/h3d/anim/BufferAnimation.hx	/^					var q2 = dot < 0 ? -k2 : k2;$/;"	v
q2	heaps/h3d/anim/LinearAnimation.hx	/^				var q2 = dot < 0 ? -k2 : k2;$/;"	v
q2	heaps/h3d/scene/Trail.hx	/^				var q2 = new h3d.Quat();$/;"	v
q2w	heaps/h3d/anim/BufferAnimation.hx	/^					var q2w : Float32 = Math.sqrt(hxd.Math.abs(1 - (q2x*q2x+q2y*q2y+q2z*q2z)));$/;"	v
q2x	heaps/h3d/anim/BufferAnimation.hx	/^					var q2x : Float32 = data[offset2++];$/;"	v
q2y	heaps/h3d/anim/BufferAnimation.hx	/^					var q2y : Float32 = data[offset2++];$/;"	v
q2z	heaps/h3d/anim/BufferAnimation.hx	/^					var q2z : Float32 = data[offset2++];$/;"	v
qRot	heaps/h3d/scene/Object.hx	/^	var qRot : h3d.Quat;$/;"	v
qTmp	heaps/h3d/scene/Object.hx	/^		var qTmp = new h3d.Quat();$/;"	v
qadj	heaps/h3d/pass/Blur.hx	/^		var qadj = hxd.Math.clamp(quality) * 0.7 + 0.3;$/;"	v
qh	heaps/h3d/mat/BigTexture.hx	/^		var qh = q.height >> 1;$/;"	v
qid	heaps/hxsl/Serializer.hx	/^				var qid = input.readByte();$/;"	v
ql	heaps/h3d/anim/BufferAnimation.hx	/^					var ql = 1 \/ Math.sqrt(qx * qx + qy * qy + qz * qz + qw * qw);$/;"	v
ql	heaps/h3d/anim/LinearAnimation.hx	/^				var ql = 1 \/ Math.sqrt(qx * qx + qy * qy + qz * qz + qw * qw);$/;"	v
ql	heaps/hxd/fmt/fbx/HMDOut.hx	/^							var ql = Math.sqrt(f.qx * f.qx + f.qy * f.qy + f.qz * f.qz + f.qw * f.qw);$/;"	v
ql	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var ql = Math.sqrt(f.qx * f.qx + f.qy * f.qy + f.qz * f.qz + f.qw * f.qw);$/;"	v
qout	heaps/h3d/anim/SmoothTarget.hx	/^	var qout : Quat = new h3d.Quat();$/;"	v
qr	heaps/h2d/col/Polynomial.hx	/^		var qr = new QR(x);$/;"	v
qr	heaps/h2d/col/Polynomial.hx	/^	var qr : haxe.ds.Vector<haxe.ds.Vector<Float>>;$/;"	v
qt	heaps/hxd/res/NanoJpeg.hx	/^		var qt = qtab[c.qtsel];$/;"	v
qtab	heaps/hxd/res/NanoJpeg.hx	/^	var qtab : haxe.ds.Vector<haxe.ds.Vector<Int>>;$/;"	v
qtavail	heaps/hxd/res/NanoJpeg.hx	/^	var qtavail : Int;$/;"	v
qtsel	heaps/hxd/res/NanoJpeg.hx	/^	public var qtsel : Int;$/;"	v
qtused	heaps/hxd/res/NanoJpeg.hx	/^	var qtused : Int;$/;"	v
quad	heaps/hxd/clipper/Clipper.hx	/^				var quad = new IPolygon();$/;"	v
quadIndexes	heaps/h3d/impl/MemoryManager.hx	/^	public var quadIndexes(default,null) : Indexes;$/;"	v
quads	heaps/hxd/clipper/Clipper.hx	/^        var quads = new IPolygons();$/;"	v
qualifiers	heaps/hxsl/Ast.hx	/^	@:optional var qualifiers : Null<Array<VarQualifier>>;$/;"	v
qualifiers	heaps/hxsl/Ast.hx	/^	var qualifiers : Array<VarQualifier>;$/;"	v
quality	heaps/h2d/filter/Blur.hx	/^	public var quality(get, set) : Float;$/;"	v
quality	heaps/h2d/filter/Outline.hx	/^	public var quality(get, set) : Float;$/;"	v
quality	heaps/h3d/pass/Blur.hx	/^	public var quality(default,set) : Float;$/;"	v
quality	heaps/h3d/pass/Outline.hx	/^	public var quality : Float;$/;"	v
queryResult	heaps/h3d/impl/Driver.hx	/^	public function queryResult( q : Query ) {$/;"	f
queryResult	heaps/h3d/impl/GlDriver.hx	/^	override function queryResult(q:Query) {$/;"	f
queryResultAvailable	heaps/h3d/impl/Driver.hx	/^	public function queryResultAvailable( q : Query ) {$/;"	f
queryResultAvailable	heaps/h3d/impl/GlDriver.hx	/^	override function queryResultAvailable(q:Query) {$/;"	f
queue	heaps/hxd/Worker.hx	/^	var queue : Array<Dynamic>;$/;"	v
queue	heaps/hxd/earcut/Earcut.hx	/^		var queue = [];$/;"	v
queue	heaps/hxd/snd/Channel.hx	/^	var queue : Array<hxd.res.Sound> = [];$/;"	v
queueBuffer	heaps/hxd/snd/Driver.hx	/^	public function queueBuffer          (source : SourceHandle, buffer : BufferHandle, sampleStart/;"	f
queueBuffer	heaps/hxd/snd/Manager.hx	/^	function queueBuffer(s : Source, snd : hxd.res.Sound, start : Int) {$/;"	f
queueBuffer	heaps/hxd/snd/openal/Driver.hx	/^	public function queueBuffer(source : SourceHandle, buffer : BufferHandle, sampleStart : Int, en/;"	f
queueBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public function queueBuffer (source : SourceHandle, buffer : BufferHandle, sampleStart : Int, e/;"	f
queueSound	heaps/hxd/snd/Channel.hx	/^	public function queueSound( sound : hxd.res.Sound ) {$/;"	f
queued	heaps/hxd/snd/NativeChannel.hx	/^	var queued : js.html.audio.AudioBufferSourceNode;$/;"	v
qw	heaps/h3d/anim/BufferAnimation.hx	/^					var qw = q1w * k1 + q2w * q2;$/;"	v
qw	heaps/h3d/anim/LinearAnimation.hx	/^				var qw = f1.qw * k1 + f2.qw * q2;$/;"	v
qw	heaps/h3d/anim/LinearAnimation.hx	/^	public var qw : Float;$/;"	v
qw	heaps/h3d/mat/BigTexture.hx	/^		var qw = q.width >> 1;$/;"	v
qw	heaps/hxd/fmt/hmd/Data.hx	/^		var qw = 1 - (qx * qx + qy * qy + qz * qz);$/;"	v
qw	heaps/hxd/fmt/hmd/Data.hx	/^	public var qw(get, never) : Float;$/;"	v
qw	heaps/hxd/fmt/hmd/Library.hx	/^						var qw = 1 - (f.qx * f.qx + f.qy * f.qy + f.qz * f.qz);$/;"	v
qx	heaps/h2d/Graphics.hx	/^			var qx = bx + d * tocx, qy = by + d * tocy;$/;"	v
qx	heaps/h3d/anim/BufferAnimation.hx	/^					var qx = q1x * k1 + q2x * q2;$/;"	v
qx	heaps/h3d/anim/LinearAnimation.hx	/^				var qx = f1.qx * k1 + f2.qx * q2;$/;"	v
qx	heaps/h3d/anim/LinearAnimation.hx	/^	public var qx : Float;$/;"	v
qx	heaps/hxd/earcut/Earcut.hx	/^		var qx = Math.NEGATIVE_INFINITY;$/;"	v
qx	heaps/hxd/fmt/hmd/Data.hx	/^	public var qx : Float;$/;"	v
qy	heaps/h3d/anim/BufferAnimation.hx	/^					var qy = q1y * k1 + q2y * q2;$/;"	v
qy	heaps/h3d/anim/LinearAnimation.hx	/^				var qy = f1.qy * k1 + f2.qy * q2;$/;"	v
qy	heaps/h3d/anim/LinearAnimation.hx	/^	public var qy : Float;$/;"	v
qy	heaps/hxd/fmt/hmd/Data.hx	/^	public var qy : Float;$/;"	v
qz	heaps/h3d/anim/BufferAnimation.hx	/^					var qz = q1z * k1 + q2z * q2;$/;"	v
qz	heaps/h3d/anim/LinearAnimation.hx	/^				var qz = f1.qz * k1 + f2.qz * q2;$/;"	v
qz	heaps/h3d/anim/LinearAnimation.hx	/^	public var qz : Float;$/;"	v
qz	heaps/hxd/fmt/hmd/Data.hx	/^	public var qz : Float;$/;"	v
r	Laser.hx	/^		var r:Float = Math.random() * 0xFFFFFF; \/\/ not sure where Int.max is...	$/;"	v
r	heaps/h2d/Graphics.hx	/^	public var r : Float;$/;"	v
r	heaps/h2d/Object.hx	/^		var r = relativeTo.matA * relativeTo.matD - relativeTo.matB * relativeTo.matC;$/;"	v
r	heaps/h2d/Particles.hx	/^				var r = g.emitStartDist + g.emitDist * rand();$/;"	v
r	heaps/h2d/SpriteBatch.hx	/^	public var r : Float = 1;$/;"	v
r	heaps/h2d/col/Ray.hx	/^		var r = new Ray();$/;"	v
r	heaps/h2d/col/Voronoi.hx	/^		var r = -q\/dx;$/;"	v
r	heaps/h2d/col/Voronoi.hx	/^		var r = 0.;$/;"	v
r	heaps/h2d/col/Voronoi.hx	/^		var r = b.y - a.y;$/;"	v
r	heaps/h2d/domkit/BaseComponents.hx	/^			var r = parseFloat(r);$/;"	v
r	heaps/h3d/Matrix.hx	/^		var r = ins * lumR;$/;"	v
r	heaps/h3d/Matrix.hx	/^		var r = t11 + t21 + t31;$/;"	v
r	heaps/h3d/Vector.hx	/^		var r = new Vector();$/;"	v
r	heaps/h3d/Vector.hx	/^	public var r(get, set) : Float;$/;"	v
r	heaps/h3d/col/Capsule.hx	/^	public var r : Float;$/;"	v
r	heaps/h3d/col/Ray.hx	/^		var r = new Ray();$/;"	v
r	heaps/h3d/col/Sphere.hx	/^	public var r : Float;$/;"	v
r	heaps/h3d/impl/GlDriver.hx	/^		var r = gl.createRenderbuffer();$/;"	v
r	heaps/h3d/mat/BigTexture.hx	/^				var r = dy * pixels.width * srcBpp + srcRedPos;$/;"	v
r	heaps/h3d/mat/TextureChannels.hx	/^			var r = (y * src.width * srcBpp) + srcOff;$/;"	v
r	heaps/h3d/parts/Data.hx	/^	public var r : Float;$/;"	v
r	heaps/h3d/parts/Emitter.hx	/^			var r = eval(r);$/;"	v
r	heaps/h3d/parts/GpuParticles.hx	/^				var r = camera.target.sub(camera.pos);$/;"	v
r	heaps/h3d/parts/GpuParticles.hx	/^			var r = g.emitStartDist + g.emitDist * (emitOnBorder ? 1 : Math.sqrt(rand()));$/;"	v
r	heaps/h3d/parts/GpuParticles.hx	/^			var r = g.emitStartDist + g.emitDist * rand();$/;"	v
r	heaps/h3d/parts/Particle.hx	/^	public var r : Float;$/;"	v
r	heaps/h3d/pass/DirShadowMap.hx	/^							var r = h3d.col.Ray.fromValues(r0.x, r0.y, r0.z, v.x, v.y, v.z);$/;"	v
r	heaps/h3d/pass/DirShadowMap.hx	/^					var r = h3d.col.Ray.fromPoints(ctx.camera.pos.toPoint(), pt);$/;"	v
r	heaps/h3d/scene/CameraController.hx	/^		var r = pos.length();$/;"	v
r	heaps/h3d/scene/Graphics.hx	/^	public var r : Float;$/;"	v
r	heaps/h3d/scene/Scene.hx	/^			var r = h3d.col.Ray.fromPoints(p0.toPoint(), p1.toPoint());$/;"	v
r	heaps/h3d/scene/Skin.hx	/^			var r = currentAbsPose[j.index];$/;"	v
r	heaps/h3d/scene/Skin.hx	/^			var r = currentRelPose[id];$/;"	v
r	heaps/h3d/scene/World.hx	/^		var r = {$/;"	v
r	heaps/h3d/scene/World.hx	/^	public var r : hxd.res.Model;$/;"	v
r	heaps/h3d/scene/pbr/Environment.hx	/^			var r = (i << 16) | (i >>> 16);$/;"	v
r	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var r = @:privateAccess ctx.scene.renderer;$/;"	v
r	heaps/h3d/shader/DirLight.hx	/^			var r = reflect(direction, transformedNormal).normalize();$/;"	v
r	heaps/h3d/shader/PointLight.hx	/^			var r = reflect(-dvec.normalize(), transformedNormal).normalize();$/;"	v
r	heaps/hxd/BitmapData.hx	/^		var r = tmpRect;$/;"	v
r	heaps/hxd/Math.hx	/^		var r = Std.int(r1 * (1-k) + r2 * k);$/;"	v
r	heaps/hxd/Math.hx	/^		var r = value % modulo;$/;"	v
r	heaps/hxd/Pixels.hx	/^				var r = bytes[p+1];$/;"	v
r	heaps/hxd/Pixels.hx	/^				var r = bytes[p+2];$/;"	v
r	heaps/hxd/clipper/Clipper.hx	/^				var r = 1 + (m_normals[j].x * m_normals[k].x + m_normals[j].y * m_normals[k].y);$/;"	v
r	heaps/hxd/clipper/Clipper.hx	/^			var r = ClipperBase.getBounds(m_destPolys);$/;"	v
r	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var r = c.att.rect.split(" ");$/;"	v
r	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var r = Reflect.compare(c1.object, c2.object);$/;"	v
r	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var r : { t : Array<Float>, x : Array<Float>, y : Array<Float>, z : Array<Float> };$/;"	v
r	heaps/hxd/fmt/hmd/Library.hx	/^							var r = vid * geom.vertexStride;$/;"	v
r	heaps/hxd/fmt/hmd/Library.hx	/^						var r = vid * geom.vertexStride;$/;"	v
r	heaps/hxd/fmt/hmd/Library.hx	/^				var r = 0;$/;"	v
r	heaps/hxd/fmt/hmd/Library.hx	/^			var r = 0, vcount = 0;$/;"	v
r	heaps/hxd/fmt/spine/Library.hx	/^			var r = new RegionAttachment();$/;"	v
r	heaps/hxd/fs/Convert.hx	/^		var r = new format.tga.Reader(input).read();$/;"	v
r	heaps/hxd/fs/EmbedFileSystem.hx	/^		var r : Dynamic = root;$/;"	v
r	heaps/hxd/fs/EmbedFileSystem.hx	/^		var r = root;$/;"	v
r	heaps/hxd/fs/LocalFileSystem.hx	/^			var r = fileCache.get(path);$/;"	v
r	heaps/hxd/fs/LocalFileSystem.hx	/^		var r : Array<FileEntry> = [];$/;"	v
r	heaps/hxd/fs/LocalFileSystem.hx	/^		var r = fileCache.get(path);$/;"	v
r	heaps/hxd/res/Image.hx	/^			var r = new format.tga.Reader(new haxe.io.BytesInput(bytes)).read();$/;"	v
r	heaps/hxd/res/Loader.hx	/^		var r : Array<Any> = [];$/;"	v
r	heaps/hxd/res/NanoJpeg.hx	/^					var r = njClip((y + 359 * cr + 128) >> 8);$/;"	v
r	heaps/hxd/res/NanoJpeg.hx	/^		var r = njShowBits(bits);$/;"	v
r	heaps/hxd/snd/Data.hx	/^			var r = inPos, w = outPos;$/;"	v
r	heaps/hxd/snd/Mp3Data.hx	/^			var r = Std.int(snd.extract(b, sampleCount, sampleStart + 2257 \/* MAGIC_DELAY, silence added/;"	v
r	heaps/hxd/snd/NativeChannel.hx	/^		var r = 0;$/;"	v
r	heaps/hxd/snd/webaudio/Driver.hx	/^					var r = 0;$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^					var r = allocTemp(swiz(args[1]).length);$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^				var r = getAssignedReg(op1);$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^			var r = inf.reads[b];$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^			var r = inf.writes[b];$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^		var r = new Reg(RTemp, inf.index, sout, access);$/;"	v
r	heaps/hxsl/AgalOptim.hx	/^		var r = new Reg(RTemp, regs.length, size == 4 ? null : [for( i in 0...size ) COMPS[i]]);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^					var r = allocReg();$/;"	v
r	heaps/hxsl/AgalOut.hx	/^				var r = allocReg(TFloat);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^				var r = allocReg(TVec(2,VFloat));$/;"	v
r	heaps/hxsl/AgalOut.hx	/^				var r = allocReg(e.t);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^				var r = expr(ea);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^				var r = regs[0];$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r : Reg;$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg();$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(TFloat);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(TVec(2,VFloat));$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(TVec(3,VFloat));$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(a.t);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(e.t);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(et);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(ret);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = allocReg(t.t);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = expr(a);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = expr(e);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = expr(e1);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = nullReg;$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = reg(v);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^			var r = unop(OLog);$/;"	v
r	heaps/hxsl/AgalOut.hx	/^		var r = new Reg(RTemp, tmpCount, t == null ? null : defSwiz(t));$/;"	v
r	heaps/hxsl/AgalOut.hx	/^		var r = varMap.get(v.id);$/;"	v
r	heaps/hxsl/Cache.hx	/^		var r = buildRuntimeShader(s.vertex, s.fragment, paramVars);$/;"	v
r	heaps/hxsl/Cache.hx	/^		var r = new RuntimeShader();$/;"	v
r	heaps/hxsl/CacheFile.hx	/^				var r : RuntimeShader = haxe.Unserializer.run(sdata);$/;"	v
r	heaps/hxsl/CacheFile.hx	/^			var r = cleanRuntime(r);$/;"	v
r	heaps/hxsl/Checker.hx	/^				var r = [];$/;"	v
r	heaps/samples/CollideCheck.hx	/^		var r = new h2d.col.RoundRect(rrect.x, rrect.y, RW * 2, RH * 2, rrect.rotation);$/;"	v
r	heaps/samples/GraphicsDraw.hx	/^			var r = (0.1 + Math.random()) * 10;$/;"	v
r	heaps/samples/Pbr.hx	/^		var r = Math.sqrt(2);$/;"	v
r	heaps/samples/Sao.hx	/^		var r = hxd.impl.Api.downcast(s3d.renderer, CustomRenderer);$/;"	v
r	heaps/samples/Sao.hx	/^		var r = new hxd.Rand(Std.random(0xFFFFFF));$/;"	v
r	heaps/samples/World.hx	/^		var r = world.loadModel(hxd.Res.rock);$/;"	v
r	heaps/tools/hxsl/Main.hx	/^			var r = @:privateAccess cache.buildRuntimeShader(dce.vertex, dce.fragment, paramVars);$/;"	v
r0	heaps/h3d/col/PolygonBuffer.hx	/^		var r0 = new FPoint(r.px, r.py, r.pz);$/;"	v
r0	heaps/h3d/pass/DirShadowMap.hx	/^							var r0 = new h3d.col.Point(px,py,bounds.zMin).transformed(camera.getInverseView());$/;"	v
r1	heaps/h3d/anim/Transition.hx	/^		var r1 = 1, r2 = 1;$/;"	v
r1	heaps/hxd/Math.hx	/^		var r1 = (c1 >> 16) & 0xFF;$/;"	v
r1	heaps/hxsl/AgalOut.hx	/^			var r1 = expr(e1);$/;"	v
r2	Laser.hx	/^		var r2:Int = Math.round(r); \/\/ not sure what the value of 0xFFFFFF is anyway.. 16^6..?$/;"	v
r2	heaps/h3d/col/Sphere.hx	/^		var r2 = this.r * this.r;$/;"	v
r2	heaps/hxd/Math.hx	/^		var r2 = (c2 >> 16) & 0xFF;$/;"	v
r2	heaps/hxsl/AgalOut.hx	/^				var r2 = swiz(r2,[X,Y,Z]);$/;"	v
r2	heaps/hxsl/AgalOut.hx	/^			var r2 = allocReg();$/;"	v
r2	heaps/hxsl/AgalOut.hx	/^			var r2 = allocReg(ret);$/;"	v
r2	heaps/hxsl/AgalOut.hx	/^			var r2 = expr(e2);$/;"	v
r2	heaps/hxsl/Cache.hx	/^		var r2 = byID.get(r.signature);$/;"	v
rA	heaps/h2d/Object.hx	/^		var rA = relativeTo.matD * det;$/;"	v
rArc	heaps/h2d/col/Voronoi.hx	/^		var rArc = arc.rbNext;$/;"	v
rArc	heaps/h2d/col/Voronoi.hx	/^		var rArc = next;$/;"	v
rB	heaps/h2d/Object.hx	/^		var rB = -relativeTo.matB * det;$/;"	v
rC	heaps/h2d/Object.hx	/^		var rC = -relativeTo.matC * det;$/;"	v
rCell	heaps/h2d/col/Voronoi.hx	/^	public var rCell : Null<Cell>;$/;"	v
rD	heaps/h2d/Object.hx	/^		var rD = relativeTo.matA * det;$/;"	v
rDiag	heaps/h2d/col/Polynomial.hx	/^	var rDiag : haxe.ds.Vector<Float>;$/;"	v
rMask	heaps/hxd/res/Image.hx	/^			var rMask = f.readInt32();$/;"	v
rPoint	heaps/h2d/col/Voronoi.hx	/^	public var rPoint : Point;$/;"	v
rX	heaps/h2d/Object.hx	/^		var rX = absX - relativeTo.absX;$/;"	v
rY	heaps/h2d/Object.hx	/^		var rY = absY - relativeTo.absY;$/;"	v
r_attr	heaps/hxd/res/DynamicText.hx	/^	static var r_attr = ~\/::([A-Za-z0-9_]+)::\/g;$/;"	v
r_libs	heaps/samples/Generator.hx	/^				var r_libs = ~\/\\-lib ([A-Za-z0-9_]+)\/;$/;"	v
ra	heaps/hxsl/AgalOptim.hx	/^		var ra = 0, rb = 0;$/;"	v
ra	heaps/hxsl/AgalOut.hx	/^			var ra = allocReg(a.t);$/;"	v
ra	heaps/hxsl/AgalOut.hx	/^			var ra = expr(a);$/;"	v
ra	ra/Haxe.hx	/^package ra; \/\/ is this not implied by the path name?$/;"	p
ra	ra/Heaps.hx	/^package ra;$/;"	p
ra.hp	ra/hp/HP.hx	/^package ra.hp;$/;"	p
radToDeg	heaps/hxd/Math.hx	/^	public static inline function radToDeg( rad : Float) {$/;"	f
radian	heaps/samples/Polygons.hx	/^			var radian = Math.atan2((curPos.y - target.y), (curPos.x - target.x));$/;"	v
radius	heaps/h2d/filter/Blur.hx	/^	public var radius(get, set) : Float;$/;"	v
radius	heaps/h3d/pass/Blur.hx	/^	public var radius(default,set) : Float;$/;"	v
radius	heaps/h3d/prim/Disc.hx	/^	public var radius(default,null) : Float;$/;"	v
radius	heaps/h3d/scene/Sphere.hx	/^	public var radius(default, set) : Float;$/;"	v
radius2	heaps/h3d/shader/SAO.hx	/^			var radius2 = sampleRadius * sampleRadius;$/;"	v
radiusSS	heaps/h3d/shader/SAO.hx	/^			var radiusSS = (sampleRadius * fovTan) \/ (origin * cameraView).z;$/;"	v
rand	heaps/h2d/Particles.hx	/^		inline function rand() return hxd.Math.random();$/;"	f
rand	heaps/h3d/parts/Data.hx	/^	public function rand() : Float;$/;"	f
rand	heaps/h3d/parts/Emitter.hx	/^	public inline function rand() {$/;"	f
rand	heaps/h3d/parts/GpuParticles.hx	/^		inline function rand() return rnd.rand();$/;"	f
rand	heaps/h3d/parts/Particle.hx	/^	public function rand() : Float {$/;"	f
rand	heaps/h3d/shader/DirShadow.hx	/^		function rand( v : Float ) : Float {$/;"	f
rand	heaps/h3d/shader/SpotShadow.hx	/^		function rand( v : Float ) : Float {$/;"	f
rand	heaps/hxd/Rand.hx	/^	public inline function rand() {$/;"	f
randIndex	heaps/h3d/parts/Particle.hx	/^	public var randIndex = 0;$/;"	v
randProp	heaps/h3d/shader/GpuParticle.hx	/^		var randProp : Float;$/;"	v
randValues	heaps/h3d/parts/Particle.hx	/^	public var randValues : Array<Float>;$/;"	v
random	heaps/hxd/Math.hx	/^	public inline static function random( max = 1.0 ) {$/;"	f
random	heaps/hxd/Rand.hx	/^	public inline function random( n ) {$/;"	f
randomBetween	ra/hp/MathExtensions.hx	/^	public static function randomBetween(cl:Class<Math>, a:Int, b:Int) {$/;"	f
randomDir	heaps/h3d/parts/Data.hx	/^	public var randomDir : Bool;$/;"	v
randomPatternRotationAngle	heaps/h3d/shader/SAO.hx	/^			var randomPatternRotationAngle = 2.0 * PI * sampleNoise;$/;"	v
range	heaps/h3d/scene/pbr/PointLight.hx	/^		var range = hxd.Math.max(range, 1e-10);$/;"	v
range	heaps/h3d/scene/pbr/PointLight.hx	/^	public var range(get,set) : Float;$/;"	v
range	heaps/h3d/scene/pbr/SpotLight.hx	/^	public var range(get,set) : Float;$/;"	v
range	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var range = lightInfos[i+2].r;$/;"	v
range	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var range = lightInfos[i].a;$/;"	v
range	heaps/h3d/shader/pbr/Light.hx	/^		@param var range : Float;$/;"	v
rangeMax	heaps/h2d/TileGroup.hx	/^	public var rangeMax : Int;$/;"	v
rangeMin	heaps/h2d/TileGroup.hx	/^	public var rangeMin : Int;$/;"	v
ranges	heaps/hxd/fmt/hmd/Library.hx	/^		var ranges;$/;"	v
raster	heaps/h3d/impl/DirectXDriver.hx	/^		var raster = rasterStates.get(rasterBits);$/;"	v
rasterBits	heaps/h3d/impl/DirectXDriver.hx	/^		var rasterBits = bits & (Pass.culling_mask | SCISSOR_BIT | Pass.wireframe_mask);$/;"	v
rasterStates	heaps/h3d/impl/DirectXDriver.hx	/^	var rasterStates : Map<Int,RasterState>;$/;"	v
rate	heaps/hxd/snd/NativeChannel.hx	/^		var rate = Std.int(ctx.sampleRate);$/;"	v
rate	heaps/hxd/snd/webaudio/Context.hx	/^		var rate = Std.int(buf.sampleRate);$/;"	v
rate	heaps/hxd/snd/webaudio/Context.hx	/^	public var rate : Int;$/;"	v
ratio	heaps/h2d/Font.hx	/^		var ratio = size \/ initSize;$/;"	v
ratio	heaps/h3d/parts/Data.hx	/^	public var ratio : Value;$/;"	v
ratio	heaps/h3d/parts/Particle.hx	/^	public var ratio : Float;$/;"	v
ratio	heaps/h3d/parts/Particles.hx	/^				var ratio = p.size * p.ratio * (f.height \/ f.width);$/;"	v
ratio	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var ratio = 16\/9, fov = 45.;$/;"	v
ratio	heaps/hxd/fmt/hmd/Library.hx	/^				var ratio = Math.sqrt((refVolume * 1.5) \/ pext.getVolume());$/;"	v
raw	heaps/hxd/File.hx	/^							var raw : String = re.target.result;$/;"	v
rawData	heaps/hxd/fs/EmbedFileSystem.hx	/^		var rawData = null;$/;"	v
rawData	heaps/hxd/snd/WavData.hx	/^	var rawData : haxe.io.Bytes;$/;"	v
rawRXAxis	heaps/hxd/Pad.hx	/^	var rawRXAxis : Float = 0.;$/;"	v
rawRYAxis	heaps/hxd/Pad.hx	/^	var rawRYAxis : Float = 0.;$/;"	v
rawXAxis	heaps/hxd/Pad.hx	/^	var rawXAxis : Float = 0.;$/;"	v
rawYAxis	heaps/hxd/Pad.hx	/^	var rawYAxis : Float = 0.;$/;"	v
raxisX	heaps/hxd/Pad.hx	/^				var raxisX = 2, raxisY = 3;$/;"	v
ray	heaps/h2d/col/Circle.hx	/^	public var ray : Float;$/;"	v
ray	heaps/h2d/col/RoundRect.hx	/^	var ray : Float;$/;"	v
ray	heaps/h3d/prim/Sphere.hx	/^	var ray : Float;$/;"	v
ray	heaps/h3d/scene/Scene.hx	/^		var ray = camera.rayFromScreen(pixelX, pixelY);$/;"	v
ray1	heaps/h2d/TileGroup.hx	/^		var ray1 = ray - size;$/;"	v
rayFromScreen	heaps/h3d/Camera.hx	/^	public function rayFromScreen( pixelX : Float, pixelY : Float, sceneWidth = -1, sceneHeight = -/;"	f
rayIntersection	heaps/h2d/col/Polygon.hx	/^	public function rayIntersection( r : h2d.col.Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/Bounds.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/Capsule.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/Collider.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/Collider.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float;$/;"	f
rayIntersection	heaps/h3d/col/HeightMap.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/ObjectCollider.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/Polygon.hx	/^	inline public function rayIntersection( r : Ray, bestMatch : Bool ) @:privateAccess {$/;"	f
rayIntersection	heaps/h3d/col/Polygon.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) {$/;"	f
rayIntersection	heaps/h3d/col/PolygonBuffer.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/SkinCollider.hx	/^	public function rayIntersection(r, bestMatch) {$/;"	f
rayIntersection	heaps/h3d/col/Sphere.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rayIntersection	heaps/h3d/col/TransformCollider.hx	/^	public function rayIntersection( r : Ray, bestMatch : Bool ) : Float {$/;"	f
rb	heaps/hxd/clipper/Clipper.hx	/^			var rb:TEdge = m_CurrentLM.rightBound;$/;"	v
rb	heaps/hxsl/AgalOut.hx	/^			var rb = allocReg(b.t);$/;"	v
rb	heaps/hxsl/AgalOut.hx	/^			var rb = expr(b);$/;"	v
rbInsertSuccessor	heaps/h2d/col/Voronoi.hx	/^	public function rbInsertSuccessor(node : T, successor : T) {$/;"	f
rbLeft	heaps/h2d/col/Voronoi.hx	/^	public var rbLeft : T;$/;"	v
rbNext	heaps/h2d/col/Voronoi.hx	/^	public var rbNext : T;$/;"	v
rbParent	heaps/h2d/col/Voronoi.hx	/^	public var rbParent : T;$/;"	v
rbPrevious	heaps/h2d/col/Voronoi.hx	/^	public var rbPrevious : T;$/;"	v
rbRed	heaps/h2d/col/Voronoi.hx	/^	public var rbRed : Bool;$/;"	v
rbRemoveNode	heaps/h2d/col/Voronoi.hx	/^	public function rbRemoveNode(node:T) {$/;"	f
rbRight	heaps/h2d/col/Voronoi.hx	/^	public var rbRight : T;$/;"	v
rbRotateLeft	heaps/h2d/col/Voronoi.hx	/^	function rbRotateLeft(node:T) {$/;"	f
rbRotateRight	heaps/h2d/col/Voronoi.hx	/^	function rbRotateRight(node:T) {$/;"	f
rbmp	heaps/hxd/res/FontBuilder.hx	/^		var rbmp = hxd.BitmapData.fromNative(ctx);$/;"	v
rc	heaps/hxsl/CacheFile.hx	/^		var rc = new RuntimeShader();$/;"	v
rc	heaps/hxsl/CacheFile.hx	/^		var rc = new hxsl.RuntimeShader.RuntimeShaderData();$/;"	v
rcpDirMin	heaps/h3d/pass/FXAA.hx	/^			var rcpDirMin = 1 \/ (min(abs(dir.x), abs(dir.y)) + dirReduce);$/;"	v
rdir	heaps/h3d/col/PolygonBuffer.hx	/^		var rdir = new FPoint(r.lx, r.ly, r.lz);$/;"	v
read	heaps/hxd/fmt/bfnt/Reader.hx	/^	public function read( resolveTile: String -> h2d.Tile ) : h2d.Font {$/;"	f
read	heaps/hxd/fmt/grd/Reader.hx	/^	public function read() : Data {$/;"	f
read	heaps/hxd/fmt/hbson/Reader.hx	/^	public function read() : Dynamic {$/;"	f
read	heaps/hxd/fmt/hmd/Reader.hx	/^	public function read() : Data {$/;"	f
read	heaps/hxd/fmt/tiff/Reader.hx	/^	public function read() {$/;"	f
read	heaps/hxd/fs/FileInput.hx	/^		var read = entry.readBytes(cache, startPos, nextReadPos, dataSize);$/;"	v
read	heaps/hxd/impl/Air3File.hx	/^	public static function read( path : String, binary = true ) {$/;"	f
read	heaps/hxd/snd/OggData.hx	/^			var read = ogg_read(reader, output, bytesNeeded, format);$/;"	v
read	heaps/hxd/snd/openal/Emulator.hx	/^				var read = curSample << 1;$/;"	v
read	heaps/hxsl/AgalOptim.hx	/^	function read( r : Reg ) {$/;"	f
read	heaps/hxsl/Flatten.hx	/^		inline function read(index, pos) {$/;"	f
read	heaps/hxsl/Linker.hx	/^	public var read : Map<Int,AllocatedVar>;$/;"	v
read	heaps/hxsl/Splitter.hx	/^	public var read : Int;$/;"	v
read16	heaps/hxd/fmt/blend/Data.hx	/^	public var read16:Void->Int;$/;"	v
read16BE	heaps/hxd/fmt/blend/Data.hx	/^	function read16BE():Int {$/;"	f
read16LE	heaps/hxd/fmt/blend/Data.hx	/^	function read16LE():Int {$/;"	f
read32	heaps/hxd/fmt/blend/Data.hx	/^	public var read32:Void->Int;$/;"	v
read32BE	heaps/hxd/fmt/blend/Data.hx	/^	function read32BE():Int {$/;"	f
read32LE	heaps/hxd/fmt/blend/Data.hx	/^	function read32LE():Int {$/;"	f
read8	heaps/hxd/fmt/blend/Data.hx	/^	public function read8():Int {$/;"	f
readArr	heaps/hxsl/Serializer.hx	/^	inline function readArr<T>( f : Void -> T ) {$/;"	f
readArray	heaps/hxd/fmt/fbx/Parser.hx	/^		inline function readArray(entrySize:Int) {$/;"	f
readBinaryProperty	heaps/hxd/fmt/fbx/Parser.hx	/^	function readBinaryProperty() : FbxProp {$/;"	f
readBinaryString	heaps/hxd/fmt/fbx/Parser.hx	/^	function readBinaryString( length : Int ) : String {$/;"	f
readBounds	heaps/hxd/fmt/hmd/Reader.hx	/^	function readBounds() {$/;"	f
readByte	heaps/hxd/fs/FileInput.hx	/^	override function readByte() {$/;"	f
readByte	heaps/hxd/impl/Air3File.hx	/^	override function readByte() {$/;"	f
readByte	heaps/hxd/net/Socket.hx	/^	override function readByte() {$/;"	f
readByte	heaps/hxd/net/Socket.hx	/^	override function readByte():Int {$/;"	f
readBytes	heaps/h3d/Buffer.hx	/^	public function readBytes( bytes : haxe.io.Bytes, bytesPosition : Int, vertices : Int,  startVe/;"	f
readBytes	heaps/h3d/Indexes.hx	/^	public function readBytes( bytes : haxe.io.Bytes, bytesPosition : Int, indices : Int, startIndi/;"	f
readBytes	heaps/hxd/fmt/pak/FileSystem.hx	/^	override function readBytes( out : haxe.io.Bytes, outPos : Int, pos : Int, len : Int ) : Int {$/;"	f
readBytes	heaps/hxd/fs/BytesFileSystem.hx	/^	override function readBytes( out : haxe.io.Bytes, outPos : Int, pos : Int, len : Int ) : Int {$/;"	f
readBytes	heaps/hxd/fs/EmbedFileSystem.hx	/^	override function readBytes( out : haxe.io.Bytes, outPos : Int, pos : Int, len : Int ) : Int {$/;"	f
readBytes	heaps/hxd/fs/FileEntry.hx	/^	public function readBytes( out : haxe.io.Bytes, outPos : Int, pos : Int, len : Int ) : Int { th/;"	f
readBytes	heaps/hxd/fs/FileInput.hx	/^	override function readBytes( b : haxe.io.Bytes, pos : Int, len : Int ) {$/;"	f
readBytes	heaps/hxd/fs/LocalFileSystem.hx	/^	override function readBytes( out : haxe.io.Bytes, outPos : Int, pos : Int, len : Int ) : Int {$/;"	f
readBytes	heaps/hxd/fs/MultiFileSystem.hx	/^	override function readBytes( bytes, outPos, pos, len ) return el[0].readBytes(bytes,outPos,pos,/;"	f
readBytes	heaps/hxd/impl/Air3File.hx	/^	override function readBytes( bytes : haxe.io.Bytes, pos : Int, len : Int ) : Int {$/;"	f
readBytes	heaps/hxd/net/Socket.hx	/^	override function readBytes( bytes : haxe.io.Bytes, pos : Int, len : Int ) {$/;"	f
readBytes	heaps/hxd/net/Socket.hx	/^	override function readBytes(s:haxe.io.Bytes, pos:Int, len:Int):Int {$/;"	f
readCachedName	heaps/hxd/fmt/hmd/Reader.hx	/^	function readCachedName() {$/;"	f
readChar	heaps/hxd/fmt/blend/Data.hx	/^	public function readChar():String {$/;"	f
readChars	heaps/hxd/fmt/blend/Data.hx	/^	public function readChars(len:Int):String {$/;"	f
readConst	heaps/hxsl/Serializer.hx	/^	function readConst() : Const {$/;"	f
readExpr	heaps/hxsl/Serializer.hx	/^	function readExpr() : TExpr {$/;"	f
readFile	heaps/hxd/fmt/pak/Reader.hx	/^	function readFile() : File {$/;"	f
readFull	heaps/hxd/fs/FileEntry.hx	/^	public function readFull( bytes, pos, len ) {$/;"	f
readFun	heaps/hxsl/Serializer.hx	/^	function readFun() : TFunction {$/;"	f
readHeader	heaps/hxd/fmt/hmd/Reader.hx	/^	public function readHeader( fast = false ) : Data {$/;"	f
readHeader	heaps/hxd/fmt/pak/Reader.hx	/^	public function readHeader() : Data {$/;"	f
readID	heaps/hxsl/Serializer.hx	/^	inline function readID() {$/;"	f
readIndex	heaps/hxsl/Flatten.hx	/^	inline function readIndex( a : Alloc, index : Int, pos ) : TExpr {$/;"	f
readIndexBytes	heaps/h3d/impl/DirectXDriver.hx	/^	override function readIndexBytes(v:IndexBuffer, startIndice:Int, indiceCount:Int, buf:haxe.io.B/;"	f
readIndexBytes	heaps/h3d/impl/Driver.hx	/^	public function readIndexBytes( v : IndexBuffer, startVertex : Int, vertexCount : Int, buf : ha/;"	f
readIntHex	heaps/hxsl/CacheFile.hx	/^		function readIntHex() {$/;"	f
readMessage	heaps/hxd/Worker.hx	/^	function readMessage() : T {$/;"	f
readName	heaps/hxd/fmt/hmd/Reader.hx	/^	function readName() {$/;"	f
readOffset	heaps/hxsl/Cache.hx	/^		function readOffset( index : Int ) : TExpr {$/;"	f
readOffset	heaps/hxsl/Flatten.hx	/^	inline function readOffset( a : Alloc, stride : Int, delta : TExpr, index : Int, pos ) : TExpr /;"	f
readPos	heaps/h3d/scene/World.hx	/^				var readPos = v * stride;$/;"	v
readPosition	heaps/hxd/fmt/hmd/Reader.hx	/^	function readPosition(hasScale=true) {$/;"	f
readProperty	heaps/hxd/fmt/hmd/Reader.hx	/^	function readProperty() {$/;"	f
readProps	heaps/hxd/fmt/hmd/Reader.hx	/^	function readProps() {$/;"	f
readSkin	heaps/hxd/fmt/hmd/Reader.hx	/^	function readSkin() {$/;"	f
readString	heaps/h2d/Console.hx	/^		function readString(endChar:String) {$/;"	f
readString	heaps/hxd/fmt/blend/Data.hx	/^	public function readString():String {$/;"	f
readString	heaps/hxd/fmt/hbson/Reader.hx	/^	function readString() : String {$/;"	f
readString	heaps/hxsl/CacheFile.hx	/^		function readString() {$/;"	f
readString	heaps/hxsl/CacheFile.hx	/^	function readString(f:haxe.io.Input) {$/;"	f
readString	heaps/hxsl/Serializer.hx	/^	function readString() {$/;"	f
readType	heaps/hxsl/Serializer.hx	/^	function readType() : Type {$/;"	f
readUnicode	heaps/hxd/fmt/grd/Reader.hx	/^	function readUnicode(input : haxe.io.Input, len : Int) : String {$/;"	f
readValue	heaps/hxd/fmt/tiff/Reader.hx	/^	function readValue( t : TifType ) : TifValue {$/;"	f
readVar	heaps/hxsl/Serializer.hx	/^	function readVar() : TVar {$/;"	f
readVarInt	heaps/hxsl/Serializer.hx	/^	function readVarInt() {$/;"	f
readVertexBytes	heaps/h3d/impl/DirectXDriver.hx	/^	override function readVertexBytes(v:VertexBuffer, startVertex:Int, vertexCount:Int, buf:haxe.io/;"	f
readVertexBytes	heaps/h3d/impl/Driver.hx	/^	public function readVertexBytes( v : VertexBuffer, startVertex : Int, vertexCount : Int, buf : /;"	f
readVertexBytes	heaps/h3d/impl/ManagedBuffer.hx	/^	public function readVertexBytes( start : Int, vertices : Int, data : haxe.io.Bytes, dataPos = 0/;"	f
reader	heaps/hxd/File.hx	/^						var reader = new js.html.FileReader();$/;"	v
reader	heaps/hxd/snd/Mp3Data.hx	/^		var reader = new format.mp3.Reader(byteInput);$/;"	v
reader	heaps/hxd/snd/Mp3Data.hx	/^	var reader : Mp3File;$/;"	v
reader	heaps/hxd/snd/OggData.hx	/^	var reader : OggFile;$/;"	v
reader	heaps/hxd/snd/OggData.hx	/^	var reader : stb.format.vorbis.Reader;$/;"	v
readjust	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function readjust( time : Float, source : SourceHandle ) {$/;"	f
reads	heaps/hxsl/AgalOptim.hx	/^	public var reads : haxe.ds.Vector<Int>;$/;"	v
ready	heaps/h3d/Engine.hx	/^	public var ready(default,null) = false;$/;"	v
realA	heaps/h2d/Particles.hx	/^		var realA : Float = matA;$/;"	v
realB	heaps/h2d/Particles.hx	/^		var realB : Float = matB;$/;"	v
realC	heaps/h2d/Particles.hx	/^		var realC : Float = matC;$/;"	v
realD	heaps/h2d/Particles.hx	/^		var realD : Float = matD;$/;"	v
realFps	heaps/h3d/Engine.hx	/^	var realFps : Float;$/;"	v
realIdx	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var realIdx = new hxd.IndexBuffer();$/;"	v
realMaxHeight	heaps/h2d/Flow.hx	/^	var realMaxHeight : Float = -1;$/;"	v
realMaxTx	heaps/h3d/col/Bounds.hx	/^		var realMaxTx = Math.max(minTx, maxTx);$/;"	v
realMaxTy	heaps/h3d/col/Bounds.hx	/^		var realMaxTy = Math.max(minTy, maxTy);$/;"	v
realMaxTz	heaps/h3d/col/Bounds.hx	/^		var realMaxTz = Math.max(minTz, maxTz);$/;"	v
realMaxWidth	heaps/h2d/Flow.hx	/^	var realMaxWidth : Float = -1;$/;"	v
realMaxWidth	heaps/h2d/Text.hx	/^	var realMaxWidth:Float = -1;$/;"	v
realMinHeight	heaps/h2d/Flow.hx	/^	var realMinHeight : Int = -1;$/;"	v
realMinTx	heaps/h3d/col/Bounds.hx	/^		var realMinTx = Math.min(minTx, maxTx);$/;"	v
realMinTy	heaps/h3d/col/Bounds.hx	/^		var realMinTy = Math.min(minTy, maxTy);$/;"	v
realMinTz	heaps/h3d/col/Bounds.hx	/^		var realMinTz = Math.min(minTz, maxTz);$/;"	v
realMinWidth	heaps/h2d/Flow.hx	/^	var realMinWidth : Int = -1;$/;"	v
realRoot	heaps/h3d/mat/MaterialDatabase.hx	/^		var realRoot = root;$/;"	v
realX	heaps/h2d/Particles.hx	/^		var realX : Float = absX;$/;"	v
realY	heaps/h2d/Particles.hx	/^		var realY : Float = absY;$/;"	v
realloc	heaps/h3d/mat/Texture.hx	/^	public var realloc : Void -> Void;$/;"	v
rebuild	heaps/h2d/Particles.hx	/^	public function rebuild() {$/;"	f
rebuild	heaps/h2d/Text.hx	/^	function rebuild() {$/;"	f
rebuild	heaps/h3d/mat/BigTexture.hx	/^	function rebuild() {$/;"	f
rebuild	heaps/h3d/parts/GpuParticles.hx	/^	public function rebuild() {$/;"	f
rebuild	heaps/hxd/fmt/pak/Build.hx	/^	public static function rebuild( pak : Data, bytes : Array<haxe.io.Bytes> ) {$/;"	f
rebuild	heaps/tools/hxsl/Main.hx	/^	function rebuild() {$/;"	f
rebuildAll	heaps/h3d/parts/GpuParticles.hx	/^	function rebuildAll(cam) {$/;"	f
rebuildOnChange	heaps/h2d/Particles.hx	/^	public var rebuildOnChange : Bool = true;$/;"	v
recalTime	heaps/h3d/impl/Benchmark.hx	/^	public var recalTime = 1e9;$/;"	v
receiveShadows	heaps/h3d/mat/Material.hx	/^	public var receiveShadows(default, set) : Bool;$/;"	v
recompileRT	heaps/hxsl/CacheFile.hx	/^	var recompileRT : Bool;$/;"	v
recomputeNormals	heaps/h3d/prim/HMDModel.hx	/^	public function recomputeNormals( ?name : String ) {$/;"	f
rectColor	heaps/h2d/TileGroup.hx	/^	public inline function rectColor( x : Float, y : Float, w : Float, h : Float, color : Int ) {$/;"	f
rectGradient	heaps/h2d/TileGroup.hx	/^	public inline function rectGradient( x : Float, y : Float, w : Float, h : Float, ctl : Int, ctr/;"	f
rectHeight	heaps/samples/Interactive2D.hx	/^	static inline var rectHeight : Int = 32;$/;"	v
rectShape	heaps/samples/Interactive2D.hx	/^	var rectShape : RoundRect;$/;"	v
rectWidth	heaps/samples/Interactive2D.hx	/^	static inline var rectWidth : Int = 64; \/\/ *2$/;"	v
rectY	heaps/samples/Interactive2D.hx	/^	static inline var rectY : Int = 32;$/;"	v
rects	heaps/h3d/impl/DirectXDriver.hx	/^	var rects : hl.BytesAccess<Int> = new hl.Bytes(4 * RECTS_ELTS);$/;"	v
recvChan	heaps/hxd/Worker.hx	/^	var recvChan : flash.system.MessageChannel;$/;"	v
red	heaps/samples/AdjustColor.hx	/^			var red = (i + 1) & 1;$/;"	v
redCutoff	heaps/h2d/col/PixelsCollider.hx	/^	public var redCutoff : Int;$/;"	v
redPos	heaps/h3d/mat/Texture.hx	/^		var redPos = hxd.Pixels.getChannelOffset(alpha.format, R);$/;"	v
redo	heaps/h2d/TextInput.hx	/^	var redo : Array<TextHistoryElement> = [];$/;"	v
redraw	heaps/h2d/CdbLevel.hx	/^	public function redraw() {$/;"	f
redraw	heaps/samples/GraphicsDraw.hx	/^	function redraw(t:h3d.mat.Texture) {$/;"	f
redraw	heaps/samples/SampleApp.hx	/^		function redraw() {$/;"	f
redrawGraphics	heaps/samples/Interactive2D.hx	/^	function redrawGraphics() {$/;"	f
redrawLayer	heaps/h2d/CdbLevel.hx	/^	function redrawLayer( l : LevelLayer ) {$/;"	f
ref	heaps/h3d/impl/DirectXDriver.hx	/^			var ref = st == null ? 0 : st.reference;$/;"	v
ref	heaps/hxd/Pixels.hx	/^		var ref = pixels[0];$/;"	v
ref	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var ref = o.skin == null ? o : o.skin;$/;"	v
ref	heaps/hxd/res/DynamicText.hx	/^					var ref = ref == null ? null : refIds.get(id);$/;"	v
ref	heaps/hxd/res/DynamicText.hx	/^		var ref = reference == null ? null : new Access(Xml.parse(reference).firstElement());$/;"	v
ref	heaps/hxsl/Ast.hx	/^	var ref : TVar;$/;"	v
refCount	heaps/h3d/prim/Primitive.hx	/^	public var refCount(default, null) : Int = 0;$/;"	v
refIds	heaps/hxd/res/DynamicText.hx	/^		var refIds = null;$/;"	v
refVolume	heaps/hxd/fmt/hmd/Library.hx	/^			var refVolume = bounds.getVolume();$/;"	v
referenceDistance	heaps/hxd/snd/effect/Spatialization.hx	/^	public var referenceDistance : Float;$/;"	v
reflect	heaps/h3d/Vector.hx	/^	public inline function reflect( n : Vector ) {$/;"	f
reflectVec	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var reflectVec = reflect(-view, transformedNormal);$/;"	v
reflectVec	heaps/h3d/shader/pbr/Lighting.hx	/^					var reflectVec = reflect(-view, normal);$/;"	v
reflection	heaps/h3d/shader/CubeMap.hx	/^		@const var reflection : Bool;$/;"	v
reflections	heaps/hxd/snd/effect/Reverb.hx	/^	public var reflections       : Float; \/\/ [-10000, 1000] mb$/;"	v
reflections	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var reflections       : Float;$/;"	v
reflectionsDelay	heaps/hxd/snd/effect/Reverb.hx	/^	public var reflectionsDelay  : Float; \/\/ [0.0, 0.3] s$/;"	v
reflectionsDelay	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var reflectionsDelay  : Float;$/;"	v
reflow	heaps/h2d/Flow.hx	/^	public function reflow() {$/;"	f
refresh	heaps/h3d/scene/Sphere.hx	/^	function refresh() {$/;"	f
refreshBounds	heaps/samples/HtmlText.hx	/^	public function refreshBounds() {$/;"	f
refreshBounds	heaps/samples/Text.hx	/^	public function refreshBounds() {$/;"	f
refreshProps	heaps/h3d/mat/Material.hx	/^	override function refreshProps() {$/;"	f
refreshProps	heaps/h3d/mat/PbrMaterial.hx	/^	override function refreshProps() {$/;"	f
refreshProps	heaps/h3d/scene/pbr/Renderer.hx	/^	override function refreshProps() {$/;"	f
refreshProps	heaps/hxd/impl/AnyProps.hx	/^	public function refreshProps() {$/;"	f
refs	heaps/hxd/snd/Effect.hx	/^	var refs       : Int;$/;"	v
refs	heaps/hxd/snd/Manager.hx	/^	public var refs     : Int;$/;"	v
reg	heaps/h2d/KeyFrames.hx	/^				var reg = ~\/(.*?)\\[([0-9]+)-([0-9]+)\\](.*)\/;$/;"	v
reg	heaps/h3d/impl/GlDriver.hx	/^		var reg = ~\/ES ([0-9]+\\.[0-9]+)\/;$/;"	v
reg	heaps/h3d/impl/GlDriver.hx	/^		var reg = ~\/[0-9]+\\.[0-9]+\/;$/;"	v
reg	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var reg = ~\/ *?([0-9a-zA-Z]+)=("[^"]+"|.+?)(?:[ \\r]|$)\/;$/;"	v
reg	heaps/hxsl/AgalOptim.hx	/^			var reg = usedRegs[rid];$/;"	v
reg	heaps/hxsl/AgalOptim.hx	/^		var reg = new Reg(null, 0, []);$/;"	v
reg	heaps/hxsl/AgalOptim.hx	/^		var reg = usedRegs[found];$/;"	v
reg	heaps/hxsl/AgalOut.hx	/^	function reg( v : TVar ) : Reg {$/;"	f
reg	heaps/tools/hxsl/Main.hx	/^			var reg = ~\/[0-9]+\\.[0-9]+\/;$/;"	v
regEffect	heaps/hxd/snd/Manager.hx	/^	static function regEffect(list : Effect, e : Effect) : Effect {$/;"	f
regSign	heaps/hxsl/AgalOptim.hx	/^		inline function regSign(r:Reg) {$/;"	f
regSign	heaps/hxsl/AgalOptim.hx	/^	function regSign(r:Reg) {$/;"	f
regSize	heaps/hxsl/AgalOut.hx	/^	function regSize( t : Type ) {$/;"	f
regVar	heaps/hxsl/Printer.hx	/^			function regVar( v : TVar, reg ) {$/;"	f
regVars	heaps/hxsl/Printer.hx	/^			var regVars = [];$/;"	v
register	heaps/hxd/fs/Convert.hx	/^	public static function register( c : Convert ) : Int {$/;"	f
regress	heaps/h2d/col/Polynomial.hx	/^	public static function regress( xVals : Array<Float>, yVals : Array<Float>, degree : Int ) : Ar/;"	f
regs	heaps/hxsl/AgalOptim.hx	/^	var regs : Array<RegInfos>;$/;"	v
regs	heaps/hxsl/AgalOut.hx	/^			var regs = [regs[i]];$/;"	v
regs	heaps/hxsl/AgalOut.hx	/^		var regs = [for( a in args ) expr(a)];$/;"	v
relPath	heaps/hxd/File.hx	/^					var relPath = basePath.getRelativePath(f, true);$/;"	v
relPath	heaps/hxd/File.hx	/^				var relPath = basePath.getRelativePath(f, true);$/;"	v
relPath	heaps/hxd/fmt/pak/FileSystem.hx	/^	var relPath : String;$/;"	v
relPath	heaps/hxd/fs/EmbedFileSystem.hx	/^	var relPath : String;$/;"	v
relPath	heaps/hxd/fs/LocalFileSystem.hx	/^	var relPath : String;$/;"	v
relPath	heaps/hxd/res/FileTree.hx	/^	var relPath : String;$/;"	v
relX	heaps/hxd/Event.hx	/^	public var relX : Float;$/;"	v
relY	heaps/hxd/Event.hx	/^	public var relY : Float;$/;"	v
relZ	heaps/hxd/Event.hx	/^	public var relZ : Float;$/;"	v
relativePosition	heaps/h3d/shader/BaseMesh.hx	/^		var relativePosition : Vec3;$/;"	v
relativePosition	heaps/h3d/shader/SkinBase.hx	/^		var relativePosition : Vec3;$/;"	v
release	heaps/hxd/snd/Driver.hx	/^	public function release () : Void {};$/;"	f
release	heaps/hxd/snd/openal/LowPassDriver.hx	/^	override function release() : Void {$/;"	f
release	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function release() : Void {$/;"	f
releaseAuxiliarySend	heaps/hxd/snd/openal/AudioTypes.hx	/^	public function releaseAuxiliarySend(effect : Effect) : Int {$/;"	f
releaseChannel	heaps/hxd/snd/Manager.hx	/^	function releaseChannel(c : Channel) {$/;"	f
releaseSource	heaps/hxd/snd/Manager.hx	/^	function releaseSource(s : Source) {$/;"	f
releasenote	heaps/haxelib.json	/^	"releasenote" : "See CHANGELOG.md",$/;"	s
rem	heaps/h3d/impl/MemoryManager.hx	/^			var rem = b.vertices - max;$/;"	v
rem	heaps/hxsl/Cache.hx	/^			var rem = size;$/;"	v
rem	heaps/hxsl/Flatten.hx	/^			var rem = 0;$/;"	v
remSize	heaps/h2d/Flow.hx	/^						var remSize = p.calculatedHeight + remSize(i + 1);$/;"	v
remSize	heaps/h2d/Flow.hx	/^						var remSize = p.calculatedWidth + remSize(i + 1);$/;"	v
remSize	heaps/h2d/Flow.hx	/^			inline function remSize(from: Int) {$/;"	f
remain	heaps/hxd/res/NanoJpeg.hx	/^			var remain = 65536, spread = 65536;$/;"	v
remain	heaps/hxd/snd/Manager.hx	/^		var remain = end - s.streamPos;$/;"	v
remapReg	heaps/hxsl/AgalOptim.hx	/^	function remapReg( r : Reg, write : Bool ) {$/;"	f
remove	heaps/h2d/Camera.hx	/^	public inline function remove() {$/;"	f
remove	heaps/h2d/CdbLevel.hx	/^	public function remove() {$/;"	f
remove	heaps/h2d/Object.hx	/^	public inline function remove() {$/;"	f
remove	heaps/h2d/SpriteBatch.hx	/^	public function remove() {$/;"	f
remove	heaps/h2d/filter/Group.hx	/^	public function remove( f : Filter ) {$/;"	f
remove	heaps/h3d/parts/Particle.hx	/^	public function remove() {$/;"	f
remove	heaps/h3d/scene/Object.hx	/^	public inline function remove() {$/;"	f
remove	heaps/hxd/WaitEvent.hx	/^	public function remove( callb : Float->Bool ) {$/;"	f
removeBeachsection	heaps/h2d/col/Voronoi.hx	/^	function removeBeachsection(beachsection:Beachsection) {$/;"	f
removeCamera	heaps/h2d/Scene.hx	/^	public function removeCamera( cam : Camera ) {$/;"	f
removeChild	heaps/h2d/Flow.hx	/^	override public function removeChild(s:Object) {$/;"	f
removeChild	heaps/h2d/Layers.hx	/^	override function removeChild( s : Object ) {$/;"	f
removeChild	heaps/h2d/Object.hx	/^	public function removeChild( s : Object ) {$/;"	f
removeChild	heaps/h3d/scene/Object.hx	/^	public function removeChild( o : Object ) {$/;"	f
removeChildren	heaps/h2d/Flow.hx	/^	override function removeChildren() {$/;"	f
removeChildren	heaps/h2d/Object.hx	/^	public function removeChildren() {$/;"	f
removeChildren	heaps/h3d/scene/Object.hx	/^	public function removeChildren() {$/;"	f
removeCullingCollider	heaps/samples/Lights.hx	/^	function removeCullingCollider() {$/;"	f
removeEffect	heaps/hxd/snd/ChannelBase.hx	/^	public function removeEffect( e : Effect ) {$/;"	f
removeEventListener	heaps/h2d/Scene.hx	/^	public function removeEventListener( f : hxd.Event -> Void ) {$/;"	f
removeEventListener	heaps/h3d/scene/Scene.hx	/^	public function removeEventListener( f : hxd.Event -> Void ) {$/;"	f
removeEventTarget	heaps/h2d/Scene.hx	/^	function removeEventTarget(i,notify=false) {$/;"	f
removeEventTarget	heaps/h3d/scene/Scene.hx	/^	function removeEventTarget(i:Interactive) {$/;"	f
removeEventTarget	heaps/hxd/Window.flash.hx	/^	public function removeEventTarget( et : Event->Void ) : Void {$/;"	f
removeEventTarget	heaps/hxd/Window.hl.hx	/^	public function removeEventTarget(et : Event -> Void) : Void {$/;"	f
removeEventTarget	heaps/hxd/Window.hx	/^	public function removeEventTarget( et : Event->Void ) : Void {$/;"	f
removeEventTarget	heaps/hxd/Window.js.hx	/^	public function removeEventTarget( et : Event->Void ) : Void {$/;"	f
removeGroup	heaps/h2d/Particles.hx	/^	public function removeGroup( g : ParticleGroup ) {$/;"	f
removeGroup	heaps/h3d/parts/GpuParticles.hx	/^	public function removeGroup( g : GpuPartGroup ) {$/;"	f
removeLink	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function removeLink( parent : FbxNode, child : FbxNode ) {$/;"	f
removeNode	heaps/hxd/earcut/Earcut.hx	/^	inline function removeNode(p:EarNode) {$/;"	f
removeNode	heaps/hxd/poly2tri/SweepContext.hx	/^	public function removeNode(node:Node)$/;"	f
removeObject	heaps/h2d/domkit/Style.hx	/^	public function removeObject(obj) {$/;"	f
removePass	heaps/h3d/mat/BaseMaterial.hx	/^	public function removePass( p : Pass ) {$/;"	f
removeResizeEvent	heaps/hxd/Window.flash.hx	/^	public function removeResizeEvent( f : Void -> Void ) : Void {$/;"	f
removeResizeEvent	heaps/hxd/Window.hl.hx	/^	public function removeResizeEvent( f : Void -> Void ) : Void {$/;"	f
removeResizeEvent	heaps/hxd/Window.hx	/^	public function removeResizeEvent( f : Void -> Void ) : Void {$/;"	f
removeResizeEvent	heaps/hxd/Window.js.hx	/^	public function removeResizeEvent( f : Void -> Void ) : Void {$/;"	f
removeScene	heaps/hxd/SceneEvents.hx	/^	public function removeScene( s : InteractiveScene ) {$/;"	f
removeShader	heaps/h2d/Drawable.hx	/^	public function removeShader( s : hxsl.Shader ) {$/;"	f
removeShader	heaps/h3d/mat/Pass.hx	/^	public function removeShader(s) {$/;"	f
removeShader	heaps/h3d/pass/ScreenFx.hx	/^	public function removeShader(s:hxsl.Shader) {$/;"	f
removed	heaps/hxd/res/FileTree.hx	/^				var removed = false;$/;"	v
removedObjects	heaps/hxd/fmt/fbx/Filter.hx	/^	var removedObjects : Map<Int,Bool>;$/;"	v
render	heaps/h2d/Scene.hx	/^	public function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/Engine.hx	/^	public function render( obj : { function render( engine : Engine ) : Void; } ) {$/;"	f
render	heaps/h3d/IDrawable.hx	/^	public function render( engine : Engine ) : Void;$/;"	f
render	heaps/h3d/impl/GlDriver.hx	/^		var render = gl.getParameter(GL.RENDERER);$/;"	v
render	heaps/h3d/pass/ScreenFx.hx	/^	public function render() {$/;"	f
render	heaps/h3d/prim/BigPrimitive.hx	/^	override function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/DynamicPrimitive.hx	/^	override public function render(engine:h3d.Engine) {$/;"	f
render	heaps/h3d/prim/HMDModel.hx	/^	override function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/Instanced.hx	/^	override function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/MeshPrimitive.hx	/^	override function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/Plane2D.hx	/^	override function render(engine:h3d.Engine) {$/;"	f
render	heaps/h3d/prim/Polygon.hx	/^	override function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/Primitive.hx	/^	public function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/prim/Quads.hx	/^	override function render(engine) {$/;"	f
render	heaps/h3d/scene/Renderer.hx	/^	function render() {$/;"	f
render	heaps/h3d/scene/Scene.hx	/^	public function render( engine : h3d.Engine ) {$/;"	f
render	heaps/h3d/scene/fwd/Renderer.hx	/^	override function render() {$/;"	f
render	heaps/h3d/scene/pbr/Renderer.hx	/^	override function render() {$/;"	f
render	heaps/hxd/App.hx	/^	public function render(e:h3d.Engine) {$/;"	f
render	heaps/hxd/fmt/pak/Loader.hx	/^	function render() {$/;"	f
render	heaps/samples/Camera2D.hx	/^	override function render(e:Engine) {$/;"	f
render	heaps/samples/Sao.hx	/^	override function render() {$/;"	f
render	heaps/samples/Sao.hx	/^	override function render(e:h3d.Engine) {$/;"	f
renderBuffer	heaps/h3d/Engine.hx	/^	function renderBuffer( b : Buffer, indexes : Indexes, vertPerTri : Int, startTri = 0, drawTri =/;"	f
renderH	heaps/h2d/RenderContext.hx	/^	var renderH : Float;$/;"	v
renderIndexed	heaps/h3d/Engine.hx	/^	public function renderIndexed( b : Buffer, indexes : Indexes, startTri = 0, drawTri = -1 ) {$/;"	f
renderInstanced	heaps/h3d/Engine.hx	/^	public function renderInstanced( buffers : Buffer.BufferOffset, indexes : Indexes, commands : h/;"	f
renderLightProbes	heaps/h3d/scene/pbr/Renderer.hx	/^	function renderLightProbes() {$/;"	f
renderMode	heaps/h3d/scene/Renderer.hx	/^	public var renderMode : RenderMode = Default;$/;"	v
renderMultiBuffers	heaps/h3d/Engine.hx	/^	public function renderMultiBuffers( buffers : Buffer.BufferOffset, indexes : Indexes, startTri /;"	f
renderPass	heaps/h3d/scene/fwd/Renderer.hx	/^	function renderPass(p:h3d.pass.Base, passes, ?sort) {$/;"	f
renderPass	heaps/h3d/scene/pbr/Renderer.hx	/^	function renderPass(p:h3d.pass.Base, passes, ?sort) {$/;"	f
renderPass	heaps/samples/Sao.hx	/^	override function renderPass(p:h3d.pass.Base, passes, ?sort) {$/;"	f
renderQuadBuffer	heaps/h3d/Engine.hx	/^	public inline function renderQuadBuffer( b : Buffer, start = 0, max = -1 ) {$/;"	f
renderTargets	heaps/h3d/impl/Stage3dDriver.hx	/^	var renderTargets : Int;$/;"	v
renderTriBuffer	heaps/h3d/Engine.hx	/^	public inline function renderTriBuffer( b : Buffer, start = 0, max = -1 ) {$/;"	f
renderW	heaps/h2d/RenderContext.hx	/^	var renderW : Float;$/;"	v
renderX	heaps/h2d/RenderContext.hx	/^	var renderX : Float;$/;"	v
renderY	heaps/h2d/RenderContext.hx	/^	var renderY : Float;$/;"	v
renderZoneIndex	heaps/h2d/RenderContext.hx	/^	var renderZoneIndex:Int = 0;$/;"	v
renderZoneStack	heaps/h2d/RenderContext.hx	/^	var renderZoneStack:Array<RenderZoneStack> = [];$/;"	v
rendered	heaps/h3d/scene/Renderer.hx	/^	public var rendered : Bool;$/;"	v
renderer	heaps/h2d/Scene.hx	/^	public var renderer(get, set) : RenderContext;$/;"	v
renderer	heaps/h3d/scene/Scene.hx	/^	public var renderer(default,set) : Renderer;$/;"	v
renderer	heaps/samples/Pbr.hx	/^	var renderer : h3d.scene.pbr.Renderer;$/;"	v
renderer	heaps/samples/Sao.hx	/^	var renderer : CustomRenderer;$/;"	v
repeat	heaps/hxd/Perlin.hx	/^	public var repeat : Int;$/;"	v
replaceGL	heaps/h3d/impl/MacroHelper.hx	/^	public static function replaceGL() {$/;"	f
replaceGLLoop	heaps/h3d/impl/MacroHelper.hx	/^	static function replaceGLLoop( e : Expr ) {$/;"	f
replaceRec	heaps/hxd/res/DynamicText.hx	/^				function replaceRec(obj:Dynamic,f,str) {$/;"	f
reportCameraParameterChangedAfterSync	heaps/samples/Camera2D.hx	/^	var reportCameraParameterChangedAfterSync : Bool = false;$/;"	v
reportError	heaps/hxd/System.hl.hx	/^		var reportError = function(e) reportError(e);$/;"	v
reportError	heaps/hxd/System.hl.hx	/^		var reportError = function(e:Dynamic) reportError(Std.isOfType(e,haxe.Exception)?e:new haxe.Ex/;"	v
req	heaps/h3d/prim/BigPrimitive.hx	/^			var req = idxPos + icount;$/;"	v
req	heaps/hxd/net/Socket.hx	/^		var req = pos + len + recv;$/;"	v
reqSize	heaps/hxd/snd/Manager.hx	/^		var reqSize = STREAM_BUFFER_SAMPLE_COUNT * bpp;$/;"	v
request	heaps/samples/templates/.vscode/launch.json	/^			"request": "launch",$/;"	s	object:configurations.0
request	heaps/samples/templates/.vscode/launch.json	/^			"request": "launch",$/;"	s	object:configurations.1
request	heaps/samples/templates/.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.2
requireInit	heaps/hxsl/Splitter.hx	/^	public var requireInit : Bool;$/;"	v
res	heaps/h2d/CdbLevel.hx	/^	public var res : hxd.res.Image;$/;"	v
res	heaps/h2d/domkit/BaseComponents.hx	/^		var res = loadResource(path);$/;"	v
res	heaps/h3d/col/ObjectCollider.hx	/^		var res = collider.inSphere(s);$/;"	v
res	heaps/h3d/col/Sphere.hx	/^		var res = f.hasSphere(this);$/;"	v
res	heaps/h3d/col/TransformCollider.hx	/^		var res = collider.inSphere(s);$/;"	v
res	heaps/h3d/impl/DirectXDriver.hx	/^		var res = dx.Driver.createBuffer(count << bits, Default, IndexBuffer, None, None, 0, null);$/;"	v
res	heaps/h3d/impl/DirectXDriver.hx	/^		var res = uniform ? dx.Driver.createBuffer(size, Dynamic, ConstantBuffer, CpuWrite, None, 0, n/;"	v
res	heaps/h3d/scene/World.hx	/^			var res = resolveNormalMap(texturePath, mat);$/;"	v
res	heaps/h3d/scene/World.hx	/^			var res = resolveSpecularTexture(texturePath, mat);$/;"	v
res	heaps/hxd/clipper/Clipper.hx	/^		var res = GetHorzDirection(horzEdge);$/;"	v
res	heaps/hxd/clipper/Clipper.hx	/^          var res = PointInPolygon2(op.pt, outPt2);$/;"	v
res	heaps/hxd/fmt/grd/Reader.hx	/^		var res = "";$/;"	v
res	heaps/hxd/fmt/grd/Reader.hx	/^		var res = new Array<Dynamic>();$/;"	v
res	heaps/hxd/res/Loader.hx	/^		var res : T = cache.get(path);$/;"	v
res	heaps/samples/Sound.hx	/^		var res = if( hxd.res.Sound.supportedFormat(Mp3) || hxd.res.Sound.supportedFormat(OggVorbis) )/;"	v
resCount	heaps/hxd/fmt/pak/Loader.hx	/^	var resCount : Int = 0;$/;"	v
resPath	heaps/hxd/fmt/pak/Build.hx	/^	public var resPath : String = "res";$/;"	v
resample	heaps/hxd/snd/Data.hx	/^		var resample = samples != newSamples;$/;"	v
resample	heaps/hxd/snd/Data.hx	/^	public function resample( rate : Int, format : SampleFormat, channels : Int ) : Data {$/;"	f
resample	heaps/hxd/snd/OggData.hx	/^	override function resample(rate, format, channels):Data {$/;"	f
resample	heaps/hxd/snd/OggData.hx	/^	override function resample(rate:Int, format:Data.SampleFormat, channels:Int):Data  {$/;"	f
resampleBuffer	heaps/hxd/snd/Data.hx	/^	public function resampleBuffer( out : haxe.io.Bytes, outPos : Int, input : haxe.io.Bytes, inPos/;"	f
resampleBytes	heaps/hxd/snd/Manager.hx	/^			var resampleBytes = getResampleBytes(size);$/;"	v
resampleBytes	heaps/hxd/snd/Manager.hx	/^	var resampleBytes : haxe.io.Bytes;$/;"	v
reservePoints	heaps/h3d/scene/Trail.hx	/^		var reservePoints = Math.ceil(duration * hxd.Timer.wantedFPS);$/;"	v
reset	heaps/h2d/col/Voronoi.hx	/^	public function reset() {$/;"	f
reset	heaps/h3d/impl/DirectXDriver.hx	/^	function reset() {$/;"	f
reset	heaps/h3d/impl/Stage3dDriver.hx	/^	function reset() {$/;"	f
reset	heaps/h3d/mat/TextureChannels.hx	/^	function reset() {$/;"	f
reset	heaps/h3d/pass/PassList.hx	/^	public inline function reset() {$/;"	f
reset	heaps/hxd/Cursor.hx	/^	public function reset() : Void {$/;"	f
reset	heaps/hxd/Pad.hx	/^	public function reset() {$/;"	f
reset	heaps/hxd/Timer.hx	/^	public static function reset() {$/;"	f
reset	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function reset() {$/;"	f
reset	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	public function reset()$/;"	f
reset	heaps/hxsl/AgalOptim.hx	/^	public inline function reset() {$/;"	f
reset	heaps/samples/Particles2d.hx	/^	function reset() {$/;"	f
reset	heaps/samples/Sao.hx	/^	function reset() {$/;"	f
resetChannels	heaps/hxsl/Globals.hx	/^	public inline function resetChannels() {$/;"	f
resetCommands	heaps/h2d/Console.hx	/^	public function resetCommands() {$/;"	f
resetProps	heaps/h3d/mat/PbrMaterial.hx	/^	function resetProps() {$/;"	f
resetStream	heaps/h3d/impl/GlDriver.hx	/^	function resetStream() {$/;"	f
resetTarget	heaps/h3d/scene/Renderer.hx	/^	function resetTarget() {$/;"	f
resize	heaps/h3d/Engine.hx	/^	public function resize(width, height) {$/;"	f
resize	heaps/h3d/impl/DirectXDriver.hx	/^	override function resize(width:Int, height:Int)  {$/;"	f
resize	heaps/h3d/impl/Driver.hx	/^	public function resize( width : Int, height : Int ) {$/;"	f
resize	heaps/h3d/impl/GlDriver.hx	/^	override function resize(width, height) {$/;"	f
resize	heaps/h3d/impl/LogDriver.hx	/^	override function resize( width : Int, height : Int ) {$/;"	f
resize	heaps/h3d/impl/Stage3dDriver.hx	/^	override function resize(width, height) {$/;"	f
resize	heaps/h3d/mat/Texture.hx	/^	public function resize(width, height) {$/;"	f
resize	heaps/hxd/FloatBuffer.hx	/^	public inline function resize( v : Int ) {$/;"	f
resize	heaps/hxd/Window.flash.hx	/^	public function resize( width : Int, height : Int ) : Void {$/;"	f
resize	heaps/hxd/Window.hl.hx	/^	public function resize( width : Int, height : Int ) : Void {$/;"	f
resize	heaps/hxd/Window.hx	/^	public function resize( width : Int, height : Int ) : Void {$/;"	f
resize	heaps/hxd/Window.js.hx	/^	public function resize( width : Int, height : Int ) : Void {$/;"	f
resizeEvents	heaps/hxd/Window.flash.hx	/^	var resizeEvents : List<Void -> Void>;$/;"	v
resizeEvents	heaps/hxd/Window.hl.hx	/^	var resizeEvents : List<Void -> Void>;$/;"	v
resizeEvents	heaps/hxd/Window.hx	/^	var resizeEvents : List<Void -> Void>;$/;"	v
resizeEvents	heaps/hxd/Window.js.hx	/^	var resizeEvents : List<Void -> Void>;$/;"	v
resizeTo	heaps/h2d/Font.hx	/^	public function resizeTo( size : Int ) {$/;"	f
resizeWidgets	heaps/samples/HtmlText.hx	/^	var resizeWidgets: Array<HtmlTextWidget> = [];$/;"	v
resizeWidgets	heaps/samples/Text.hx	/^	var resizeWidgets: Array<TextWidget> = [];$/;"	v
resolutionScale	heaps/h2d/filter/AbstractMask.hx	/^		var resolutionScale = ctx.getFilterScale(@:privateAccess h2d.Object.tmpPoint);$/;"	v
resolutionScale	heaps/h2d/filter/Filter.hx	/^	public var resolutionScale(default, set):Float = 1;$/;"	v
resolve	heaps/hxd/fs/EmbedFileSystem.hx	/^	static function resolve( path : String ) {$/;"	f
resolve	heaps/hxd/res/DynamicText.hx	/^			public static inline function resolve( key : String ) : Dynamic {$/;"	f
resolve	heaps/hxd/res/FileTree.hx	/^		var resolve = true;$/;"	v
resolveChar	heaps/hxd/Charset.hx	/^	public function resolveChar<T>( code : Int, glyphs : Map<Int,T> ) : Null<T> {$/;"	f
resolveNormalMap	heaps/h3d/scene/World.hx	/^	function resolveNormalMap( path : String, mat : hxd.fmt.hmd.Data.Material) : hxd.res.Image {$/;"	f
resolvePaths	heaps/hxd/res/FileTree.hx	/^	public static function resolvePaths( ?dir:String ) {$/;"	f
resolveSdfTile	heaps/hxd/res/BitmapFont.hx	/^	function resolveSdfTile( path : String ) : h2d.Tile {$/;"	f
resolveShader	heaps/hxsl/CacheFile.hx	/^	function resolveShader( name : String ) : hxsl.Shader {$/;"	f
resolveShader	heaps/hxsl/CacheFileBuilder.hx	/^	override function resolveShader(name:String):hxsl.Shader {$/;"	f
resolveSpecularTexture	heaps/h3d/scene/World.hx	/^	function resolveSpecularTexture( path : String, mat : hxd.fmt.hmd.Data.Material) : hxd.res.Imag/;"	f
resolveTexturePath	heaps/h3d/scene/World.hx	/^	function resolveTexturePath( r : hxd.res.Model, mat : hxd.fmt.hmd.Data.Material ) {$/;"	f
resolveTile	heaps/hxd/fs/Convert.hx	/^	function resolveTile( path : String ) : h2d.Tile {$/;"	f
resolveTile	heaps/hxd/res/BitmapFont.hx	/^	function resolveTile( path : String ) : h2d.Tile {$/;"	f
resolveTileSameName	heaps/hxd/fmt/bfnt/FontParser.hx	/^		inline function resolveTileSameName() {$/;"	f
resolveTileWithFallback	heaps/hxd/fmt/bfnt/FontParser.hx	/^		inline function resolveTileWithFallback( tilePath : String ) {$/;"	f
resolveTileset	heaps/h2d/CdbLevel.hx	/^	function resolveTileset( tdat : TileSpec ) {$/;"	f
resource	heaps/hxd/fmt/hmd/Library.hx	/^	public var resource(default,null) : hxd.res.Resource;$/;"	v
resourcePath	heaps/h2d/Particles.hx	/^	var resourcePath : String;$/;"	v
resourcePath	heaps/h3d/anim/Animation.hx	/^	public var resourcePath : String;$/;"	v
resourcePath	heaps/h3d/parts/GpuParticles.hx	/^	var resourcePath : String;$/;"	v
resources	heaps/h2d/domkit/Style.hx	/^	var resources : Array<hxd.res.Resource> = [];$/;"	v
resources	heaps/h3d/impl/DirectXDriver.hx	/^	public var resources = new hl.NativeArray<ShaderResourceView>(64);$/;"	v
restart	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function restart( source : SourceHandle ) {$/;"	f
restore	heaps/h3d/mat/TextureChannels.hx	/^	function restore() {$/;"	f
restoreBind	heaps/h3d/impl/GlDriver.hx	/^	function restoreBind() {$/;"	f
result	heaps/h2d/col/IPolygon.hx	/^		var result = [];$/;"	v
result	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var result = vec3(0);$/;"	v
result	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var result = (wpos.xyz \/ wpos.w);$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result : OutPt;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = allPolys.length;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = false;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = new OutPt();$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = new Rect();$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = null;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result = true;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result:Int = 0;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^		var result:OutRec = new OutRec();$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^        var result = 0;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^        var result = new IPolygon();$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^        var result = new IPolygons();$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^        var result = op.prev;$/;"	v
result	heaps/hxd/clipper/Clipper.hx	/^      var result = e.next;$/;"	v
result	heaps/hxd/earcut/Earcut.hx	/^		var result = triangles;$/;"	v
result	heaps/hxd/res/FontBuilder.hx	/^		var result = dummy.offsetHeight;$/;"	v
result	heaps/hxd/snd/Manager.hx	/^		var result = new Array<Channel>();$/;"	v
resultAlpha	heaps/h3d/shader/Outline2D.hx	/^			var resultAlpha = max(maxAlpha, ownColor.a);$/;"	v
resultColor	heaps/h3d/shader/Outline2D.hx	/^			var resultColor = ownColor.rgb + color.rgb * (1. - ownColor.a);$/;"	v
resultKind	heaps/hxd/clipper/Clipper.hx	/^	public var resultKind : ResultKind;$/;"	v
resumeContext	heaps/hxd/snd/webaudio/Context.hx	/^	static function resumeContext(_) {$/;"	f
ret	heaps/h2d/filter/DropShadow.hx	/^		var ret = h2d.Tile.fromTexture(save);$/;"	v
ret	heaps/h3d/col/Bounds.hx	/^		var ret = 1;$/;"	v
ret	heaps/h3d/col/Collider.hx	/^		var ret : h3d.scene.Object = null;$/;"	v
ret	heaps/h3d/col/Collider.hx	/^		var ret = new h3d.scene.Object();$/;"	v
ret	heaps/h3d/col/ObjectCollider.hx	/^		var ret = collider.makeDebugObj();$/;"	v
ret	heaps/h3d/col/Polygon.hx	/^		var ret : Array<Point> = [];$/;"	v
ret	heaps/h3d/col/SkinCollider.hx	/^		var ret = new SkinColliderDebugObj(this);$/;"	v
ret	heaps/h3d/impl/LogDriver.hx	/^		var ret = d.selectShader(shader);$/;"	v
ret	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var ret = try Sys.command("mikktspace",[fileName,outFile]) catch( e : Dynamic ) -1;$/;"	v
ret	heaps/hxd/fmt/pak/Build.hx	/^		var ret = Sys.command(cmd, args);$/;"	v
ret	heaps/hxd/poly2tri/Point.hx	/^		var ret = l.y - r.y;$/;"	v
ret	heaps/hxsl/Ast.hx	/^	var ret : Null<Type>;$/;"	v
ret	heaps/hxsl/Ast.hx	/^	var ret : Type;$/;"	v
retainTime	heaps/hxd/snd/Effect.hx	/^	var retainTime : Float;$/;"	v
retargetAnim	heaps/h3d/anim/Skin.hx	/^	public var retargetAnim : Bool;$/;"	v
retry	heaps/h3d/mat/BigTexture.hx	/^	function retry( pixels ) {$/;"	f
reverb	heaps/hxd/snd/effect/Reverb.hx	/^	public var reverb            : Float; \/\/ [-10000, 2000] mb$/;"	v
reverb	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var reverb            : Float;$/;"	v
reverbDelay	heaps/hxd/snd/effect/Reverb.hx	/^	public var reverbDelay       : Float; \/\/ [0.0, 0.1] s$/;"	v
reverbDelay	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var reverbDelay       : Float;$/;"	v
reverse	heaps/h2d/Flow.hx	/^	public var reverse(default,set) : Bool = false;$/;"	v
reverse	heaps/h2d/col/IPolygon.hx	/^	public function reverse() : Void {$/;"	f
reverse	heaps/h2d/col/Polygon.hx	/^	public function reverse() : Void {$/;"	f
reverse	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var reverse : Bool;$/;"	v
reverse1	heaps/hxd/clipper/Clipper.hx	/^			var reverse1 = (op1b.pt.y > j.offPt.y);$/;"	v
reverse2	heaps/hxd/clipper/Clipper.hx	/^			var reverse2 = (op2b.pt.y > j.offPt.y);$/;"	v
reversePolygons	heaps/hxd/clipper/Clipper.hx	/^	function reversePolygons(polys:IPolygons)$/;"	f
reverseSolution	heaps/hxd/clipper/Clipper.hx	/^	public var reverseSolution : Bool;$/;"	v
reversedFlow	heaps/samples/Flows.hx	/^	var reversedFlow : Array<Flow> = [];$/;"	v
reviveRuntime	heaps/hxsl/CacheFile.hx	/^	function reviveRuntime( r : RuntimeShader ) {$/;"	f
reviveRuntimeData	heaps/hxsl/CacheFile.hx	/^	function reviveRuntimeData( r : RuntimeShader, rd : hxsl.RuntimeShader.RuntimeShaderData ) {$/;"	f
rewrite	heaps/hxsl/AgalOptim.hx	/^				var rewrite = true;$/;"	v
rgbA	heaps/h3d/pass/FXAA.hx	/^			var rgbA = 0.5 * (texture.get(tuv + dir * (1.0 \/ 3.0 - 0.5)).xyz + texture.get(tuv + dir * (/;"	v
rgbB	heaps/h3d/pass/FXAA.hx	/^			var rgbB = rgbA * 0.5 + 0.25 * (texture.get(tuv + dir * -0.5).xyz + texture.get(tuv + dir * 0/;"	v
rgrad2	heaps/h3d/shader/NoiseLib.hx	/^function rgrad2(p:Vec2, rot:Float) : Vec2 {$/;"	f
rh	heaps/h2d/ScaleGrid.hx	/^			var rh = Std.int(innerHeight \/ unscaledInnerTileHeight);$/;"	v
ri	heaps/h3d/scene/pbr/Environment.hx	/^			var ri = _reversebits(i) * 2.3283064365386963e-10;$/;"	v
ri	heaps/hxsl/AgalOptim.hx	/^				var ri = allocTemp(4);$/;"	v
rid	heaps/hxd/fmt/hmd/Library.hx	/^				var rid = vmap[vid];$/;"	v
rid	heaps/hxsl/AgalOptim.hx	/^			var rid = (startReg + td) % usedRegs.length;$/;"	v
ridged	heaps/hxd/Perlin.hx	/^	public function ridged( seed : Int, x : Float, y : Float, octaves : Int, offset : Float = 0.5, /;"	f
right	heaps/h3d/Matrix.hx	/^    public inline function right() {$/;"	f
right	heaps/hxd/clipper/Rect.hx	/^	public var right : Int;$/;"	v
right	heaps/hxd/poly2tri/EdgeEvent.hx	/^	public var right:Bool;$/;"	v
right	heaps/hxd/snd/Mp3Data.hx	/^		var right = buf.numberOfChannels < 2 ? left : buf.getChannelData(1);$/;"	v
right	heaps/hxd/snd/NativeChannel.hx	/^		var right = buffer.getChannelData(1);$/;"	v
right	heaps/hxd/snd/webaudio/Driver.hx	/^					var right = buffer.inst.getChannelData(1);$/;"	v
right	heaps/samples/Pad.hx	/^	var right : h2d.Graphics;$/;"	v
rightBound	heaps/hxd/clipper/Clipper.hx	/^	public var rightBound : TEdge;$/;"	v
rightBreakPoint	heaps/h2d/col/Voronoi.hx	/^	function rightBreakPoint(arc:Beachsection, directrix) {$/;"	f
rightHandToLeft	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public static inline function rightHandToLeft( m : h3d.Matrix ) {$/;"	f
rightHanded	heaps/h3d/Camera.hx	/^	public var rightHanded : Bool;$/;"	v
rightHanded	heaps/h3d/impl/GlDriver.hx	/^	var rightHanded = false;$/;"	v
right_node	heaps/hxd/poly2tri/Basin.hx	/^	public var right_node:Node;$/;"	v
rlen	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var rlen = rot.length();$/;"	v
rmask	heaps/hxsl/AgalOptim.hx	/^			var rmask = 0;$/;"	v
rnd	heaps/h3d/parts/Emitter.hx	/^	var rnd : Float;$/;"	v
rnd	heaps/h3d/parts/GpuParticles.hx	/^	var rnd = new hxd.Rand(0);$/;"	v
rnd	heaps/samples/Interactive.hx	/^	var rnd : hxd.Rand;$/;"	v
ro	heaps/hxsl/AgalOut.hx	/^				var ro = allocReg();$/;"	v
roll	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var roll = c.roll == null ? null : new haxe.ds.Vector(numFrames);$/;"	v
roll	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var roll : { t : Array<Float>, v : Array<Float> };$/;"	v
rollOffFactor	heaps/hxd/snd/effect/Spatialization.hx	/^	public var rollOffFactor : Float;$/;"	v
rollUp	heaps/h2d/Dropdown.hx	/^	public var rollUp : Bool = false;$/;"	v
room	heaps/hxd/snd/effect/Reverb.hx	/^	public var room              : Float; \/\/ [-10000 0] mb$/;"	v
room	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var room              : Float;$/;"	v
roomHF	heaps/hxd/snd/effect/Reverb.hx	/^	public var roomHF            : Float; \/\/ [-10000, 0] mb$/;"	v
roomHF	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var roomHF            : Float;$/;"	v
roomRolloffFactor	heaps/hxd/snd/effect/Reverb.hx	/^	public var roomRolloffFactor : Float; \/\/ [0.0, 10.0]$/;"	v
roomRolloffFactor	heaps/hxd/snd/effect/ReverbPreset.hx	/^	public var roomRolloffFactor : Float;$/;"	v
root	heaps/h2d/col/Voronoi.hx	/^	public var root : T;$/;"	v
root	heaps/h3d/mat/MaterialDatabase.hx	/^				var root = prevs.pop();$/;"	v
root	heaps/h3d/mat/MaterialDatabase.hx	/^		var root : Dynamic = getModelData(material.model);$/;"	v
root	heaps/h3d/scene/World.hx	/^	public var root : h3d.scene.Object;$/;"	v
root	heaps/hxd/earcut/Earcut.hx	/^		var root = setLinkedList(points, 0, outerLen, true);$/;"	v
root	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var root : FbxNode;$/;"	v
root	heaps/hxd/fmt/fbx/Geometry.hx	/^	var root : FbxNode;$/;"	v
root	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var root = buildHierarchy().root;$/;"	v
root	heaps/hxd/fmt/pak/Data.hx	/^	public var root : File;$/;"	v
root	heaps/hxd/fmt/pak/FileSystem.hx	/^	var root : PakEntry;$/;"	v
root	heaps/hxd/fs/EmbedFileSystem.hx	/^	var root : Dynamic;$/;"	v
root	heaps/hxd/fs/LocalFileSystem.hx	/^	var root : FileEntry;$/;"	v
root	heaps/hxd/fs/MultiFileSystem.hx	/^	var root : MultiFileEntry;$/;"	v
root	heaps/hxd/res/FileTree.hx	/^		var root : FileTreeData = {$/;"	v
root	heaps/samples/Domkit.hx	/^		var root = new ContainerComp(Right, center);$/;"	v
root	heaps/samples/Stencil.hx	/^	var root : Object;$/;"	v
rootJoints	heaps/h3d/anim/Skin.hx	/^	public var rootJoints(default,null) : Array<Joint>;$/;"	v
rootJoints	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var rootJoints = [];$/;"	v
rootShaderName	heaps/hxsl/Linker.hx	/^	public var rootShaderName : String;$/;"	v
rot	heaps/h2d/CdbLevel.hx	/^	public var rot : Int;$/;"	v
rot	heaps/h2d/Particles.hx	/^			var rot = Math.atan2(parts.matB \/ p.scaleY, parts.matA \/ p.scaleX);$/;"	v
rot	heaps/h2d/Particles.hx	/^		var rot = emitDirectionAsAngle ? Math.atan2(p.vy, p.vx) : srand() * Math.PI * g.rotInit;$/;"	v
rot	heaps/h2d/Particles.hx	/^		var rot = srand() * Math.PI * g.rotInit;$/;"	v
rot	heaps/h3d/scene/CameraController.hx	/^	function rot(dx, dy) {$/;"	f
rot	heaps/h3d/shader/DirShadow.hx	/^					var rot = rand(transformedPosition.x + transformedPosition.y + transformedPosition.z) * 3.1/;"	v
rot	heaps/h3d/shader/GpuParticle.hx	/^			var rot = current.x;$/;"	v
rot	heaps/h3d/shader/ParticleShader.hx	/^			var rot = input.normal.z;$/;"	v
rot	heaps/h3d/shader/SpotShadow.hx	/^					var rot = rand(transformedPosition.x + transformedPosition.y + transformedPosition.z) * 3.1/;"	v
rot	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var rot = q.toEuler().toPoint();$/;"	v
rot	heaps/hxd/fmt/fbx/Geometry.hx	/^		var rot = null, trans = null;$/;"	v
rot	heaps/hxd/fmt/hmd/Writer.hx	/^			var rot = j.position.sx != 1 || j.position.sy != 1 || j.position.sz != 1 || (j.transpos != nu/;"	v
rot	heaps/samples/MeshBatch.hx	/^	public var rot : Float;$/;"	v
rotAuto	heaps/h2d/Particles.hx	/^	public var rotAuto							= false;$/;"	v
rotInit	heaps/h2d/Particles.hx	/^	public var rotInit(default, set) : Float	= 0;$/;"	v
rotInit	heaps/h3d/parts/GpuParticles.hx	/^	public var rotInit(default, set) : Float	= 0;$/;"	v
rotSpeed	heaps/h2d/Particles.hx	/^	public var rotSpeed(default, set) : Float	= 0;$/;"	v
rotSpeed	heaps/h3d/parts/GpuParticles.hx	/^	public var rotSpeed(default, set) : Float	= 0;$/;"	v
rotSpeedRand	heaps/h2d/Particles.hx	/^	public var rotSpeedRand(default, set):Float = 0;$/;"	v
rotSpeedRand	heaps/h3d/parts/GpuParticles.hx	/^	public var rotSpeedRand(default, set):Float = 0;$/;"	v
rotZ	heaps/h3d/scene/World.hx	/^					var rotZ = hxd.Math.atan2(m._12 \/ scale, m._11 \/ scale);$/;"	v
rotate	heaps/h2d/Camera.hx	/^	public inline function rotate( angle : Float ) {$/;"	f
rotate	heaps/h2d/Object.hx	/^	public inline function rotate( v : Float ) {$/;"	f
rotate	heaps/h2d/col/Bounds.hx	/^	public function rotate( angle : Float ) {$/;"	f
rotate	heaps/h2d/col/Matrix.hx	/^	public function rotate(angle: Float) {$/;"	f
rotate	heaps/h2d/col/Point.hx	/^	public inline function rotate( angle : Float ) {$/;"	f
rotate	heaps/h3d/Matrix.hx	/^	public function rotate( x, y, z ) {$/;"	f
rotate	heaps/h3d/scene/Object.hx	/^	public function rotate( rx : Float, ry : Float, rz : Float ) {$/;"	f
rotate	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var rotate : Null<Point>;$/;"	v
rotate	heaps/hxd/fmt/spine/Data.hx	/^	public var rotate : haxe.ds.Vector<Float>;$/;"	v
rotate	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var rotate : Array<{ time : Float, angle : Float, ?curve : JCurve }>;$/;"	v
rotateAxis	heaps/h3d/Matrix.hx	/^	public function rotateAxis( axis, angle ) {$/;"	f
rotateNormal	heaps/h3d/shader/pbr/DefaultForward.hx	/^		function rotateNormal( n : Vec3 ) : Vec3 {$/;"	f
rotateNormal	heaps/h3d/shader/pbr/Lighting.hx	/^		function rotateNormal( n : Vec3 ) : Vec3 {$/;"	f
rotateSpeed	heaps/h3d/scene/CameraController.hx	/^	public var rotateSpeed = 1.;$/;"	v
rotateTrianglePair	heaps/hxd/poly2tri/Triangle.hx	/^	static public function rotateTrianglePair(t:Triangle, p:Point, ot:Triangle, op:Point)$/;"	f
rotatedNormal	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var rotatedNormal = rotateNormal(transformedNormal);$/;"	v
rotatedReflecVec	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var rotatedReflecVec = rotateNormal(reflectVec);$/;"	v
rotation	heaps/h2d/Camera.hx	/^	public var rotation(default, set) : Float;$/;"	v
rotation	heaps/h2d/Object.hx	/^	public var rotation(default, set) : Float = 0;$/;"	v
rotation	heaps/h2d/SpriteBatch.hx	/^	public var rotation : Float = 0;$/;"	v
rotation	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var rotation : Float;$/;"	v
rotation	heaps/h3d/parts/Data.hx	/^	public var rotation : Value;$/;"	v
rotation	heaps/h3d/parts/Particle.hx	/^	public var rotation : Float;$/;"	v
rotation	heaps/h3d/scene/pbr/Environment.hx	/^	public var rotation : Float = 0.;$/;"	v
rotation	heaps/hxd/fmt/spine/Data.hx	/^	public var rotation : Float;$/;"	v
rotation	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var rotation : Float;$/;"	v
rotation	heaps/hxd/fmt/spine/Library.hx	/^			var rotation = def(j.rotation, 0) * Math.PI \/ 180;$/;"	v
rotationAxis	heaps/h3d/shader/ParticleShader.hx	/^		@param var rotationAxis : Mat3;$/;"	v
roughness	heaps/h3d/scene/pbr/Environment.hx	/^			var roughness = input.uv.x;$/;"	v
roughness	heaps/h3d/scene/pbr/Environment.hx	/^		@param var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/PropsImport.hx	/^		var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/PropsTexture.hx	/^		var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/PropsValues.hx	/^		var roughness : Float;$/;"	v
roughness	heaps/h3d/shader/pbr/Slides.hx	/^		var roughness : Float;$/;"	v
roughnessValue	heaps/h3d/shader/pbr/PropsValues.hx	/^		@param var roughnessValue : Float;$/;"	v
round	heaps/hxd/Math.hx	/^	public static inline function round( f : Float ) {$/;"	f
round	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function round(v:Float) {$/;"	f
roundValues	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function roundValues( data : Array<Float>, def : Float, mult : Float = 1. ) {$/;"	f
rp	heaps/hxd/Perlin.hx	/^		var rp = p - ip;$/;"	v
rpos	heaps/h3d/shader/ParticleShader.hx	/^			var rpos = input.normal.xy;$/;"	v
rqf	heaps/hxd/System.js.hx	/^			var rqf : Dynamic = window.requestAnimationFrame ||$/;"	v
rr	heaps/h3d/col/Bounds.hx	/^		var rr = a * (xMax - xMin) + b * (yMax - yMin) + c * (zMax - zMin);$/;"	v
rrect	heaps/samples/CollideCheck.hx	/^	var rrect : h2d.Graphics;$/;"	v
rsqr	heaps/h2d/col/Delaunay.hx	/^			var rsqr = dx * dx + dy * dy;$/;"	v
rstcount	heaps/hxd/res/NanoJpeg.hx	/^		var rstcount = rstinterval, nextrst = 0;$/;"	v
rstinterval	heaps/hxd/res/NanoJpeg.hx	/^	var rstinterval : Int;$/;"	v
rswiz	heaps/hxsl/AgalOptim.hx	/^	inline function rswiz( r : Reg, s : Array<C> ) : Reg {$/;"	f
rt	heaps/h3d/anim/SmoothTarget.hx	/^		var rt = target.update(dt);$/;"	v
rt	heaps/h3d/anim/SmoothTransition.hx	/^		var rt = super.update(dt);$/;"	v
rt	heaps/h3d/anim/Transition.hx	/^		var rt = super.update(dt);$/;"	v
rt	heaps/h3d/impl/DirectXDriver.hx	/^			var rt = tex.t.rt[index];$/;"	v
rt	heaps/h3d/impl/DirectXDriver.hx	/^		var rt = curTexture;$/;"	v
rt	heaps/h3d/impl/DirectXDriver.hx	/^		var rt = t.flags.has(Target);$/;"	v
rt	heaps/h3d/scene/MeshBatch.hx	/^				var rt = manager.compileShaders(shaders, false);$/;"	v
rt	heaps/h3d/scene/World.hx	/^		var rt = hxd.res.Loader.currentInstance.load(texturePath).toImage();$/;"	v
rt	heaps/hxsl/CacheFile.hx	/^							var rt = rttMap.get(i.batch);$/;"	v
rt	heaps/hxsl/CacheFile.hx	/^				var rt = link(shaderList, batchMode); \/\/ will compile + update linkMap$/;"	v
rt	heaps/hxsl/CacheFile.hx	/^			var rt = link(makeDefaultShader(), false);$/;"	v
rt	heaps/hxsl/CacheFile.hx	/^			var rt = readString();$/;"	v
rt	heaps/samples/Pad.hx	/^	var rt : h2d.Graphics;$/;"	v
rt2	heaps/hxsl/CacheFile.hx	/^				var rt2 = rttMap.get(r.specSign);$/;"	v
rtMap	heaps/hxsl/CacheFile.hx	/^			var rtMap = new Map();$/;"	v
rtmp	heaps/h3d/shader/ParticleShader.hx	/^			var rtmp = pos.x * cr + pos.y * sr;$/;"	v
rts	heaps/h3d/pass/ScreenFx.hx	/^		var rts = manager.compileShaders(shaders);$/;"	v
rttMap	heaps/hxsl/CacheFile.hx	/^		var rttMap = new Map<String,{ rt : RuntimeShader, shaders : hxsl.ShaderList }>();$/;"	v
rule	heaps/hxd/fs/FileConverter.hx	/^		var rule = getConvertRule(e.path);$/;"	v
rules	heaps/hxd/fs/FileConverter.hx	/^	var rules : Array<ConvertRule>;$/;"	v
rumble	heaps/hxd/Pad.hx	/^	public function rumble( strength : Float, time : Float ) {}$/;"	f
rumble	heaps/hxd/Pad.hx	/^	public function rumble( strength : Float, time_s : Float ){$/;"	f
run	heaps/h3d/pass/Copy.hx	/^	public static function run( from : h3d.mat.Texture, to : h3d.mat.Texture, ?blend : h3d.mat.Blen/;"	f
run	heaps/h3d/pass/Copy.hx	/^	public static function run( from : h3d.mat.TextureArray, fromLayer : Int, to : h3d.mat.Texture,/;"	f
run	heaps/h3d/pass/CubeCopy.hx	/^	public static function run( from : h3d.mat.Texture, to : h3d.mat.Texture, ?blend : h3d.mat.Blen/;"	f
run	heaps/h3d/pass/ScreenFx.hx	/^	public static function run( shader : h3d.shader.ScreenShader, output : h3d.mat.Texture, ?layer /;"	f
run	heaps/hxd/fs/FileConverter.hx	/^	public function run( e : LocalFileSystem.LocalEntry ) {$/;"	f
run	heaps/hxsl/CacheFileBuilder.hx	/^	public function run() {$/;"	f
run	heaps/hxsl/GlslOut.hx	/^	public function run( s : ShaderData ) {$/;"	f
run	heaps/hxsl/HlslOut.hx	/^	public function run( s : ShaderData ) {$/;"	f
run	heaps/hxsl/Serializer.hx	/^	public static function run( s : ShaderData ) {$/;"	f
runCommand	heaps/h2d/Console.hx	/^	public function runCommand( commandLine : String ) {$/;"	f
runConvert	heaps/hxd/fs/FileConverter.hx	/^	function runConvert( e : LocalFileSystem.LocalEntry, cmd : ConvertCommand, replaceExt : Bool = /;"	f
runMainLoop	heaps/hxd/System.hl.hx	/^	static function runMainLoop() {$/;"	f
runtimeMap	heaps/hxsl/CacheFile.hx	/^		var runtimeMap = new Map();$/;"	v
runtimeShaders	heaps/hxsl/CacheFile.hx	/^	var runtimeShaders : Array<RuntimeShader> = [];$/;"	v
runtimes	heaps/hxsl/CacheFile.hx	/^		var runtimes = [];$/;"	v
ruv	heaps/h3d/shader/VolumeDecal.hx	/^			var ruv = vec4($/;"	v
ruv	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var ruv = vec4( screenPos, depth, 1 );$/;"	v
ruv	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var ruv = vec4( pos, depth, 1 );$/;"	v
rvGlobal	heaps/hxsl/CacheFile.hx	/^		function rvGlobal( g : RuntimeShader.AllocGlobal ) {$/;"	f
rvParam	heaps/hxsl/CacheFile.hx	/^		function rvParam( a : RuntimeShader.AllocParam ) {$/;"	f
rw	heaps/h2d/ScaleGrid.hx	/^			var rw = Std.int(innerWidth \/ unscaledInnerTileWidth);$/;"	v
rx	heaps/h2d/Graphics.hx	/^			var rx = cx + d * todx, ry = cy + d * tody;$/;"	v
rx	heaps/h2d/Scene.hx	/^			var rx = (dx * i.matD - dy * i.matC) * i.invDet;$/;"	v
rx	heaps/h2d/Scene.hx	/^		var rx = (dx * i.matD - dy * i.matC) * i.invDet;$/;"	v
rx	heaps/h3d/Camera.hx	/^		var rx = (pixelX \/ sceneWidth - 0.5) * 2;$/;"	v
rx1	heaps/h2d/RenderContext.hx	/^			var rx1 = x * fa.x + y * fa.y + fa.z;$/;"	v
rx2	heaps/h2d/RenderContext.hx	/^			var rx2 = x2 * fa.x + y2 * fa.y + fa.z;$/;"	v
rxAxis	heaps/hxd/Pad.hx	/^	public var rxAxis(get,never) : Float;$/;"	v
ry	heaps/h2d/Scene.hx	/^			var ry = (dy * i.matA - dx * i.matB) * i.invDet;$/;"	v
ry	heaps/h2d/Scene.hx	/^		var ry = (dy * i.matA - dx * i.matB) * i.invDet;$/;"	v
ry	heaps/h3d/Camera.hx	/^		var ry = (0.5 - pixelY \/ sceneHeight) * 2;$/;"	v
ry1	heaps/h2d/RenderContext.hx	/^			var ry1 = x * fb.x + y * fb.y + fb.z;$/;"	v
ry2	heaps/h2d/RenderContext.hx	/^			var ry2 = x2 * fb.x + y2 * fb.y + fb.z;$/;"	v
ryAxis	heaps/hxd/Pad.hx	/^	public var ryAxis(get,never) : Float;$/;"	v
s	heaps/h2d/Drawable.hx	/^			var s = hxd.impl.Api.downcast(s, stype);$/;"	v
s	heaps/h2d/Drawable.hx	/^		var s = getShader(h3d.shader.ColorAdd);$/;"	v
s	heaps/h2d/Drawable.hx	/^		var s = getShader(h3d.shader.ColorKey);$/;"	v
s	heaps/h2d/Drawable.hx	/^		var s = getShader(h3d.shader.ColorMatrix);$/;"	v
s	heaps/h2d/Graphics.hx	/^			var s = (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x) > 0;$/;"	v
s	heaps/h2d/Object.hx	/^			var s = ctx.scene;$/;"	v
s	heaps/h2d/Object.hx	/^		var s = getScene();$/;"	v
s	heaps/h2d/RenderContext.hx	/^			var s = objShaders.s;$/;"	v
s	heaps/h2d/ScaleGrid.hx	/^			var s = getAbsPos().getScale();$/;"	v
s	heaps/h2d/Scene.hx	/^		var s : Object = cast i;$/;"	v
s	heaps/h2d/col/IPolygon.hx	/^		var s = side(p1, p2, p3) > 0;$/;"	v
s	heaps/h2d/col/Point.hx	/^		var s = Math.sin(angle);$/;"	v
s	heaps/h2d/col/Polygon.hx	/^			var s = new Segment(p1, p2);$/;"	v
s	heaps/h2d/col/Polygon.hx	/^		var s = side(p1, p2, p3) > 0;$/;"	v
s	heaps/h2d/col/Polynomial.hx	/^					var s = 0.;$/;"	v
s	heaps/h2d/col/Polynomial.hx	/^				var s = 0.;$/;"	v
s	heaps/h2d/col/Triangle.hx	/^		var s = area * (a.y * c.x - a.x * c.y + (c.y - a.y) * p.x + (a.x - c.x) * p.y);$/;"	v
s	heaps/h2d/domkit/BaseComponents.hx	/^			var s = parseFloat(s);$/;"	v
s	heaps/h2d/domkit/BaseComponents.hx	/^			var s = parseFloat(value);$/;"	v
s	heaps/h2d/domkit/BaseComponents.hx	/^			var s = parseFloatPercent(value);$/;"	v
s	heaps/h2d/domkit/Style.hx	/^				var s = o.getScene();$/;"	v
s	heaps/h2d/filter/Displacement.hx	/^		var s = disp.shader;$/;"	v
s	heaps/h3d/Matrix.hx	/^		var s = this.getScale();$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + ax.x - ay.y - az.z).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + ay.y - ax.x - az.z).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + az.z - ax.x - ay.y).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + m._11 - m._22 - m._33).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + m._22 - m._11 - m._33).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (1.0 + m._33 - m._11 - m._22).sqrt() * 2;$/;"	v
s	heaps/h3d/Quat.hx	/^			var s = (tr + 1.0).sqrt() * 2;$/;"	v
s	heaps/h3d/Vector.hx	/^		var s = scale \/ 255;$/;"	v
s	heaps/h3d/anim/BufferAnimation.hx	/^				var s = mat.mainPass.getShader(h3d.shader.UVDelta);$/;"	v
s	heaps/h3d/anim/LinearAnimation.hx	/^				var s = mat.mainPass.getShader(h3d.shader.UVDelta);$/;"	v
s	heaps/h3d/anim/SmoothTarget.hx	/^			var s = new SmoothObject(o.objectName);$/;"	v
s	heaps/h3d/impl/Benchmark.hx	/^							var s = allocStat("vsync", vst);$/;"	v
s	heaps/h3d/impl/Benchmark.hx	/^						var s = allocStat(measureCpu ? "gpuwait" : "cpuwait", waitT);$/;"	v
s	heaps/h3d/impl/Benchmark.hx	/^					var s = allocStat(q.name, dt);$/;"	v
s	heaps/h3d/impl/Benchmark.hx	/^		var s = cachedStats;$/;"	v
s	heaps/h3d/impl/Benchmark.hx	/^		var s = currentStats;$/;"	v
s	heaps/h3d/impl/DirectXDriver.hx	/^					var s = currentShader;$/;"	v
s	heaps/h3d/impl/DirectXDriver.hx	/^		var s = shader.vertex ? Driver.createVertexShader(bytes) : Driver.createPixelShader(bytes);$/;"	v
s	heaps/h3d/impl/DirectXDriver.hx	/^		var s = shaders.get(shader.id);$/;"	v
s	heaps/h3d/impl/GlDriver.hx	/^					var s = curShader;$/;"	v
s	heaps/h3d/impl/GlDriver.hx	/^		var s = defStencil;$/;"	v
s	heaps/h3d/impl/GlDriver.hx	/^		var s = gl.createShader(type);$/;"	v
s	heaps/h3d/impl/GlDriver.hx	/^	public var s : GLShader;$/;"	v
s	heaps/h3d/impl/Stage3dDriver.hx	/^		var s = pass.stencil != null ? pass.stencil : defStencil;$/;"	v
s	heaps/h3d/impl/Stage3dDriver.hx	/^	public var s : hxsl.RuntimeShader;$/;"	v
s	heaps/h3d/mat/Defaults.hx	/^		var s = shadowShader;$/;"	v
s	heaps/h3d/mat/Pass.hx	/^		var s = shaders, prev = null;$/;"	v
s	heaps/h3d/mat/Pass.hx	/^		var s = shaders;$/;"	v
s	heaps/h3d/mat/PbrMaterial.hx	/^			var s = new Stencil();$/;"	v
s	heaps/h3d/mat/Stencil.hx	/^		var s = new Stencil();$/;"	v
s	heaps/h3d/mat/Texture.hx	/^		var s = new h3d.pass.ScreenFx(new h3d.shader.GenTexture());$/;"	v
s	heaps/h3d/parts/Emitter.hx	/^		var s = state;$/;"	v
s	heaps/h3d/parts/GpuParticles.hx	/^				var s = getScene();$/;"	v
s	heaps/h3d/pass/ShaderManager.hx	/^		var s = shaderCache.link(currentOutput, batchMode);$/;"	v
s	heaps/h3d/prim/Grid.hx	/^				var s = x + y * (width + 1);$/;"	v
s	heaps/h3d/prim/Sphere.hx	/^		var s : Sphere = @:privateAccess engine.resCache.get(Sphere);$/;"	v
s	heaps/h3d/scene/Object.hx	/^			var s = defaultTransform.getScale();$/;"	v
s	heaps/h3d/scene/Object.hx	/^		var s = mat.getScale(tmpVec);$/;"	v
s	heaps/h3d/scene/Scene.hx	/^		var s = o == null ? new Scene() : cast o;$/;"	v
s	heaps/h3d/scene/Skin.hx	/^		var s = o == null ? new Skin(null,materials.copy()) : cast o;$/;"	v
s	heaps/h3d/scene/Sphere.hx	/^				var s = hxd.Math.sin(i \/ (nsegments - 1) * hxd.Math.PI * 2.0) * radius;$/;"	v
s	heaps/h3d/scene/fwd/LightSystem.hx	/^		var s = new h3d.col.Sphere();$/;"	v
s	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var s = defaultForwardShader;$/;"	v
s	heaps/h3d/scene/pbr/PointLight.hx	/^	var s = new h3d.col.Sphere();$/;"	v
s	heaps/h3d/scene/pbr/Renderer.hx	/^		var s = @:privateAccess tonemap.shaders;$/;"	v
s	heaps/h3d/scene/pbr/SpotLight.hx	/^	var s = new h3d.col.Sphere();$/;"	v
s	heaps/hxd/Perlin.hx	/^		var s = lacunarity;$/;"	v
s	heaps/hxd/SceneEvents.hx	/^					var s = i.getInteractiveScene();$/;"	v
s	heaps/hxd/SceneEvents.hx	/^		var s = currentFocus.getInteractiveScene();$/;"	v
s	heaps/hxd/earcut/Earcut.hx	/^			var s = holes[i];$/;"	v
s	heaps/hxd/fmt/blend/Data.hx	/^		var s = '';$/;"	v
s	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var s : { t : Array<Float>, x : Array<Float>, y : Array<Float>, z : Array<Float> };$/;"	v
s	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var s = getParent(j.model, "Deformer", true);$/;"	v
s	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var s = tmp.getScale();$/;"	v
s	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var s = m.getScale();$/;"	v
s	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var s = new Skin();$/;"	v
s	heaps/hxd/fmt/hmd/Dump.hx	/^				var s = m.skin;$/;"	v
s	heaps/hxd/fmt/hmd/Library.hx	/^		var s = cachedSkin.get(skin.name);$/;"	v
s	heaps/hxd/fmt/hmd/Reader.hx	/^		var s = new Skin();$/;"	v
s	heaps/hxd/fmt/pak/Build.hx	/^				var s = buildRec(fpath);$/;"	v
s	heaps/hxd/fmt/pak/FileSystem.hx	/^		var s = getFile(index);$/;"	v
s	heaps/hxd/fmt/spine/Library.hx	/^				var s = new Skin();$/;"	v
s	heaps/hxd/fmt/spine/Library.hx	/^				var s = new Slot();$/;"	v
s	heaps/hxd/fmt/spine/Library.hx	/^			var s = new SkinnedMeshAttachment();$/;"	v
s	heaps/hxd/net/Socket.hx	/^				var s = new Socket();$/;"	v
s	heaps/hxd/net/Socket.hx	/^			var s = new Socket();$/;"	v
s	heaps/hxd/net/Socket.hx	/^	var s : #if (haxe_ver >= 4) hl.uv.Stream #else Dynamic #end;$/;"	v
s	heaps/hxd/net/Socket.hx	/^	var s : Socket;$/;"	v
s	heaps/hxd/net/Socket.hx	/^	var s : flash.net.Socket;$/;"	v
s	heaps/hxd/net/Socket.hx	/^	var s : js.node.net.Socket;$/;"	v
s	heaps/hxd/res/Embed.hx	/^			var s = js.Browser.document.createStyleElement();$/;"	v
s	heaps/hxd/res/Image.hx	/^		var s = getSize();$/;"	v
s	heaps/hxd/snd/Data.hx	/^				var s;$/;"	v
s	heaps/hxd/snd/Data.hx	/^			var s = ("sampleStart = " + sampleStart);$/;"	v
s	heaps/hxd/snd/Manager.hx	/^			var s = null;$/;"	v
s	heaps/hxd/snd/webaudio/Driver.hx	/^		var s = new SourceHandle();$/;"	v
s	heaps/hxsl/AgalOptim.hx	/^					var s : Null<C> = inf.swiz[3 - i];$/;"	v
s	heaps/hxsl/AgalOptim.hx	/^			var s = swiz[i];$/;"	v
s	heaps/hxsl/AgalOptim.hx	/^		var s = r.swiz;$/;"	v
s	heaps/hxsl/Ast.hx	/^			var s = 0;$/;"	v
s	heaps/hxsl/Cache.hx	/^			var s = shaderDatas[shaderDatas.length - 1 - i];$/;"	v
s	heaps/hxsl/Cache.hx	/^			var s = shaders;$/;"	v
s	heaps/hxsl/Cache.hx	/^		var s = new hxsl.Dce().dce(s.vertex, s.fragment);$/;"	v
s	heaps/hxsl/Cache.hx	/^		var s = new hxsl.SharedShader("");$/;"	v
s	heaps/hxsl/Cache.hx	/^		var s = try linker.link([for( s in shaderDatas ) s.inst.shader]) catch( e : Error ) {$/;"	v
s	heaps/hxsl/Cache.hx	/^		var s = try new hxsl.Splitter().split(s) catch( e : Error ) { e.msg += "\\n\\nin\\n\\n"+Printe/;"	v
s	heaps/hxsl/CacheFile.hx	/^					var s = Type.createEmptyInstance(hxsl.Shader);$/;"	v
s	heaps/hxsl/CacheFile.hx	/^			var s = compiledSources.get(r.signature);$/;"	v
s	heaps/hxsl/CacheFile.hx	/^			var s = new haxe.Serializer();$/;"	v
s	heaps/hxsl/CacheFile.hx	/^			var s = super.compileRuntimeShader(shaders, batchMode);$/;"	v
s	heaps/hxsl/CacheFileBuilder.hx	/^		var s = super.resolveShader(name);$/;"	v
s	heaps/hxsl/Checker.hx	/^			var s = switch( size ) {$/;"	v
s	heaps/hxsl/Linker.hx	/^			var s = s, sreal = s;$/;"	v
s	heaps/hxsl/Linker.hx	/^		var s = new ShaderInfos(name, vertex);$/;"	v
s	heaps/hxsl/Serializer.hx	/^		var s = input.read(len).getString(0,len);$/;"	v
s	heaps/hxsl/ShaderList.hx	/^		var s = l.s;$/;"	v
s	heaps/hxsl/ShaderList.hx	/^	public var s : hxsl.Shader;$/;"	v
s	heaps/samples/DrawingTiles.hx	/^				var s = new CustomSprite(tiles[i++].center());$/;"	v
s	heaps/samples/GraphicsDraw.hx	/^			var s = Math.random() * Math.PI * 2;$/;"	v
s	heaps/samples/Interactive.hx	/^			var s = new h3d.prim.Sphere(1, 32, 32);$/;"	v
s	heaps/samples/Pbr.hx	/^				var s = addSphere(x - (max - 1) * 0.5, y - (max - 1) * 0.5);$/;"	v
s	heaps/samples/Stencil.hx	/^			var s = new h3d.mat.Stencil();$/;"	v
s	heaps/tools/hxsl/Main.hx	/^					var s = t.selectionStart;$/;"	v
s	heaps/tools/hxsl/Main.hx	/^				var s = gl.createShader(type);$/;"	v
s1	heaps/h2d/col/Polygon.hx	/^		var s1 = orientation(p1, q1, p2);$/;"	v
s2	heaps/h2d/col/Polygon.hx	/^		var s2 = orientation(p1, q1, q2);$/;"	v
s2	heaps/hxsl/AgalOptim.hx	/^			var s2 : Null<C> = inf.swiz[s.getIndex()];$/;"	v
s2d	heaps/h2d/ObjectFollower.hx	/^		var s2d = getScene();$/;"	v
s2d	heaps/h3d/impl/Benchmark.hx	/^		var s2d = getScene();$/;"	v
s2d	heaps/h3d/mat/Texture.hx	/^		var s2d = new h2d.Scene();$/;"	v
s2d	heaps/hxd/App.hx	/^	public var s2d(default,null) : h2d.Scene;$/;"	v
s2d	heaps/hxd/fmt/pak/Loader.hx	/^	var s2d : h2d.Scene;$/;"	v
s3	heaps/h2d/col/Polygon.hx	/^		var s3 = orientation(p2, q2, p1);$/;"	v
s3d	heaps/h2d/domkit/Style.hx	/^	public var s3d : h3d.scene.Scene;$/;"	v
s3d	heaps/h3d/impl/Stage3dDriver.hx	/^	var s3d : flash.display.Stage3D;$/;"	v
s3d	heaps/hxd/App.hx	/^	public var s3d(default,null) : h3d.scene.Scene;$/;"	v
s4	heaps/h2d/col/Polygon.hx	/^		var s4 = orientation(p2, q2, q1);$/;"	v
sa	heaps/hxsl/AgalOptim.hx	/^				var sa = swizBits(a) & 63;$/;"	v
sa	heaps/hxsl/AgalOptim.hx	/^				var sa = swizBits(a);$/;"	v
safeName	heaps/hxd/res/Embed.hx	/^		var safeName = "R_"+~\/[^A-Za-z0-9_]+\/g.replace(file, "_");$/;"	v
same	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var same = true;$/;"	v
same	heaps/hxsl/AgalOptim.hx	/^	inline function same( a : Reg, b : Reg ) {$/;"	f
sameData	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var sameData = true;$/;"	v
sameTex	heaps/hxsl/AgalOptim.hx	/^	inline function sameTex( ta : Tex, tb : Tex ) {$/;"	f
sampleAO	heaps/h3d/shader/SAO.hx	/^		function sampleAO(uv : Vec2, position : Vec3, normal : Vec3, radiusSS : Float, tapIndex : Int,/;"	f
sampleBits	heaps/h3d/scene/pbr/Environment.hx	/^	public var sampleBits : Int;$/;"	v
sampleCount	heaps/h3d/shader/PointShadow.hx	/^						var sampleCount = 0;$/;"	v
sampleCount	heaps/hxd/snd/webaudio/Driver.hx	/^		var sampleCount = Std.int(size \/ hxd.snd.Data.formatBytes(format) \/ channelCount);$/;"	v
sampleFormat	heaps/hxd/snd/Data.hx	/^	public var sampleFormat(default, null) : SampleFormat;$/;"	v
sampleNoise	heaps/h3d/shader/SAO.hx	/^			var sampleNoise = noiseTexture.get(noiseUv).x;$/;"	v
sampleOffset	heaps/hxd/snd/openal/AudioTypes.hx	/^	public var sampleOffset   : Int;$/;"	v
sampleOffset	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var sampleOffset   : Int;$/;"	v
samplePerDim	heaps/h3d/shader/PointShadow.hx	/^						var samplePerDim = sampleCount * 2 + 1;$/;"	v
sampleRate	heaps/hxd/snd/Manager.hx	/^	public var sampleRate : Int;$/;"	v
sampleStrength	heaps/h3d/shader/DirShadow.hx	/^					var sampleStrength = 1.0 \/ PCF_SAMPLES;$/;"	v
sampleStrength	heaps/h3d/shader/PointShadow.hx	/^						var sampleStrength = 1.0 \/ totalSample;$/;"	v
sampleStrength	heaps/h3d/shader/SpotShadow.hx	/^							var sampleStrength = 1.0 \/ 12.0;$/;"	v
sampleStrength	heaps/h3d/shader/SpotShadow.hx	/^							var sampleStrength = 1.0 \/ 4.0;$/;"	v
sampleStrength	heaps/h3d/shader/SpotShadow.hx	/^							var sampleStrength = 1.0 \/ 64.0;$/;"	v
samplerBits	heaps/h3d/impl/DirectXDriver.hx	/^	public var samplerBits = new Array<Int>();$/;"	v
samplerStates	heaps/h3d/impl/DirectXDriver.hx	/^	var samplerStates : Map<Int,SamplerState>;$/;"	v
samplers	heaps/h3d/impl/DirectXDriver.hx	/^		var samplers = new hxsl.HlslOut.Samplers();$/;"	v
samplers	heaps/h3d/impl/DirectXDriver.hx	/^	public var samplers = new hl.NativeArray<SamplerState>(64);$/;"	v
samplers	heaps/hxsl/Flatten.hx	/^		var samplers = [];$/;"	v
samplers	heaps/hxsl/HlslOut.hx	/^				var samplers = samplers.get(v.id);$/;"	v
samplers	heaps/hxsl/HlslOut.hx	/^	var samplers : Map<Int, Array<Int>>;$/;"	v
samplersMap	heaps/h3d/impl/DirectXDriver.hx	/^	public var samplersMap : Array<Int>;$/;"	v
samples	heaps/h3d/shader/Outline2D.hx	/^		@param @const var samples : Int;$/;"	v
samples	heaps/hxd/snd/Data.hx	/^	public var samples(default, null) : Int;$/;"	v
samples	heaps/hxd/snd/Manager.hx	/^		var samples = Math.ceil(STREAM_BUFFER_SAMPLE_COUNT \/ BUFFER_STREAM_SPLIT);$/;"	v
samples	heaps/hxd/snd/Manager.hx	/^		var samples = STREAM_BUFFER_SAMPLE_COUNT;$/;"	v
samples	heaps/hxd/snd/Manager.hx	/^	public var samples    : Int;$/;"	v
samples	heaps/hxd/snd/NativeChannel.hx	/^	var samples : Int;$/;"	v
samples	heaps/hxd/snd/openal/Driver.hx	/^		var samples = Std.int(size \/ bps);$/;"	v
samples	heaps/hxd/snd/openal/Emulator.hx	/^	public var samples : Int = 0;$/;"	v
samples	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var samples : Int;$/;"	v
samples	heaps/hxd/snd/webaudio/Context.hx	/^	public var samples : Int;$/;"	v
samplesBits	heaps/h3d/scene/pbr/Environment.hx	/^		@const var samplesBits : Int;$/;"	v
samplesPerFrame	heaps/hxd/snd/Mp3Data.hx	/^	var samplesPerFrame:Int;$/;"	v
sampling	heaps/h3d/anim/Animation.hx	/^	public var sampling(default,null) : Float;$/;"	v
sampling	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var sampling = 15.0 \/ (minDT \/ 3079077200); \/\/ this is the DT value we get from Max when u/;"	v
sampling	heaps/hxd/fmt/hmd/Data.hx	/^	public var sampling : Float;$/;"	v
samplingKind	heaps/h3d/pass/Shadows.hx	/^	public var samplingKind : ShadowSamplingKind = None;$/;"	v
samplingRate	heaps/hxd/snd/Data.hx	/^	public var samplingRate(default, null) : Int;$/;"	v
sao	heaps/samples/Sao.hx	/^	public var sao : h3d.pass.ScalableAO;$/;"	v
saoBlur	heaps/samples/Sao.hx	/^	public var saoBlur : h3d.pass.Blur;$/;"	v
saoTarget	heaps/samples/Sao.hx	/^			var saoTarget = allocTarget("sao");$/;"	v
sat	heaps/samples/AdjustColor.hx	/^	var sat = 0.;$/;"	v
saturation	heaps/samples/Pbr.hx	/^	var saturation : Float;$/;"	v
save	heaps/h2d/Particles.hx	/^	public function save() : Dynamic {$/;"	f
save	heaps/h2d/Particles.hx	/^	public function save() {$/;"	f
save	heaps/h2d/filter/DropShadow.hx	/^		var save = ctx.textures.allocTileTarget("glowSave", t);$/;"	v
save	heaps/h2d/filter/Glow.hx	/^		var save = ctx.textures.allocTileTarget("glowSave", t);$/;"	v
save	heaps/h3d/parts/GpuParticles.hx	/^		var save : GpuSave = { type : "particles3D", version : VERSION, groups : [for( g in groups ) g/;"	v
save	heaps/h3d/parts/GpuParticles.hx	/^	public function save() : Dynamic {$/;"	f
save	heaps/h3d/pass/PassList.hx	/^	public inline function save() {$/;"	f
save	heaps/h3d/pass/PointShadowMap.hx	/^			var save = passes.save();$/;"	v
save	heaps/h3d/scene/Trail.hx	/^	public function save() : Dynamic {$/;"	f
save	heaps/hxd/Save.hx	/^	public static function save( val : Dynamic, ?name = "save", checkSum = false ) {$/;"	f
save	heaps/hxd/fs/Convert.hx	/^	function save( bytes : haxe.io.Bytes ) {$/;"	f
save	heaps/hxsl/CacheFile.hx	/^	function save() {$/;"	f
saveAs	heaps/hxd/File.hx	/^	public static function saveAs( dataContent : haxe.io.Bytes, ?options : BrowseOptions ) {$/;"	f
saveAsAir	heaps/hxd/File.hx	/^	static function saveAsAir( dataContent : haxe.io.Bytes, options : BrowseOptions ) {$/;"	f
saveBytes	heaps/hxd/File.hx	/^	public static function saveBytes( path : String, data : haxe.io.Bytes ) {$/;"	f
saveBytesAir	heaps/hxd/File.hx	/^	static function saveBytesAir( path : String, data : haxe.io.Bytes ) {$/;"	f
saveCache	heaps/hxd/fs/FileConverter.hx	/^		function saveCache() {$/;"	f
saveData	heaps/h3d/mat/MaterialDatabase.hx	/^	function saveData( model : hxd.res.Resource, data : Dynamic ) {$/;"	f
saveData	heaps/hxd/Save.hx	/^	static function saveData( value : Dynamic, checkSum : Bool ) : Dynamic {$/;"	f
saveMatProps	heaps/h3d/mat/MaterialDatabase.hx	/^	public function saveMatProps( material : Material, setup : MaterialSetup ) {$/;"	f
saveMaterialProps	heaps/h3d/mat/MaterialSetup.hx	/^	public function saveMaterialProps( material : Material ) {$/;"	f
saveObj	heaps/hxd/Save.hx	/^	static var saveObj : flash.net.SharedObject;$/;"	v
saveR	heaps/h3d/scene/Scene.hx	/^			var saveR = r.clone();$/;"	v
saveStaticData	heaps/h3d/pass/DirShadowMap.hx	/^	override function saveStaticData() {$/;"	f
saveStaticData	heaps/h3d/pass/PointShadowMap.hx	/^	override function saveStaticData() {$/;"	f
saveStaticData	heaps/h3d/pass/Shadows.hx	/^	public function saveStaticData() : haxe.io.Bytes {$/;"	f
saveStaticData	heaps/h3d/pass/SpotShadowMap.hx	/^	override function saveStaticData() {$/;"	f
saveVars	heaps/hxsl/Checker.hx	/^	function saveVars() {$/;"	f
savedRay	heaps/h3d/scene/Scene.hx	/^		var savedRay = ray.clone();$/;"	v
savedSize	heaps/hxd/Window.hl.hx	/^	var savedSize : { x : Int, y : Int, width : Int, height : Int };$/;"	v
sb2	heaps/hxd/clipper/Clipper.hx	/^			var sb2 = m_Scanbeam.next;$/;"	v
sb2	heaps/hxd/clipper/Clipper.hx	/^			var sb2 = m_Scanbeam;$/;"	v
sc	heaps/h2d/domkit/Style.hx	/^			var sc = fl.getScene();$/;"	v
sc	heaps/h3d/anim/SmoothTarget.hx	/^			var sc = mat.getScale();$/;"	v
scache	heaps/hxsl/CacheFile.hx	/^						var scache = i.shader.shader.instanceCache;$/;"	v
scale	heaps/h2d/Camera.hx	/^	public inline function scale( x : Float, y : Float ) {$/;"	f
scale	heaps/h2d/Object.hx	/^			var scale = tmpPoint;$/;"	v
scale	heaps/h2d/Object.hx	/^	public inline function scale( v : Float ) {$/;"	f
scale	heaps/h2d/SpriteBatch.hx	/^	public var scale(never,set) : Float;$/;"	v
scale	heaps/h2d/col/IPoint.hx	/^	public inline function scale( v : Int ) {$/;"	f
scale	heaps/h2d/col/Matrix.hx	/^	public inline function scale( sx : Float, sy : Float ) {$/;"	f
scale	heaps/h2d/col/Point.hx	/^	public inline function scale( f : Float ) {$/;"	f
scale	heaps/h2d/impl/PointApi.hx	/^	function scale( v : Unit ) : Void;$/;"	f
scale	heaps/h3d/Camera.hx	/^			var scale = zoom \/ Math.tan(halfFovX);$/;"	v
scale	heaps/h3d/Matrix.hx	/^	public function scale( x = 1., y = 1., z = 1. ) {$/;"	f
scale	heaps/h3d/Vector.hx	/^	public inline function scale( f : Float ) {$/;"	f
scale	heaps/h3d/col/IPoint.hx	/^	public inline function scale( v : Int ) {$/;"	f
scale	heaps/h3d/col/ObjectCollider.hx	/^		var scale = invMat.getScale();$/;"	v
scale	heaps/h3d/col/Point.hx	/^	public inline function scale( v : Float ) {$/;"	f
scale	heaps/h3d/col/Sphere.hx	/^		var scale = m.getScale();$/;"	v
scale	heaps/h3d/col/TransformCollider.hx	/^		var scale = invMat.getScale();$/;"	v
scale	heaps/h3d/parts/Data.hx	/^	@:noDebug public function scale( val : Value, v : Float ) {$/;"	f
scale	heaps/h3d/prim/Polygon.hx	/^	public function scale( s : Float ) {$/;"	f
scale	heaps/h3d/prim/Quads.hx	/^	public function scale( x : Float, y : Float, z : Float ) {$/;"	f
scale	heaps/h3d/scene/Object.hx	/^	public inline function scale( v : Float ) {$/;"	f
scale	heaps/h3d/scene/Skin.hx	/^		var scale = Math.max(Math.max(absScale.x, absScale.y), absScale.z);$/;"	v
scale	heaps/h3d/scene/World.hx	/^					var scale = m._33;$/;"	v
scale	heaps/h3d/shader/VolumeDecal.hx	/^		@param var scale : Vec2;$/;"	v
scale	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var scale : Null<Point>;$/;"	v
scale	heaps/hxd/fmt/spine/Data.hx	/^	public var scale : haxe.ds.Vector<Float>;$/;"	v
scale	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var scale : Array<{ time : Float, x : Float, y : Float, ?curve : JCurve }>;$/;"	v
scale	heaps/hxd/res/Atlas.hx	/^			var scale = 1.;$/;"	v
scale	heaps/samples/MeshBatch.hx	/^	public var scale : Float;$/;"	v
scale	heaps/samples/Video.hx	/^			var scale = hxd.Math.min(s2d.width \/ video.videoWidth, s2d.height \/ video.videoHeight);$/;"	v
scale3	heaps/h3d/Vector.hx	/^	@:noCompletion public inline function scale3( v : Float ) {$/;"	f
scaleCenter	heaps/h2d/col/Bounds.hx	/^	public function scaleCenter( v : Float ) {$/;"	f
scaleCenter	heaps/h3d/col/Bounds.hx	/^	public function scaleCenter( v : Float ) {$/;"	f
scaleFactor	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var scaleFactor : Float = unitScale == 100 && originScale == 1 ? 100 : 1;$/;"	v
scaleMode	heaps/h2d/Scene.hx	/^	public var scaleMode(default, set) : ScaleMode = Resize;$/;"	v
scalePivot	heaps/h2d/col/Bounds.hx	/^	public inline function scalePivot( v : Float ) {$/;"	f
scalePivot	heaps/h3d/col/Bounds.hx	/^	public inline function scalePivot( v : Float ) {$/;"	f
scaleToSize	heaps/h2d/Tile.hx	/^	public function scaleToSize( w : Float, h : Float ) : Void {$/;"	f
scaleX	heaps/h2d/Camera.hx	/^	public var scaleX(default, set) : Float;$/;"	v
scaleX	heaps/h2d/Object.hx	/^		var scaleX, scaleY;$/;"	v
scaleX	heaps/h2d/Object.hx	/^	public var scaleX(default,set) : Float = 1;$/;"	v
scaleX	heaps/h2d/RenderContext.hx	/^		var scaleX = scene.viewportA * engine.width \/ 2;$/;"	v
scaleX	heaps/h2d/SpriteBatch.hx	/^	public var scaleX : Float = 1;$/;"	v
scaleX	heaps/h2d/col/Matrix.hx	/^	public inline function scaleX( sx : Float ) {$/;"	f
scaleX	heaps/h2d/col/PixelsCollider.hx	/^	public var scaleX : Float = 1;$/;"	v
scaleX	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var scaleX : Float;$/;"	v
scaleX	heaps/h3d/scene/Object.hx	/^	public var scaleX(default,set) : Float;$/;"	v
scaleX	heaps/hxd/fmt/spine/Data.hx	/^	public var scaleX : Float;$/;"	v
scaleX	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var scaleX : Float;$/;"	v
scaleX	heaps/hxd/fmt/spine/Library.hx	/^			var scaleX = def(j.scaleX, 1);$/;"	v
scaleY	heaps/h2d/Camera.hx	/^	public var scaleY(default, set) : Float;$/;"	v
scaleY	heaps/h2d/Object.hx	/^	public var scaleY(default,set) : Float = 1;$/;"	v
scaleY	heaps/h2d/RenderContext.hx	/^		var scaleY = scene.viewportD * engine.height \/ 2;$/;"	v
scaleY	heaps/h2d/SpriteBatch.hx	/^	public var scaleY : Float = 1;$/;"	v
scaleY	heaps/h2d/col/Matrix.hx	/^	public inline function scaleY( sy : Float ) {$/;"	f
scaleY	heaps/h2d/col/PixelsCollider.hx	/^	public var scaleY : Float = 1;$/;"	v
scaleY	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var scaleY : Float;$/;"	v
scaleY	heaps/h3d/scene/Object.hx	/^	public var scaleY(default, set) : Float;$/;"	v
scaleY	heaps/hxd/fmt/spine/Data.hx	/^	public var scaleY : Float;$/;"	v
scaleY	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var scaleY : Float;$/;"	v
scaleY	heaps/hxd/fmt/spine/Library.hx	/^			var scaleY = def(j.scaleY, 1);$/;"	v
scaleZ	heaps/h3d/scene/Object.hx	/^	public var scaleZ(default,set) : Float;$/;"	v
scaled	heaps/h3d/prim/Polygon.hx	/^	var scaled = 1.;$/;"	v
scan	heaps/hxd/res/FileTree.hx	/^	function scan() {$/;"	f
scanLen	heaps/hxd/fmt/hdr/Reader.hx	/^			var scanLen = width * 4;$/;"	v
scanLine	heaps/hxd/fmt/hdr/Reader.hx	/^			var scanLine = haxe.io.Bytes.alloc(scanLen);$/;"	v
scanRec	heaps/h2d/domkit/Style.hx	/^				function scanRec(o:h2d.Object) {$/;"	f
scanRec	heaps/hxd/res/FileTree.hx	/^	function scanRec( tree : FileTreeData, basePath : String ) {$/;"	f
scene	heaps/h2d/Camera.hx	/^	var scene : Scene;$/;"	v
scene	heaps/h2d/Console.hx	/^		var scene = ctx.scene;$/;"	v
scene	heaps/h2d/Flow.hx	/^					var scene = getScene();$/;"	v
scene	heaps/h2d/Flow.hx	/^			var scene = ctx.scene;$/;"	v
scene	heaps/h2d/Flow.hx	/^			var scene = getScene();$/;"	v
scene	heaps/h2d/Interactive.hx	/^	var scene : Scene;$/;"	v
scene	heaps/h2d/ObjectFollower.hx	/^		var scene = @:privateAccess follow.getScene();$/;"	v
scene	heaps/h2d/RenderContext.hx	/^	public var scene : h2d.Scene;$/;"	v
scene	heaps/h2d/Slider.hx	/^			var scene = scene;$/;"	v
scene	heaps/h2d/TextInput.hx	/^				var scene = getScene();$/;"	v
scene	heaps/h2d/domkit/Style.hx	/^				var scene = currentObjects[0].getScene();$/;"	v
scene	heaps/h2d/domkit/Style.hx	/^			var scene = o.getScene();$/;"	v
scene	heaps/h2d/domkit/Style.hx	/^		var scene = obj.getScene();$/;"	v
scene	heaps/h3d/scene/CameraController.hx	/^		var scene = getScene();$/;"	v
scene	heaps/h3d/scene/CameraController.hx	/^		var scene = if( scene == null ) getScene() else scene;$/;"	v
scene	heaps/h3d/scene/CameraController.hx	/^	var scene : h3d.scene.Scene;$/;"	v
scene	heaps/h3d/scene/Interactive.hx	/^	var scene : Scene;$/;"	v
scene	heaps/h3d/scene/MeshBatch.hx	/^		var scene = getScene();$/;"	v
scene	heaps/h3d/scene/RenderContext.hx	/^	public var scene : Scene;$/;"	v
scene	ra/hp/HP.hx	/^	public static var scene:h2d.Scene; \/\/ = App.s2d$/;"	v
sceneInfo	heaps/samples/ScaleMode2D.hx	/^		var sceneInfo:h2d.Text = null;$/;"	v
sceneToCamera	heaps/h2d/Camera.hx	/^	public function sceneToCamera( pt : h2d.col.Point ) {$/;"	f
sceneXToCamera	heaps/h2d/Camera.hx	/^	inline function sceneXToCamera( mx : Float, my : Float ) : Float {$/;"	f
sceneYToCamera	heaps/h2d/Camera.hx	/^	inline function sceneYToCamera( mx : Float, my : Float ) : Float {$/;"	f
scenes	heaps/h2d/domkit/Style.hx	/^			var scenes = [];$/;"	v
scenes	heaps/hxd/SceneEvents.hx	/^	var scenes : Array<InteractiveScene>;$/;"	v
scomp	heaps/h3d/impl/DirectXDriver.hx	/^				var scomp = compileShader(s, true).bytes;$/;"	v
scount	heaps/hxd/snd/openal/Emulator.hx	/^				var scount = buffer.samples - curSample;$/;"	v
screen	heaps/h3d/scene/pbr/Environment.hx	/^		var screen = new h3d.pass.ScreenFx(new IrradLut());$/;"	v
screen	heaps/h3d/scene/pbr/Environment.hx	/^		var screen = new h3d.pass.ScreenFx(new IrradShader());$/;"	v
screen0	heaps/samples/Flows.hx	/^		function screen0() : Void {$/;"	f
screen1	heaps/samples/Flows.hx	/^		function screen1() : Void {$/;"	f
screen2	heaps/samples/Flows.hx	/^		function screen2() : Void {$/;"	f
screen3	heaps/samples/Flows.hx	/^		function screen3() : Void {$/;"	f
screen4	heaps/samples/Flows.hx	/^		function screen4() : Void {$/;"	f
screen5	heaps/samples/Flows.hx	/^		function screen5() : Void {$/;"	f
screen6	heaps/samples/Flows.hx	/^		function screen6() : Void {$/;"	f
screen7	heaps/samples/Flows.hx	/^		function screen7() : Void {$/;"	f
screen8	heaps/samples/Flows.hx	/^		function screen8() : Void {$/;"	f
screen9	heaps/samples/Flows.hx	/^		function screen9() : Void {$/;"	f
screenDPI	heaps/hxd/System.flash.hx	/^	public static var screenDPI(get,never) : Float;$/;"	v
screenDPI	heaps/hxd/System.hl.hx	/^	public static var screenDPI(get,never) : Float;$/;"	v
screenDPI	heaps/hxd/System.hx	/^	public static var screenDPI(get,never) : Float;$/;"	v
screenDPI	heaps/hxd/System.js.hx	/^	public static var screenDPI(get,never) : Float;$/;"	v
screenLightPass	heaps/h3d/scene/pbr/Renderer.hx	/^	var screenLightPass : h3d.pass.ScreenFx<h3d.shader.ScreenShader>;$/;"	v
screenPos	heaps/h3d/shader/VolumeDecal.hx	/^			var screenPos = projectedPosition.xy \/ projectedPosition.w;$/;"	v
screenPos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var screenPos = projectedPosition.xy \/ projectedPosition.w;$/;"	v
screenRatio	heaps/h3d/Camera.hx	/^	public var screenRatio : Float;$/;"	v
screenRatio	heaps/h3d/shader/GpuParticle.hx	/^			var screenRatio = vec2(global.pixelSize.x \/ global.pixelSize.y, 1);$/;"	v
screenRatio	heaps/h3d/shader/SAO.hx	/^		@ignore @param var screenRatio : Vec2;$/;"	v
screenSwitched	heaps/samples/Flows.hx	/^		var screenSwitched = false;$/;"	v
screenToCamera	heaps/h2d/Camera.hx	/^	public function screenToCamera( pt : h2d.col.Point ) {$/;"	f
screenToViewport	heaps/h2d/Scene.hx	/^	function screenToViewport( e : hxd.Event ) {$/;"	f
screenUV	heaps/h3d/shader/BaseMesh.hx	/^		var screenUV : Vec2;$/;"	v
screenUV	heaps/h3d/shader/pbr/PropsImport.hx	/^		var screenUV : Vec2; \/\/ BaseMesh$/;"	v
screenX	heaps/h3d/scene/Scene.hx	/^			var screenX = (event.relX \/ window.width - 0.5) * 2;$/;"	v
screenXToCamera	heaps/h2d/Camera.hx	/^	inline function screenXToCamera( mx : Float, my : Float ) : Float {$/;"	f
screenXToViewport	heaps/h2d/Scene.hx	/^	inline function screenXToViewport(mx:Float) {$/;"	f
screenY	heaps/h3d/scene/Scene.hx	/^			var screenY = -(event.relY \/ window.height - 0.5) * 2;$/;"	v
screenYToCamera	heaps/h2d/Camera.hx	/^	inline function screenYToCamera( mx : Float, my : Float ) : Float {$/;"	f
screenYToViewport	heaps/h2d/Scene.hx	/^	inline function screenYToViewport(my:Float) {$/;"	f
script	heaps/samples/Generator.hx	/^					var script = r.matched(1);$/;"	v
scrollBar	heaps/h2d/Flow.hx	/^	public var scrollBar(default, null) : h2d.Flow;$/;"	v
scrollBarCursor	heaps/h2d/Flow.hx	/^	public var scrollBarCursor(default, null) : h2d.Flow;$/;"	v
scrollBounds	heaps/h2d/Mask.hx	/^	public var scrollBounds : h2d.col.Bounds;$/;"	v
scrollBy	heaps/h2d/Mask.hx	/^	public function scrollBy( x : Float, y : Float ) {$/;"	f
scrollDiscrete	heaps/h2d/Tile.hx	/^	public function scrollDiscrete( dx : Float, dy : Float ) : Void {$/;"	f
scrollPosY	heaps/h2d/Flow.hx	/^	public var scrollPosY(default, set) : Float = 0.;$/;"	v
scrollTo	heaps/h2d/Mask.hx	/^	public function scrollTo( x : Float, y : Float ) {$/;"	f
scrollWheelSpeed	heaps/h2d/Flow.hx	/^	public var scrollWheelSpeed(default, null) : Float = 30.;$/;"	v
scrollX	heaps/h2d/Mask.hx	/^	public var scrollX(default, set) : Float = 0;$/;"	v
scrollX	heaps/h2d/TextInput.hx	/^	var scrollX = 0.;$/;"	v
scrollY	heaps/h2d/Mask.hx	/^	public var scrollY(default, set) : Float = 0;$/;"	v
scurve	heaps/hxd/Perlin.hx	/^	inline function scurve( a : Float ) {$/;"	f
sd	heaps/hxd/fmt/spine/Library.hx	/^				var sd = j.skins.get(skinName);$/;"	v
sdat	heaps/hxd/snd/Manager.hx	/^		var sdat = sound.getData();$/;"	v
sdata	heaps/hxd/fs/EmbedFileSystem.hx	/^		var sdata = haxe.Serializer.run(makeTree(data.tree));$/;"	v
sdata	heaps/hxsl/CacheFile.hx	/^				var sdata = readString();$/;"	v
sdf	heaps/h2d/domkit/BaseComponents.hx	/^		var sdf = null;$/;"	v
sdfFonts	heaps/hxd/res/BitmapFont.hx	/^	var sdfFonts:Array<h2d.Font>;$/;"	v
sdfShader	heaps/h2d/Text.hx	/^	var sdfShader : h3d.shader.SignedDistanceField;$/;"	v
sdfText	heaps/samples/Text.hx	/^	var sdfText:h2d.Text;$/;"	v
sdlFlags	heaps/hxd/Window.hl.hx	/^		var sdlFlags = if (!fixed) sdl.Window.SDL_WINDOW_SHOWN | sdl.Window.SDL_WINDOW_RESIZABLE else /;"	v
sdnaIndex	heaps/hxd/fmt/blend/Data.hx	/^	public var sdnaIndex:Int;$/;"	v
sdnoise	heaps/h3d/shader/NoiseLib.hx	/^function sdnoise(pos:Vec2) : Vec3 {$/;"	f
se	heaps/h2d/Graphics.hx	/^		var se = Math.sin(angleStart + angleLength);$/;"	v
se	heaps/h3d/pass/FXAA.hx	/^			var se = texture.get(tuv + vec2(1, 1) * delta).rgb;$/;"	v
search_node	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public var search_node:Node;$/;"	v
second	heaps/hxd/fmt/blend/Data.hx	/^		var second  = bytes.get(pos + 1);$/;"	v
second	heaps/hxd/fmt/blend/Data.hx	/^		var second = bytes.get(pos + 2);$/;"	v
seed	heaps/h3d/parts/GpuParticles.hx	/^	public var seed(default, set) : Int	= Std.random(0x1000000);$/;"	v
seed	heaps/hxd/Rand.hx	/^	var seed : Int;$/;"	v
seed2	heaps/hxd/Rand.hx	/^	var seed2 : Int;$/;"	v
seek	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function seek( pos : Int, seekMode : FileSeekMode ) {$/;"	f
seek	heaps/hxd/fmt/pak/FileSystem.hx	/^	public static function seek( f : FileInput, pos : Float, mode : FileSeekMode ) {$/;"	f
seek	heaps/hxd/impl/Air3File.hx	/^	public function seek( p : Int, pos : FileSeek ) {$/;"	f
seekFrame	heaps/hxd/snd/Mp3Data.hx	/^	inline function seekFrame( to : Int ) {$/;"	f
seg	heaps/h3d/scene/Sphere.hx	/^		inline function seg(i, x, y, z) {$/;"	f
segH	heaps/h3d/col/Capsule.hx	/^		var segH = 6;$/;"	v
segW	heaps/h3d/col/Capsule.hx	/^		var segW = 12;$/;"	v
segments	heaps/h2d/col/Polygon.hx	/^		var segments = [];$/;"	v
segments	heaps/h2d/col/Segments.hx	/^	public var segments(get, never) : Array<Segment>;$/;"	v
segments	heaps/h3d/prim/Disc.hx	/^	public var segments(default,null) : Int;$/;"	v
segs	heaps/h3d/prim/Cylinder.hx	/^	var segs : Int;$/;"	v
segsH	heaps/h3d/prim/Sphere.hx	/^	var segsH : Int;$/;"	v
segsW	heaps/h3d/prim/Sphere.hx	/^	var segsW : Int;$/;"	v
sel	heaps/hxd/File.hx	/^				var sel : BrowseSelect = {$/;"	v
sel	heaps/hxd/File.hx	/^			var sel : BrowseSelect = {$/;"	v
sel	heaps/hxsl/Checker.hx	/^				var sel = [];$/;"	v
sel	heaps/hxsl/Macros.hx	/^					var sel = v.name+"Channel";$/;"	v
sel	heaps/hxsl/Shader.hx	/^				var sel = v.channel;$/;"	v
selVar	heaps/hxsl/Macros.hx	/^					var selVar = sel + "__";$/;"	v
select	heaps/h2d/CheckBox.hx	/^	var select : h2d.Bitmap;$/;"	v
select	heaps/hxd/Perlin.hx	/^	public inline function select() {$/;"	f
selectBuffer	heaps/h3d/Engine.hx	/^	function selectBuffer( buf : Buffer ) {$/;"	f
selectBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function selectBuffer(buffer:Buffer) {$/;"	f
selectBuffer	heaps/h3d/impl/Driver.hx	/^	public function selectBuffer( buffer : Buffer ) {$/;"	f
selectBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function selectBuffer( v : h3d.Buffer ) {$/;"	f
selectBuffer	heaps/h3d/impl/LogDriver.hx	/^	override function selectBuffer( buffer : Buffer ) {$/;"	f
selectBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function selectBuffer( v : Buffer ) {$/;"	f
selectCursor	heaps/hxd/SceneEvents.hx	/^	function selectCursor() {$/;"	f
selectMaterial	heaps/h3d/Engine.hx	/^	public function selectMaterial( pass : h3d.mat.Pass ) {$/;"	f
selectMaterial	heaps/h3d/impl/DirectXDriver.hx	/^	override public function selectMaterial(pass:h3d.mat.Pass) {$/;"	f
selectMaterial	heaps/h3d/impl/Driver.hx	/^	public function selectMaterial( pass : h3d.mat.Pass ) {$/;"	f
selectMaterial	heaps/h3d/impl/GlDriver.hx	/^	override function selectMaterial( pass : Pass ) {$/;"	f
selectMaterial	heaps/h3d/impl/LogDriver.hx	/^	override function selectMaterial( pass : h3d.mat.Pass ) {$/;"	f
selectMaterial	heaps/h3d/impl/Stage3dDriver.hx	/^	override function selectMaterial( pass : Pass ) {$/;"	f
selectMaterial	heaps/h3d/prim/HMDModel.hx	/^	override function selectMaterial( i : Int ) {$/;"	f
selectMaterial	heaps/h3d/prim/Primitive.hx	/^	public function selectMaterial( material : Int ) {$/;"	f
selectMaterialBits	heaps/h3d/impl/GlDriver.hx	/^	function selectMaterialBits( bits : Int ) {$/;"	f
selectMaterialBits	heaps/h3d/impl/Stage3dDriver.hx	/^	function selectMaterialBits( bits : Int ) {$/;"	f
selectMultiBuffers	heaps/h3d/impl/DirectXDriver.hx	/^	override function selectMultiBuffers(bl:Buffer.BufferOffset) {$/;"	f
selectMultiBuffers	heaps/h3d/impl/Driver.hx	/^	public function selectMultiBuffers( buffers : Buffer.BufferOffset ) {$/;"	f
selectMultiBuffers	heaps/h3d/impl/GlDriver.hx	/^	override function selectMultiBuffers( buffers : Buffer.BufferOffset ) {$/;"	f
selectMultiBuffers	heaps/h3d/impl/LogDriver.hx	/^	override function selectMultiBuffers( buffers : Buffer.BufferOffset ) {$/;"	f
selectMultiBuffers	heaps/h3d/impl/Stage3dDriver.hx	/^	override function selectMultiBuffers( buffers : Buffer.BufferOffset ) {$/;"	f
selectShader	heaps/h3d/Engine.hx	/^	public function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/DirectXDriver.hx	/^	override function selectShader(shader:hxsl.RuntimeShader) {$/;"	f
selectShader	heaps/h3d/impl/Driver.hx	/^	public function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/GlDriver.hx	/^	override function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/LogDriver.hx	/^	override function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/NullDriver.hx	/^	override function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/Stage3dDriver.hx	/^	override function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectShader	heaps/h3d/impl/VulkanDriver.hx	/^	override function selectShader( shader : hxsl.RuntimeShader ) {$/;"	f
selectStencilBits	heaps/h3d/impl/GlDriver.hx	/^	function selectStencilBits( opBits : Int, maskBits : Int ) {$/;"	f
selectStencilBits	heaps/h3d/impl/Stage3dDriver.hx	/^	function selectStencilBits( opBits : Int, maskBits : Int ) {$/;"	f
selected	heaps/h2d/CheckBox.hx	/^	public var selected(default,set) : Bool = false;$/;"	v
selectedItem	heaps/h2d/Dropdown.hx	/^	public var selectedItem(default, set) : Int = -1;$/;"	v
selectedMonitor	heaps/hxd/Window.hl.hx	/^	function selectedMonitor() : Dynamic {$/;"	f
selectionPos	heaps/h2d/TextInput.hx	/^	var selectionPos : Float;$/;"	v
selectionRange	heaps/h2d/TextInput.hx	/^	public var selectionRange : { start : Int, length : Int };$/;"	v
selectionSize	heaps/h2d/TextInput.hx	/^	var selectionSize : Float;$/;"	v
selectionTile	heaps/h2d/TextInput.hx	/^	public var selectionTile : h2d.Tile;$/;"	v
selfIntersecting	heaps/h2d/col/Polygon.hx	/^	public function selfIntersecting() {$/;"	f
semanticName	heaps/hxsl/HlslOut.hx	/^	public static function semanticName( name : String ) {$/;"	f
send	heaps/hxd/Worker.hx	/^	public function send( msg : T ) {$/;"	f
send	heaps/hxd/net/SocketHost.hx	/^	override function send( bytes : haxe.io.Bytes ) {$/;"	f
send	heaps/hxd/snd/openal/AudioTypes.hx	/^		var send = effectToAuxiliarySend.get(effect);$/;"	v
send	heaps/hxd/snd/openal/AudioTypes.hx	/^		var send = freeAuxiliarySends.length > 0$/;"	v
send	heaps/hxd/snd/openal/ReverbDriver.hx	/^		var send = s.acquireAuxiliarySend(e);$/;"	v
send	heaps/hxd/snd/openal/ReverbDriver.hx	/^		var send = s.getAuxiliarySend(e);$/;"	v
send	heaps/hxd/snd/openal/ReverbDriver.hx	/^		var send = s.releaseAuxiliarySend(e);$/;"	v
sendChan	heaps/hxd/Worker.hx	/^	var sendChan : flash.system.MessageChannel;$/;"	v
sendRaw	heaps/hxd/Worker.hx	/^		inline function sendRaw( v : Dynamic ) {$/;"	f
sentinel	heaps/hxd/System.hl.hx	/^	static var sentinel : hl.UI.Sentinel;$/;"	v
separator	heaps/hxsl/CacheFile.hx	/^		function separator() {$/;"	f
serialize	heaps/hxsl/CacheFile.hx	/^		function serialize(v:Dynamic) {$/;"	f
serialize	heaps/hxsl/Serializer.hx	/^	public function serialize( s : ShaderData ) {$/;"	f
serv	heaps/hxd/net/Socket.hx	/^	var serv : flash.net.ServerSocket;$/;"	v
set	heaps/h2d/col/Bounds.hx	/^	public inline function set( x : Float, y : Float, width : Float, height : Float ) {$/;"	f
set	heaps/h2d/col/IBounds.hx	/^	public inline function set(x : Int, y : Int, width : Int, height : Int) {$/;"	f
set	heaps/h2d/col/IPoint.hx	/^	public inline function set(x=0,y=0) {$/;"	f
set	heaps/h2d/col/Point.hx	/^	public inline function set(x=0.,y=0.) {$/;"	f
set	heaps/h2d/impl/BatchDrawState.hx	/^	public function set( texture : h3d.mat.Texture ) : StateEntry {$/;"	f
set	heaps/h3d/Quat.hx	/^	public inline function set(x, y, z, w) {$/;"	f
set	heaps/h3d/Vector.hx	/^	public inline function set(x=0.,y=0.,z=0.,w=1.) {$/;"	f
set	heaps/h3d/col/IPoint.hx	/^	public inline function set(x=0, y=0, z=0) {$/;"	f
set	heaps/h3d/col/Point.hx	/^	public inline function set(x=0., y=0., z=0.) {$/;"	f
set	heaps/h3d/impl/TextureCache.hx	/^	public function set( t, index ) {$/;"	f
set	heaps/h3d/mat/BigTexture.hx	/^	public function set(tex : hxd.res.Image) {$/;"	f
set	heaps/h3d/mat/PbrMaterialSetup.hx	/^	public static function set() {$/;"	f
set	heaps/h3d/scene/CameraController.hx	/^	public function set(?distance:Float, ?theta:Float, ?phi:Float, ?target:h3d.col.Point, ?fovY:Flo/;"	f
set	heaps/h3d/scene/Object.hx	/^	public inline function set(f:ObjectFlags, b) {$/;"	f
set	heaps/hxd/FloatBuffer.hx	/^	@:arrayAccess inline function set(index,v:Float) return this.array[index] = v;$/;"	f
set	heaps/hxd/impl/Allocator.hx	/^	public static function set( a : Allocator ) {$/;"	f
set	heaps/hxd/impl/UncheckedBytes.hx	/^	@:arrayAccess inline function set( i : Int, v : Int ) : Int {$/;"	f
set	heaps/hxd/res/Image.hx	/^				inline function set(i,c) bytes.setI32(i<<2,c);$/;"	f
set	heaps/hxd/res/Image.hx	/^				inline function set(i,c) bytes.setInt32(i<<2,c);$/;"	f
set	heaps/hxd/res/NanoJpeg.hx	/^	@:arrayAccess inline function set(i:Int,v) {$/;"	f
set	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function set(buf : BufferHandle, grainOffset : Float) {$/;"	f
set	heaps/hxsl/Cache.hx	/^	public static function set(c) {$/;"	f
set	heaps/hxsl/Globals.hx	/^	public function set( path : String, v : Dynamic ) {$/;"	f
set	heaps/hxsl/Globals.hx	/^	public inline function set( globals : Globals, v : T ) {$/;"	f
set	heaps/samples/Pbr.hx	/^		inline function set(face:Int, res:hxd.res.Image) {$/;"	f
setAlpha	heaps/h3d/mat/BigTexture.hx	/^	public function setAlpha(tex : hxd.res.Image) {$/;"	f
setAnchor	heaps/h2d/Camera.hx	/^	public inline function setAnchor( x : Float, y : Float ) {$/;"	f
setAnimationProps	heaps/h3d/prim/ModelCache.hx	/^	function setAnimationProps( a : h3d.anim.Animation, resName : String, props : HideProps ) {$/;"	f
setBack	heaps/h3d/mat/Stencil.hx	/^	public function setBack( stfail : StencilOp, dpfail : StencilOp, pass : StencilOp ) {$/;"	f
setBlendMode	heaps/h3d/mat/Pass.hx	/^	public function setBlendMode( b : BlendMode ) {$/;"	f
setBuffer	heaps/h3d/impl/InstanceBuffer.hx	/^	public function setBuffer( commandCount : Int, bytes : haxe.io.Bytes ) {$/;"	f
setBufferData	heaps/hxd/snd/Driver.hx	/^	public function setBufferData        (buffer : BufferHandle, data : haxe.io.Bytes, size : Int, /;"	f
setBufferData	heaps/hxd/snd/openal/Driver.hx	/^	public function setBufferData(buffer : BufferHandle, data : haxe.io.Bytes, size : Int, format :/;"	f
setBufferData	heaps/hxd/snd/webaudio/Driver.hx	/^	public function setBufferData (buffer : BufferHandle, data : haxe.io.Bytes, size : Int, format /;"	f
setBuffers	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function setBuffers( s : h3d.shader.pbr.DefaultForward ) {$/;"	f
setCenterRatio	heaps/h2d/Tile.hx	/^	public inline function setCenterRatio(?px:Float=0.5, ?py:Float=0.5) : Void {$/;"	f
setClipboardText	heaps/hxd/System.hl.hx	/^	public static function setClipboardText(text:String) : Bool {$/;"	f
setClipboardText	heaps/hxd/System.hx	/^	public static function setClipboardText( text : String ) : Bool {$/;"	f
setClipboardText	heaps/hxd/System.js.hx	/^	public static function setClipboardText(text:String) : Bool {$/;"	f
setColor	heaps/h2d/Graphics.hx	/^	public inline function setColor( color : Int, alpha : Float = 1. ) {$/;"	f
setColor	heaps/h3d/Vector.hx	/^	public inline function setColor( c : Int ) {$/;"	f
setColor	heaps/h3d/parts/Particle.hx	/^	public function setColor( color : Int, alpha = 1. ) {$/;"	f
setColor	heaps/h3d/scene/Graphics.hx	/^	public function setColor( color : Int, alpha = 1. ) {$/;"	f
setColorChannel	heaps/h3d/mat/Pass.hx	/^	public function setColorChannel( c : hxsl.Channel) {$/;"	f
setColorF	heaps/h3d/scene/Graphics.hx	/^	public function setColorF( r : Float, g : Float, b : Float, a : Float = 1.) {$/;"	f
setColorMask	heaps/h3d/mat/Pass.hx	/^	public function setColorMask(r, g, b, a) {$/;"	f
setColorMask	heaps/h3d/mat/PbrMaterial.hx	/^	function setColorMask() {$/;"	f
setCommand	heaps/h3d/impl/InstanceBuffer.hx	/^	public function setCommand( commandCount : Int, indexCount : Int, startIndex=0 ) {$/;"	f
setConstant	heaps/hxsl/Eval.hx	/^	public function setConstant( v : TVar, c : Const ) {$/;"	f
setConstrainedEdgeCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function setConstrainedEdgeCCW(p:Point, ce:Bool):Bool { return this.constrained_e/;"	f
setConstrainedEdgeCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function setConstrainedEdgeCW(p:Point, ce:Bool):Bool  { return this.constrained_e/;"	f
setContext	heaps/h3d/pass/Base.hx	/^	public function setContext( ctx ) {$/;"	f
setCubeMap	heaps/h3d/Camera.hx	/^	public function setCubeMap( face : Int, ?position : h3d.Vector ) {$/;"	f
setCurrent	heaps/h3d/Engine.hx	/^	public inline function setCurrent() {$/;"	f
setCurrent	heaps/hxd/App.hx	/^	public function setCurrent() {$/;"	f
setCurrent	heaps/hxd/Window.js.hx	/^	public function setCurrent() {$/;"	f
setCursor	heaps/h2d/Flow.hx	/^				function setCursor( e : hxd.Event) {$/;"	f
setCursor	heaps/hxd/System.flash.hx	/^	public static var setCursor = setNativeCursor;$/;"	v
setCursor	heaps/hxd/System.hl.hx	/^	public static var setCursor = setNativeCursor;$/;"	v
setCursor	heaps/hxd/System.hx	/^	public static var setCursor : Cursor -> Void = setNativeCursor;$/;"	v
setCursor	heaps/hxd/System.js.hx	/^	public static var setCursor = setNativeCursor;$/;"	v
setData	heaps/h3d/anim/BufferAnimation.hx	/^	public function setData( data, stride ) {$/;"	f
setData	heaps/h3d/col/PolygonBuffer.hx	/^	public function setData( buffer, indexes, startIndex = 0, triCount = -1 ) {$/;"	f
setDebug	heaps/h3d/impl/Driver.hx	/^	public function setDebug( b : Bool ) {$/;"	f
setDebug	heaps/h3d/impl/GlDriver.hx	/^	override function setDebug(d) {$/;"	f
setDebug	heaps/h3d/impl/LogDriver.hx	/^	override function setDebug( b : Bool ) {$/;"	f
setDebug	heaps/h3d/impl/Stage3dDriver.hx	/^	override function setDebug( d : Bool ) {$/;"	f
setDebug	heaps/samples/Interactive.hx	/^	function setDebug(showDebug) {$/;"	f
setDefaultColor	heaps/h2d/TileGroup.hx	/^	public function setDefaultColor( rgb : Int, alpha = 1.0 ) {$/;"	f
setDefaultProps	heaps/hxd/impl/AnyProps.hx	/^	public function setDefaultProps( kind : String ) {$/;"	f
setDefaults	heaps/h3d/parts/Data.hx	/^	public function setDefaults() {$/;"	f
setDelaunayEdgeCCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function setDelaunayEdgeCCW(p:Point, e:Bool):Bool     { return this.delaunay_edge/;"	f
setDelaunayEdgeCW	heaps/hxd/poly2tri/Triangle.hx	/^	public inline function setDelaunayEdgeCW(p:Point, e:Bool):Bool      { return this.delaunay_edge/;"	f
setDirection	heaps/h3d/scene/Object.hx	/^	public function setDirection( v : h3d.Vector ) {$/;"	f
setDouble	heaps/hxd/Perlin.hx	/^	inline function setDouble( index : Int, v : Float )  {$/;"	f
setDrawBuffers	heaps/h3d/impl/GlDriver.hx	/^	function setDrawBuffers( k : Int ) {$/;"	f
setDriver	heaps/h3d/Engine.hx	/^	public function setDriver(d) {$/;"	f
setEdgeEndpoint	heaps/h2d/col/Voronoi.hx	/^	function setEdgeEndpoint(edge, lPoint, rPoint, vertex) {$/;"	f
setEdgeStartpoint	heaps/h2d/col/Voronoi.hx	/^	function setEdgeStartpoint(edge:Edge, lPoint, rPoint, vertex) {$/;"	f
setElapsedTime	heaps/h2d/Scene.hx	/^	public function setElapsedTime( v : Float ) {$/;"	f
setElapsedTime	heaps/h3d/scene/Scene.hx	/^	public function setElapsedTime( elapsedTime ) {$/;"	f
setError	heaps/tools/hxsl/Main.hx	/^	function setError( msg : String ) {$/;"	f
setEvents	heaps/h2d/Scene.hx	/^	public function setEvents(events : hxd.SceneEvents) {$/;"	f
setEvents	heaps/h3d/anim/Animation.hx	/^	public function setEvents( el : Iterable<{ frame : Int, data : String }> ) {$/;"	f
setEvents	heaps/hxd/SceneEvents.hx	/^	public function setEvents( s : SceneEvents ) : Void;$/;"	f
setField	heaps/hxd/impl/Properties.hx	/^	public function setField(obj : Dynamic, f : String, value : Dynamic) {$/;"	f
setFilterScale	heaps/h2d/RenderContext.hx	/^	public function setFilterScale( scaleX : Float, scaleY : Float ) {$/;"	f
setFilters	heaps/samples/Filters.hx	/^	function setFilters(i) {$/;"	f
setFixedSize	heaps/h2d/Scene.hx	/^	public function setFixedSize( w : Int, h : Int ) {$/;"	f
setFlip	heaps/hxd/Pixels.hx	/^	public function setFlip( b : Bool ) {$/;"	f
setFont	heaps/h2d/HtmlText.hx	/^			inline function setFont( v : String ) {$/;"	f
setFovX	heaps/h3d/Camera.hx	/^	public function setFovX( fovX : Float, withRatio : Float ) {$/;"	f
setFrame	heaps/h3d/anim/Animation.hx	/^	public function setFrame( f : Float ) {$/;"	f
setFrame	heaps/h3d/anim/SmoothTarget.hx	/^	override function setFrame(f) {$/;"	f
setFrame	heaps/h3d/anim/Transition.hx	/^	override function setFrame( f : Float ) {$/;"	f
setFrame	heaps/hxd/fmt/hmd/Dump.hx	/^				inline function setFrame(f,offset) {$/;"	f
setFront	heaps/h3d/mat/Stencil.hx	/^	public function setFront( stfail : StencilOp, dpfail : StencilOp, pass : StencilOp ) {$/;"	f
setFullScreen	heaps/hxd/Window.flash.hx	/^	public function setFullScreen( v : Bool ) : Void {$/;"	f
setFullScreen	heaps/hxd/Window.hl.hx	/^	public function setFullScreen( v : Bool ) : Void {$/;"	f
setFullScreen	heaps/hxd/Window.hx	/^	public function setFullScreen( v : Bool ) : Void {$/;"	f
setFullScreen	heaps/hxd/Window.js.hx	/^	public function setFullScreen( v : Bool ) : Void {$/;"	f
setFunc	heaps/h3d/mat/Stencil.hx	/^	public function setFunc( f : Compare, reference = 0, readMask = 0xFF, writeMask = 0xFF ) {$/;"	f
setGlobal	heaps/h3d/scene/RenderContext.hx	/^	public inline function setGlobal( name : String, value : Dynamic ) {$/;"	f
setGlobalID	heaps/h3d/scene/RenderContext.hx	/^	public function setGlobalID( gid : Int, value : Dynamic ) {$/;"	f
setGlobals	heaps/h3d/pass/DirShadowMap.hx	/^	override function setGlobals() {$/;"	f
setGlobals	heaps/h3d/pass/PointShadowMap.hx	/^	override function setGlobals() {$/;"	f
setGlobals	heaps/h3d/pass/ScreenFx.hx	/^	public function setGlobals( ctx :  h3d.scene.RenderContext ) {$/;"	f
setGlobals	heaps/h3d/pass/SpotShadowMap.hx	/^	override function setGlobals() {$/;"	f
setItem	heaps/h2d/Dropdown.hx	/^		inline function setItem(i) {$/;"	f
setJoints	heaps/h3d/anim/Skin.hx	/^	public function setJoints( joints : Array<Joint>, roots : Array<Joint> ) {$/;"	f
setLinkedList	heaps/hxd/earcut/Earcut.hx	/^	@:generic function setLinkedList < T: { x:Float, y:Float } > (points : Array<T>, start : Int, e/;"	f
setListenerParams	heaps/hxd/snd/Driver.hx	/^	public function setListenerParams    (position : h3d.Vector, direction : h3d.Vector, up : h3d.V/;"	f
setListenerParams	heaps/hxd/snd/openal/Driver.hx	/^	public function setListenerParams(position : h3d.Vector, direction : h3d.Vector, up : h3d.Vecto/;"	f
setListenerParams	heaps/hxd/snd/webaudio/Driver.hx	/^	public function setListenerParams (position : h3d.Vector, direction : h3d.Vector, up : h3d.Vect/;"	f
setLoop	heaps/hxd/System.flash.hx	/^	public static function setLoop( f : Void -> Void ) : Void {$/;"	f
setLoop	heaps/hxd/System.hl.hx	/^	public static function setLoop( f : Void -> Void ) : Void {$/;"	f
setLoop	heaps/hxd/System.hx	/^	public static function setLoop( f : Void -> Void ) : Void {$/;"	f
setLoop	heaps/hxd/System.js.hx	/^	public static function setLoop( f : Void -> Void ) : Void {$/;"	f
setMasterVolume	heaps/hxd/snd/Driver.hx	/^	public function setMasterVolume      (value : Float) : Void;$/;"	f
setMasterVolume	heaps/hxd/snd/openal/Driver.hx	/^	public function setMasterVolume(value : Float) : Void {$/;"	f
setMasterVolume	heaps/hxd/snd/webaudio/Driver.hx	/^	public function setMasterVolume (value : Float) : Void {$/;"	f
setMax	heaps/h2d/col/Bounds.hx	/^	public inline function setMax( p : Point ) {$/;"	f
setMax	heaps/h2d/col/IBounds.hx	/^	public inline function setMax( p : IPoint ) {$/;"	f
setMax	heaps/h3d/col/Bounds.hx	/^	public inline function setMax( p : Point ) {$/;"	f
setMaxWidth	heaps/samples/HtmlText.hx	/^	public function setMaxWidth(w:Int) {$/;"	f
setMaxWidth	heaps/samples/Text.hx	/^	public function setMaxWidth(w:Int) {$/;"	f
setMesh	heaps/h3d/prim/Instanced.hx	/^	public function setMesh( m : MeshPrimitive ) {$/;"	f
setMin	heaps/h2d/col/Bounds.hx	/^	public inline function setMin( p : Point ) {$/;"	f
setMin	heaps/h2d/col/IBounds.hx	/^	public inline function setMin( p : IPoint ) {$/;"	f
setMin	heaps/h3d/col/Bounds.hx	/^	public inline function setMin( p : Point ) {$/;"	f
setMode	heaps/samples/ScaleMode2D.hx	/^		function setMode()$/;"	f
setMousePos	heaps/hxd/SceneEvents.hx	/^	public function setMousePos( xPos, yPos ) {$/;"	f
setName	heaps/h3d/mat/Texture.hx	/^	public function setName(n) {$/;"	f
setNativeCursor	heaps/hxd/System.flash.hx	/^	public static function setNativeCursor( c : Cursor ) : Void {$/;"	f
setNativeCursor	heaps/hxd/System.hl.hx	/^	public static function setNativeCursor( c : hxd.Cursor ) : Void {$/;"	f
setNativeCursor	heaps/hxd/System.hx	/^	public static function setNativeCursor( c : Cursor ) : Void {$/;"	f
setNativeCursor	heaps/hxd/System.js.hx	/^	public static function setNativeCursor( c : Cursor ) : Void {$/;"	f
setOffset	heaps/h2d/Font.hx	/^	public function setOffset( x : Float, y :Float ) {$/;"	f
setOp	heaps/h3d/mat/Stencil.hx	/^	public function setOp( stfail : StencilOp, dpfail : StencilOp, pass : StencilOp ) {$/;"	f
setOutput	heaps/h3d/pass/ShaderManager.hx	/^	public function setOutput( ?output : Array<hxsl.Output> ) {$/;"	f
setParamFloatValue	heaps/hxsl/DynamicShader.hx	/^	public function setParamFloatValue( p : hxsl.Ast.TVar, value : Float ) {$/;"	f
setParamValue	heaps/hxsl/DynamicShader.hx	/^	public function setParamValue( p : hxsl.Ast.TVar, value : Dynamic ) {$/;"	f
setParams	heaps/h2d/filter/Glow.hx	/^	function setParams() {$/;"	f
setParentContainer	heaps/h2d/Flow.hx	/^	override function setParentContainer(c) {$/;"	f
setParentContainer	heaps/h2d/Object.hx	/^	function setParentContainer( c : Object ) {$/;"	f
setPassName	heaps/h3d/mat/Pass.hx	/^	public function setPassName( name : String ) {$/;"	f
setPixel	heaps/hxd/Pixels.hx	/^	public function setPixel(x, y, color) : Void {$/;"	f
setPixel	heaps/hxd/Pixels.hx	/^	public inline function setPixel(x, y, v) {$/;"	f
setPixelF	heaps/hxd/Pixels.hx	/^	public function setPixelF(x, y, v:h3d.Vector) {$/;"	f
setPixelF	heaps/hxd/Pixels.hx	/^	public inline function setPixelF(x, y, v:h3d.Vector) {$/;"	f
setPixels	heaps/h3d/mat/TextureChannels.hx	/^	function setPixels( c : hxd.Pixels.Channel, src : hxd.Pixels, srcChannel : hxd.Pixels.Channel )/;"	f
setPixels	heaps/hxd/BitmapData.hx	/^	public function setPixels( pixels : Pixels ) {$/;"	f
setPixelsInner	heaps/h3d/mat/TextureChannels.hx	/^	function setPixelsInner( c : hxd.Pixels.Channel, src : hxd.Pixels, srcChannel : hxd.Pixels.Chan/;"	f
setPoints	heaps/h2d/col/Segment.hx	/^	public inline function setPoints( p1 : Point, p2 : Point ) {$/;"	f
setPos	heaps/hxd/fmt/pak/FileSystem.hx	/^	function setPos() {$/;"	f
setPosition	heaps/h2d/Camera.hx	/^	public inline function setPosition( x : Float, y : Float ) {$/;"	f
setPosition	heaps/h2d/Object.hx	/^	public inline function setPosition( x : Float, y : Float ) {$/;"	f
setPosition	heaps/h2d/Tile.hx	/^	public function setPosition(x : Float, y : Float) : Void {$/;"	f
setPosition	heaps/h3d/Matrix.hx	/^	public inline function setPosition( v : Vector ) {$/;"	f
setPosition	heaps/h3d/scene/Object.hx	/^	public inline function setPosition( x : Float, y : Float, z : Float ) {$/;"	f
setPreview	heaps/h2d/domkit/Style.hx	/^	function setPreview( obj : h2d.Object, ?details=false) {$/;"	f
setPriority	heaps/hxsl/Shader.hx	/^	public function setPriority(v) {$/;"	f
setProgram	heaps/h3d/impl/GlDriver.hx	/^	function setProgram( p : CompiledProgram ) {$/;"	f
setRZ	heaps/h2d/RenderContext.hx	/^	function setRZ( x : Float, y : Float, w : Float, h : Float ) {$/;"	f
setRawViewport	heaps/h2d/Camera.hx	/^	public inline function setRawViewport( x : Float = 0, y : Float = 0, w : Float = 1, h : Float =/;"	f
setRenderFlag	heaps/h3d/impl/Driver.hx	/^	public function setRenderFlag( r : RenderFlag, value : Int ) {$/;"	f
setRenderFlag	heaps/h3d/impl/GlDriver.hx	/^	override function setRenderFlag( r : RenderFlag, value : Int ) {$/;"	f
setRenderTarget	heaps/h3d/impl/DirectXDriver.hx	/^	override function setRenderTarget(tex:Null<h3d.mat.Texture>, layer = 0, mipLevel = 0) {$/;"	f
setRenderTarget	heaps/h3d/impl/Driver.hx	/^	public function setRenderTarget( tex : Null<h3d.mat.Texture>, layer = 0, mipLevel = 0 ) {$/;"	f
setRenderTarget	heaps/h3d/impl/GlDriver.hx	/^	override function setRenderTarget( tex : h3d.mat.Texture, layer = 0, mipLevel = 0 ) {$/;"	f
setRenderTarget	heaps/h3d/impl/LogDriver.hx	/^	override function setRenderTarget( tex : Null<h3d.mat.Texture>, face = 0, mipMap = 0 ) {$/;"	f
setRenderTarget	heaps/h3d/impl/Stage3dDriver.hx	/^	override function setRenderTarget( t : Null<h3d.mat.Texture>, face = 0, mipLevel = 0 ) {$/;"	f
setRenderTargets	heaps/h3d/impl/DirectXDriver.hx	/^	override function setRenderTargets(textures:Array<h3d.mat.Texture>) {$/;"	f
setRenderTargets	heaps/h3d/impl/Driver.hx	/^	public function setRenderTargets( textures : Array<h3d.mat.Texture> ) {$/;"	f
setRenderTargets	heaps/h3d/impl/GlDriver.hx	/^	override function setRenderTargets( textures : Array<h3d.mat.Texture> ) {$/;"	f
setRenderTargets	heaps/h3d/impl/LogDriver.hx	/^	override function setRenderTargets( textures : Array<h3d.mat.Texture> ) {$/;"	f
setRenderTargets	heaps/h3d/impl/Stage3dDriver.hx	/^	override function setRenderTargets( textures : Array<h3d.mat.Texture>) {$/;"	f
setRenderZone	heaps/h2d/RenderContext.hx	/^	public inline function setRenderZone( x : Float, y : Float, w : Float, h : Float ) {$/;"	f
setRenderZone	heaps/h3d/Engine.hx	/^	public function setRenderZone( x = 0, y = 0, width = -1, height = -1 ) : Void {$/;"	f
setRenderZone	heaps/h3d/impl/DirectXDriver.hx	/^	override function setRenderZone(x:Int, y:Int, width:Int, height:Int) {$/;"	f
setRenderZone	heaps/h3d/impl/Driver.hx	/^	public function setRenderZone( x : Int, y : Int, width : Int, height : Int ) {$/;"	f
setRenderZone	heaps/h3d/impl/GlDriver.hx	/^	override function setRenderZone( x : Int, y : Int, width : Int, height : Int ) {$/;"	f
setRenderZone	heaps/h3d/impl/LogDriver.hx	/^	override function setRenderZone( x : Int, y : Int, width : Int, height : Int ) {$/;"	f
setRenderZone	heaps/h3d/impl/Stage3dDriver.hx	/^	override function setRenderZone( x : Int, y : Int, width : Int, height : Int ) {$/;"	f
setResource	heaps/h3d/mat/TextureChannels.hx	/^	public function setResource( c : hxd.Pixels.Channel, res : hxd.res.Image, ?srcChannel : hxd.Pix/;"	f
setRotation	heaps/h3d/scene/Object.hx	/^	public function setRotation( rx : Float, ry : Float, rz : Float ) {$/;"	f
setRotation	heaps/samples/Interactive2D.hx	/^	function setRotation( v : Float ) {$/;"	f
setRotationAxis	heaps/h3d/scene/Object.hx	/^	public function setRotationAxis( ax : Float, ay : Float, az : Float, angle : Float ) {$/;"	f
setRotationQuat	heaps/h3d/scene/Object.hx	/^	public function setRotationQuat(q) {$/;"	f
setScale	heaps/h2d/Camera.hx	/^	public inline function setScale( x : Float, y : Float ) {$/;"	f
setScale	heaps/h2d/Object.hx	/^	public inline function setScale( v : Float ) {$/;"	f
setScale	heaps/h3d/scene/Object.hx	/^	public inline function setScale( v : Float ) {$/;"	f
setScene	heaps/hxd/App.hx	/^	public function setScene( scene : hxd.SceneEvents.InteractiveScene, disposePrevious = true ) {$/;"	f
setScene2D	heaps/hxd/App.hx	/^	function setScene2D( s2d : h2d.Scene, disposePrevious = true ) {$/;"	f
setScene3D	heaps/hxd/App.hx	/^	function setScene3D( s3d : h3d.scene.Scene, disposePrevious = true ) {$/;"	f
setSceneSize	heaps/h2d/Scene.hx	/^		inline function setSceneSize( w : Int, h : Int ) {$/;"	f
setShader	heaps/h3d/impl/DirectXDriver.hx	/^	function setShader( s : CompiledShader ) {$/;"	f
setShape	heaps/samples/Interactive2D.hx	/^	function setShape( index : Int ) {$/;"	f
setSize	heaps/h2d/Tile.hx	/^	public function setSize(w : Float, h : Float) : Void {$/;"	f
setSkinData	heaps/h3d/scene/Skin.hx	/^	public function setSkinData( s, shaderInit = true ) {$/;"	f
setSliderAndTextInputValue	heaps/samples/Camera2D.hx	/^	private function setSliderAndTextInputValue( slider : h2d.Slider, value : Float ) {$/;"	f
setSourceVolume	heaps/hxd/snd/Driver.hx	/^	public function setSourceVolume      (source : SourceHandle, value : Float) : Void;$/;"	f
setSourceVolume	heaps/hxd/snd/openal/Driver.hx	/^	public function setSourceVolume(source : SourceHandle, value : Float) : Void {$/;"	f
setSourceVolume	heaps/hxd/snd/webaudio/Driver.hx	/^	public function setSourceVolume (source : SourceHandle, value : Float) : Void {$/;"	f
setState	heaps/h2d/TextInput.hx	/^	function setState(h:TextHistoryElement) {$/;"	f
setState	heaps/h3d/parts/Emitter.hx	/^	public function setState(s) {$/;"	f
setStencil	heaps/h3d/mat/PbrMaterial.hx	/^	function setStencil() {$/;"	f
setTarget	heaps/h3d/scene/Renderer.hx	/^	function setTarget( tex ) {$/;"	f
setTargets	heaps/h3d/scene/Renderer.hx	/^	function setTargets<T:h3d.mat.Texture>( textures : Array<T> ) {$/;"	f
setTexture	heaps/h2d/Tile.hx	/^	function setTexture(tex : h3d.mat.Texture) {$/;"	f
setTexture	heaps/h2d/impl/BatchDrawState.hx	/^	public function setTexture( texture : h3d.mat.Texture ) {$/;"	f
setTile	heaps/h2d/Graphics.hx	/^	public function setTile( tile : h2d.Tile ) {	$/;"	f
setTile	heaps/h2d/impl/BatchDrawState.hx	/^	public inline function setTile( tile : h2d.Tile ) {$/;"	f
setTilePos	heaps/h2d/domkit/BaseComponents.hx	/^	static function setTilePos( t : h2d.Tile, pos : Null<{ p : Int, ?y : Int }> ) {$/;"	f
setTilePosX	heaps/h2d/domkit/BaseComponents.hx	/^	static function setTilePosX( t : h2d.Tile, x : Int ) {$/;"	f
setTilePosY	heaps/h2d/domkit/BaseComponents.hx	/^	static function setTilePosY( t : h2d.Tile, y : Int ) {$/;"	f
setTransform	heaps/h3d/Camera.hx	/^	public function setTransform( m : Matrix ) {$/;"	f
setTransform	heaps/h3d/scene/Object.hx	/^	public function setTransform( mat : h3d.Matrix ) {$/;"	f
setViewport	heaps/h2d/Camera.hx	/^	public inline function setViewport( x : Float = 0, y : Float = 0, w : Float = 0, h : Float = 0 /;"	f
setViewportScale	heaps/h2d/Scene.hx	/^		inline function setViewportScale( sx : Float, sy : Float ) {$/;"	f
set_a	heaps/h3d/Vector.hx	/^	inline function set_a(v) return w = v;$/;"	f
set_additiveLighting	heaps/h3d/scene/fwd/LightSystem.hx	/^	function set_additiveLighting(b) {$/;"	f
set_align	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_align(o:h2d.Object,v) {$/;"	f
set_allocated	heaps/h3d/scene/Object.hx	/^	inline function set_allocated(b) return flags.set(FAllocated, b);$/;"	f
set_allowInspect	heaps/h2d/domkit/Style.hx	/^	function set_allowInspect(b) {$/;"	f
set_allowTimeout	heaps/hxd/System.flash.hx	/^	static function set_allowTimeout(b) return true; \/\/ can't be disabled$/;"	f
set_allowTimeout	heaps/hxd/System.hl.hx	/^	static function set_allowTimeout(b) @:privateAccess {$/;"	f
set_allowTimeout	heaps/hxd/System.hx	/^	static function set_allowTimeout(b) return false;$/;"	f
set_allowTimeout	heaps/hxd/System.js.hx	/^	static function set_allowTimeout(b) return false;$/;"	f
set_alpha	heaps/h2d/SpriteBatch.hx	/^	inline function set_alpha(v) {$/;"	f
set_alpha	heaps/h2d/filter/Outline.hx	/^	inline function set_alpha(v) return pass.alpha = v;$/;"	f
set_alpha	heaps/h3d/parts/Particle.hx	/^	inline function set_alpha(v) return a = v;$/;"	f
set_alwaysSync	heaps/h3d/scene/Object.hx	/^	inline function set_alwaysSync(b) return flags.set(FAlwaysSync, b);$/;"	f
set_amount	heaps/h2d/filter/Bloom.hx	/^	inline function set_amount(v) return bloom.shader.amount = v;$/;"	f
set_anchorX	heaps/h2d/Camera.hx	/^	inline function set_anchorX( v ) {$/;"	f
set_anchorY	heaps/h2d/Camera.hx	/^	inline function set_anchorY( v ) {$/;"	f
set_angle	heaps/h3d/scene/pbr/SpotLight.hx	/^	function set_angle(v:Float) {$/;"	f
set_animationRepeat	heaps/h2d/Particles.hx	/^	inline function set_animationRepeat(v) return animationRepeat = v;$/;"	f
set_attachToCam	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_attachToCam(v) { needRebuild = true; return attachToCam = v; }$/;"	f
set_b	heaps/h3d/Vector.hx	/^	inline function set_b(v) return z = v;$/;"	f
set_background	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_background( o : h2d.Flow, v ) {$/;"	f
set_backgroundAlpha	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundAlpha( o : h2d.Flow, v ) {$/;"	f
set_backgroundColor	heaps/h2d/TextInput.hx	/^	function set_backgroundColor(v) return interactive.backgroundColor = v;$/;"	f
set_backgroundColor	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundColor( o : h2d.TextInput, col ) {$/;"	f
set_backgroundId	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundId( o : h2d.Flow, id : Bool ) {$/;"	f
set_backgroundSmooth	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundSmooth( o : h2d.Flow, v : Null<Bool> ) {$/;"	f
set_backgroundTile	heaps/h2d/Dropdown.hx	/^	override function set_backgroundTile(t) {$/;"	f
set_backgroundTile	heaps/h2d/Flow.hx	/^	function set_backgroundTile(t) {$/;"	f
set_backgroundTile	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundTile( o : h2d.Flow, t ) {$/;"	f
set_backgroundTilePos	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundTilePos( o : h2d.Flow, pos ) {$/;"	f
set_backgroundTilePosX	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundTilePosX( o : h2d.Flow, x ) {$/;"	f
set_backgroundTilePosY	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_backgroundTilePosY( o : h2d.Flow, y ) {$/;"	f
set_blend	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_blend(o:h2d.Object, b:h2d.BlendMode) {$/;"	f
set_blendMode	heaps/h2d/Particles.hx	/^	inline function set_blendMode(v) { batch.blendMode = v; return blendMode = v; }$/;"	f
set_blendMode	heaps/h3d/mat/Material.hx	/^	function set_blendMode(v:BlendMode) {$/;"	f
set_blendMode	heaps/h3d/mat/PbrMaterial.hx	/^	override function set_blendMode(b:BlendMode) {$/;"	f
set_borderBottom	heaps/h2d/Flow.hx	/^	function set_borderBottom(v) {$/;"	f
set_borderBottom	heaps/h2d/ScaleGrid.hx	/^	function set_borderBottom(bot) {$/;"	f
set_borderHeight	heaps/h2d/Flow.hx	/^	function set_borderHeight(v) {$/;"	f
set_borderHeight	heaps/h2d/ScaleGrid.hx	/^	function set_borderHeight(h) {$/;"	f
set_borderLeft	heaps/h2d/Flow.hx	/^	function set_borderLeft(v) {$/;"	f
set_borderLeft	heaps/h2d/ScaleGrid.hx	/^	function set_borderLeft(left) {$/;"	f
set_borderRight	heaps/h2d/Flow.hx	/^	function set_borderRight(v) {$/;"	f
set_borderRight	heaps/h2d/ScaleGrid.hx	/^	function set_borderRight(right) {$/;"	f
set_borderTop	heaps/h2d/Flow.hx	/^	function set_borderTop(v) {$/;"	f
set_borderTop	heaps/h2d/ScaleGrid.hx	/^	function set_borderTop(top) {$/;"	f
set_borderWidth	heaps/h2d/Flow.hx	/^	function set_borderWidth(v) {$/;"	f
set_borderWidth	heaps/h2d/ScaleGrid.hx	/^	function set_borderWidth(w) {$/;"	f
set_bot	heaps/hxd/clipper/Clipper.hx	/^	inline function set_bot(p:IPoint) {$/;"	f
set_canEdit	heaps/h2d/Dropdown.hx	/^	function set_canEdit(b) {$/;"	f
set_castShadows	heaps/h3d/mat/Material.hx	/^	function set_castShadows(v) {$/;"	f
set_colWidth	heaps/h2d/Flow.hx	/^	function set_colWidth(v) {$/;"	f
set_color	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_color( t : h2d.Text, v : Null<Int> ) {$/;"	f
set_color	heaps/h2d/filter/Outline.hx	/^	inline function set_color(v) return pass.color = v;$/;"	f
set_color	heaps/h3d/mat/Material.hx	/^	inline function set_color(v) {$/;"	f
set_color	heaps/h3d/scene/Light.hx	/^	function set_color(v:h3d.Vector) {$/;"	f
set_color	heaps/h3d/scene/fwd/DirLight.hx	/^	override function set_color(v) {$/;"	f
set_color	heaps/h3d/scene/fwd/PointLight.hx	/^	override function set_color(v) {$/;"	f
set_color	heaps/h3d/scene/pbr/Light.hx	/^	override function set_color(v:h3d.Vector) {$/;"	f
set_colorAdd	heaps/h2d/Drawable.hx	/^	function set_colorAdd( c : h3d.Vector ) {$/;"	f
set_colorAdjust	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_colorAdjust( o : h2d.Drawable, v ) {$/;"	f
set_colorGradient	heaps/h2d/Particles.hx	/^	inline function set_colorGradient(t) { colorGradient = t; return t; }$/;"	f
set_colorKey	heaps/h2d/Drawable.hx	/^	function set_colorKey(v:Null<Int>) {$/;"	f
set_colorMatrix	heaps/h2d/Drawable.hx	/^	function set_colorMatrix(m:h3d.Matrix) {$/;"	f
set_condenseWhite	heaps/h2d/HtmlText.hx	/^	function set_condenseWhite(value: Bool) {$/;"	f
set_contentAlign	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_contentAlign( o : h2d.Flow, v ) {$/;"	f
set_contentHalign	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_contentHalign( o : h2d.Flow, a ) {$/;"	f
set_contentValign	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_contentValign( o : h2d.Flow, a ) {$/;"	f
set_culled	heaps/h3d/scene/Object.hx	/^	inline function set_culled(b) return flags.set(FCulled, b);$/;"	f
set_cullingCollider	heaps/h3d/scene/Object.hx	/^	function set_cullingCollider(c) {$/;"	f
set_cullingColliderInherited	heaps/h3d/scene/Object.hx	/^	inline function set_cullingColliderInherited(b) return flags.set(FCullingColliderInherited, b);$/;"	f
set_curr	heaps/hxd/clipper/Clipper.hx	/^	inline function set_curr(p:IPoint) {$/;"	f
set_currentFrame	heaps/h2d/Anim.hx	/^	function set_currentFrame( frame : Float ) {$/;"	f
set_currentFrame	heaps/h2d/KeyFrames.hx	/^	function set_currentFrame( frame : Float ) {$/;"	f
set_cursor	heaps/h2d/Interactive.hx	/^	function set_cursor(c) {$/;"	f
set_cursor	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_cursor( o : h2d.Flow, c ) {$/;"	f
set_cursor	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_cursor( o : h2d.TextInput, t ) {$/;"	f
set_cursor	heaps/h3d/scene/Interactive.hx	/^	function set_cursor(c) {$/;"	f
set_debug	heaps/h2d/Flow.hx	/^	function set_debug(v) {$/;"	f
set_debug	heaps/h3d/Engine.hx	/^	function set_debug(d) {$/;"	f
set_defaultCursor	heaps/hxd/SceneEvents.hx	/^	function set_defaultCursor(c) {$/;"	f
set_defaultSmooth	heaps/h2d/Scene.hx	/^	inline function set_defaultSmooth(v) return ctx.defaultSmooth = v;$/;"	f
set_defaultTransform	heaps/h3d/scene/Object.hx	/^	inline function set_defaultTransform(v) {$/;"	f
set_destination	heaps/hxd/snd/webaudio/Driver.hx	/^	inline function set_destination(node : AudioNode) return Context.destination = node;$/;"	f
set_displayMode	heaps/hxd/Window.flash.hx	/^	function set_displayMode( m : DisplayMode ) : DisplayMode {$/;"	f
set_displayMode	heaps/hxd/Window.hl.hx	/^	function set_displayMode( m : DisplayMode ) : DisplayMode {$/;"	f
set_displayMode	heaps/hxd/Window.hx	/^	function set_displayMode( m : DisplayMode ) : DisplayMode {$/;"	f
set_displayMode	heaps/hxd/Window.js.hx	/^	function set_displayMode( m : DisplayMode ) : DisplayMode {$/;"	f
set_distanceToCam	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_distanceToCam(v) { needRebuild = true; return distanceToCam = v; }$/;"	f
set_dx	heaps/h2d/Particles.hx	/^	inline function set_dx(v) { if (rebuildOnChange) needRebuild = true; return dx = v; }$/;"	f
set_dy	heaps/h2d/Particles.hx	/^	inline function set_dy(v) { if (rebuildOnChange) needRebuild = true; return dy = v; }$/;"	f
set_edit	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_edit( o : h2d.TextInput, b ) {$/;"	f
set_emitAngle	heaps/h2d/Particles.hx	/^	inline function set_emitAngle(v) { if (rebuildOnChange) needRebuild = true; return emitAngle = /;"	f
set_emitAngle	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitAngle(v) { needRebuild = true; return emitAngle = v; }$/;"	f
set_emitDelay	heaps/h2d/Particles.hx	/^	inline function set_emitDelay(v) { if (rebuildOnChange) needRebuild = true; return emitDelay = /;"	f
set_emitDelay	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitDelay(v) { needRebuild = true; return emitDelay = v; }$/;"	f
set_emitDirectionAsAngle	heaps/h2d/Particles.hx	/^	inline function set_emitDirectionAsAngle(v) { if (rebuildOnChange) needRebuild = true; return e/;"	f
set_emitDist	heaps/h2d/Particles.hx	/^	inline function set_emitDist(v) { if (rebuildOnChange) needRebuild = true; return emitDist = v;/;"	f
set_emitDist	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitDist(v) { needRebuild = true; return emitDist = v; }$/;"	f
set_emitDistY	heaps/h2d/Particles.hx	/^	inline function set_emitDistY(v) { if (rebuildOnChange) needRebuild = true; return emitDistY = /;"	f
set_emitLoop	heaps/h2d/Particles.hx	/^	inline function set_emitLoop(v) { if (rebuildOnChange) needRebuild = true; return emitLoop = v;/;"	f
set_emitLoop	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitLoop(v) { needRebuild = true; return emitLoop = v; }$/;"	f
set_emitMode	heaps/h2d/Particles.hx	/^	inline function set_emitMode(v) { if (rebuildOnChange) needRebuild = true; return emitMode = v;/;"	f
set_emitMode	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitMode(v) { needRebuild = true; return emitMode = v; }$/;"	f
set_emitOnBorder	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitOnBorder(v) { needRebuild = true; return emitOnBorder = v; }$/;"	f
set_emitStartDist	heaps/h2d/Particles.hx	/^	inline function set_emitStartDist(v) { if (rebuildOnChange) needRebuild = true; return emitStar/;"	f
set_emitStartDist	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitStartDist(v) { needRebuild = true; return emitStartDist = v; }$/;"	f
set_emitSync	heaps/h2d/Particles.hx	/^	inline function set_emitSync(v) { if (rebuildOnChange) needRebuild = true; return emitSync = v;/;"	f
set_emitSync	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_emitSync(v) { needRebuild = true; return emitSync = v; }$/;"	f
set_enable	heaps/h2d/CheckBox.hx	/^	function set_enable(b) {$/;"	f
set_enable	heaps/h2d/Particles.hx	/^	inline function set_enable(v) { enable = v; if( !v ) { batch.clear(); needRebuild = true; }; re/;"	f
set_enable	heaps/h2d/filter/Filter.hx	/^	function set_enable(v) return enable = v;$/;"	f
set_enable	heaps/h3d/impl/Benchmark.hx	/^	function set_enable(e) {$/;"	f
set_enableInteractive	heaps/h2d/Flow.hx	/^	function set_enableInteractive(b) {$/;"	f
set_enableSpecular	heaps/h3d/scene/fwd/DirLight.hx	/^	override function set_enableSpecular(b) {$/;"	f
set_enableSpecular	heaps/h3d/scene/fwd/Light.hx	/^	function set_enableSpecular(b) {$/;"	f
set_enableSpecular	heaps/h3d/scene/fwd/PointLight.hx	/^	override function set_enableSpecular(b) {$/;"	f
set_enabled	heaps/h3d/pass/DirShadowMap.hx	/^	override function set_enabled(b:Bool) {$/;"	f
set_enabled	heaps/h3d/pass/PointShadowMap.hx	/^	override function set_enabled(b:Bool) {$/;"	f
set_enabled	heaps/h3d/pass/Shadows.hx	/^	function set_enabled(b:Bool) {$/;"	f
set_enabled	heaps/h3d/pass/SpotShadowMap.hx	/^	override function set_enabled(b:Bool) {$/;"	f
set_exposure	heaps/h3d/scene/pbr/Renderer.hx	/^	inline function set_exposure(v:Float) return tonemap.shader.exposure = v;$/;"	f
set_exposure	heaps/h3d/shader/pbr/ToneMapping.hx	/^	function set_exposure(v) {$/;"	f
set_fillHeight	heaps/h2d/Flow.hx	/^	function set_fillHeight(v) {$/;"	f
set_fillHeight	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_fillHeight( o : h2d.Flow, v ) {$/;"	f
set_fillWidth	heaps/h2d/Flow.hx	/^	function set_fillWidth(v) {$/;"	f
set_fillWidth	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_fillWidth( o : h2d.Flow, v ) {$/;"	f
set_filter	heaps/h2d/Object.hx	/^	function set_filter(f : h2d.filter.Filter) {$/;"	f
set_filter	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_filter(o:h2d.Object, f:h2d.filter.Filter) {$/;"	f
set_filter	heaps/h3d/mat/Texture.hx	/^	function set_filter(f:Filter) {$/;"	f
set_fixedPosition	heaps/h3d/scene/Object.hx	/^	inline function set_fixedPosition(b) return flags.set(FFixedPosition, b);$/;"	f
set_follow	heaps/h3d/scene/Object.hx	/^	function set_follow(v) {$/;"	f
set_followPositionOnly	heaps/h3d/scene/Object.hx	/^	inline function set_followPositionOnly(b) return flags.set(FFollowPositionOnly, b);$/;"	f
set_font	heaps/h2d/Text.hx	/^	function set_font(font) {$/;"	f
set_font	heaps/h2d/TextInput.hx	/^	override function set_font(f) {$/;"	f
set_font	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_font( t : h2d.Text, v ) {$/;"	f
set_forceLineBreak	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_forceLineBreak(o:h2d.Object,v) {$/;"	f
set_frameCount	heaps/h2d/Particles.hx	/^	inline function set_frameCount(v) { frameCount = v; makeTiles(); return v; }$/;"	f
set_frameDivisionX	heaps/h2d/Particles.hx	/^	inline function set_frameDivisionX(v) { frameDivisionX = v; makeTiles(); return v; }$/;"	f
set_frameDivisionY	heaps/h2d/Particles.hx	/^	inline function set_frameDivisionY(v) { frameDivisionY = v; makeTiles(); return v; }$/;"	f
set_fullScreen	heaps/h3d/Engine.hx	/^	function set_fullScreen(v) {$/;"	f
set_g	heaps/h3d/Vector.hx	/^	inline function set_g(v) return y = v;$/;"	f
set_gain	heaps/h2d/filter/Blur.hx	/^	inline function set_gain(v) return pass.gain = v;$/;"	f
set_gain	heaps/h3d/pass/Blur.hx	/^	function set_gain(s) {$/;"	f
set_gravity	heaps/h2d/Particles.hx	/^	inline function set_gravity(v) { if (rebuildOnChange) needRebuild = true; return gravity = v; }$/;"	f
set_gravity	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_gravity(v) { needRebuild = true; return gravity = v; }$/;"	f
set_gravityAngle	heaps/h2d/Particles.hx	/^	inline function set_gravityAngle(v : Float) {$/;"	f
set_halign	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_halign(o:h2d.Object,v) {$/;"	f
set_hasColor	heaps/h3d/parts/Particles.hx	/^	function set_hasColor(b) {$/;"	f
set_height	heaps/h2d/Bitmap.hx	/^	function set_height(h) {$/;"	f
set_height	heaps/h2d/ScaleGrid.hx	/^	function set_height(h) {$/;"	f
set_height	heaps/h2d/col/Bounds.hx	/^	inline function set_height(h) {$/;"	f
set_height	heaps/h2d/col/IBounds.hx	/^	inline function set_height(h) {$/;"	f
set_height	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_height( o : h2d.Bitmap, v : Null<Float> ) {$/;"	f
set_height	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_height( o : h2d.Flow, v ) {$/;"	f
set_horizontal	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_horizontal( o : h2d.Flow, v ) {$/;"	f
set_horizontalAlign	heaps/h2d/Flow.hx	/^	function set_horizontalAlign(v) {$/;"	f
set_horizontalSpacing	heaps/h2d/Flow.hx	/^	function set_horizontalSpacing(s) {$/;"	f
set_hspacing	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_hspacing( o : h2d.Flow, v ) {$/;"	f
set_ignoreBounds	heaps/h3d/scene/Object.hx	/^	inline function set_ignoreBounds(b) return flags.set(FIgnoreBounds, b);$/;"	f
set_ignoreCollide	heaps/h3d/scene/Object.hx	/^	inline function set_ignoreCollide(b) return flags.set(FIgnoreCollide, b);$/;"	f
set_ignoreParentTransform	heaps/h3d/scene/Object.hx	/^	inline function set_ignoreParentTransform(b) { if( b != ignoreParentTransform ) posChanged = tr/;"	f
set_ignoreScale	heaps/h2d/ScaleGrid.hx	/^	function set_ignoreScale(b) {$/;"	f
set_ignoreScale	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_ignoreScale(o : h2d.ScaleGrid, v) {$/;"	f
set_imageSpacing	heaps/h2d/HtmlText.hx	/^	function set_imageSpacing(s) {$/;"	f
set_imageVerticalAlign	heaps/h2d/HtmlText.hx	/^	function set_imageVerticalAlign(align) {$/;"	f
set_incrX	heaps/h2d/Particles.hx	/^	inline function set_incrX(v) { if (rebuildOnChange) needRebuild = true; return incrX = v; }$/;"	f
set_incrY	heaps/h2d/Particles.hx	/^	inline function set_incrY(v) { if (rebuildOnChange) needRebuild = true; return incrY = v; }$/;"	f
set_inheritCulled	heaps/h3d/scene/Object.hx	/^	inline function set_inheritCulled(b) return flags.set(FInheritCulled, b);$/;"	f
set_inlineBlock	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_inlineBlock( o : h2d.Flow, v ) {$/;"	f
set_innerFormat	heaps/hxd/Pixels.hx	/^	function set_innerFormat(fmt) {$/;"	f
set_interactiveCamera	heaps/h2d/Scene.hx	/^	function set_interactiveCamera( cam : Camera ) {$/;"	f
set_invert	heaps/h2d/filter/Ambient.hx	/^	inline function set_invert(v) return pass.shader.maskInvert = v;$/;"	f
set_is3D	heaps/h3d/scene/Graphics.hx	/^	function set_is3D(v) {$/;"	f
set_isAbsolute	heaps/h2d/Flow.hx	/^	function set_isAbsolute(a) {$/;"	f
set_isRelative	heaps/h2d/Particles.hx	/^	inline function set_isRelative(v) { needRebuild = true; return isRelative = v; }$/;"	f
set_isRelative	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_isRelative(v) { needRebuild = true; return isRelative = v; }$/;"	f
set_isVertical	heaps/h2d/Flow.hx	/^	function set_isVertical(v) {$/;"	f
set_label	heaps/samples/Domkit.hx	/^	function set_label(s) {$/;"	f
set_lastFrame	heaps/h3d/mat/Texture.hx	/^	function set_lastFrame(lf:Int) {$/;"	f
set_layout	heaps/h2d/Flow.hx	/^	function set_layout(v) {$/;"	f
set_layout	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_layout( o : h2d.Flow, v ) {$/;"	f
set_length	heaps/hxd/FloatBuffer.hx	/^	inline function set_length(v:Int) {$/;"	f
set_letterSpacing	heaps/h2d/Text.hx	/^	function set_letterSpacing(s) {$/;"	f
set_life	heaps/h2d/Particles.hx	/^	inline function set_life(v) { if (rebuildOnChange) needRebuild = true; return life = v; }$/;"	f
set_life	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_life(v) { needRebuild = true; return life = v; }$/;"	f
set_lifeRand	heaps/h2d/Particles.hx	/^	inline function set_lifeRand(v) { if (rebuildOnChange) needRebuild = true; return lifeRand = v;/;"	f
set_lifeRand	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_lifeRand(v) { needRebuild = true; return lifeRand = v; }$/;"	f
set_lightCameraCenter	heaps/h3d/scene/Object.hx	/^	inline function set_lightCameraCenter(b) return flags.set(FLightCameraCenter, b);$/;"	f
set_lineBreak	heaps/h2d/Text.hx	/^	function set_lineBreak(b) {$/;"	f
set_lineBreak	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_lineBreak( t : h2d.Text, v ) {$/;"	f
set_lineHeight	heaps/h2d/Flow.hx	/^	function set_lineHeight(v) {$/;"	f
set_lineHeightMode	heaps/h2d/HtmlText.hx	/^	function set_lineHeightMode(v) {$/;"	f
set_lineSpacing	heaps/h2d/Text.hx	/^	function set_lineSpacing(s) {$/;"	f
set_linear	heaps/h2d/filter/Blur.hx	/^	inline function set_linear(v) return pass.linear = v;$/;"	f
set_linear	heaps/h3d/pass/Blur.hx	/^	function set_linear(b) {$/;"	f
set_loop	heaps/h2d/Video.hx	/^	public function set_loop(value : Bool) : Bool {$/;"	f
set_margin	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_margin(o:h2d.Object,v) {$/;"	f
set_marginBottom	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_marginBottom(o:h2d.Object,v) {$/;"	f
set_marginLeft	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_marginLeft(o:h2d.Object,v) {$/;"	f
set_marginRight	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_marginRight(o:h2d.Object,v) {$/;"	f
set_marginTop	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_marginTop(o:h2d.Object,v) {$/;"	f
set_mask	heaps/h2d/filter/AbstractMask.hx	/^	function set_mask(m:h2d.Object) {$/;"	f
set_maskPower	heaps/h3d/pass/ColorMatrix.hx	/^	inline function set_maskPower(p) return shader.maskPower = p;$/;"	f
set_maskVisible	heaps/h2d/filter/AbstractMask.hx	/^	function set_maskVisible(b) {$/;"	f
set_mat	heaps/h3d/col/TransformCollider.hx	/^	function set_mat(m) {$/;"	f
set_matrix	heaps/h2d/filter/ColorMatrix.hx	/^	inline function set_matrix(m) return pass.matrix = m;$/;"	f
set_matrix	heaps/h3d/pass/ColorMatrix.hx	/^	inline function set_matrix(m) return shader.matrix = m;$/;"	f
set_maxHeight	heaps/h2d/Flow.hx	/^	function set_maxHeight(h) {$/;"	f
set_maxValue	heaps/h2d/Slider.hx	/^	function set_maxValue(v) {$/;"	f
set_maxWidth	heaps/h2d/Flow.hx	/^	function set_maxWidth(w) {$/;"	f
set_maxWidth	heaps/h2d/Text.hx	/^	function set_maxWidth(w) {$/;"	f
set_minHeight	heaps/h2d/Flow.hx	/^	function set_minHeight(h) {$/;"	f
set_minHeight	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_minHeight( o : h2d.Flow, v ) {$/;"	f
set_minHeight	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_minHeight(o:h2d.Object,v) {$/;"	f
set_minValue	heaps/h2d/Slider.hx	/^	function set_minValue(v) {$/;"	f
set_minWidth	heaps/h2d/Flow.hx	/^	function set_minWidth(w) {$/;"	f
set_minWidth	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_minWidth( o : h2d.Flow, v ) {$/;"	f
set_minWidth	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_minWidth(o:h2d.Object,v) {$/;"	f
set_mipMap	heaps/h3d/mat/Texture.hx	/^	function set_mipMap(m:MipMap) {$/;"	f
set_mode	heaps/h3d/pass/DirShadowMap.hx	/^	override function set_mode(m:Shadows.RenderMode) {$/;"	f
set_mode	heaps/h3d/pass/PointShadowMap.hx	/^	override function set_mode(m:Shadows.RenderMode) {$/;"	f
set_mode	heaps/h3d/pass/Shadows.hx	/^	function set_mode(m:RenderMode) {$/;"	f
set_mode	heaps/h3d/pass/SpotShadowMap.hx	/^	override function set_mode(m:Shadows.RenderMode) {$/;"	f
set_mode	heaps/h3d/shader/pbr/Slides.hx	/^	function set_mode(m:DebugMode) { smode = cast m; return m; }$/;"	f
set_modelRoot	heaps/h3d/scene/Object.hx	/^	inline function set_modelRoot(b) return flags.set(FModelRoot, b);$/;"	f
set_mouseLock	heaps/hxd/Window.flash.hx	/^	inline function set_mouseLock(v) {$/;"	f
set_mouseLock	heaps/hxd/Window.hl.hx	/^	function set_mouseLock(v:Bool) : Bool {$/;"	f
set_mouseLock	heaps/hxd/Window.hx	/^	function set_mouseLock( v : Bool ) : Bool {$/;"	f
set_mouseLock	heaps/hxd/Window.js.hx	/^	function set_mouseLock( v : Bool ) : Bool {$/;"	f
set_multiline	heaps/h2d/Flow.hx	/^	function set_multiline(v) {$/;"	f
set_multiplyAlpha	heaps/h2d/filter/Outline.hx	/^	inline function set_multiplyAlpha(v) return pass.multiplyAlpha = v;$/;"	f
set_needReflow	heaps/h2d/Flow.hx	/^	function set_needReflow(v) {$/;"	f
set_normalMap	heaps/h3d/mat/Material.hx	/^	function set_normalMap(t) {$/;"	f
set_nparts	heaps/h2d/Particles.hx	/^	inline function set_nparts(n) { needRebuild = true; return nparts = n; }$/;"	f
set_nparts	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_nparts(n) { if( n > nparts ) needRebuild = true; return nparts = n; }$/;"	f
set_objectsBehind	heaps/h2d/CdbLevel.hx	/^	function set_objectsBehind(v) {$/;"	f
set_offset	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_offset(o:h2d.Object,v) {$/;"	f
set_offsetX	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_offsetX(o:h2d.Object,v) {$/;"	f
set_offsetY	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_offsetY(o:h2d.Object,v) {$/;"	f
set_overflow	heaps/h2d/Flow.hx	/^	function set_overflow(v) {$/;"	f
set_overflow	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_overflow( o : h2d.Flow, v ) {$/;"	f
set_padding	heaps/h2d/Flow.hx	/^	function set_padding(v) {$/;"	f
set_padding	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_padding( o : h2d.Flow, v ) {$/;"	f
set_paddingBottom	heaps/h2d/Flow.hx	/^	function set_paddingBottom(v) {$/;"	f
set_paddingHorizontal	heaps/h2d/Flow.hx	/^	inline function set_paddingHorizontal(v) {$/;"	f
set_paddingLeft	heaps/h2d/Flow.hx	/^	function set_paddingLeft(v) {$/;"	f
set_paddingRight	heaps/h2d/Flow.hx	/^	function set_paddingRight(v) {$/;"	f
set_paddingTop	heaps/h2d/Flow.hx	/^	function set_paddingTop(v) {$/;"	f
set_paddingVertical	heaps/h2d/Flow.hx	/^	inline function set_paddingVertical(v) {$/;"	f
set_params	heaps/h3d/scene/fwd/PointLight.hx	/^	inline function set_params(p) {$/;"	f
set_pause	heaps/hxd/snd/Channel.hx	/^	function set_pause(v : Bool) {$/;"	f
set_pcfQuality	heaps/h3d/shader/DirShadow.hx	/^	function set_pcfQuality(q: Int) {$/;"	f
set_posChanged	heaps/h3d/scene/Object.hx	/^	inline function set_posChanged(b) return flags.set(FPosChanged, b || follow != null);$/;"	f
set_position	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_position(o:h2d.Object,v) {$/;"	f
set_position	heaps/hxd/snd/Channel.hx	/^	function set_position(v : Float) {$/;"	f
set_power	heaps/h2d/filter/Ambient.hx	/^	inline function set_power(v) return pass.maskPower = v;$/;"	f
set_power	heaps/h2d/filter/Bloom.hx	/^	inline function set_power(v) return bloom.shader.power = v;$/;"	f
set_primitive	heaps/h3d/scene/Mesh.hx	/^	function set_primitive( prim : h3d.prim.Primitive ) : h3d.prim.Primitive {$/;"	f
set_propagate	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_propagate( o : h2d.Flow, b : Bool ) {$/;"	f
set_props	heaps/hxd/impl/AnyProps.hx	/^	function set_props(p) {$/;"	f
set_quality	heaps/h2d/filter/Blur.hx	/^	inline function set_quality(v) return pass.quality = v;$/;"	f
set_quality	heaps/h2d/filter/Outline.hx	/^	inline function set_quality(v) return pass.quality = v;$/;"	f
set_quality	heaps/h3d/pass/Blur.hx	/^	function set_quality(q) {$/;"	f
set_r	heaps/h3d/Vector.hx	/^	inline function set_r(v) return x = v;$/;"	f
set_radius	heaps/h2d/filter/Blur.hx	/^	inline function set_radius(v) return pass.radius = v;$/;"	f
set_radius	heaps/h3d/pass/Blur.hx	/^	function set_radius(r) {$/;"	f
set_radius	heaps/h3d/scene/Sphere.hx	/^	function set_radius(v: Float) {$/;"	f
set_range	heaps/h3d/scene/pbr/PointLight.hx	/^	function set_range(v:Float) {$/;"	f
set_range	heaps/h3d/scene/pbr/SpotLight.hx	/^	function set_range(v:Float) {$/;"	f
set_receiveShadows	heaps/h3d/mat/Material.hx	/^	function set_receiveShadows(v) {$/;"	f
set_receiveShadows	heaps/h3d/mat/PbrMaterial.hx	/^	override function set_receiveShadows(b) {$/;"	f
set_renderer	heaps/h2d/Scene.hx	/^	function set_renderer(v) { ctx = v; return v; }$/;"	f
set_renderer	heaps/h3d/scene/Scene.hx	/^	function set_renderer(r) {$/;"	f
set_resolutionScale	heaps/h2d/filter/AbstractMask.hx	/^	override function set_resolutionScale(v:Float):Float$/;"	f
set_resolutionScale	heaps/h2d/filter/Filter.hx	/^	function set_resolutionScale(v) return resolutionScale = v;$/;"	f
set_reverse	heaps/h2d/Flow.hx	/^	function set_reverse(v) {$/;"	f
set_reverse	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_reverse( o : h2d.Flow, v ) {$/;"	f
set_rotInit	heaps/h2d/Particles.hx	/^	inline function set_rotInit(v) { if (rebuildOnChange) needRebuild = true; return rotInit = v; }$/;"	f
set_rotInit	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_rotInit(v) { needRebuild = true; return rotInit = v; }$/;"	f
set_rotSpeed	heaps/h2d/Particles.hx	/^	inline function set_rotSpeed(v) { if (rebuildOnChange) needRebuild = true; return rotSpeed = v;/;"	f
set_rotSpeed	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_rotSpeed(v) { needRebuild = true; return rotSpeed = v; }$/;"	f
set_rotSpeedRand	heaps/h2d/Particles.hx	/^	inline function set_rotSpeedRand(v) { if (rebuildOnChange) needRebuild = true; return rotSpeedR/;"	f
set_rotSpeedRand	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_rotSpeedRand(v) { needRebuild = true; return rotSpeedRand = v; }$/;"	f
set_rotation	heaps/h2d/Camera.hx	/^	inline function set_rotation( v ) {$/;"	f
set_rotation	heaps/h2d/Object.hx	/^	inline function set_rotation(v) {$/;"	f
set_rotation	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_rotation(o:h2d.Object, v:Float) {$/;"	f
set_scale	heaps/h2d/SpriteBatch.hx	/^	inline function set_scale(v) {$/;"	f
set_scale	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_scale(o:h2d.Object,v) {$/;"	f
set_scaleMode	heaps/h2d/Scene.hx	/^	function set_scaleMode( v : ScaleMode ) {$/;"	f
set_scaleX	heaps/h2d/Camera.hx	/^	inline function set_scaleX( v ) {$/;"	f
set_scaleX	heaps/h2d/Object.hx	/^	inline function set_scaleX(v) {$/;"	f
set_scaleX	heaps/h3d/scene/Object.hx	/^	inline function set_scaleX(v) {$/;"	f
set_scaleY	heaps/h2d/Camera.hx	/^	inline function set_scaleY( v ) {$/;"	f
set_scaleY	heaps/h2d/Object.hx	/^	inline function set_scaleY(v) {$/;"	f
set_scaleY	heaps/h3d/scene/Object.hx	/^	inline function set_scaleY(v) {$/;"	f
set_scaleZ	heaps/h3d/scene/Object.hx	/^	inline function set_scaleZ(v) {$/;"	f
set_scrollPosY	heaps/h2d/Flow.hx	/^	function set_scrollPosY(v:Float) {$/;"	f
set_scrollX	heaps/h2d/Mask.hx	/^	function set_scrollX( v : Float ) : Float {$/;"	f
set_scrollY	heaps/h2d/Mask.hx	/^	function set_scrollY( v : Float ) : Float {$/;"	f
set_seed	heaps/h3d/parts/GpuParticles.hx	/^	function set_seed(s) {$/;"	f
set_sel	heaps/hxsl/Macros.hx	/^					var set_sel = "set_" + sel;$/;"	v
set_selected	heaps/h2d/CheckBox.hx	/^	function set_selected(s) {$/;"	f
set_selectedItem	heaps/h2d/Dropdown.hx	/^	function set_selectedItem(s) {$/;"	f
set_selection	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_selection( o : h2d.TextInput, t ) {$/;"	f
set_shadowShader	heaps/h3d/mat/Defaults.hx	/^	static function set_shadowShader(s) {$/;"	f
set_shadows	heaps/h3d/mat/Material.hx	/^	inline function set_shadows(v) {$/;"	f
set_showDebug	heaps/h3d/scene/Interactive.hx	/^	public function set_showDebug(val) {$/;"	f
set_size	heaps/h2d/Particles.hx	/^	inline function set_size(v) { if (rebuildOnChange) needRebuild = true; return size = v; }$/;"	f
set_size	heaps/h2d/filter/Outline.hx	/^	inline function set_size(v) return pass.size = v;$/;"	f
set_size	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_size(v) { needRebuild = true; return size = v; }$/;"	f
set_size	heaps/h3d/pass/DirShadowMap.hx	/^	override function set_size(s) {$/;"	f
set_size	heaps/h3d/pass/PointShadowMap.hx	/^	override function set_size(s) {$/;"	f
set_size	heaps/h3d/pass/Shadows.hx	/^	function set_size(s) {$/;"	f
set_size	heaps/h3d/pass/SpotShadowMap.hx	/^	override function set_size(s) {$/;"	f
set_sizeIncr	heaps/h2d/Particles.hx	/^	inline function set_sizeIncr(v) { if (rebuildOnChange) needRebuild = true; return sizeIncr = v;/;"	f
set_sizeIncr	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_sizeIncr(v) { needRebuild = true; return sizeIncr = v; }$/;"	f
set_sizeRand	heaps/h2d/Particles.hx	/^	inline function set_sizeRand(v) { if (rebuildOnChange) needRebuild = true; return sizeRand = v;/;"	f
set_sizeRand	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_sizeRand(v) { needRebuild = true; return sizeRand = v; }$/;"	f
set_smooth	heaps/h2d/KeyFrames.hx	/^	public function set_smooth( v : Bool ) : Bool {$/;"	f
set_smoothAlpha	heaps/h2d/filter/Mask.hx	/^	function set_smoothAlpha(v) return pass.shader.smoothAlpha = v;$/;"	f
set_sortMode	heaps/h2d/Particles.hx	/^	inline function set_sortMode(v) { needRebuild = true; return sortMode = v; }$/;"	f
set_sortMode	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_sortMode(v) { needRebuild = true; return sortMode = v; }$/;"	f
set_spacing	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_spacing( o : h2d.Flow, v ) {$/;"	f
set_specularAmount	heaps/h3d/mat/Material.hx	/^	inline function set_specularAmount(v) {$/;"	f
set_specularPower	heaps/h3d/mat/Material.hx	/^	inline function set_specularPower(v) {$/;"	f
set_specularTexture	heaps/h3d/mat/Material.hx	/^	function set_specularTexture(t) {$/;"	f
set_specularTexture	heaps/h3d/mat/PbrMaterial.hx	/^	override function set_specularTexture(t) {$/;"	f
set_speed	heaps/h2d/Particles.hx	/^	inline function set_speed(v) { if (rebuildOnChange) needRebuild = true; return speed = v; }$/;"	f
set_speed	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_speed(v) { needRebuild = true; return speed = v; }$/;"	f
set_speedIncr	heaps/h2d/Particles.hx	/^	inline function set_speedIncr(v) { if (rebuildOnChange) needRebuild = true; return speedIncr = /;"	f
set_speedIncr	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_speedIncr(v) { needRebuild = true; return speedIncr = v; }$/;"	f
set_speedRand	heaps/h2d/Particles.hx	/^	inline function set_speedRand(v) { if (rebuildOnChange) needRebuild = true; return speedRand = /;"	f
set_speedRand	heaps/h3d/parts/GpuParticles.hx	/^	inline function set_speedRand(v) { needRebuild = true; return speedRand = v; }$/;"	f
set_src	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_src( o : h2d.Bitmap, t ) {$/;"	f
set_srcPos	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_srcPos( o : h2d.Bitmap, pos ) {$/;"	f
set_srcPosX	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_srcPosX( o : h2d.Bitmap, x : Int ) {$/;"	f
set_srcPosY	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_srcPosY( o : h2d.Bitmap, y: Int ) {$/;"	f
set_stack	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_stack( o : h2d.Flow, v ) {$/;"	f
set_staticShadows	heaps/h3d/mat/Material.hx	/^	function set_staticShadows(v) {$/;"	f
set_text	heaps/h2d/CheckBox.hx	/^	function set_text(str : String) {$/;"	f
set_text	heaps/h2d/HtmlText.hx	/^	override function set_text(t : String) {$/;"	f
set_text	heaps/h2d/Text.hx	/^	function set_text(t : String) {$/;"	f
set_text	heaps/h2d/TextInput.hx	/^	override function set_text(t:String) {$/;"	f
set_textAlign	heaps/h2d/Text.hx	/^	function set_textAlign(a) {$/;"	f
set_textColor	heaps/h2d/HtmlText.hx	/^	override function set_textColor(c) {$/;"	f
set_textColor	heaps/h2d/Text.hx	/^	function set_textColor(c) {$/;"	f
set_textShadow	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_textShadow( t : h2d.Text, v ) {$/;"	f
set_texture	heaps/h2d/Particles.hx	/^	inline function set_texture(t) { texture = t; makeTiles(); return t; }$/;"	f
set_texture	heaps/h3d/mat/Material.hx	/^	function set_texture(t) {$/;"	f
set_texture	heaps/h3d/scene/Trail.hx	/^	function set_texture(t) return material.texture = t;$/;"	f
set_tile	heaps/h2d/Bitmap.hx	/^	function set_tile(t) {$/;"	f
set_tileArrow	heaps/h2d/Dropdown.hx	/^	function set_tileArrow(t) {$/;"	f
set_tileBorders	heaps/h2d/ScaleGrid.hx	/^	function set_tileBorders(b) {$/;"	f
set_tileBorders	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_tileBorders(o : h2d.ScaleGrid, v) {$/;"	f
set_tileOverItem	heaps/h2d/Dropdown.hx	/^	function set_tileOverItem(t) {$/;"	f
set_tileWrap	heaps/h2d/Bitmap.hx	/^	override function set_tileWrap(b) {$/;"	f
set_tileWrap	heaps/h2d/Drawable.hx	/^	function set_tileWrap(b) {$/;"	f
set_timeout	heaps/hxd/net/Socket.hx	/^	public function set_timeout(t:Null<Float>) {$/;"	f
set_title	heaps/hxd/Window.flash.hx	/^	function set_title( t : String ) : String {$/;"	f
set_title	heaps/hxd/Window.hl.hx	/^	function set_title( t : String ) : String {$/;"	f
set_title	heaps/hxd/Window.hx	/^	function set_title( t : String ) : String {$/;"	f
set_title	heaps/hxd/Window.js.hx	/^	function set_title( t : String ) : String {$/;"	f
set_tmod	heaps/hxd/Timer.hx	/^	inline static function set_tmod(v:Float) {$/;"	f
set_top	heaps/hxd/clipper/Clipper.hx	/^	inline function set_top(p:IPoint) {$/;"	f
set_tx	heaps/h3d/Matrix.hx	/^	inline function set_tx(v) return _41 = v;$/;"	f
set_ty	heaps/h3d/Matrix.hx	/^	inline function set_ty(v) return _42 = v;$/;"	f
set_tz	heaps/h3d/Matrix.hx	/^	inline function set_tz(v) return _43 = v;$/;"	f
set_useScreenResolution	heaps/h2d/filter/AbstractMask.hx	/^	override function set_useScreenResolution(v:Bool):Bool$/;"	f
set_useScreenResolution	heaps/h2d/filter/Filter.hx	/^	function set_useScreenResolution(v) return useScreenResolution = v;$/;"	f
set_valign	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_valign(o:h2d.Object,v) {$/;"	f
set_value	heaps/h2d/Slider.hx	/^	function set_value(v) {$/;"	f
set_vertical	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_vertical( o : h2d.Flow, v ) {$/;"	f
set_verticalAlign	heaps/h2d/Flow.hx	/^	function set_verticalAlign(v) {$/;"	f
set_verticalSpacing	heaps/h2d/Flow.hx	/^	function set_verticalSpacing(s) {$/;"	f
set_viewportHeight	heaps/h2d/Camera.hx	/^	inline function set_viewportHeight( v ) {$/;"	f
set_viewportWidth	heaps/h2d/Camera.hx	/^	inline function set_viewportWidth( v ) {$/;"	f
set_viewportX	heaps/h2d/Camera.hx	/^	inline function set_viewportX( v ) {$/;"	f
set_viewportY	heaps/h2d/Camera.hx	/^	inline function set_viewportY( v ) {$/;"	f
set_visible	heaps/h2d/Object.hx	/^	function set_visible(b) {$/;"	f
set_visible	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_visible(o:h2d.Object, v:Bool) {$/;"	f
set_visible	heaps/h3d/scene/Object.hx	/^	inline function set_visible(b) return flags.set(FVisible,b);$/;"	f
set_volume	heaps/hxd/snd/ChannelBase.hx	/^	function set_volume(v) {$/;"	f
set_volumeBounds	heaps/h3d/parts/GpuParticles.hx	/^	function set_volumeBounds(v) {$/;"	f
set_vspacing	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_vspacing( o : h2d.Flow, v) {$/;"	f
set_vsync	heaps/hxd/Window.flash.hx	/^	function set_vsync( b : Bool ) : Bool {$/;"	f
set_vsync	heaps/hxd/Window.hl.hx	/^	function set_vsync( b : Bool ) : Bool {$/;"	f
set_vsync	heaps/hxd/Window.hx	/^	function set_vsync( b : Bool ) : Bool {$/;"	f
set_vsync	heaps/hxd/Window.js.hx	/^	function set_vsync( b : Bool ) : Bool {$/;"	f
set_width	heaps/h2d/Bitmap.hx	/^	function set_width(w) {$/;"	f
set_width	heaps/h2d/ScaleGrid.hx	/^	function set_width(w) {$/;"	f
set_width	heaps/h2d/col/Bounds.hx	/^	inline function set_width(w) {$/;"	f
set_width	heaps/h2d/col/IBounds.hx	/^	inline function set_width(w) {$/;"	f
set_width	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_width( o : h2d.Bitmap, v : Null<Float> ) {$/;"	f
set_width	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_width( o : h2d.Flow, v ) {$/;"	f
set_width	heaps/h2d/domkit/BaseComponents.hx	/^	static function set_width( o : h2d.TextInput, v ) {$/;"	f
set_wrap	heaps/h2d/filter/Displacement.hx	/^	function set_wrap(w) {$/;"	f
set_wrap	heaps/h3d/mat/Texture.hx	/^	function set_wrap(w:Wrap) {$/;"	f
set_x	heaps/h2d/Camera.hx	/^	inline function set_x( v ) {$/;"	f
set_x	heaps/h2d/Object.hx	/^	inline function set_x(v) {$/;"	f
set_x	heaps/h2d/col/Bounds.hx	/^	inline function set_x(x:Float) {$/;"	f
set_x	heaps/h2d/col/IBounds.hx	/^	inline function set_x(x:Int) {$/;"	f
set_x	heaps/h3d/scene/Object.hx	/^	inline function set_x(v) {$/;"	f
set_x	heaps/hxd/fmt/kframes/Data.hx	/^	inline function set_x(v) return this[0] = v;$/;"	f
set_x	heaps/samples/Network.hx	/^	function set_x( v : Float ) {$/;"	f
set_xFlip	heaps/h2d/Tile.hx	/^	function set_xFlip(v) {$/;"	f
set_xSize	heaps/h3d/col/Bounds.hx	/^	inline function set_xSize(v) { xMax = xMin + v; return v; }$/;"	f
set_y	heaps/h2d/Camera.hx	/^	inline function set_y( v ) {$/;"	f
set_y	heaps/h2d/Object.hx	/^	inline function set_y(v) {$/;"	f
set_y	heaps/h2d/col/Bounds.hx	/^	inline function set_y(y:Float) {$/;"	f
set_y	heaps/h2d/col/IBounds.hx	/^	inline function set_y(y:Int) {$/;"	f
set_y	heaps/h3d/scene/Object.hx	/^	inline function set_y(v) {$/;"	f
set_y	heaps/hxd/fmt/kframes/Data.hx	/^	inline function set_y(v) return this[1] = v;$/;"	f
set_y	heaps/samples/Network.hx	/^	function set_y( v : Float ) {$/;"	f
set_yFlip	heaps/h2d/Tile.hx	/^	function set_yFlip(v) {$/;"	f
set_ySize	heaps/h3d/col/Bounds.hx	/^	inline function set_ySize(v) { yMax = yMin + v; return v; }$/;"	f
set_z	heaps/h3d/scene/Object.hx	/^	inline function set_z(v) {$/;"	f
set_zSize	heaps/h3d/col/Bounds.hx	/^	inline function set_zSize(v) { zMax = zMin + v; return v; }$/;"	f
set_zoom	heaps/h2d/Scene.hx	/^	function set_zoom(v:Int) {$/;"	f
sets	heaps/hxsl/Macros.hx	/^		var sets = [];$/;"	v
setup	heaps/hxd/App.hx	/^	function setup() {$/;"	f
setupColor	heaps/h2d/RenderContext.hx	/^	inline function setupColor( obj : h2d.Drawable ) {$/;"	f
setupInstance	heaps/h3d/anim/SimpleBlend.hx	/^	function setupInstance() {$/;"	f
setupMain	heaps/hxd/Worker.hx	/^	function setupMain() {$/;"	f
setupOnCloseEvent	heaps/hxd/Window.flash.hx	/^	function setupOnCloseEvent() {$/;"	f
setupShaders	heaps/h3d/pass/Default.hx	/^	function setupShaders( passes : h3d.pass.PassList ) {$/;"	f
setupWorker	heaps/hxd/Worker.hx	/^	function setupWorker() {$/;"	f
sevents	heaps/hxd/App.hx	/^	public var sevents(default,null) : hxd.SceneEvents;$/;"	v
sexpr	heaps/hxsl/Checker.hx	/^			var sexpr = null;$/;"	v
sext16	heaps/hxd/snd/Data.hx	/^				inline function sext16(v:Int) {$/;"	f
sext16	heaps/hxd/snd/Data.hx	/^			inline function sext16(v:Int) {$/;"	f
sext16	heaps/hxd/snd/openal/Emulator.hx	/^		inline function sext16(v:Int) {$/;"	f
sfields	heaps/hxsl/Macros.hx	/^					var sfields = macro class {$/;"	v
sgroup	heaps/hxd/snd/Manager.hx	/^		var sgroup = s.channel.soundGroup;$/;"	v
sh	heaps/h3d/impl/DirectXDriver.hx	/^				var sh = vertex ? Driver.createVertexShader(bytes) : Driver.createPixelShader(bytes);$/;"	v
sh	heaps/h3d/mat/Pass.hx	/^			var sh = hxd.impl.Api.downcast(s.s, t);$/;"	v
sh	heaps/hxsl/Cache.hx	/^		var sh = batchShaders.get(rt); \/\/ don't use rt.id to avoid collisions on identical signature/;"	v
sh	heaps/hxsl/CacheFile.hx	/^							var sh = makeBatchShader(rt.rt, rt.shaders);$/;"	v
shade	heaps/h3d/shader/Shadow.hx	/^			var shade = exp( shadow.power * delta  ).saturate();$/;"	v
shader	heaps/h2d/Drawable.hx	/^		var shader = @:privateAccess {$/;"	v
shader	heaps/h2d/HtmlText.hx	/^							var shader = new h3d.shader.SignedDistanceField();$/;"	v
shader	heaps/h2d/Object.hx	/^		var shader = @:privateAccess ctx.baseShader;$/;"	v
shader	heaps/h2d/filter/Shader.hx	/^	public var shader(get, never) : T;$/;"	v
shader	heaps/h3d/impl/DirectXDriver.hx	/^	public var shader : Shader;$/;"	v
shader	heaps/h3d/impl/GlDriver.hx	/^	public var shader : hxsl.RuntimeShader.RuntimeShaderData;$/;"	v
shader	heaps/h3d/mat/Pass.hx	/^		var shader = scene.renderer.debugCompileShader(this);$/;"	v
shader	heaps/h3d/mat/Texture.hx	/^		var shader = new h3d.shader.AlphaChannel();$/;"	v
shader	heaps/h3d/pass/PassObject.hx	/^	public var shader : hxsl.RuntimeShader;$/;"	v
shader	heaps/h3d/pass/ScreenFx.hx	/^	public var shader : T;$/;"	v
shader	heaps/h3d/pass/Shadows.hx	/^	public var shader(default,null) : hxsl.Shader;$/;"	v
shader	heaps/h3d/scene/Light.hx	/^	var shader : hxsl.Shader;$/;"	v
shader	heaps/h3d/scene/MeshBatch.hx	/^				var shader = manager.shaderCache.makeBatchShader(rt, shaders);$/;"	v
shader	heaps/h3d/scene/MeshBatch.hx	/^	public var shader : hxsl.BatchShader;$/;"	v
shader	heaps/h3d/scene/pbr/Decal.hx	/^			var shader = material.mainPass.getShader(h3d.shader.pbr.VolumeDecal.DecalPBR);$/;"	v
shader	heaps/hxsl/Cache.hx	/^		var shader = linkShaders.get(key);$/;"	v
shader	heaps/hxsl/Cache.hx	/^		var shader = std.Type.createEmptyInstance(BatchShader);$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^				var shader = shaders.get(name);$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^			var shader = @:privateAccess shader.shader;$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^			var shader = getLinkShader(vars);$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^			var shader = linkMap.get(name);$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^		var shader : hxsl.Shader = Type.createEmptyInstance(cl);$/;"	v
shader	heaps/hxsl/CacheFile.hx	/^		var shader = super.getLinkShader(vars);$/;"	v
shader	heaps/hxsl/Clone.hx	/^	public function shader( s : ShaderData ) : ShaderData {$/;"	f
shader	heaps/hxsl/Macros.hx	/^						var shader = check.check(name, shader);$/;"	v
shader	heaps/hxsl/Macros.hx	/^						var shader = new MacroParser().parseExpr(expr);$/;"	v
shader	heaps/hxsl/RuntimeShader.hx	/^	public var shader : SharedShader;$/;"	v
shader	heaps/hxsl/Shader.hx	/^	var shader : SharedShader;$/;"	v
shader	heaps/hxsl/SharedShader.hx	/^	public var shader : ShaderData;$/;"	v
shader	heaps/tools/hxsl/Main.hx	/^			var shader = new hxsl.DynamicShader(shared);$/;"	v
shaderBuffers	heaps/h3d/scene/RenderContext.hx	/^	public var shaderBuffers : h3d.shader.Buffers;$/;"	v
shaderCache	heaps/h3d/pass/ShaderManager.hx	/^	var shaderCache : hxsl.Cache;$/;"	v
shaderChanged	heaps/h2d/RenderContext.hx	/^		var shaderChanged = false, paramsChanged = false;$/;"	v
shaderChanged	heaps/h3d/impl/Stage3dDriver.hx	/^		var shaderChanged = false;$/;"	v
shaderCount	heaps/h3d/pass/SortByMaterial.hx	/^	var shaderCount : Int = 1;$/;"	v
shaderData	heaps/hxsl/Clone.hx	/^	public static function shaderData( s : ShaderData ) {$/;"	f
shaderDatas	heaps/hxsl/Cache.hx	/^		var shaderDatas = [];$/;"	v
shaderId	heaps/hxsl/Cache.hx	/^		var shaderId = @:privateAccess RuntimeShader.UID;$/;"	v
shaderIdMap	heaps/h3d/pass/SortByMaterial.hx	/^	var shaderIdMap : Array<Int>;$/;"	v
shaderIndex	heaps/tools/hxsl/Main.hx	/^			var shaderIndex = 0;$/;"	v
shaderInfo	heaps/h3d/pass/ShaderManager.hx	/^	function shaderInfo( shaders : hxsl.ShaderList, path : String ) {$/;"	f
shaderLib	heaps/hxsl/CacheFileBuilder.hx	/^	public var shaderLib : Map<String,String> = new Map();$/;"	v
shaderList	heaps/hxsl/CacheFile.hx	/^				var shaderList = null;$/;"	v
shaderName	heaps/hxsl/CacheFile.hx	/^	function shaderName( s : hxsl.Shader ) @:privateAccess {$/;"	f
shaderStart	heaps/h3d/pass/SortByMaterial.hx	/^		var shaderStart = shaderCount, textureStart = textureCount;$/;"	v
shaderString	heaps/hxsl/Printer.hx	/^	public function shaderString( s : ShaderData ) {$/;"	f
shaderSwitches	heaps/h3d/Engine.hx	/^	public var shaderSwitches(default, null) : Int;$/;"	v
shaderToString	heaps/hxsl/Printer.hx	/^	public static function shaderToString( s : ShaderData, varId = false ) {$/;"	f
shaderVersion	heaps/h3d/impl/DirectXDriver.hx	/^	var shaderVersion : String;$/;"	v
shaderVersion	heaps/h3d/impl/GlDriver.hx	/^	var shaderVersion : Null<Int>;$/;"	v
shaders	heaps/h2d/Drawable.hx	/^	var shaders : hxsl.ShaderList;$/;"	v
shaders	heaps/h3d/impl/DirectXDriver.hx	/^	var shaders : Map<Int,CompiledShader>;$/;"	v
shaders	heaps/h3d/mat/Pass.hx	/^	var shaders : hxsl.ShaderList;$/;"	v
shaders	heaps/h3d/pass/Default.hx	/^			var shaders = p.pass.getShadersRec();$/;"	v
shaders	heaps/h3d/pass/PassObject.hx	/^	public var shaders : hxsl.ShaderList;$/;"	v
shaders	heaps/h3d/pass/ScreenFx.hx	/^	var shaders : hxsl.ShaderList;$/;"	v
shaders	heaps/h3d/scene/MeshBatch.hx	/^				var shaders = p.getShadersRec();$/;"	v
shaders	heaps/h3d/scene/MeshBatch.hx	/^		var shaders = batch.shaders;$/;"	v
shaders	heaps/h3d/scene/MeshBatch.hx	/^	public var shaders : Array<hxsl.Shader>;$/;"	v
shaders	heaps/h3d/scene/World.hx	/^	public var shaders : Array<hxsl.Shader>;$/;"	v
shaders	heaps/hxsl/Cache.hx	/^			var shaders = [for( s in shaderDatas ) Printer.shaderToString(s.inst.shader)];$/;"	v
shaders	heaps/hxsl/CacheFile.hx	/^		var shaders = [for( s in shaders ) s];$/;"	v
shaders	heaps/hxsl/CacheFile.hx	/^	var shaders : Map<String,{ shader : SharedShader, version : String }> = new Map();$/;"	v
shaders	heaps/hxsl/Linker.hx	/^	var shaders : Array<ShaderInfos>;$/;"	v
shaders	heaps/tools/hxsl/Main.hx	/^			var shaders = [for( s in shaders ) {$/;"	v
shaders	heaps/tools/hxsl/Main.hx	/^			var shaders = [shader, outLink];$/;"	v
shadersChanged	heaps/h3d/scene/MeshBatch.hx	/^	public var shadersChanged = true;$/;"	v
shadow	heaps/h3d/scene/fwd/Renderer.hx	/^	public var shadow = new h3d.pass.DefaultShadowMap(1024);$/;"	v
shadow	heaps/h3d/shader/DirShadow.hx	/^		var shadow : Float;$/;"	v
shadow	heaps/h3d/shader/PointShadow.hx	/^		var shadow : Float;$/;"	v
shadow	heaps/h3d/shader/Shadow.hx	/^		@global var shadow : {$/;"	v
shadow	heaps/h3d/shader/SpotShadow.hx	/^		var shadow : Float;$/;"	v
shadow	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var shadow = 1.0;$/;"	v
shadow	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var shadow : Float;$/;"	v
shadow	heaps/samples/Polygons.hx	/^	var shadow : h3d.pass.DefaultShadowMap;$/;"	v
shadow	heaps/samples/Shadows.hx	/^	var shadow : h3d.pass.DefaultShadowMap;$/;"	v
shadow	heaps/samples/Skin.hx	/^		var shadow = s3d.renderer.getPass(h3d.pass.DefaultShadowMap);$/;"	v
shadow	heaps/samples/World.hx	/^	var shadow :h3d.pass.DefaultShadowMap;$/;"	v
shadowBias	heaps/h3d/shader/DirShadow.hx	/^		@param var shadowBias : Float;$/;"	v
shadowBias	heaps/h3d/shader/PointShadow.hx	/^		@param var shadowBias : Float;$/;"	v
shadowBias	heaps/h3d/shader/SpotShadow.hx	/^		@param var shadowBias : Float;$/;"	v
shadowBias	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowBias = lightInfos[i+1].a;$/;"	v
shadowBias	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowBias = lightInfos[i+2].b;$/;"	v
shadowBias	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowBias = lightInfos[i+3].a;$/;"	v
shadowBiasId	heaps/h3d/pass/DefaultShadowMap.hx	/^	var shadowBiasId : Int;$/;"	v
shadowColorId	heaps/h3d/pass/DefaultShadowMap.hx	/^	var shadowColorId : Int;$/;"	v
shadowIsCube	heaps/h3d/shader/pbr/Slides.hx	/^		@const var shadowIsCube : Bool;$/;"	v
shadowLight	heaps/h3d/scene/LightSystem.hx	/^	public var shadowLight : h3d.scene.Light;$/;"	v
shadowMap	heaps/h3d/scene/pbr/Renderer.hx	/^			var shadowMap = defaultShadows;$/;"	v
shadowMap	heaps/h3d/shader/DirShadow.hx	/^		@param var shadowMap : Channel;$/;"	v
shadowMap	heaps/h3d/shader/PointShadow.hx	/^		@param var shadowMap : SamplerCube;$/;"	v
shadowMap	heaps/h3d/shader/SpotShadow.hx	/^		@param var shadowMap : Channel;$/;"	v
shadowMap	heaps/h3d/shader/pbr/Slides.hx	/^		@param var shadowMap : Channel;$/;"	v
shadowMapCube	heaps/h3d/shader/pbr/Slides.hx	/^		@param var shadowMapCube : SamplerCube;$/;"	v
shadowMapId	heaps/h3d/pass/DefaultShadowMap.hx	/^	var shadowMapId : Int;$/;"	v
shadowPos	heaps/h3d/shader/DirShadow.hx	/^					var shadowPos = transformedPosition * shadowProj;$/;"	v
shadowPos	heaps/h3d/shader/Shadow.hx	/^			var shadowPos = pixelTransformedPosition * shadow.proj;$/;"	v
shadowPos	heaps/h3d/shader/Shadow.hx	/^		@private var shadowPos : Vec3;$/;"	v
shadowPos	heaps/h3d/shader/SpotShadow.hx	/^					var shadowPos = vec4(transformedPosition, 1.0) * shadowProj;$/;"	v
shadowPos	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowPos = transformedPosition * shadowProj;$/;"	v
shadowPos	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowPos = vec4(transformedPosition, 1.0) * shadowProj;$/;"	v
shadowPower	heaps/h3d/shader/DirShadow.hx	/^		@param var shadowPower : Float;$/;"	v
shadowPower	heaps/h3d/shader/PointShadow.hx	/^		@param var shadowPower : Float;$/;"	v
shadowPower	heaps/h3d/shader/SpotShadow.hx	/^		@param var shadowPower : Float;$/;"	v
shadowPowerId	heaps/h3d/pass/DefaultShadowMap.hx	/^	var shadowPowerId : Int;$/;"	v
shadowProj	heaps/h3d/shader/DirShadow.hx	/^		@param var shadowProj : Mat3x4;$/;"	v
shadowProj	heaps/h3d/shader/SpotShadow.hx	/^		@param var shadowProj : Mat4;$/;"	v
shadowProj	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowProj = mat3x4(lightInfos[i+2], lightInfos[i+3], lightInfos[i+4]);$/;"	v
shadowProj	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowProj = mat4(lightInfos[i+4], lightInfos[i+5], lightInfos[i+6], lightInfos[i+7]);$/;"	v
shadowProjId	heaps/h3d/pass/DefaultShadowMap.hx	/^	var shadowProjId : Int;$/;"	v
shadowRes	heaps/h3d/shader/DirShadow.hx	/^		@param var shadowRes : Vec2;$/;"	v
shadowRes	heaps/h3d/shader/SpotShadow.hx	/^		@param var shadowRes : Vec2;$/;"	v
shadowScreenPos	heaps/h3d/shader/SpotShadow.hx	/^					var shadowScreenPos = shadowPos.xyz \/ shadowPos.w;$/;"	v
shadowShader	heaps/h3d/mat/Defaults.hx	/^	@:isVar public static var shadowShader(get, set) : hxsl.Shader;$/;"	v
shadowUv	heaps/h3d/shader/DirShadow.hx	/^					var shadowUv = screenToUv(shadowPos.xy);$/;"	v
shadowUv	heaps/h3d/shader/SpotShadow.hx	/^					var shadowUv = screenToUv(shadowPos.xy);$/;"	v
shadowUv	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var shadowUv = screenToUv(shadowPos.xy);$/;"	v
shadows	heaps/h3d/mat/Material.hx	/^			var shadows = h3d.mat.Defaults.shadowShader;$/;"	v
shadows	heaps/h3d/mat/Material.hx	/^	public var shadows(get, set) : Bool;$/;"	v
shadows	heaps/h3d/mat/Material.hx	/^	var shadows : Bool;$/;"	v
shadows	heaps/h3d/mat/PbrMaterial.hx	/^	var shadows : Bool;$/;"	v
shadows	heaps/h3d/scene/Renderer.hx	/^	public var shadows : Bool = true;$/;"	v
shadows	heaps/h3d/scene/World.hx	/^	public var shadows : Bool;$/;"	v
shadows	heaps/h3d/scene/pbr/Light.hx	/^	public var shadows : h3d.pass.Shadows;$/;"	v
shape	heaps/h2d/Interactive.hx	/^	public var shape : h2d.col.Collider;$/;"	v
shape	heaps/h3d/parts/Data.hx	/^	public var shape : Shape;$/;"	v
shape	heaps/h3d/scene/Interactive.hx	/^	public var shape : h3d.col.Collider;$/;"	v
shapePoint	heaps/h2d/Scene.hx	/^	var shapePoint : h2d.col.Point;$/;"	v
shapeX	heaps/h2d/Interactive.hx	/^	public var shapeX : Float = 0;$/;"	v
shapeY	heaps/h2d/Interactive.hx	/^	public var shapeY : Float = 0;$/;"	v
shared	heaps/hxsl/CacheFileBuilder.hx	/^		var shared = shared.get(name);$/;"	v
shared	heaps/hxsl/CacheFileBuilder.hx	/^	var shared : Map<String,SharedShader> = new Map();$/;"	v
shared	heaps/samples/FxView.hx	/^		var shared = new hrt.prefab.ContextShared();$/;"	v
shared	heaps/tools/hxsl/Main.hx	/^			var shared = new hxsl.SharedShader("");$/;"	v
sharedGlobals	heaps/h3d/scene/RenderContext.hx	/^	var sharedGlobals : Array<SharedGlobal>;$/;"	v
shiftTime	heaps/hxd/snd/webaudio/AudioTypes.hx	/^		var shiftTime = ctx.currentTime;\/\/ + 16 \/ buffer.inst.sampleRate;$/;"	v
shortKeyChar	heaps/h2d/Console.hx	/^	public var shortKeyChar : Int = "\/".code;$/;"	v
shouldRotate	heaps/samples/Interactive2D.hx	/^	var shouldRotate : Bool;$/;"	v
show	heaps/h2d/Console.hx	/^	public function show() {$/;"	f
showAlpha	heaps/h3d/shader/AlphaChannel.hx	/^		@const var showAlpha : Bool;$/;"	v
showDebug	heaps/h3d/scene/Interactive.hx	/^	public var showDebug(get, set) : Bool;$/;"	v
showDebug	heaps/samples/Interactive.hx	/^	var showDebug = false;$/;"	v
showHelp	heaps/h2d/Console.hx	/^	function showHelp( ?command : String ) {$/;"	f
showJoints	heaps/h3d/scene/Skin.hx	/^	public var showJoints : Bool;$/;"	v
showSky	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var showSky : Bool;$/;"	v
showVars	heaps/tools/hxsl/Main.hx	/^	var showVars : Bool = false;$/;"	v
shuffle	heaps/hxd/Math.hx	/^	public static inline function shuffle<T>( a : Array<T> ) {$/;"	f
shuffle	heaps/hxd/Rand.hx	/^	public inline function shuffle<T>( a : Array<T> ) {$/;"	f
si	heaps/h3d/pass/ScreenFx.hx	/^			var si = hxd.impl.Api.downcast(s, cl);$/;"	v
si	heaps/h3d/pass/ShaderManager.hx	/^			var si = shaders;$/;"	v
si	heaps/h3d/pass/ShaderManager.hx	/^		var si = shaders;$/;"	v
si	heaps/hxd/fmt/grd/Reader.hx	/^			var si = key.indexOf(" ");$/;"	v
sibling	heaps/h2d/col/Voronoi.hx	/^		var sibling;$/;"	v
side	heaps/h2d/col/Circle.hx	/^	public inline function side( p : Point ) : Float {$/;"	f
side	heaps/h2d/col/IPolygon.hx	/^	inline function side( p1 : IPoint, p2 : IPoint, t : IPoint ) {$/;"	f
side	heaps/h2d/col/Line.hx	/^	public inline function side( p : Point ) {$/;"	f
side	heaps/h2d/col/Polygon.hx	/^	inline function side( p1 : Point, p2 : Point, t : Point ) {$/;"	f
side	heaps/h2d/col/Ray.hx	/^	public inline function side( p : Point ) {$/;"	f
side	heaps/h2d/col/Segment.hx	/^	public inline function side( p : Point ) {$/;"	f
side	heaps/h3d/col/Plane.hx	/^	public inline function side( p : Point ) {$/;"	f
side	heaps/h3d/col/Polygon.hx	/^	public inline function side( p : Point ) {$/;"	f
side	heaps/hxd/clipper/Clipper.hx	/^		var side : EdgeSide;$/;"	v
side	heaps/hxd/clipper/Clipper.hx	/^		var side = edge1.side;$/;"	v
side	heaps/hxd/clipper/Clipper.hx	/^	public var side : EdgeSide;$/;"	v
side	heaps/hxd/res/FontBuilder.hx	/^		var side = Math.ceil( Math.sqrt(surf) );$/;"	v
sidx	heaps/h3d/impl/DirectXDriver.hx	/^				var sidx = shader.samplersMap[i];$/;"	v
sigma	heaps/h3d/pass/Blur.hx	/^		var sigma = Math.sqrt(radius);$/;"	v
sign	heaps/h2d/Graphics.hx	/^				var sign = n0x * nx + n0y * ny;$/;"	v
sign	heaps/hxd/fmt/blend/Data.hx	/^		var sign = (first & 0x80) == 0 ? 1 : -1;$/;"	v
sign	heaps/hxd/fmt/blend/Data.hx	/^		var sign = (fourth & 0x80) == 0 ? 1 : -1;$/;"	v
sign	heaps/hxd/fmt/blend/Data.hx	/^		var sign = (second & 0x80) == 0 ? 1 : -1;$/;"	v
sign	heaps/hxsl/AgalOptim.hx	/^			var sign = getSign(op1);$/;"	v
sign	heaps/hxsl/CacheFile.hx	/^			var sign = getSourceSign(src);$/;"	v
sign	heaps/hxsl/CacheFile.hx	/^			var sign = readString();$/;"	v
sign	heaps/hxsl/CacheFile.hx	/^		var sign = allSources.get(s);$/;"	v
signParts	heaps/hxsl/Cache.hx	/^		var signParts = [for( i in r.spec.instances ) i.shader.data.name+"_" + i.bits + "_" + i.index]/;"	v
signParts	heaps/hxsl/CacheFile.hx	/^					var signParts = [for( i in rt.spec.instances ) i.shader.data.name+"_" + i.bits + "_" + i.in/;"	v
signature	heaps/hxsl/RuntimeShader.hx	/^	public var signature : String;$/;"	v
sin	heaps/h2d/Particles.hx	/^			var sin = Math.sin(rot);$/;"	v
sin	heaps/h2d/col/Bounds.hx	/^		var sin = Math.sin(angle);$/;"	v
sin	heaps/h2d/col/Matrix.hx	/^		var sin = Math.sin(angle);$/;"	v
sin	heaps/h3d/Matrix.hx	/^		var sin = Math.sin(a);$/;"	v
sin	heaps/h3d/Quat.hx	/^		var sin = (a \/ 2).sin();$/;"	v
sin	heaps/hxd/Math.hx	/^	public static inline function sin( f : Float ) {$/;"	f
sin	heaps/samples/Interactive2D.hx	/^		var sin = Math.sin(v);$/;"	v
sinA	heaps/h2d/Particles.hx	/^				var sinA = Math.sin(a);$/;"	v
sinA	heaps/h3d/Matrix.hx	/^		var sinA = Math.sin(-hue);$/;"	v
sinR	heaps/h3d/shader/DirShadow.hx	/^					var sinR = sin(rot);$/;"	v
sinT	heaps/h3d/scene/pbr/Environment.hx	/^			var sinT = sqrt(1 - cosT * cosT);$/;"	v
sinX	heaps/h3d/Quat.hx	/^		var sinX = ( ax * 0.5 ).sin();$/;"	v
sinY	heaps/h3d/Quat.hx	/^		var sinY = ( ay * 0.5 ).sin();$/;"	v
sinYZ	heaps/h3d/Quat.hx	/^		var sinYZ = sinY * sinZ;$/;"	v
sinZ	heaps/h3d/Quat.hx	/^		var sinZ = ( az * 0.5 ).sin();$/;"	v
singleFrames	heaps/hxd/fmt/hmd/Library.hx	/^		var singleFrames = [];$/;"	v
singleStride	heaps/hxd/fmt/hmd/Library.hx	/^		var singleStride = pos;$/;"	v
singleText	heaps/samples/HtmlText.hx	/^		var singleText = "Hello simple text";$/;"	v
singleText	heaps/samples/Text.hx	/^		var singleText = "Hello simple text";$/;"	v
size	heaps/h2d/CdbLevel.hx	/^			var size = l.tileset.size;$/;"	v
size	heaps/h2d/CdbLevel.hx	/^	public var size : Int;$/;"	v
size	heaps/h2d/CdbLevel.hx	/^	var size(default, never) : Int;$/;"	v
size	heaps/h2d/Dropdown.hx	/^			var size = item.getSize();$/;"	v
size	heaps/h2d/Flow.hx	/^				var size = 0;$/;"	v
size	heaps/h2d/Font.hx	/^	public var size(default, null) : Int;$/;"	v
size	heaps/h2d/Graphics.hx	/^				var size = nnx * nx1 * ns1 + nny * ny1 * ns1;$/;"	v
size	heaps/h2d/Graphics.hx	/^			var size = nx * nx1 * ns1 + ny * ny1 * ns1; \/\/ N.N1$/;"	v
size	heaps/h2d/HtmlText.hx	/^					var size = x + esize + letterSpacing;$/;"	v
size	heaps/h2d/HtmlText.hx	/^				var size = metrics[metrics.length - 1].width + i.width + imageSpacing;$/;"	v
size	heaps/h2d/Particles.hx	/^		var size = g.size * (1 + srand() * g.sizeRand);$/;"	v
size	heaps/h2d/Particles.hx	/^	public var size(default, set) : Float		= 1;$/;"	v
size	heaps/h2d/Text.hx	/^				var size = x + esize + letterSpacing; \/* TODO : no letter spacing *\/$/;"	v
size	heaps/h2d/domkit/Style.hx	/^		var size = prevFlow.getBounds();$/;"	v
size	heaps/h2d/filter/Outline.hx	/^	public var size(get, set) : Float;$/;"	v
size	heaps/h3d/impl/DirectXDriver.hx	/^					var size = switch( v.type ) {$/;"	v
size	heaps/h3d/impl/DirectXDriver.hx	/^		var size = m.size * m.stride * 4;$/;"	v
size	heaps/h3d/impl/GlDriver.hx	/^					var size = switch( v.type ) {$/;"	v
size	heaps/h3d/impl/GlDriver.hx	/^		var size = is32 ? 4 : 2;$/;"	v
size	heaps/h3d/impl/GlDriver.hx	/^	public var size : Int;$/;"	v
size	heaps/h3d/impl/ManagedBuffer.hx	/^	public var size(default,null) : Int;$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^					var size = b.vertices * b.buffer.stride * 4;$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^			var size = memSize(t);$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^			var size = total;$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^			var size = usedMemory - freeMemorySize();$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^		var size = 0;$/;"	v
size	heaps/h3d/impl/MemoryManager.hx	/^		var size = hxd.Pixels.calcDataSize(t.width,t.height,t.format);$/;"	v
size	heaps/h3d/impl/Stage3dDriver.hx	/^					var size = bits & 7;$/;"	v
size	heaps/h3d/impl/Stage3dDriver.hx	/^				var size = bits & 7;$/;"	v
size	heaps/h3d/impl/Stage3dDriver.hx	/^				var size;$/;"	v
size	heaps/h3d/impl/Stage3dDriver.hx	/^		var size = s.globalsSize+s.paramsSize;$/;"	v
size	heaps/h3d/mat/BigTexture.hx	/^	var size : Int;$/;"	v
size	heaps/h3d/parts/Data.hx	/^	public var size : Value;$/;"	v
size	heaps/h3d/parts/GpuParticles.hx	/^			var size = ebounds.getSize();$/;"	v
size	heaps/h3d/parts/GpuParticles.hx	/^		var size = g.size * (1 + srand() * g.sizeRand), rot = srand() * Math.PI * g.rotInit;$/;"	v
size	heaps/h3d/parts/GpuParticles.hx	/^	public var size(default, set) : Float		= 1;$/;"	v
size	heaps/h3d/parts/Particle.hx	/^	public var size : Float;$/;"	v
size	heaps/h3d/pass/DirShadowMap.hx	/^		var size = buffer.readInt32();$/;"	v
size	heaps/h3d/pass/Outline.hx	/^	public var size : Float;$/;"	v
size	heaps/h3d/pass/PointShadowMap.hx	/^		var size = buffer.readInt32();$/;"	v
size	heaps/h3d/pass/ShaderManager.hx	/^			var size = 0;$/;"	v
size	heaps/h3d/pass/Shadows.hx	/^	public var size(default,set) : Int = 1024;$/;"	v
size	heaps/h3d/pass/SpotShadowMap.hx	/^		var size = buffer.readInt32();$/;"	v
size	heaps/h3d/prim/BigPrimitive.hx	/^			var size = tmpIdx.length == 0 ? 1024 : tmpIdx.length;$/;"	v
size	heaps/h3d/prim/HMDModel.hx	/^		var size = (is32 ? 4 : 2) * indexCount;$/;"	v
size	heaps/h3d/prim/HMDModel.hx	/^		var size = data.vertexCount * data.vertexStride * 4;$/;"	v
size	heaps/h3d/prim/Polygon.hx	/^		var size = 3;$/;"	v
size	heaps/h3d/prim/Quads.hx	/^		var size = 3;$/;"	v
size	heaps/h3d/scene/Graphics.hx	/^			var size = nx * nx1 * ns1 + ny * ny1 * ns1; \/\/ N.N1$/;"	v
size	heaps/h3d/scene/MeshBatch.hx	/^			var size = emitCountTip * p.paramsCount * 4;$/;"	v
size	heaps/h3d/scene/Trail.hx	/^			var size = hxd.Math.lerp(sizeStart, sizeEnd, u) * 0.5 * p1.size;$/;"	v
size	heaps/h3d/scene/Trail.hx	/^	public var size : Float;$/;"	v
size	heaps/h3d/scene/World.hx	/^				var size = res.getSize();$/;"	v
size	heaps/h3d/scene/pbr/Environment.hx	/^				var size = specular.width >> j;$/;"	v
size	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var size = 0;$/;"	v
size	heaps/h3d/scene/pbr/PointLight.hx	/^		var size = hxd.Math.min(size, range);$/;"	v
size	heaps/h3d/scene/pbr/PointLight.hx	/^	public var size : Float;$/;"	v
size	heaps/h3d/shader/GpuParticle.hx	/^			var size = (props.uv - 0.5) * current.y.max(0.);$/;"	v
size	heaps/h3d/shader/Outline.hx	/^		@param var size : Float;$/;"	v
size	heaps/h3d/shader/Outline2D.hx	/^		@param var size : Vec2;$/;"	v
size	heaps/h3d/shader/ParticleShader.hx	/^			var size : Vec2;$/;"	v
size	heaps/h3d/shader/ParticleShader.hx	/^		@param var size : Vec2;$/;"	v
size	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var size = lightInfos[i].a;$/;"	v
size	heaps/hxd/System.hl.hx	/^		var size = haxe.macro.Compiler.getDefine("windowSize");$/;"	v
size	heaps/hxd/earcut/Earcut.hx	/^	var size : Float;$/;"	v
size	heaps/hxd/fmt/blend/Data.hx	/^		var size = 0;$/;"	v
size	heaps/hxd/fmt/blend/Data.hx	/^	public var size:Int;$/;"	v
size	heaps/hxd/fmt/fbx/Parser.hx	/^				var size:Int = getVersionedInt32();$/;"	v
size	heaps/hxd/fmt/fbx/Parser.hx	/^		var size : Int = getVersionedInt32();$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^					var size = 4 * a.frames;$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^				var size = ((pos ? 3 : 0) + (rot ? 3 : 0) + (scale?3:0)) * 4 * frameCount;$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^				var size = 2 * 4 * a.frames;$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^				var size = 4 * a.frames;$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^			var size  = f.format.getSize();$/;"	v
size	heaps/hxd/fmt/hmd/Library.hx	/^	public var size : Int;$/;"	v
size	heaps/hxd/fmt/kframes/Data.hx	/^	var size : KFSize<Int>;$/;"	v
size	heaps/hxd/fmt/pak/Build.hx	/^		var size = 0;$/;"	v
size	heaps/hxd/fmt/tiff/Writer.hx	/^			var size = count * t.type.getSize();$/;"	v
size	heaps/hxd/fs/FileEntry.hx	/^	public var size(get, never) : Int;$/;"	v
size	heaps/hxd/impl/AsyncLoader.hx	/^						var size = hxd.Pixels.calcDataSize(w, h, inf.pixelFormat);$/;"	v
size	heaps/hxd/impl/AsyncLoader.hx	/^			var size;$/;"	v
size	heaps/hxd/net/Socket.hx	/^	var size : Int = 0;$/;"	v
size	heaps/hxd/net/Socket.hx	/^	var size : Int;$/;"	v
size	heaps/hxd/res/FontBuilder.hx	/^				var size = sizes[i];$/;"	v
size	heaps/hxd/res/Image.hx	/^							var size = hxd.Pixels.calcDataSize(w, h, inf.pixelFormat);$/;"	v
size	heaps/hxd/res/Image.hx	/^					var size = hxd.Pixels.calcDataSize(w, h, inf.pixelFormat);$/;"	v
size	heaps/hxd/res/Image.hx	/^				var size = hxd.Pixels.calcDataSize(w, h, inf.pixelFormat);$/;"	v
size	heaps/hxd/res/Image.hx	/^			var size = Std.int(Math.sqrt(entry.size>>2));$/;"	v
size	heaps/hxd/res/NanoJpeg.hx	/^	var size : Int;$/;"	v
size	heaps/hxd/snd/Manager.hx	/^		var size  = samples * data.getBytesPerSample();$/;"	v
size	heaps/hxd/snd/openal/Driver.hx	/^		var size    = AL.getBufferi(buffer.inst, AL.SIZE);$/;"	v
size	heaps/hxsl/AgalOut.hx	/^			var size = r.swiz == null ? 4 : r.swiz.length;$/;"	v
size	heaps/hxsl/Ast.hx	/^	public static function size( t : Type ) {$/;"	f
size	heaps/hxsl/Cache.hx	/^			var size = switch( p.type ) {$/;"	v
size	heaps/hxsl/Flatten.hx	/^			var size = 0;$/;"	v
size	heaps/hxsl/Flatten.hx	/^			var size = varSize(t, a.t);$/;"	v
size	heaps/hxsl/Flatten.hx	/^			var size = varSize(v.type, t);$/;"	v
size	heaps/hxsl/Flatten.hx	/^	public var size : Int;$/;"	v
size	heaps/hxsl/MacroParser.hx	/^			var size : Ast.SizeDecl = switch( size ) {$/;"	v
size	heaps/samples/Bounds.hx	/^			var size = Std.int(200 \/ (i + 4));$/;"	v
size	heaps/samples/CollideCheck.hx	/^		var size = RW - RH;$/;"	v
size	heaps/samples/HtmlText.hx	/^		var size = textField.getSize();$/;"	v
size	heaps/samples/Interactive2D.hx	/^				var size = rectWidth - rectHeight;$/;"	v
size	heaps/samples/SampleApp.hx	/^		var size = 10;$/;"	v
size	heaps/samples/Text.hx	/^		var size = textField.getSize();$/;"	v
size2	heaps/hxd/res/Image.hx	/^				var size2 = Std.int(Math.sqrt(entry.size>>1));$/;"	v
sizeEnd	heaps/h3d/scene/Trail.hx	/^	public var sizeEnd : Float = 0.;$/;"	v
sizeIncr	heaps/h2d/Particles.hx	/^	public var sizeIncr(default, set) : Float	= 0;$/;"	v
sizeIncr	heaps/h3d/parts/GpuParticles.hx	/^	public var sizeIncr(default, set) : Float	= 0;$/;"	v
sizeOf	heaps/h3d/impl/LogDriver.hx	/^	function sizeOf( t : hxsl.Ast.Type ) {$/;"	f
sizePos	heaps/h2d/HtmlText.hx	/^	var sizePos : Int;$/;"	v
sizeRand	heaps/h2d/Particles.hx	/^	public var sizeRand(default, set) : Float	= 0;$/;"	v
sizeRand	heaps/h3d/parts/GpuParticles.hx	/^	public var sizeRand(default, set) : Float	= 0;$/;"	v
sizeStart	heaps/h3d/scene/Trail.hx	/^	public var sizeStart : Float = 4.;$/;"	v
sizeX	heaps/h3d/prim/Cube.hx	/^	var sizeX : Float;$/;"	v
sizeY	heaps/h3d/prim/Cube.hx	/^	var sizeY : Float;$/;"	v
sizeZ	heaps/h3d/prim/Cube.hx	/^	var sizeZ : Float;$/;"	v
sizes	heaps/hxd/res/FontBuilder.hx	/^		var sizes = [];$/;"	v
sk	heaps/h3d/scene/Skin.hx	/^		var sk = skin.getSkinData();$/;"	v
skeleton	heaps/hxd/fmt/spine/JsonData.hx	/^	var skeleton : JSkeleton;$/;"	v
skew	heaps/h2d/col/Matrix.hx	/^	public function skew( sx : Float, sy : Float ) {$/;"	f
skewX	heaps/h2d/col/Matrix.hx	/^	public function skewX( sx : Float ) {$/;"	f
skewY	heaps/h2d/col/Matrix.hx	/^	public function skewY( sy : Float ) {$/;"	f
skin	heaps/h3d/col/SkinCollider.hx	/^	var skin : h3d.scene.Skin;$/;"	v
skin	heaps/h3d/scene/Skin.hx	/^	public var skin : Skin;$/;"	v
skin	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var skin = null;$/;"	v
skin	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var skin : TmpObject;$/;"	v
skin	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var skin = null;$/;"	v
skin	heaps/hxd/fmt/hmd/Data.hx	/^	public var skin : Null<Skin>;$/;"	v
skin	heaps/hxd/fmt/spine/Data.hx	/^	public var skin : Skin;$/;"	v
skinData	heaps/h3d/scene/Skin.hx	/^	var skinData : h3d.anim.Skin;$/;"	v
skinData	heaps/hxd/fmt/hmd/Library.hx	/^					var skinData = makeSkin(m.skin, header.geometries[m.geometry]);$/;"	v
skinShader	heaps/h3d/scene/Skin.hx	/^	var skinShader : h3d.shader.SkinBase;$/;"	v
skins	heaps/hxd/fmt/spine/JsonData.hx	/^	var skins : DynamicAccess<JSkin>;$/;"	v
skins	heaps/hxd/fmt/spine/Library.hx	/^	public var skins : Map<String,Skin>;$/;"	v
skip	heaps/hxd/Timer.hx	/^	public static function skip() {$/;"	f
skip	heaps/hxd/fs/FileInput.hx	/^	public function skip( nbytes : Int ) {$/;"	f
skip	heaps/hxd/res/DynamicText.hx	/^		var skip = x.has.skip;$/;"	v
skip	heaps/hxsl/CacheFile.hx	/^		function skip() {$/;"	f
skip	heaps/samples/Generator.hx	/^				var skip = false;$/;"	v
skipObjects	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var skipObjects : Map<String,Bool>;$/;"	v
skipSpace	heaps/h2d/Console.hx	/^		inline function skipSpace() {$/;"	f
sky	heaps/h3d/scene/pbr/Renderer.hx	/^	var sky : SkyMode;$/;"	v
sky	heaps/samples/CubeTexture.hx	/^		var sky = new h3d.prim.Sphere(30, 128, 128);$/;"	v
skyColor	heaps/h3d/shader/pbr/Lighting.hx	/^		@const var skyColor : Bool;$/;"	v
skyColorValue	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var skyColorValue : Vec3;$/;"	v
skyHdrMax	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var skyHdrMax : Float;$/;"	v
skyMap	heaps/h3d/shader/pbr/Lighting.hx	/^		@param var skyMap : SamplerCube;$/;"	v
skyMesh	heaps/samples/CubeTexture.hx	/^		var skyMesh = new h3d.scene.Mesh(sky, s3d);$/;"	v
skyMode	heaps/h3d/scene/pbr/Renderer.hx	/^	public var skyMode : SkyMode = Hide;$/;"	v
skyTexture	heaps/samples/CubeTexture.hx	/^	var skyTexture : h3d.mat.Texture;$/;"	v
sl	heaps/h3d/mat/Pass.hx	/^		var sl = shaders, prev = null;$/;"	v
sl	heaps/h3d/scene/MeshBatch.hx	/^				var sl = shaders;$/;"	v
sl	heaps/h3d/scene/RenderContext.hx	/^		var sl = cachedShaderList[cachedPos++];$/;"	v
sl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var sl = Std.downcast(l, SpotLight);$/;"	v
sl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var sl = spotLightsShadow[li];$/;"	v
sl	heaps/h3d/scene/pbr/LightBuffer.hx	/^			var sl = spotLights[li];$/;"	v
sl	heaps/h3d/scene/pbr/SpotLight.hx	/^		var sl = o == null ? new SpotLight(null) : cast o;$/;"	v
sl	heaps/hxd/snd/Data.hx	/^				var sl = input.getUInt16(r); r += 2;$/;"	v
slerp	heaps/h3d/Quat.hx	/^	public function slerp( q1 : Quat, q2 : Quat, v : Float ) {$/;"	f
sli	heaps/samples/SampleApp.hx	/^		var sli = new h2d.Slider(100, 10, f);$/;"	v
slider	heaps/samples/Sound.hx	/^	var slider : h2d.Slider;$/;"	v
sliderAnchorX	heaps/samples/Camera2D.hx	/^	var sliderAnchorX : h2d.Slider;$/;"	v
sliderCamAnchorX	heaps/samples/Camera2D.hx	/^	var sliderCamAnchorX : h2d.Slider;$/;"	v
sliderCamAnchorY	heaps/samples/Camera2D.hx	/^	var sliderCamAnchorY : h2d.Slider;$/;"	v
sliderCamScaleX	heaps/samples/Camera2D.hx	/^	var sliderCamScaleX : h2d.Slider;$/;"	v
sliderCamScaleY	heaps/samples/Camera2D.hx	/^	var sliderCamScaleY : h2d.Slider;$/;"	v
sliderCamX	heaps/samples/Camera2D.hx	/^	var sliderCamX : h2d.Slider;$/;"	v
sliderCamY	heaps/samples/Camera2D.hx	/^	var sliderCamY : h2d.Slider;$/;"	v
slides	heaps/h3d/scene/pbr/Renderer.hx	/^	var slides = new h3d.pass.ScreenFx(new h3d.shader.pbr.Slides());$/;"	v
slight	heaps/h3d/pass/DirShadowMap.hx	/^			var slight = light == null ? ctx.lightSystem.shadowLight : light;$/;"	v
slot	heaps/hxd/fmt/spine/Data.hx	/^	public var slot : Slot;$/;"	v
slot	heaps/hxd/fmt/spine/Library.hx	/^					var slot = slotByName.get(slotName);$/;"	v
slot	heaps/hxd/snd/openal/ReverbDriver.hx	/^	var slot      : openal.EFX.EffectSlot;$/;"	v
slotByName	heaps/hxd/fmt/spine/Library.hx	/^		var slotByName = new Map();$/;"	v
slots	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var slots : Dynamic;$/;"	v
slots	heaps/hxd/fmt/spine/JsonData.hx	/^	var slots : Array<JSlot>;$/;"	v
slots	heaps/hxd/fmt/spine/Library.hx	/^	public var slots : Array<Slot>;$/;"	v
sm	heaps/hxd/fmt/hmd/Library.hx	/^			var sm = 1;$/;"	v
smithGGXCorrelatedAnisotropic	heaps/h3d/shader/pbr/BDRF.hx	/^		function smithGGXCorrelatedAnisotropic( at : Float, ab : Float, TdV : Float, BdV : Float, TdL /;"	f
smode	heaps/h3d/shader/pbr/Slides.hx	/^		@const var smode : Int;$/;"	v
smooth	heaps/h2d/Drawable.hx	/^	public var smooth : Null<Bool>;$/;"	v
smooth	heaps/h2d/KeyFrames.hx	/^	public var smooth(default,set) = true;$/;"	v
smooth	heaps/h2d/filter/Filter.hx	/^	public var smooth = false;$/;"	v
smooth	heaps/h3d/scene/CameraController.hx	/^	public var smooth = 0.6;$/;"	v
smoothAlpha	heaps/h2d/filter/Mask.hx	/^		@const var smoothAlpha : Bool;$/;"	v
smoothAlpha	heaps/h2d/filter/Mask.hx	/^	public var smoothAlpha(get, set) : Bool;$/;"	v
smoothColor	heaps/h2d/filter/Glow.hx	/^	public var smoothColor : Bool;$/;"	v
smoothFactor	heaps/hxd/Timer.hx	/^	public static var smoothFactor = #if hl 0. #else 0.95 #end;$/;"	v
smoothFixedColor	heaps/h3d/shader/Blur.hx	/^		@const var smoothFixedColor : Bool;$/;"	v
smoothTime	heaps/h3d/impl/Benchmark.hx	/^	public var smoothTime = 0.95;$/;"	v
smoothVal	heaps/h3d/shader/SignedDistanceField.hx	/^			var smoothVal = autoSmoothing ? abs(fwidth(distance) * 0.5) : smoothing;$/;"	v
smoothing	heaps/h3d/shader/SignedDistanceField.hx	/^		@param var smoothing : Float = 0.04166666666666666666666666666667; \/\/ 1\/24$/;"	v
smoothness	heaps/h3d/scene/Trail.hx	/^	public var smoothness : Float = 0.5;$/;"	v
snd	heaps/hxd/fmt/pak/Build.hx	/^				var snd = new hxd.snd.OggData(sys.io.File.getBytes(filePath));$/;"	v
snd	heaps/hxd/snd/LoadingData.hx	/^	var snd : hxd.res.Sound;$/;"	v
snd	heaps/hxd/snd/Manager.hx	/^					var snd = c.queue[0];$/;"	v
snd	heaps/hxd/snd/Manager.hx	/^			var snd = c.sound;$/;"	v
snd	heaps/hxd/snd/Mp3Data.hx	/^	var snd : flash.media.Sound;$/;"	v
snd	heaps/hxd/snd/NativeChannel.hx	/^	var snd : flash.media.Sound;$/;"	v
snoise	heaps/h3d/shader/NoiseLib.hx	/^function snoise(pos:Vec2) : Float {$/;"	f
so	heaps/h3d/anim/SmoothTransition.hx	/^			var so : SmoothedObject = cast o;$/;"	v
so	heaps/h3d/anim/SmoothTransition.hx	/^			var so = allObjects.get(o.objectName);$/;"	v
so	heaps/h3d/anim/SmoothTransition.hx	/^			var so = new SmoothedObject(o.objectName);$/;"	v
sock	heaps/hxd/net/Socket.hx	/^				var sock = tcp.accept();$/;"	v
sock	heaps/hxd/net/Socket.hx	/^			var sock = e.socket;$/;"	v
sock	heaps/hxd/net/Socket.hx	/^	var sock : flash.net.Socket;$/;"	v
socket	heaps/hxd/net/SocketHost.hx	/^	var socket : Socket;$/;"	v
soil	heaps/samples/World.hx	/^		var soil = new h3d.scene.Mesh(cube, c.root);$/;"	v
solution	heaps/hxd/clipper/Clipper.hx	/^		var solution = [];$/;"	v
solve	heaps/h2d/col/Polynomial.hx	/^	public function solve( b : Matrix ) {$/;"	f
sort	heaps/h3d/parts/Particles.hx	/^	function sort( list : Particle ) {$/;"	f
sort	heaps/h3d/pass/PassList.hx	/^	public inline function sort( f : PassObject -> PassObject -> Int ) {$/;"	f
sort	heaps/h3d/pass/SortByMaterial.hx	/^	public function sort( passes : PassList ) {$/;"	f
sortByAngle	heaps/h2d/col/Voronoi.hx	/^	static function sortByAngle(a:Halfedge, b:Halfedge) {$/;"	f
sortByBindIndex	heaps/h3d/anim/Skin.hx	/^	function sortByBindIndex(j1:Joint, j2:Joint) {$/;"	f
sortByFrameCountDesc	heaps/h3d/anim/BufferAnimation.hx	/^	function sortByFrameCountDesc( o1 : BufferObject, o2 : BufferObject ) {$/;"	f
sortByFrameCountDesc	heaps/h3d/anim/LinearAnimation.hx	/^	function sortByFrameCountDesc( o1 : LinearObject, o2 : LinearObject ) {$/;"	f
sortByLRU	heaps/h3d/impl/MemoryManager.hx	/^	function sortByLRU( t1 : h3d.mat.Texture, t2 : h3d.mat.Texture ) {$/;"	f
sortByPriorityDesc	heaps/hxsl/Linker.hx	/^	function sortByPriorityDesc( s1 : ShaderInfos, s2 : ShaderInfos ) {$/;"	f
sortByRulePiority	heaps/hxd/fs/FileConverter.hx	/^	static function sortByRulePiority( r1 : ConvertRule, r2 : ConvertRule ) {$/;"	f
sortBySpec	heaps/hxsl/CacheFile.hx	/^	function sortBySpec( r1 : RuntimeShader, r2 : RuntimeShader ) {$/;"	f
sortByXY	heaps/h2d/col/Voronoi.hx	/^	static function sortByXY(a:Point, b:Point) {$/;"	f
sortChannel	heaps/hxd/snd/Manager.hx	/^	function sortChannel(a : Channel, b : Channel) {$/;"	f
sortDistinctFloats	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function sortDistinctFloats( a : Float, b : Float ) {$/;"	f
sortEffect	heaps/hxd/snd/Manager.hx	/^	function sortEffect(a : Effect, b : Effect) {$/;"	f
sortHitPointByCameraDistance	heaps/h3d/scene/Scene.hx	/^	function sortHitPointByCameraDistance( i1 : Interactive, i2 : Interactive ) {$/;"	f
sortInfluences	heaps/h3d/anim/Skin.hx	/^	function sortInfluences( i1 : Influence, i2 : Influence ) {$/;"	f
sortInv	heaps/h3d/parts/Particles.hx	/^	function sortInv( list : Particle ) {$/;"	f
sortLight	heaps/h3d/scene/fwd/LightSystem.hx	/^	function sortLight( l1 : h3d.scene.fwd.Light, l2 : h3d.scene.fwd.Light ) {$/;"	f
sortLights	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function sortLights ( ctx : h3d.scene.RenderContext ) : Array<Light> @:privateAccess {$/;"	f
sortLinked	heaps/hxd/earcut/Earcut.hx	/^	function sortLinked(list:EarNode) {$/;"	f
sortMode	heaps/h2d/Particles.hx	/^	public var sortMode(default, set) : PartSortMode = None;$/;"	v
sortMode	heaps/h3d/parts/Data.hx	/^	public var sortMode : SortMode;$/;"	v
sortMode	heaps/h3d/parts/GpuParticles.hx	/^	public var sortMode(default, set) : GpuSortMode = None;$/;"	v
sortMode	heaps/h3d/parts/Particles.hx	/^	public var sortMode : Data.SortMode;$/;"	v
sortOnHeight	heaps/hxd/res/BDFFont.hx	/^	static public function sortOnHeight( a : BDFFontChar, b : BDFFontChar ) {$/;"	f
sortPoints	heaps/hxd/poly2tri/Point.hx	/^	public static function sortPoints(points:Array<Point>)$/;"	f
sortedCurves	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var sortedCurves = [for( c in curves ) c];$/;"	v
sortingCriteria	heaps/h3d/scene/pbr/LightBuffer.hx	/^	function sortingCriteria ( l1 : Light, l2 : Light, cameraTarget : Vector ) {$/;"	f
sound	heaps/hxd/snd/Channel.hx	/^	public var sound(default, null) : hxd.res.Sound;$/;"	v
sound	heaps/hxd/snd/Manager.hx	/^	public var sound    : hxd.res.Sound;$/;"	v
soundBufferCount	heaps/hxd/snd/Manager.hx	/^	var soundBufferCount  : Int;$/;"	v
soundBufferKeys	heaps/hxd/snd/Manager.hx	/^	var soundBufferKeys	  : Array<String>;$/;"	v
soundBufferMap	heaps/hxd/snd/Manager.hx	/^	var soundBufferMap    : Map<String, Buffer>;$/;"	v
soundGroup	heaps/hxd/snd/Channel.hx	/^	public var soundGroup(default, null) : SoundGroup;$/;"	v
source	heaps/h3d/col/PolygonBuffer.hx	/^	public var source : { entry : hxd.fs.FileEntry, geometryName : String };$/;"	v
source	heaps/h3d/scene/pbr/Environment.hx	/^		@param var source : SamplerCube;$/;"	v
source	heaps/h3d/scene/pbr/Environment.hx	/^	public var source : h3d.mat.Texture;$/;"	v
source	heaps/hxd/snd/Channel.hx	/^	var source : Manager.Source;$/;"	v
source	heaps/hxd/snd/openal/Driver.hx	/^		var source = new SourceHandle();$/;"	v
source	heaps/hxd/snd/openal/Emulator.hx	/^	var source : Source;$/;"	v
source3f	heaps/hxd/snd/openal/Emulator.hx	/^	public static function source3f(source : Source, param : Int, value1 : F32, value2 : F32, value/;"	f
source3i	heaps/hxd/snd/openal/Emulator.hx	/^	public static function source3i(source : Source, param : Int, value1 : Int, value2 : Int, value/;"	f
sourceExts	heaps/hxd/fs/Convert.hx	/^	public var sourceExts(default,null) : Array<String>;$/;"	v
sourceFile	heaps/hxsl/CacheFile.hx	/^	var sourceFile : String;$/;"	v
sourceMap	heaps/hxsl/CacheFile.hx	/^		var sourceMap = new Map();$/;"	v
sourcePause	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcePause(source : Source) {$/;"	f
sourcePausev	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcePausev(n : Int, sources : Bytes) {$/;"	f
sourcePlay	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcePlay(source : Source) {$/;"	f
sourcePlayv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcePlayv(n : Int, sources : Bytes) {$/;"	f
sourceQueueBuffers	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceQueueBuffers(source : Source, nb : Int, buffers : Bytes) {$/;"	f
sourceRewind	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceRewind(source : Source) {$/;"	f
sourceRewindv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceRewindv(n : Int, sources : Bytes) {$/;"	f
sourceStop	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceStop(source : Source) {$/;"	f
sourceStopv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceStopv(n : Int, sources : Bytes) {$/;"	f
sourceUnqueueBuffers	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceUnqueueBuffers(source : Source, nb : Int, buffers : Bytes) {$/;"	f
sourcef	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcef(source : Source, param : Int, value : F32) {$/;"	f
sourcefv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcefv(source : Source, param : Int, values : Bytes) {$/;"	f
sourcei	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourcei(source : Source, param : Int, value  : Int) {$/;"	f
sourceiv	heaps/hxd/snd/openal/Emulator.hx	/^	public static function sourceiv(source : Source, param : Int, values : Bytes) {$/;"	f
sources	heaps/hxd/snd/Manager.hx	/^	var sources  : Array<Source>;$/;"	v
sources	heaps/hxsl/CacheFile.hx	/^		var sources = [for( k in compiledSources.keys() ) k];$/;"	v
sources	heaps/hxsl/CacheFile.hx	/^		var sources = [for( s in allSources.keys() ) s];$/;"	v
sout	heaps/hxsl/AgalOptim.hx	/^						var sout = [];$/;"	v
sout	heaps/hxsl/AgalOptim.hx	/^		var sout = [];$/;"	v
sp	heaps/h3d/pass/PointShadowMap.hx	/^		var sp = new h3d.col.Sphere(absPos.tx, absPos.ty, absPos.tz, pointLight.range);$/;"	v
sp	heaps/hxd/Pad.hx	/^		var sp = new GameController( index );$/;"	v
sp	heaps/hxd/fmt/hmd/Library.hx	/^				var sp = j.offsets.toSphere();$/;"	v
sp	heaps/samples/CubeTexture.hx	/^		var sp = new h3d.prim.Sphere(0.5, 64, 64);$/;"	v
sp	heaps/samples/Lights.hx	/^		var sp = new h3d.prim.Sphere(1,16,16);$/;"	v
sp	heaps/samples/Lights.hx	/^		var sp = new h3d.scene.pbr.SpotLight(s3d);$/;"	v
sp	heaps/samples/Pbr.hx	/^		var sp = new h3d.prim.Sphere(1, 128, 128);$/;"	v
space	heaps/h3d/impl/Benchmark.hx	/^		var space = 52;$/;"	v
space	heaps/h3d/mat/BigTexture.hx	/^	var space : QuadTree;$/;"	v
space	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var space = glyphs.get(" ".code);$/;"	v
space	heaps/hxd/res/BDFFont.hx	/^		var space = font.glyphs.get( " ".code );$/;"	v
spaceX	heaps/samples/Flows.hx	/^		var spaceX = 10.0;$/;"	v
spaceY	heaps/samples/Flows.hx	/^		var spaceY = 10.0;$/;"	v
spatial	heaps/samples/Sound.hx	/^		var spatial = new hxd.snd.effect.Spatialization();$/;"	v
spec	heaps/h3d/mat/PbrMaterial.hx	/^		var spec = mainPass.getShader(h3d.shader.pbr.PropsTexture);$/;"	v
spec	heaps/h3d/scene/World.hx	/^	public var spec : h3d.mat.BigTexture.BigTextureElement;$/;"	v
spec	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var spec = getSpecChild(m, "SpecularFactor"); \/\/ 3dsMax$/;"	v
spec	heaps/hxsl/CacheFile.hx	/^				var spec = rtMap.get(r.signature);$/;"	v
spec	heaps/hxsl/RuntimeShader.hx	/^	public var spec : { instances : Array<ShaderInstanceDesc>, signature : String };$/;"	v
specColor	heaps/h3d/shader/BaseMesh.hx	/^		var specColor : Vec3;$/;"	v
specColor	heaps/h3d/shader/DirLight.hx	/^		var specColor : Vec3;$/;"	v
specColor	heaps/h3d/shader/PointLight.hx	/^		var specColor : Vec3;$/;"	v
specColor	heaps/h3d/shader/SpecularTexture.hx	/^		var specColor : Vec3;$/;"	v
specColor	heaps/h3d/shader/Texture.hx	/^		var specColor : Vec3;$/;"	v
specLevels	heaps/h3d/scene/pbr/Environment.hx	/^	public var specLevels : Int;$/;"	v
specPower	heaps/h3d/shader/BaseMesh.hx	/^		var specPower : Float;$/;"	v
specPower	heaps/h3d/shader/DirLight.hx	/^		var specPower : Float;$/;"	v
specPower	heaps/h3d/shader/PointLight.hx	/^		var specPower : Float;$/;"	v
specSign	heaps/hxsl/CacheFile.hx	/^			var specSign = readString();$/;"	v
specSize	heaps/h3d/scene/pbr/Environment.hx	/^	public var specSize : Int;$/;"	v
specTex	heaps/h3d/scene/World.hx	/^		var specTex = null;$/;"	v
specValue	heaps/h3d/shader/DirLight.hx	/^			var specValue = r.dot((camera.position - transformedPosition).normalize()).max(0.);$/;"	v
specValue	heaps/h3d/shader/PointLight.hx	/^			var specValue = r.dot((camera.position - position).normalize()).max(0.);$/;"	v
specialGlobal	heaps/hxsl/Checker.hx	/^	function specialGlobal( g : TGlobal, e : TExpr, args : Array<TExpr>, pos : Position ) : TExpr {$/;"	f
specular	heaps/h3d/scene/pbr/Environment.hx	/^	public var specular : h3d.mat.Texture;$/;"	v
specular	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var specular = (D * F * G).max(0.);$/;"	v
specular	heaps/h3d/shader/pbr/DefaultForward.hx	/^			var specular = envSpec * (F * envBRDF.x + envBRDF.y);$/;"	v
specular	heaps/h3d/shader/pbr/Lighting.hx	/^				var specular = (D * F * G).max(0.);$/;"	v
specular	heaps/h3d/shader/pbr/Lighting.hx	/^				var specular = vec3(0.);$/;"	v
specularAlpha	heaps/h3d/shader/Texture.hx	/^		@const var specularAlpha : Bool;$/;"	v
specularAmount	heaps/h3d/mat/Material.hx	/^	public var specularAmount(get, set) : Float;$/;"	v
specularColor	heaps/h3d/shader/BaseMesh.hx	/^		@param var specularColor : Vec3;$/;"	v
specularInAlpha	heaps/h3d/scene/World.hx	/^	public var specularInAlpha = false;$/;"	v
specularPower	heaps/h3d/mat/Material.hx	/^	public var specularPower(get, set) : Float;$/;"	v
specularShader	heaps/h3d/mat/Material.hx	/^	public var specularShader(default, null) : h3d.shader.SpecularTexture;$/;"	v
specularTexture	heaps/h3d/mat/Material.hx	/^	public var specularTexture(get, set) : h3d.mat.Texture;$/;"	v
specularTexture	heaps/hxd/fmt/hmd/Data.hx	/^	public var specularTexture : Null<String>;$/;"	v
speed	heaps/h2d/Anim.hx	/^	public var speed : Float;$/;"	v
speed	heaps/h2d/KeyFrames.hx	/^	public var speed : Float = 1.;$/;"	v
speed	heaps/h2d/Particles.hx	/^		var speed = g.speed * (1 + srand() * g.speedRand);$/;"	v
speed	heaps/h2d/Particles.hx	/^	public var speed(default, set) : Float			= 50.;$/;"	v
speed	heaps/h3d/anim/Animation.hx	/^	public var speed : Float;$/;"	v
speed	heaps/h3d/parts/Data.hx	/^	public var speed : Value;$/;"	v
speed	heaps/h3d/parts/Emitter.hx	/^		var speed = p.eval(state.speed, p.time);$/;"	v
speed	heaps/h3d/parts/Emitter.hx	/^	public var speed : Float = 1.;$/;"	v
speed	heaps/h3d/parts/GpuParticles.hx	/^		var speed = g.speed * (1 + srand() * g.speedRand);$/;"	v
speed	heaps/h3d/parts/GpuParticles.hx	/^		var speed = speed * (1 + speedRand);$/;"	v
speed	heaps/h3d/parts/GpuParticles.hx	/^	public var speed(default, set) : Float		= 1;$/;"	v
speed	heaps/h3d/shader/AnimatedTexture.hx	/^		@param var speed : Float;$/;"	v
speed	heaps/h3d/shader/SinusDeform.hx	/^		@param var speed : Float;$/;"	v
speed	heaps/h3d/shader/UVAnim.hx	/^		@param var speed : Float;$/;"	v
speed	heaps/hxd/Cursor.hx	/^	var speed : Float;$/;"	v
speed	heaps/hxd/fmt/hmd/Data.hx	/^	public var speed : Float;$/;"	v
speed	heaps/samples/MeshBatch.hx	/^	public var speed : Float;$/;"	v
speedIncr	heaps/h2d/Particles.hx	/^	public var speedIncr(default, set) : Float		= 0;$/;"	v
speedIncr	heaps/h3d/parts/GpuParticles.hx	/^	public var speedIncr(default, set) : Float	= 0;$/;"	v
speedIncr	heaps/h3d/shader/GpuParticle.hx	/^		@param var speedIncr : Float;$/;"	v
speedMin	heaps/h3d/parts/GpuParticles.hx	/^		var speedMin = speed * hxd.Math.max(1 - speedRand, 0.);$/;"	v
speedOfSound	heaps/hxd/snd/openal/Emulator.hx	/^	public static function speedOfSound(value : F32) {}$/;"	f
speedRand	heaps/h2d/Particles.hx	/^	public var speedRand(default, set) : Float		= 0;$/;"	v
speedRand	heaps/h3d/parts/GpuParticles.hx	/^	public var speedRand(default, set) : Float	= 0;$/;"	v
sphere	heaps/h3d/prim/HMDModel.hx	/^			var sphere = data.bounds.toSphere();$/;"	v
sphere	heaps/samples/Pbr.hx	/^			var sphere = new h3d.scene.Mesh(sp, s3d);$/;"	v
sphere	heaps/samples/Pbr.hx	/^	var sphere : h3d.scene.Mesh;$/;"	v
sphere	heaps/samples/PointLights.hx	/^		var sphere = new h3d.prim.GeoSphere(4);$/;"	v
sphere	heaps/samples/Polygons.hx	/^		var sphere = new Sphere(0.5, 16, 16);$/;"	v
sphere	heaps/samples/Shadows.hx	/^		var sphere = new h3d.prim.Sphere(1, 32, 24);$/;"	v
sphereMesh	heaps/samples/Polygons.hx	/^		var sphereMesh = new Mesh(sphere, s3d);$/;"	v
spherea	heaps/h3d/col/Capsule.hx	/^		var spherea = new h3d.scene.Mesh(prim);$/;"	v
sphereb	heaps/h3d/col/Capsule.hx	/^		var sphereb = spherea.clone();$/;"	v
spheres	heaps/samples/Shadows.hx	/^	var spheres : Array<h3d.scene.Object>;$/;"	v
spine	heaps/hxd/fmt/spine/JsonData.hx	/^	var spine : String; \/\/ version$/;"	v
splice	heaps/hxsl/AgalOptim.hx	/^	function splice() {$/;"	f
split	heaps/h2d/Tile.hx	/^	public function split( frames : Int = 0, vertical = false, subpixel = false ) : Array<Tile> {$/;"	f
split	heaps/h3d/anim/Skin.hx	/^	public function split( maxBones : Int, index : Array<Int>, triangleMaterials : Null<Array<Int>>/;"	f
split	heaps/h3d/mat/BigTexture.hx	/^	function split( q : QuadTree, sw : Int, sh : Int, rw : Int, rh : Int ) {$/;"	f
split	heaps/hxd/fmt/hmd/Data.hx	/^	public var split : Null<Array<SkinSplit>>;$/;"	v
split	heaps/hxsl/Splitter.hx	/^	public function split( s : ShaderData ) : { vertex : ShaderData, fragment : ShaderData } {$/;"	f
split	heaps/tools/hxsl/Main.hx	/^			var split = new hxsl.Splitter().split(linked);$/;"	v
splitEarcut	heaps/hxd/earcut/Earcut.hx	/^	function splitEarcut(start:EarNode) {$/;"	f
splitIndex	heaps/h3d/anim/Skin.hx	/^	public var splitIndex : Int;$/;"	v
splitJoints	heaps/h3d/anim/Skin.hx	/^	public var splitJoints(default, null) : Array<{ material : Int, joints : Array<Joint> }>;$/;"	v
splitNode	heaps/h2d/HtmlText.hx	/^		var splitNode : SplitNode = { node: null, font: font, width: 0, height: 0, baseLine: 0, pos: 0/;"	v
splitNode	heaps/h2d/HtmlText.hx	/^		var splitNode : SplitNode = {$/;"	v
splitPalette	heaps/h3d/scene/Skin.hx	/^	var splitPalette : Array<Array<h3d.Matrix>>;$/;"	v
splitPath	heaps/hxd/fs/EmbedFileSystem.hx	/^	function splitPath( path : String ) {$/;"	f
splitPolygon	heaps/hxd/earcut/Earcut.hx	/^	function splitPolygon(a : EarNode, b : EarNode) {$/;"	f
splitRawText	heaps/h2d/Text.hx	/^	function splitRawText( text : String, leftMargin = 0., afterData = 0., ?font : Font, ?sizes:Arr/;"	f
splitText	heaps/h2d/HtmlText.hx	/^	override function splitText(text:String):String {$/;"	f
splitText	heaps/h2d/Text.hx	/^	public function splitText( text : String ) {$/;"	f
spotDir	heaps/h3d/shader/pbr/Light.hx	/^		@param var spotDir : Vec3;$/;"	v
spotLight	heaps/h3d/pass/SpotShadowMap.hx	/^		var spotLight = cast(light, h3d.scene.pbr.SpotLight);$/;"	v
spotLightCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var spotLightCount = 0;$/;"	v
spotLightCount	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var spotLightCount : Int;$/;"	v
spotLightIntensity	heaps/h3d/shader/pbr/Light.hx	/^		function spotLightIntensity( delta : Vec3, lightDir : Vec3, range : Float, invRange4 : Float, /;"	f
spotLightPrim	heaps/h3d/scene/pbr/SpotLight.hx	/^	public static function spotLightPrim() : h3d.prim.Polygon {$/;"	f
spotLights	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var spotLights : Array<SpotLight> = [];$/;"	v
spotLightsShadow	heaps/h3d/scene/pbr/LightBuffer.hx	/^	var spotLightsShadow : Array<SpotLight> = [];$/;"	v
spotShadowCount	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var spotShadowCount = 0;$/;"	v
spotShadowMaps	heaps/h3d/shader/pbr/DefaultForward.hx	/^		@param var spotShadowMaps : Array<Sampler2D, SPOT_SHADOW_COUNT>;$/;"	v
spr	heaps/h2d/KeyFrames.hx	/^			var spr, tiles = null;$/;"	v
spr	heaps/h2d/KeyFrames.hx	/^	var spr : Object;$/;"	v
spr	heaps/h2d/ZGroup.hx	/^	public var spr   : Object;$/;"	v
spritePosition	heaps/h3d/shader/Base2d.hx	/^		var spritePosition : Vec4;$/;"	v
sprites	heaps/samples/DrawingTiles.hx	/^		var sprites = new h2d.SpriteBatch(null, hbox);$/;"	v
sq	heaps/h3d/pass/Blur.hx	/^		var sq = s * s;$/;"	v
sq	heaps/h3d/scene/pbr/Environment.hx	/^			var sq = sqrt(1 - p.x);$/;"	v
sqDist	heaps/h2d/col/Polygon.hx	/^			var sqDist = cp.distanceSq(pt);$/;"	v
sqrt	heaps/hxd/Math.hx	/^	public static inline function sqrt( f : Float ) {$/;"	f
square	heaps/samples/Particles2d.hx	/^	var square : Texture;$/;"	v
square2	heaps/h2d/Graphics.hx	/^		var square2 = Math.sqrt(2);$/;"	v
sr	heaps/h2d/Camera.hx	/^				var sr = Math.sin(rotation);$/;"	v
sr	heaps/h2d/Object.hx	/^				var sr = Math.sin(rotation);$/;"	v
sr	heaps/h3d/prim/BigPrimitive.hx	/^		var sr = Math.sin(rotation);$/;"	v
sr	heaps/h3d/shader/ParticleShader.hx	/^			var sr = rot.sin();$/;"	v
sr	heaps/hxd/snd/Data.hx	/^				var sr = input.getUInt16(r); r += 2;$/;"	v
srand	heaps/h2d/Particles.hx	/^		inline function srand() return hxd.Math.srand();$/;"	f
srand	heaps/h3d/parts/GpuParticles.hx	/^		inline function srand() return rnd.srand();$/;"	f
srand	heaps/hxd/Math.hx	/^	public static function srand( max = 1.0 ) {$/;"	f
srand	heaps/hxd/Rand.hx	/^	public inline function srand(scale=1.0) {$/;"	f
src	heaps/h2d/filter/InnerGlow.hx	/^			var src = srcTex.get(input.uv);$/;"	v
src	heaps/hxd/BitmapData.hx	/^		var src = pixels.bytes;$/;"	v
src	heaps/hxd/snd/NativeChannel.hx	/^	var src : SourceHandle;$/;"	v
src	heaps/hxsl/CacheFile.hx	/^			var src = compiledSources.get(s);$/;"	v
src	heaps/hxsl/CacheFile.hx	/^			var src = readString();$/;"	v
src	heaps/hxsl/CacheFileBuilder.hx	/^			var src = build.shaderLib.get(name);$/;"	v
srcBpp	heaps/h3d/mat/BigTexture.hx	/^			var srcBpp = @:privateAccess pixels.bytesPerPixel;$/;"	v
srcBpp	heaps/h3d/mat/TextureChannels.hx	/^		var srcBpp = @:privateAccess src.bytesPerPixel;$/;"	v
srcBytes	heaps/hxd/fs/Convert.hx	/^	public var srcBytes : haxe.io.Bytes;$/;"	v
srcChannels	heaps/hxd/snd/Data.hx	/^		var srcChannels = this.channels;$/;"	v
srcOff	heaps/h3d/mat/TextureChannels.hx	/^		var srcOff = hxd.Pixels.getChannelOffset(src.format, srcChannel);$/;"	v
srcP	heaps/hxd/Pixels.hx	/^			var srcP = (srcX + src.yflip(dy + srcY) * src.width) * bpp + src.offset;$/;"	v
srcPath	heaps/hxd/fs/Convert.hx	/^	public var srcPath : String;$/;"	v
srcPos	heaps/hxd/snd/Data.hx	/^			var srcPos = inPos + isample * bpp;$/;"	v
srcPosX	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var srcPosX : Null<Int>;$/;"	v
srcPosY	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var srcPosY : Null<Int>;$/;"	v
srcRedPos	heaps/h3d/mat/BigTexture.hx	/^			var srcRedPos = hxd.Pixels.getChannelOffset(pixels.format, R);$/;"	v
srcTex	heaps/h2d/filter/InnerGlow.hx	/^		@param var srcTex : Sampler2D;$/;"	v
srdnoise	heaps/h3d/shader/NoiseLib.hx	/^function srdnoise(pos:Vec2, rot:Float) : Vec3 {$/;"	f
sreal	heaps/hxsl/Linker.hx	/^			var sreal = dupShaders.get(s);$/;"	v
srnoise	heaps/h3d/shader/NoiseLib.hx	/^function srnoise(pos:Vec2, rot:Float) : Float {$/;"	f
ss	heaps/h2d/Graphics.hx	/^		var ss = Math.sin(angleStart);$/;"	v
ss	heaps/h3d/impl/DirectXDriver.hx	/^					var ss = samplerStates.get(bits);$/;"	v
ss	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var ss = new SkinSplit();$/;"	v
ss	heaps/hxd/fmt/hmd/Reader.hx	/^				var ss = new SkinSplit();$/;"	v
ssd	heaps/hxd/fmt/spine/Library.hx	/^					var ssd = sd.get(slotName);$/;"	v
sshader	heaps/h3d/pass/SpotShadowMap.hx	/^	var sshader : h3d.shader.SpotShadow;$/;"	v
sstart	heaps/h3d/impl/DirectXDriver.hx	/^			var sstart = -1, smax = -1;$/;"	v
ssx	heaps/hxd/res/NanoJpeg.hx	/^	public var ssx : Int;$/;"	v
ssxmax	heaps/hxd/res/NanoJpeg.hx	/^		var ssxmax = 0, ssymax = 0;$/;"	v
ssy	heaps/hxd/res/NanoJpeg.hx	/^	public var ssy : Int;$/;"	v
st	heaps/h3d/anim/SmoothTarget.hx	/^		var st = dt - rt;$/;"	v
st	heaps/h3d/anim/SmoothTransition.hx	/^		var st = dt - rt;$/;"	v
st	heaps/h3d/anim/Transition.hx	/^		var st = dt - rt;$/;"	v
st	heaps/h3d/impl/Benchmark.hx	/^			var st = currentStats;$/;"	v
st	heaps/h3d/impl/DirectXDriver.hx	/^		var st = pass.stencil;$/;"	v
st	heaps/h3d/parts/GpuParticles.hx	/^			var st = t - (t % p.life);$/;"	v
st	heaps/h3d/prim/Sphere.hx	/^			var st = Math.sin(t);$/;"	v
stMaskBits	heaps/h3d/impl/DirectXDriver.hx	/^		var stMaskBits = pass.stencil != null ? @:privateAccess pass.stencil.maskBits : -1;$/;"	v
stOpBits	heaps/h3d/impl/DirectXDriver.hx	/^		var stOpBits = pass.stencil != null ? @:privateAccess pass.stencil.opBits : -1;$/;"	v
stack	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var stack : Bool;$/;"	v
stack	heaps/hxd/System.hl.hx	/^		var stack = haxe.CallStack.toString(exc != null ? exc.stack : haxe.CallStack.exceptionStack())/;"	v
stack	heaps/hxd/System.hl.hx	/^		var stack = haxe.CallStack.toString(haxe.CallStack.exceptionStack());$/;"	v
stack	heaps/hxd/impl/AllocPos.hx	/^	public var stack : Array<String> = [];$/;"	v
stackStr	heaps/h3d/impl/MemoryManager.hx	/^			var stackStr = a.stack.join("\\n");$/;"	v
stage	heaps/hxd/Window.flash.hx	/^	var stage : flash.display.Stage;$/;"	v
start	heaps/h2d/Layers.hx	/^			var start = layer == 0 ? 0 : layersIndexes[layer - 1];$/;"	v
start	heaps/h2d/Layers.hx	/^		var start = layer == 0 ? 0 : layersIndexes[layer - 1];$/;"	v
start	heaps/h2d/filter/Group.hx	/^		var start = input;$/;"	v
start	heaps/h3d/impl/DirectXDriver.hx	/^			var start = -1, max = -1;$/;"	v
start	heaps/h3d/impl/DirectXDriver.hx	/^		var start = -1, max = -1, position = 0;$/;"	v
start	heaps/h3d/impl/DirectXDriver.hx	/^		var start = -1, max = -1;$/;"	v
start	heaps/h3d/impl/GlDriver.hx	/^				var start = 0;$/;"	v
start	heaps/h3d/impl/GlDriver.hx	/^			var start = 0;$/;"	v
start	heaps/h3d/parts/GpuParticles.hx	/^			var start = emitStartDist + emitDist;$/;"	v
start	heaps/h3d/prim/BigPrimitive.hx	/^		var start = startIndex;$/;"	v
start	heaps/h3d/scene/Graphics.hx	/^		var start = bprim.vertexCount();$/;"	v
start	heaps/h3d/scene/MeshBatch.hx	/^			var start = 0;$/;"	v
start	heaps/h3d/scene/RenderContext.hx	/^	public function start() {$/;"	f
start	heaps/h3d/scene/Renderer.hx	/^	public function start() {$/;"	f
start	heaps/h3d/scene/pbr/Renderer.hx	/^	override function start() {$/;"	f
start	heaps/hxd/System.flash.hx	/^	public static function start( callb : Void -> Void ) : Void {$/;"	f
start	heaps/hxd/System.hl.hx	/^	public static function start( init : Void -> Void ) : Void {$/;"	f
start	heaps/hxd/System.hx	/^	public static function start( callb : Void -> Void ) : Void {$/;"	f
start	heaps/hxd/System.js.hx	/^	public static function start( callb : Void -> Void ) : Void {$/;"	f
start	heaps/hxd/Worker.hx	/^	public function start() {$/;"	f
start	heaps/hxd/fmt/fbx/Geometry.hx	/^				var start = pos - count + 1;$/;"	v
start	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var start = pos - count + 1;$/;"	v
start	heaps/hxd/fmt/fbx/Parser.hx	/^		var start = pos;$/;"	v
start	heaps/hxd/fmt/hmd/Library.hx	/^			var start = Std.int(outVertex.length \/ stride);$/;"	v
start	heaps/hxd/res/NanoJpeg.hx	/^		var start = get(0);$/;"	v
start	heaps/hxd/snd/Manager.hx	/^	public var start      : Int;$/;"	v
start	heaps/hxd/snd/Manager.hx	/^	public var start   = 0;$/;"	v
start	heaps/hxd/snd/Mp3Data.hx	/^			var start = startEnd >> 12;$/;"	v
start	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function start( ctx : AudioContext, source : SourceHandle, time : Float) {$/;"	f
start	heaps/samples/Network.hx	/^	function start() {$/;"	f
start	heaps/samples/Video.hx	/^		function start() {$/;"	f
startCapture	heaps/h2d/Interactive.hx	/^	public function startCapture(callb : hxd.Event -> Void, ?onCancel : Void -> Void, ?touchId : In/;"	f
startCapture	heaps/h2d/Scene.hx	/^	public function startCapture( onEvent : hxd.Event -> Void, ?onCancel : Void -> Void, ?touchId :/;"	f
startCapture	heaps/hxd/SceneEvents.hx	/^	public function startCapture( f : hxd.Event -> Void, ?onCancel : Void -> Void, ?touchId : Int )/;"	f
startDrag	heaps/h2d/Interactive.hx	/^	public inline function startDrag(callb,?onCancel) {$/;"	f
startDrag	heaps/h2d/Scene.hx	/^	public inline function startDrag( onEvent : hxd.Event -> Void, ?onCancel : Void -> Void, ?refEv/;"	f
startDrag	heaps/hxd/SceneEvents.hx	/^	public inline function startDrag( f : hxd.Event -> Void, ?onCancel : Void -> Void, ?refEvent : /;"	f
startEnd	heaps/hxd/snd/Mp3Data.hx	/^			var startEnd = (frame.get(lame + 21) << 16) | (frame.get(lame + 22) << 8) | frame.get(lame + /;"	v
startFrame	heaps/h3d/shader/AnimatedTexture.hx	/^		@perInstance @param var startFrame : Float = 0.0;$/;"	v
startI	heaps/h2d/HtmlText.hx	/^				var startI = 0;$/;"	v
startIndex	heaps/h2d/TextInput.hx	/^				var startIndex = textPos(e.relX, e.relY);$/;"	v
startIndex	heaps/h3d/col/PolygonBuffer.hx	/^	var startIndex : Int;$/;"	v
startIndex	heaps/h3d/impl/InstanceBuffer.hx	/^	var startIndex : Int;$/;"	v
startIndex	heaps/h3d/parts/GpuParticles.hx	/^		var startIndex = 0;$/;"	v
startIndex	heaps/h3d/prim/BigPrimitive.hx	/^	var startIndex : Int = 0;$/;"	v
startIndex	heaps/h3d/scene/World.hx	/^	public var startIndex : Int;$/;"	v
startOp	heaps/hxd/clipper/Clipper.hx	/^        var startOp = op;$/;"	v
startPos	heaps/h3d/scene/MeshBatch.hx	/^		var startPos = batch.paramsCount * instanceCount << 2;$/;"	v
startPos	heaps/hxd/fs/FileInput.hx	/^		var startPos = 0;$/;"	v
startReg	heaps/hxsl/AgalOptim.hx	/^	var startReg : Int;$/;"	v
startTime	heaps/h2d/col/Voronoi.hx	/^		var startTime = haxe.Timer.stamp();$/;"	v
startTime	heaps/h3d/shader/AnimatedTexture.hx	/^		@perInstance @param var startTime : Float;$/;"	v
startTime	heaps/h3d/shader/UVAnim.hx	/^		@param var startTime : Float;$/;"	v
startVertex	heaps/h3d/scene/World.hx	/^		var startVertex = 0, startIndex = 0;$/;"	v
startVertex	heaps/h3d/scene/World.hx	/^	public var startVertex : Int;$/;"	v
startWorker	heaps/hxd/res/Sound.hx	/^	public static function startWorker() {$/;"	f
startX	heaps/h2d/Flow.hx	/^			var startX = paddingLeft + borderLeft;$/;"	v
startY	heaps/h2d/Flow.hx	/^			var startY = paddingTop + borderTop;$/;"	v
start_frame	heaps/hxd/fmt/kframes/Data.hx	/^	var start_frame : Int;$/;"	v
starts	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public var starts : Float;$/;"	v
startup	heaps/hxd/snd/openal/Emulator.hx	/^	var startup = 0.;$/;"	v
state	heaps/h2d/Graphics.hx	/^	var state : BatchDrawState;$/;"	v
state	heaps/h2d/SpriteBatch.hx	/^	var state : BatchDrawState;$/;"	v
state	heaps/h2d/TileGroup.hx	/^	var state : BatchDrawState;$/;"	v
state	heaps/h2d/impl/BatchDrawState.hx	/^		var state = head;$/;"	v
state	heaps/h3d/parts/Data.hx	/^		var state : State = haxe.Unserializer.run(b.toString());$/;"	v
state	heaps/h3d/parts/Emitter.hx	/^	public var state(default, null) : State;$/;"	v
state	heaps/hxd/Window.flash.hx	/^		var state = fullscreen ? (isAir ? flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE : fl/;"	v
stateLen	heaps/h2d/impl/BatchDrawState.hx	/^					var stateLen = length > stateLen ? stateLen : length;$/;"	v
stateLen	heaps/h2d/impl/BatchDrawState.hx	/^		var stateLen : Int;$/;"	v
stateMin	heaps/h2d/impl/BatchDrawState.hx	/^					var stateMin = offset >= caret ? offset : caret;$/;"	v
staticHandler	heaps/hxd/App.hx	/^	static function staticHandler() {}$/;"	f
staticShadows	heaps/h3d/mat/Material.hx	/^	public var staticShadows(default, set) : Bool;$/;"	v
staticTexture	heaps/h3d/pass/Shadows.hx	/^	var staticTexture : h3d.mat.Texture;$/;"	v
stats	heaps/h3d/impl/Benchmark.hx	/^	var stats : StatsObject;$/;"	v
stats	heaps/h3d/impl/MemoryManager.hx	/^	public function stats() {$/;"	f
status	heaps/hxsl/Linker.hx	/^					var status : Null<Bool> = switch( f.ref.name ) {$/;"	v
std	heaps/hxsl/AgalOut.hx	/^		inline function std(bop) {$/;"	f
steiner	heaps/hxd/earcut/Earcut.hx	/^	public var steiner : Bool;$/;"	v
stencil	heaps/h3d/mat/Pass.hx	/^	public var stencil : Stencil;$/;"	v
stencil	heaps/h3d/scene/World.hx	/^	public var stencil : Null<Int>;$/;"	v
stencilCompare	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilCompare : PbrStencilCompare;$/;"	v
stencilFailOp	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilFailOp : PbrStencilOp;$/;"	v
stencilPassOp	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilPassOp : PbrStencilOp;$/;"	v
stencilReadMask	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilReadMask : Int;$/;"	v
stencilValue	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilValue : Int;$/;"	v
stencilWriteMask	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var stencilWriteMask : Int;$/;"	v
step	heaps/h2d/Graphics.hx	/^		var step = 1 \/ nsegments;$/;"	v
step	heaps/h3d/col/HeightMap.hx	/^	public var step : Float = 1.0;$/;"	v
step	heaps/h3d/shader/Outline2D.hx	/^			var step = doublePi \/ samples;$/;"	v
steps	heaps/hxd/clipper/Clipper.hx	/^		var steps = Math.imax(Math.round(m_StepsPerRad * Math.abs(a)), 1);$/;"	v
steps	heaps/hxd/clipper/Clipper.hx	/^		var steps = Std.int(Math.PI \/ Math.acos(1 - y \/ Math.abs(delta)));$/;"	v
stop	heaps/hxd/earcut/Earcut.hx	/^		var stop = ear,$/;"	v
stop	heaps/hxd/earcut/Earcut.hx	/^		var stop = m;$/;"	v
stop	heaps/hxd/fmt/grd/Reader.hx	/^			var stop = new ColorStop();$/;"	v
stop	heaps/hxd/fmt/grd/Reader.hx	/^			var stop = new GradientStop();$/;"	v
stop	heaps/hxd/fmt/grd/Reader.hx	/^			var stop = new TransparencyStop();$/;"	v
stop	heaps/hxd/net/SocketHost.hx	/^	override function stop() {$/;"	f
stop	heaps/hxd/res/Sound.hx	/^	public function stop() {$/;"	f
stop	heaps/hxd/snd/Channel.hx	/^	public function stop() {$/;"	f
stop	heaps/hxd/snd/NativeChannel.hx	/^	public function stop() {$/;"	f
stop	heaps/hxd/snd/openal/Emulator.hx	/^	public function stop( immediate = false ) {$/;"	f
stop	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function stop( immediate : Bool = true ) {$/;"	f
stopAll	heaps/hxd/snd/Manager.hx	/^	public function stopAll() {$/;"	f
stopAllNotLooping	heaps/hxd/snd/Manager.hx	/^	public function stopAllNotLooping() {$/;"	f
stopAnimation	heaps/h3d/scene/Object.hx	/^	public function stopAnimation( ?recursive = false ) {$/;"	f
stopByName	heaps/hxd/snd/Manager.hx	/^	public function stopByName( name : String ) {$/;"	f
stopCapture	heaps/h2d/Interactive.hx	/^	public function stopCapture() {$/;"	f
stopCapture	heaps/h2d/Scene.hx	/^	public function stopCapture() {$/;"	f
stopCapture	heaps/hxd/SceneEvents.hx	/^	public function stopCapture() {$/;"	f
stopDrag	heaps/h2d/Interactive.hx	/^	public inline function stopDrag() {$/;"	f
stopDrag	heaps/h2d/Scene.hx	/^	public inline function stopDrag() {$/;"	f
stopDrag	heaps/hxd/SceneEvents.hx	/^	public inline function stopDrag() {$/;"	f
stopSource	heaps/hxd/snd/Driver.hx	/^	public function stopSource           (source : SourceHandle) : Void;$/;"	f
stopSource	heaps/hxd/snd/openal/Driver.hx	/^	public function stopSource(source : SourceHandle) : Void {$/;"	f
stopSource	heaps/hxd/snd/webaudio/Driver.hx	/^	public function stopSource (source : SourceHandle) : Void {$/;"	f
stopTime	heaps/h2d/col/Voronoi.hx	/^		var stopTime = haxe.Timer.stamp();$/;"	v
store	heaps/tools/hxsl/Main.hx	/^			var store = js.Browser.getLocalStorage();$/;"	v
store	heaps/tools/hxsl/Main.hx	/^		var store = js.Browser.getLocalStorage();$/;"	v
str	heaps/h2d/Console.hx	/^			var str = String.fromCharCode(shortKeyChar) + cmdName;$/;"	v
str	heaps/h2d/HtmlText.hx	/^			var str = splitNode.node.nodeValue;$/;"	v
str	heaps/h3d/impl/DirectXDriver.hx	/^						var str = cache.readString(len);$/;"	v
str	heaps/h3d/impl/LogDriver.hx	/^				var str = hxsl.Printer.shaderToString(shader.data);$/;"	v
str	heaps/h3d/impl/LogDriver.hx	/^			var str = fmt(shader.vertex) + "\\n" + fmt(shader.fragment);$/;"	v
str	heaps/h3d/impl/LogDriver.hx	/^			var str = getNativeShaderCode(shader);$/;"	v
str	heaps/h3d/impl/Stage3dDriver.hx	/^			var str = format.agal.Tools.toString(agal);$/;"	v
str	heaps/h3d/mat/Texture.hx	/^		var str = name;$/;"	v
str	heaps/hxd/Charset.hx	/^		var str = "ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰ/;"	v
str	heaps/hxd/System.hl.hx	/^			var str = @:privateAccess Sys.makePath(sys_locale());$/;"	v
str	heaps/hxd/fmt/fbx/Parser.hx	/^		var str = bytes.getString(pos, length);$/;"	v
str	heaps/hxd/fmt/hbson/Reader.hx	/^			var str = input.readString(index & 0x3FFFFFFF);$/;"	v
str	heaps/hxd/fmt/hbson/Reader.hx	/^		var str = stringTbl[index];$/;"	v
str	heaps/hxd/res/DynamicText.hx	/^							var str = onMissing(path," is missing");$/;"	v
str	heaps/hxd/res/DynamicText.hx	/^			var str = onMissing(path,"is missing");$/;"	v
str	heaps/hxd/res/DynamicText.hx	/^			var str = str;$/;"	v
str	heaps/hxd/res/DynamicText.hx	/^		var str = x == null ? null : x.innerHTML;$/;"	v
str	heaps/hxd/res/Embed.hx	/^		var str = haxe.Serializer.run(sys.io.File.getBytes(path));$/;"	v
str	heaps/hxsl/CacheFile.hx	/^			var str = StringTools.hex(i);$/;"	v
str	heaps/hxsl/Checker.hx	/^			var str = "xrsygtzbpwaq";$/;"	v
str	heaps/hxsl/GlslOut.hx	/^				var str = "" + f;$/;"	v
str	heaps/hxsl/HlslOut.hx	/^				var str = "" + f;$/;"	v
str	heaps/hxsl/Macros.hx	/^						var str = Context.defined("display") ? "" : Serializer.run(shader);$/;"	v
str	heaps/tools/hxsl/Main.hx	/^			var str = hscript.Printer.errorToString(e);$/;"	v
str	heaps/tools/hxsl/Main.hx	/^		var str = store.getItem("hxsl");$/;"	v
str2	heaps/hxd/fmt/hbson/Reader.hx	/^					var str2 = GLOBAL_STR_MAP.get(str);$/;"	v
strOld	heaps/hxd/res/DynamicText.hx	/^		var strOld : String = if( Reflect.isFunction(old) ) old({}) else old;$/;"	v
stream	heaps/h3d/impl/GlDriver.hx	/^		var stream = streamData(pixels.bytes.getData(),pixels.offset,dataLen);$/;"	v
streamBuffer	heaps/hxd/snd/Manager.hx	/^	public var streamBuffer : haxe.io.Bytes;$/;"	v
streamBytes	heaps/h3d/impl/GlDriver.hx	/^	var streamBytes : hl.Bytes;$/;"	v
streamData	heaps/h3d/impl/GlDriver.hx	/^	inline function streamData(data, pos:Int, length:Int) {$/;"	f
streamKeep	heaps/h3d/impl/GlDriver.hx	/^	var streamKeep : Array<{ f : Int, b : hl.Bytes }> = [];$/;"	v
streamLen	heaps/h3d/impl/GlDriver.hx	/^	var streamLen : Int;$/;"	v
streamPos	heaps/h3d/impl/GlDriver.hx	/^	var streamPos : Int;$/;"	v
streamPos	heaps/hxd/snd/Manager.hx	/^	public var streamPos : Int;$/;"	v
streamSound	heaps/hxd/snd/Manager.hx	/^	public var streamSound : hxd.res.Sound;$/;"	v
streamStart	heaps/hxd/snd/Manager.hx	/^	public var streamStart : Int;$/;"	v
strictlySimple	heaps/hxd/clipper/Clipper.hx	/^	public var strictlySimple : Bool;$/;"	v
stride	heaps/h2d/CdbLevel.hx	/^	public var stride : Int;$/;"	v
stride	heaps/h2d/CdbLevel.hx	/^	var stride(default, never) : Int;$/;"	v
stride	heaps/h2d/RenderContext.hx	/^		var stride = 8;$/;"	v
stride	heaps/h2d/RenderContext.hx	/^	var stride : Int;$/;"	v
stride	heaps/h2d/Tile.hx	/^			var stride = subpixel ? height \/ frames : Std.int(height \/ frames);$/;"	v
stride	heaps/h2d/Tile.hx	/^			var stride = subpixel ? width \/ frames : Std.int(width \/ frames);$/;"	v
stride	heaps/h3d/anim/BufferAnimation.hx	/^		var stride = 0;$/;"	v
stride	heaps/h3d/anim/BufferAnimation.hx	/^	var stride : Int;$/;"	v
stride	heaps/h3d/impl/DirectXDriver.hx	/^		var stride = @:privateAccess pixels.stride;$/;"	v
stride	heaps/h3d/impl/DirectXDriver.hx	/^		var stride = hxd.Pixels.calcStride(desc.width, tex.format);$/;"	v
stride	heaps/h3d/impl/GlDriver.hx	/^		var stride : Int = v.stride;$/;"	v
stride	heaps/h3d/impl/GlDriver.hx	/^	public var stride : Int;$/;"	v
stride	heaps/h3d/impl/ManagedBuffer.hx	/^	public var stride(default,null) : Int;$/;"	v
stride	heaps/h3d/impl/Stage3dDriver.hx	/^	public var stride : Int;$/;"	v
stride	heaps/h3d/parts/Particles.hx	/^		var stride = 10;$/;"	v
stride	heaps/h3d/prim/BigPrimitive.hx	/^			var stride = this.stride;$/;"	v
stride	heaps/h3d/prim/BigPrimitive.hx	/^	var stride : Int;$/;"	v
stride	heaps/h3d/prim/DynamicPrimitive.hx	/^	var stride : Int;$/;"	v
stride	heaps/h3d/scene/World.hx	/^	public var stride : Int;$/;"	v
stride	heaps/h3d/scene/pbr/LightBuffer.hx	/^		var stride = 4;$/;"	v
stride	heaps/hxd/Pixels.hx	/^		var stride = calcStride(width, format);$/;"	v
stride	heaps/hxd/Pixels.hx	/^	var stride : Int;$/;"	v
stride	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var stride = 0;$/;"	v
stride	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var stride = g.vertexStride;$/;"	v
stride	heaps/hxd/fmt/hmd/Data.hx	/^		var stride = 0;$/;"	v
stride	heaps/hxd/fmt/hmd/Dump.hx	/^				var stride = 0;$/;"	v
stride	heaps/hxd/fmt/hmd/Dump.hx	/^				var stride = o.getStride();$/;"	v
stride	heaps/hxd/fmt/hmd/Dump.hx	/^			var stride = 0;$/;"	v
stride	heaps/hxd/fmt/hmd/Library.hx	/^		var stride = 0;$/;"	v
stride	heaps/hxd/res/BDFFont.hx	/^		var stride : Int = -1;$/;"	v
stride	heaps/hxd/res/BDFFont.hx	/^	public var stride : Int;$/;"	v
stride	heaps/hxd/res/Image.hx	/^		var stride = 4; \/\/ row_stride is the step, in png_byte or png_uint_16 units	as appropriate, /;"	v
stride	heaps/hxd/res/NanoJpeg.hx	/^	public var stride : Int;$/;"	v
stride	heaps/hxsl/AgalOut.hx	/^				var stride = switch( ea.t ) {$/;"	v
stride	heaps/hxsl/Cache.hx	/^		var stride = used.length;$/;"	v
stride	heaps/hxsl/Flatten.hx	/^					var stride = varSize(t, a.t);$/;"	v
stride	heaps/hxsl/Flatten.hx	/^				var stride = varSize(t, VFloat) >> 2;$/;"	v
stride	heaps/hxsl/Flatten.hx	/^			var stride = Std.int(a.size \/ len);$/;"	v
strides	heaps/h3d/impl/DirectXDriver.hx	/^	var strides : Array<Int> = [];$/;"	v
string	heaps/h2d/Console.hx	/^				var string = readString(c);$/;"	v
string	heaps/h2d/Console.hx	/^			var string = '';$/;"	v
stringCount	heaps/hxd/fmt/hbson/Writer.hx	/^	var stringCount : Int;$/;"	v
stringMap	heaps/hxd/fmt/hbson/Writer.hx	/^	var stringMap : Map<String,Int>;$/;"	v
stringTbl	heaps/hxd/fmt/hbson/Reader.hx	/^	var stringTbl : Array<String>;$/;"	v
structCount	heaps/hxd/fmt/blend/Data.hx	/^				var structCount = read32();$/;"	v
structId	heaps/hxd/fmt/blend/Data.hx	/^				var structId = readChars(4); \/\/ STRC$/;"	v
structs	heaps/hxd/fmt/blend/Data.hx	/^	public var structs:Array<DnaStruct> = [];$/;"	v
style	heaps/samples/Domkit.hx	/^	var style = null;$/;"	v
stype	heaps/hxsl/Checker.hx	/^		var stype;$/;"	v
su	heaps/h3d/mat/BigTexture.hx	/^	public var su : Float;$/;"	v
sub	heaps/h2d/Tile.hx	/^	public function sub( x : Float, y : Float, w : Float, h : Float, dx = 0., dy = 0. ) : Tile {$/;"	f
sub	heaps/h2d/col/IPoint.hx	/^	public inline function sub( p : IPoint ) : IPoint {$/;"	f
sub	heaps/h2d/col/Point.hx	/^	public inline function sub( p : Point ) : Point {$/;"	f
sub	heaps/h2d/impl/PointApi.hx	/^	function sub( p : Point ) : Point;$/;"	f
sub	heaps/h3d/Vector.hx	/^	public inline function sub( v : Vector ) {$/;"	f
sub	heaps/h3d/col/FPoint.hx	/^	public inline function sub( p : FPoint ) {$/;"	f
sub	heaps/h3d/col/IPoint.hx	/^	public inline function sub( p : IPoint ) {$/;"	f
sub	heaps/h3d/col/Point.hx	/^	public inline function sub( p : Point ) {$/;"	f
sub	heaps/h3d/impl/GlDriver.hx	/^		var sub = new Float32Array(buf.buffer, bufPos * 4, vertexCount * stride);$/;"	v
sub	heaps/h3d/impl/GlDriver.hx	/^		var sub = new Uint16Array(buf.buffer, bufPos << bits, indiceCount);$/;"	v
sub	heaps/h3d/impl/GlDriver.hx	/^		var sub = new Uint8Array(buf.getData(), bufPos * 4, vertexCount * stride * 4);$/;"	v
sub	heaps/h3d/impl/GlDriver.hx	/^		var sub = new Uint8Array(buf.getData(), bufPos << bits, indiceCount << bits);$/;"	v
sub	heaps/h3d/scene/MeshBatch.hx	/^						var sub = psBytes.sub(start*20,count*20);$/;"	v
sub	heaps/hxd/BitmapData.hx	/^	public function sub( x, y, w, h ) : BitmapData {$/;"	f
sub	heaps/hxd/Pixels.hx	/^	public function sub( x : Int, y : Int, width : Int, height : Int ) {$/;"	f
sub	heaps/hxd/fmt/fbx/Filter.hx	/^		var sub = [];$/;"	v
sub	heaps/hxd/res/DynamicText.hx	/^					var sub : Dynamic = Reflect.field(obj, id);$/;"	v
sub	heaps/hxd/res/DynamicText.hx	/^		var sub : DynamicTextMeta = null;$/;"	v
sub	heaps/samples/Flows.hx	/^			var sub = new h2d.Flow(flow);$/;"	v
subCount	heaps/hxd/fmt/hmd/Reader.hx	/^			var subCount = i.readByte();$/;"	v
subDef	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var subDef = getParent(jModel, "Deformer", true);$/;"	v
subDef	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var subDef = getParent(model, "Deformer", true);$/;"	v
subDef	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var subDef = loopRec(o);$/;"	v
subDefs	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var subDefs = getChilds(def, "Deformer");$/;"	v
subFiles	heaps/hxd/fs/EmbedFileSystem.hx	/^	function  subFiles( path : String ) : Array<FileEntry> {$/;"	f
subFlow	heaps/samples/Flows.hx	/^			var subFlow = createFlowSimple(flow, 0, 0);$/;"	v
subFlow	heaps/samples/Flows.hx	/^			var subFlow;$/;"	v
subModel	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var subModel = getChild(subDef, "Model");$/;"	v
subs	heaps/h3d/anim/Skin.hx	/^	public var subs : Array<Joint>;$/;"	v
subs	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var subs = [];$/;"	v
subs	heaps/hxd/fmt/pak/FileSystem.hx	/^	var subs : Array<PakEntry>;$/;"	v
subtraction	heaps/h2d/col/IPolygon.hx	/^	public inline function subtraction( p : IPolygon, withHoles = true ) : IPolygons {$/;"	f
subtraction	heaps/h2d/col/IPolygons.hx	/^	public inline function subtraction( p : IPolygons, withHoles = true ) : IPolygons {$/;"	f
succeeded	heaps/hxd/clipper/Clipper.hx	/^		var succeeded = ExecuteInternal();$/;"	v
suggestion	heaps/h2d/Console.hx	/^				var suggestion = getCommandSuggestion(cmd);$/;"	v
sum	heaps/h2d/col/IPolygon.hx	/^		var sum = 0.;$/;"	v
sum	heaps/h2d/col/Polygon.hx	/^		var sum = 0.;$/;"	v
sum	heaps/hxd/Perlin.hx	/^		var sum = 0.;$/;"	v
sum	heaps/hxd/earcut/Earcut.hx	/^		var sum = 0.;$/;"	v
sup	heaps/hxsl/Macros.hx	/^							var sup = Std.string(csup.t);$/;"	v
supFields	heaps/hxsl/Macros.hx	/^						var supFields = new Map();$/;"	v
supportedFormat	heaps/hxd/res/Sound.hx	/^	public static function supportedFormat( fmt : SoundFormat ) {$/;"	f
surf	heaps/hxd/System.hl.hx	/^					var surf = sdl.Surface.fromBGRA(pixels.bytes, pixels.width, pixels.height);$/;"	v
surf	heaps/hxd/res/FontBuilder.hx	/^		var surf = 0;$/;"	v
surface	heaps/h3d/parts/Particles.hx	/^		var surface = 0.;$/;"	v
suspendContext	heaps/hxd/snd/openal/Emulator.hx	/^	public static function suspendContext(context : Context) {$/;"	f
suspended	heaps/hxd/snd/Manager.hx	/^	public var suspended : Bool = false;$/;"	v
suspended	heaps/hxd/snd/webaudio/Context.hx	/^	static var suspended : Bool;$/;"	v
sv	heaps/h3d/mat/BigTexture.hx	/^	public var sv : Float;$/;"	v
sv	heaps/h3d/mat/PbrMaterial.hx	/^			var sv = mainPass.getShader(h3d.shader.pbr.StrengthValues);$/;"	v
sval	heaps/hxd/snd/Data.hx	/^		var sval = 0., ival = 0;$/;"	v
sval1	heaps/hxd/snd/Data.hx	/^				var sval1, sval2 = 0.;$/;"	v
sw	heaps/h3d/pass/FXAA.hx	/^			var sw = texture.get(tuv + vec2(-1, 1) * delta).rgb;$/;"	v
sw	heaps/hxsl/AgalOptim.hx	/^					var sw = r.swiz == null ? COMPS : r.swiz;$/;"	v
sw	heaps/hxsl/AgalOptim.hx	/^			var sw = swiz(r);$/;"	v
sw	heaps/hxsl/AgalOut.hx	/^				var sw = [], sr = [];$/;"	v
sw	heaps/hxsl/AgalOut.hx	/^				var sw = [];$/;"	v
sw	heaps/hxsl/AgalOut.hx	/^			var sw = defSwiz(a.t);$/;"	v
sw	heaps/hxsl/AgalOut.hx	/^		var sw = sw;$/;"	v
sw	heaps/hxsl/Flatten.hx	/^				var sw = [];$/;"	v
sw1	heaps/hxsl/AgalOptim.hx	/^				var sw1 = swiz(r1);$/;"	v
sw2	heaps/hxsl/AgalOptim.hx	/^				var sw2 = swiz(r2);$/;"	v
swap	heaps/hxd/poly2tri/Edge.hx	/^		var swap = false;$/;"	v
swap	heaps/hxd/snd/NativeChannel.hx	/^	function swap( event : js.html.Event ) {$/;"	f
swapTexture	heaps/h2d/RenderContext.hx	/^	public inline function swapTexture( texture : h3d.mat.Texture ) {$/;"	f
sweep	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	var sweep:Sweep;$/;"	v
sweepContext	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	var sweepContext:SweepContext;$/;"	v
sweepPoints	heaps/hxd/poly2tri/Sweep.hx	/^	public function sweepPoints()$/;"	f
switchBR	heaps/hxd/Pixels.hx	/^	public static inline function switchBR(v) {$/;"	f
switchEndian	heaps/hxd/Pixels.hx	/^	public static inline function switchEndian(v) {$/;"	f
switchTexture	heaps/h2d/Tile.hx	/^	public inline function switchTexture( t : Tile ) {$/;"	f
switchToAnimation	heaps/h3d/scene/Object.hx	/^	public function switchToAnimation( a : h3d.anim.Animation ) {$/;"	f
swiz	heaps/h3d/impl/LogDriver.hx	/^					var swiz = r.matched(5);$/;"	v
swiz	heaps/h3d/impl/Stage3dDriver.hx	/^				var swiz = r.matched(2);$/;"	v
swiz	heaps/hxsl/AgalOptim.hx	/^		var swiz = swiz(r);$/;"	v
swiz	heaps/hxsl/AgalOptim.hx	/^		var swiz = swiz(r1);$/;"	v
swiz	heaps/hxsl/AgalOptim.hx	/^	inline function swiz( r : Reg ) {$/;"	f
swiz	heaps/hxsl/AgalOptim.hx	/^	public var swiz : Array<C>;$/;"	v
swiz	heaps/hxsl/AgalOut.hx	/^				var swiz = null;$/;"	v
swiz	heaps/hxsl/AgalOut.hx	/^	inline function swiz( r : Reg, sw : Array<C> ) : Reg {$/;"	f
swiz	heaps/hxsl/Cache.hx	/^				var swiz = switch( v.pos & 3 ) {$/;"	v
swiz	heaps/hxsl/Cache.hx	/^		var swiz = [[X],[Y],[Z],[W]];$/;"	v
swiz	heaps/hxsl/Serializer.hx	/^			var swiz = TSWIZ.get(bits);$/;"	v
swiz2	heaps/hxsl/AgalOptim.hx	/^		var swiz2 = this.swiz(r2);$/;"	v
swizBits	heaps/hxsl/AgalOptim.hx	/^	function swizBits( r : Reg ) {$/;"	f
sx	heaps/h2d/Graphics.hx	/^			var sx = px + d * toqx, sy = py + d * toqy;$/;"	v
sx	heaps/h2d/SpriteBatch.hx	/^				var sx = e.x + t.dx;$/;"	v
sx	heaps/h2d/TileGroup.hx	/^		var sx = x + t.dx;$/;"	v
sx	heaps/h3d/Matrix.hx	/^		var sx = Math.sin(x);$/;"	v
sx	heaps/h3d/anim/BufferAnimation.hx	/^							var sx = lerpValue();$/;"	v
sx	heaps/h3d/anim/LinearAnimation.hx	/^						var sx = f1.sx * k1 + f2.sx * k2;$/;"	v
sx	heaps/h3d/anim/LinearAnimation.hx	/^	public var sx : Float;$/;"	v
sx	heaps/h3d/anim/SmoothTarget.hx	/^				var sx = lerp(o.sx, m._11, blend);$/;"	v
sx	heaps/h3d/anim/SmoothTarget.hx	/^				var sx = m._11, sy = m._22, sz = m._33;$/;"	v
sx	heaps/h3d/anim/SmoothTarget.hx	/^	public var sx : Float;$/;"	v
sx	heaps/h3d/anim/SmoothTransition.hx	/^			var sx = m1._11 * a + m2._11 * b;$/;"	v
sx	heaps/h3d/parts/GpuParticles.hx	/^	public var sx : Float;$/;"	v
sx	heaps/hxd/BitmapData.hx	/^			var sx : Int;$/;"	v
sx	heaps/hxd/fmt/hmd/Data.hx	/^	public var sx : Float;$/;"	v
sx	heaps/samples/Mask.hx	/^	public var sx:Float = 0;$/;"	v
sxMax	heaps/h2d/Object.hx	/^		var sxMax = view.xMax;$/;"	v
sxMin	heaps/h2d/Object.hx	/^		var sxMin = view.xMin;$/;"	v
sxsy	heaps/h3d/Matrix.hx	/^		var sxsy = sx * sy;$/;"	v
sy	heaps/h2d/Flow.hx	/^			var sy = Std.int(scrollPosY);$/;"	v
sy	heaps/h2d/SpriteBatch.hx	/^				var sy = e.y + t.dy;$/;"	v
sy	heaps/h2d/TileGroup.hx	/^		var sy = y + t.dy;$/;"	v
sy	heaps/h3d/Matrix.hx	/^		var sy = Math.sin(y);$/;"	v
sy	heaps/h3d/anim/BufferAnimation.hx	/^							var sy = lerpValue();$/;"	v
sy	heaps/h3d/anim/LinearAnimation.hx	/^						var sy = f1.sy * k1 + f2.sy * k2;$/;"	v
sy	heaps/h3d/anim/LinearAnimation.hx	/^	public var sy : Float;$/;"	v
sy	heaps/h3d/anim/SmoothTarget.hx	/^				var sy = lerp(o.sy, m._22, blend);$/;"	v
sy	heaps/h3d/anim/SmoothTarget.hx	/^	public var sy : Float;$/;"	v
sy	heaps/h3d/anim/SmoothTransition.hx	/^			var sy = m1._22 * a + m2._22 * b;$/;"	v
sy	heaps/h3d/parts/GpuParticles.hx	/^	public var sy : Float;$/;"	v
sy	heaps/hxd/BitmapData.hx	/^			var sy : Int;$/;"	v
sy	heaps/hxd/fmt/hmd/Data.hx	/^	public var sy : Float;$/;"	v
sy	heaps/samples/Mask.hx	/^	public var sy:Float = 0;$/;"	v
syMax	heaps/h2d/Object.hx	/^		var syMax = view.yMax;$/;"	v
syMin	heaps/h2d/Object.hx	/^		var syMin = view.yMin;$/;"	v
sync	heaps/h2d/Anim.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/Camera.hx	/^	public function sync( ctx : RenderContext, force : Bool = false )$/;"	f
sync	heaps/h2d/CdbLevel.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/Console.hx	/^	override function sync(ctx:h2d.RenderContext) {$/;"	f
sync	heaps/h2d/Flow.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/Graphics.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/KeyFrames.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/Object.hx	/^	function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/ObjectFollower.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h2d/Particles.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/ScaleGrid.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/Scene.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/SpriteBatch.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h2d/Text.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/TextInput.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h2d/TileGroup.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h2d/Video.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h2d/domkit/Style.hx	/^	public function sync( ?dt : Float ) {$/;"	f
sync	heaps/h2d/filter/AbstractMask.hx	/^	override function sync( ctx : RenderContext, obj : h2d.Object ) {$/;"	f
sync	heaps/h2d/filter/Blur.hx	/^	override function sync( ctx : RenderContext, s : Object ) {$/;"	f
sync	heaps/h2d/filter/Displacement.hx	/^	override function sync(ctx, s) {$/;"	f
sync	heaps/h2d/filter/DropShadow.hx	/^	override function sync(ctx, s) {$/;"	f
sync	heaps/h2d/filter/Filter.hx	/^	public function sync( ctx : RenderContext, s : Object ) {$/;"	f
sync	heaps/h2d/filter/Group.hx	/^	override function sync( ctx:RenderContext, s : Object ) {$/;"	f
sync	heaps/h2d/filter/Outline.hx	/^	override function sync(ctx : RenderContext, s : Object) {$/;"	f
sync	heaps/h3d/anim/Animation.hx	/^	public function sync( decompose : Bool = false ) {$/;"	f
sync	heaps/h3d/anim/BufferAnimation.hx	/^	override function sync( decompose = false ) {$/;"	f
sync	heaps/h3d/anim/LinearAnimation.hx	/^	override function sync( decompose = false ) {$/;"	f
sync	heaps/h3d/anim/SmoothTarget.hx	/^	override function sync( decompose = false ) {$/;"	f
sync	heaps/h3d/anim/SmoothTransition.hx	/^	override function sync( decompose = false ) {$/;"	f
sync	heaps/h3d/anim/Transition.hx	/^	override function sync( decompose : Bool = false ) {$/;"	f
sync	heaps/h3d/col/SkinCollider.hx	/^	override function sync( ctx : h3d.scene.RenderContext ) {$/;"	f
sync	heaps/h3d/impl/Benchmark.hx	/^	public function sync() {$/;"	f
sync	heaps/h3d/parts/Emitter.hx	/^	override function sync( ctx : h3d.scene.RenderContext ) {$/;"	f
sync	heaps/h3d/parts/GpuParticles.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/Box.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/CameraController.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h3d/scene/Graphics.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h3d/scene/MeshBatch.hx	/^	override function sync(ctx:RenderContext) {$/;"	f
sync	heaps/h3d/scene/Object.hx	/^	function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h3d/scene/Skin.hx	/^	override function sync( ctx : RenderContext ) {$/;"	f
sync	heaps/h3d/scene/Sphere.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/Trail.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/pbr/Light.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/pbr/LightBuffer.hx	/^	public function sync( ctx : h3d.scene.RenderContext ) {$/;"	f
sync	heaps/h3d/scene/pbr/PointLight.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/h3d/scene/pbr/SpotLight.hx	/^	override function sync(ctx) {$/;"	f
sync	heaps/hxd/fmt/pak/Loader.hx	/^	override function sync(ctx:h2d.RenderContext)  {$/;"	f
sync	heaps/samples/Blur.hx	/^	function sync() @:privateAccess {$/;"	f
syncCamera	heaps/h3d/scene/CameraController.hx	/^	function syncCamera() {$/;"	f
syncCamera	heaps/hxd/snd/Listener.hx	/^	public function syncCamera( cam : h3d.Camera ) {$/;"	f
syncData	heaps/h3d/scene/MeshBatch.hx	/^	function syncData( batch : BatchData ) {$/;"	f
syncFrame	heaps/h3d/anim/BufferAnimation.hx	/^	var syncFrame : Float;$/;"	v
syncFrame	heaps/h3d/anim/LinearAnimation.hx	/^	var syncFrame : Float;$/;"	v
syncGroup	heaps/h3d/parts/GpuParticles.hx	/^	function syncGroup( g : GpuPartGroup, camera : h3d.Camera, prevTime : Float, visible : Bool ) {$/;"	f
syncJoints	heaps/h3d/scene/Skin.hx	/^	function syncJoints() {$/;"	f
syncOnly	heaps/h2d/Scene.hx	/^	public function syncOnly( et : Float ) {$/;"	f
syncOnly	heaps/h3d/scene/Scene.hx	/^	public function syncOnly( et : Float ) {$/;"	f
syncOutput	heaps/tools/hxsl/Main.hx	/^	function syncOutput() {$/;"	f
syncPads	heaps/hxd/Pad.hx	/^	static function syncPads() {$/;"	f
syncPads	heaps/hxd/Pad.hx	/^	static function syncPads(){$/;"	f
syncParams	heaps/h3d/parts/GpuParticles.hx	/^	public function syncParams() {$/;"	f
syncPos	heaps/h2d/Object.hx	/^	function syncPos() {$/;"	f
syncPos	heaps/h2d/ObjectFollower.hx	/^	override function syncPos() {$/;"	f
syncPos	heaps/h3d/scene/Object.hx	/^	function syncPos() {$/;"	f
syncPos	heaps/h3d/scene/Skin.hx	/^	override function syncPos() {$/;"	f
syncRec	heaps/h3d/scene/Object.hx	/^	function syncRec( ctx : RenderContext ) {$/;"	f
syncRec	heaps/h3d/scene/World.hx	/^	override function syncRec(ctx:RenderContext) {$/;"	f
syncShader	heaps/h3d/pass/DirShadowMap.hx	/^	override function syncShader(texture) {$/;"	f
syncShader	heaps/h3d/pass/PointShadowMap.hx	/^	override function syncShader(texture) {$/;"	f
syncShader	heaps/h3d/pass/Shadows.hx	/^	function syncShader( texture : h3d.mat.Texture ) {$/;"	f
syncShader	heaps/h3d/pass/SpotShadowMap.hx	/^	override function syncShader(texture) {$/;"	f
syncTip	heaps/h3d/impl/Benchmark.hx	/^	function syncTip(s:StatsObject) {$/;"	f
syncVisual	heaps/h3d/impl/Benchmark.hx	/^	function syncVisual() {$/;"	f
syntax	heaps/hxd/res/NanoJpeg.hx	/^	inline function syntax( flag ) {$/;"	f
sz	heaps/h2d/CdbLevel.hx	/^		var sz = tileset.size;$/;"	v
sz	heaps/h2d/Tile.hx	/^				var sz = isEmpty(bmp, x * width, y * height, width, height, colorBG);$/;"	v
sz	heaps/h2d/domkit/Style.hx	/^		var sz = obj.getSize();$/;"	v
sz	heaps/h3d/Matrix.hx	/^		var sz = Math.sin(z);$/;"	v
sz	heaps/h3d/anim/BufferAnimation.hx	/^							var sz = lerpValue();$/;"	v
sz	heaps/h3d/anim/LinearAnimation.hx	/^						var sz = f1.sz * k1 + f2.sz * k2;$/;"	v
sz	heaps/h3d/anim/LinearAnimation.hx	/^	public var sz : Float;$/;"	v
sz	heaps/h3d/anim/SmoothTarget.hx	/^				var sz = lerp(o.sz, m._33, blend);$/;"	v
sz	heaps/h3d/anim/SmoothTarget.hx	/^	public var sz : Float;$/;"	v
sz	heaps/h3d/anim/SmoothTransition.hx	/^			var sz = m1._33 * a + m2._33 * b;$/;"	v
sz	heaps/h3d/parts/GpuParticles.hx	/^	public var sz : Float;$/;"	v
sz	heaps/hxd/fmt/hmd/Data.hx	/^	public var sz : Float;$/;"	v
t	heaps/h2d/Anim.hx	/^		var t = getFrame();$/;"	v
t	heaps/h2d/CdbLevel.hx	/^					var t = data[i++];$/;"	v
t	heaps/h2d/CdbLevel.hx	/^					var t = grounds[i++];$/;"	v
t	heaps/h2d/CdbLevel.hx	/^				var t = data[i++];$/;"	v
t	heaps/h2d/CdbLevel.hx	/^				var t = data[i];$/;"	v
t	heaps/h2d/CdbLevel.hx	/^		var t = new LevelTileset();$/;"	v
t	heaps/h2d/CdbLevel.hx	/^		var t = resolveTileset(ldat.data);$/;"	v
t	heaps/h2d/CdbLevel.hx	/^		var t = tilesets.get(tdat.file);$/;"	v
t	heaps/h2d/CheckBox.hx	/^		var t = h2d.Tile.fromColor(0, width - borderWidth * 2, width - borderHeight * 2);$/;"	v
t	heaps/h2d/CheckBox.hx	/^		var t = h2d.Tile.fromColor(0x404040, width - (borderWidth + 1) * 2, width - (borderHeight + 1)/;"	v
t	heaps/h2d/CheckBox.hx	/^		var t = h2d.Tile.fromColor(0x404040, width, width);$/;"	v
t	heaps/h2d/Console.hx	/^				var t = haxe.macro.Context.followWithAbstracts(a.t);$/;"	v
t	heaps/h2d/Font.hx	/^	public var t : h2d.Tile;$/;"	v
t	heaps/h2d/Graphics.hx	/^		var t = 2 \/ 3;$/;"	v
t	heaps/h2d/HtmlText.hx	/^			var t = e.nodeValue;$/;"	v
t	heaps/h2d/KeyFrames.hx	/^				var t = (maxT + minT) * 0.5;$/;"	v
t	heaps/h2d/Object.hx	/^		var t = ctx.textures.allocTarget("filterTemp", width, height, false);$/;"	v
t	heaps/h2d/Particles.hx	/^		var t : h2d.Tile;$/;"	v
t	heaps/h2d/Particles.hx	/^		var t = life \/ maxLife;$/;"	v
t	heaps/h2d/RenderContext.hx	/^			var t = curShaders.s;$/;"	v
t	heaps/h2d/RenderContext.hx	/^		var t : h3d.mat.Texture = curTarget = tinf.t;$/;"	v
t	heaps/h2d/RenderContext.hx	/^		var t = textures.allocTarget(name, scene.width, scene.height, false);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^				var t =  tile.sub(bl, 0, dx \/ invScaleX, bt);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^				var t = tile.sub(0, bt, bl, dy \/ invScaleY);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^				var t = tile.sub(0, bt, bl, innerTileHeight);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^				var t = tile.sub(bl, 0, innerTileWidth, bt);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^			var t = tile.sub(0, bt, bl, innerTileHeight);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^			var t = tile.sub(bl, 0, innerTileWidth, bt);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^			var t = tile.sub(bl, tile.height - bb, innerTileWidth, bb);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^			var t = tile.sub(tile.width - br, bt, br, innerTileHeight);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^		var t = tile.sub(0, 0, bl, bt);$/;"	v
t	heaps/h2d/ScaleGrid.hx	/^		var t = tile.sub(bl, bt, innerTileWidth, innerTileHeight);$/;"	v
t	heaps/h2d/SpriteBatch.hx	/^			var t = e.t;$/;"	v
t	heaps/h2d/SpriteBatch.hx	/^	public var t : Tile;$/;"	v
t	heaps/h2d/Text.hx	/^		var t = splitRawText(text, 0, 0, lines);$/;"	v
t	heaps/h2d/Text.hx	/^		var t = t == null ? "null" : t;$/;"	v
t	heaps/h2d/TextInput.hx	/^			var t = haxe.Timer.stamp();$/;"	v
t	heaps/h2d/TextInput.hx	/^			var t = hxd.System.getClipboardText();$/;"	v
t	heaps/h2d/TextInput.hx	/^		var t = haxe.Timer.stamp();$/;"	v
t	heaps/h2d/Tile.hx	/^		var t = h3d.mat.Texture.fromPixels(pix2, h3d.mat.Texture.nativeFormat);$/;"	v
t	heaps/h2d/Tile.hx	/^		var t = new Tile(h3d.mat.Texture.fromColor(color,alpha),0,0,1,1);$/;"	v
t	heaps/h2d/Tile.hx	/^		var t = new Tile(null, x, y, width, height, dx, dy);$/;"	v
t	heaps/h2d/Video.hx	/^			var t = 0.;$/;"	v
t	heaps/h2d/col/Circle.hx	/^			var t = -b \/ (2 * a);$/;"	v
t	heaps/h2d/col/Polynomial.hx	/^		var t;$/;"	v
t	heaps/h2d/col/RoundRect.hx	/^		var t = px * dx + py * dy;$/;"	v
t	heaps/h2d/col/Segment.hx	/^		var t = px * dx + py * dy;$/;"	v
t	heaps/h2d/col/Triangle.hx	/^		var t = area * (a.x * b.y - a.y * b.x + (a.y - b.y) * p.x + (b.x - a.x) * p.y);$/;"	v
t	heaps/h2d/filter/AbstractMask.hx	/^		var t = hide.input == null ? null : hide.input.getTexture();$/;"	v
t	heaps/h2d/filter/Displacement.hx	/^		var t = normalMap == null ? null : normalMap.getTexture();$/;"	v
t	heaps/h3d/Engine.hx	/^		var t = targetStack;$/;"	v
t	heaps/h3d/Engine.hx	/^	public var t : h3d.mat.Texture;$/;"	v
t	heaps/h3d/col/Polygon.hx	/^				var t = new TriPlane();$/;"	v
t	heaps/h3d/col/Polygon.hx	/^			var t = new TriPlane();$/;"	v
t	heaps/h3d/col/Polygon.hx	/^		var t = triPlanes;$/;"	v
t	heaps/h3d/col/PolygonBuffer.hx	/^			var t = e2.dot(q) * invDet;$/;"	v
t	heaps/h3d/col/Seg.hx	/^		var t = p.sub(p1).dot(p2.sub(p1)) \/ lenSq;$/;"	v
t	heaps/h3d/col/Sphere.hx	/^		var t = ( -b + d) \/ (2 * a);$/;"	v
t	heaps/h3d/impl/DirectXDriver.hx	/^				var t = buffers.tex[i];$/;"	v
t	heaps/h3d/impl/GlDriver.hx	/^					var t = GL.FLOAT;$/;"	v
t	heaps/h3d/impl/GlDriver.hx	/^				var t = buf.tex[i];$/;"	v
t	heaps/h3d/impl/GlDriver.hx	/^		var t = boundTextures[lastActiveIndex];$/;"	v
t	heaps/h3d/impl/GlDriver.hx	/^		var t = shader.textures;$/;"	v
t	heaps/h3d/impl/LogDriver.hx	/^					var t = shader.textures;$/;"	v
t	heaps/h3d/impl/LogDriver.hx	/^				var t = s.textures;$/;"	v
t	heaps/h3d/impl/LogDriver.hx	/^		var t = buf[tid];$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^				var t = buffers.fragment.tex[i];$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^			var t = flash.Lib.as(t.t,  flash.display3D.textures.Texture);$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^			var t = flash.Lib.as(t.t, flash.display3D.textures.CubeTexture);$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^			var t = flash.Lib.as(t.t, flash.display3D.textures.RectangleTexture);$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^			var t = flash.Lib.as(t.t, flash.display3D.textures.Texture);$/;"	v
t	heaps/h3d/impl/Stage3dDriver.hx	/^			var t = textures[i];$/;"	v
t	heaps/h3d/impl/TextureCache.hx	/^			var t = cache.pop();$/;"	v
t	heaps/h3d/impl/TextureCache.hx	/^		var t = cache[position];$/;"	v
t	heaps/h3d/mat/BigTexture.hx	/^	public var t : BigTexture;$/;"	v
t	heaps/h3d/mat/PbrMaterial.hx	/^			var t = texture;$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t : Texture = k == null ? null : @:privateAccess engine.resCache.get(k);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t : h3d.mat.Texture = @:privateAccess engine.resCache.get(Texture);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = @:privateAccess engine.textureColorCache.get(key);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = new Texture(1, 1, null);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = new Texture(bmp.width, bmp.height);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = new Texture(pixels.width, pixels.height, null, format != null ? format : pixels.format/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = new Texture(width, height, flags, format);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^		var t = new h3d.mat.Texture(size, size, [NoAlloc]);$/;"	v
t	heaps/h3d/mat/Texture.hx	/^	var t : h3d.impl.Driver.Texture;$/;"	v
t	heaps/h3d/mat/TextureArray.hx	/^		var t = new TextureArray(width, height, layers, null, format);$/;"	v
t	heaps/h3d/parts/Data.hx	/^			var t = frames[0];$/;"	v
t	heaps/h3d/parts/Data.hx	/^			var t = loadTexture(state.textureName);$/;"	v
t	heaps/h3d/parts/Data.hx	/^			var t = switch( blendMode ) {$/;"	v
t	heaps/h3d/parts/GpuParticles.hx	/^				var t = p.time + currentTime;$/;"	v
t	heaps/h3d/parts/GpuParticles.hx	/^			var t = p.time + currentTime;$/;"	v
t	heaps/h3d/parts/GpuParticles.hx	/^		var t = (time + this.time) % this.life;$/;"	v
t	heaps/h3d/parts/Particles.hx	/^			var t = material.texture == null ? h2d.Tile.fromColor(0xFF00FF) : h2d.Tile.fromTexture(materi/;"	v
t	heaps/h3d/pass/Default.hx	/^				var t : h3d.mat.Texture = manager.getParamValue(t, shaders, true);$/;"	v
t	heaps/h3d/pass/Default.hx	/^			var t = p.shader.fragment.textures;$/;"	v
t	heaps/h3d/pass/Default.hx	/^		var t = ctx.engine.getCurrentTarget();$/;"	v
t	heaps/h3d/pass/ShaderManager.hx	/^				var t : Dynamic = getParamValue(p, shaders, !STRICT);$/;"	v
t	heaps/h3d/prim/HMDModel.hx	/^			var t = pol.tangents[ids[i]];$/;"	v
t	heaps/h3d/prim/ModelCache.hx	/^		var t = textures.get(fullPath);$/;"	v
t	heaps/h3d/prim/Polygon.hx	/^				var t = [];$/;"	v
t	heaps/h3d/prim/Polygon.hx	/^				var t = tangents[k];$/;"	v
t	heaps/h3d/prim/Polygon.hx	/^				var t = uvs[k];$/;"	v
t	heaps/h3d/prim/Polygon.hx	/^			var t = k0.sub(k1);$/;"	v
t	heaps/h3d/prim/Quads.hx	/^				var t = uvs[i];$/;"	v
t	heaps/h3d/prim/Sphere.hx	/^			var t = (y \/ segsH) * Math.PI * portion;$/;"	v
t	heaps/h3d/scene/Scene.hx	/^		var t = engine.getCurrentTarget();$/;"	v
t	heaps/h3d/scene/Trail.hx	/^	public var t : Float;$/;"	v
t	heaps/h3d/scene/World.hx	/^						var t = new h3d.Vector(tx, ty, tz);$/;"	v
t	heaps/h3d/scene/World.hx	/^		var t = null;$/;"	v
t	heaps/h3d/scene/World.hx	/^	public var t : h3d.mat.BigTexture.BigTextureElement;$/;"	v
t	heaps/h3d/scene/pbr/Environment.hx	/^		var t : h3d.mat.Texture = @:privateAccess engine.resCache.get(IrradLut);$/;"	v
t	heaps/h3d/shader/GpuParticle.hx	/^		var t : Float;$/;"	v
t	heaps/h3d/shader/NoiseLib.hx	/^  var t = 0.8 - vec3(dot(d0, d0), dot(d1, d1), dot(d2, d2));$/;"	v
t	heaps/hxd/Window.flash.hx	/^			var t = flash.Lib.getTimer();$/;"	v
t	heaps/hxd/fmt/bfnt/FontParser.hx	/^							var t = tile.sub(bytes.readUInt16(), bytes.readUInt16(), bytes.readUInt16(), bytes.readUI/;"	v
t	heaps/hxd/fmt/bfnt/FontParser.hx	/^						var t = tile.sub(x, y, width, height, xoffset, yoffset);$/;"	v
t	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var t = tile.sub(Std.parseInt(c.att.x), Std.parseInt(c.att.y), Std.parseInt(c.att.width), S/;"	v
t	heaps/hxd/fmt/bfnt/FontParser.hx	/^					var t = tile.sub(Std.parseInt(r[0]), Std.parseInt(r[1]), Std.parseInt(r[2]), Std.parseInt(r/;"	v
t	heaps/hxd/fmt/bfnt/Reader.hx	/^					var t = tile.sub(i.readUInt16(), i.readUInt16(), i.readUInt16(), i.readUInt16(), i.readInt1/;"	v
t	heaps/hxd/fmt/bfnt/Writer.hx	/^			var t = glyph.t;$/;"	v
t	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var t = times[i];$/;"	v
t	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var t = allTimes[0];$/;"	v
t	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var t = allTimes[i];$/;"	v
t	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var t = parent.getType();$/;"	v
t	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var t : { t : Array<Float>, x : Array<Float>, y : Array<Float>, z : Array<Float> };$/;"	v
t	heaps/hxd/fmt/fbx/Parser.hx	/^		var t = next();$/;"	v
t	heaps/hxd/fmt/grd/Reader.hx	/^			var t = trns[i];$/;"	v
t	heaps/hxd/fs/LocalFileSystem.hx	/^		var t = try w.getModifTime() catch( e : Dynamic ) return;$/;"	v
t	heaps/hxd/impl/AsyncLoader.hx	/^			var t = deque.pop(true);$/;"	v
t	heaps/hxd/impl/BitsBuilder.hx	/^					var t = Std.string(a);$/;"	v
t	heaps/hxd/impl/BitsBuilder.hx	/^				var t = try Context.getType(path.join(".")) catch( e : Dynamic ) continue;$/;"	v
t	heaps/hxd/impl/CacheAllocator.hx	/^		var t = haxe.Timer.stamp();$/;"	v
t	heaps/hxd/impl/Properties.hx	/^			var t = Type.typeof(v);$/;"	v
t	heaps/hxd/poly2tri/Sweep.hx	/^		var t:Triangle = this.context.front.head.next.triangle;$/;"	v
t	heaps/hxd/poly2tri/SweepContext.hx	/^			var t = tmp.pop();$/;"	v
t	heaps/hxd/poly2tri/VisiblePolygon.hx	/^		var t:Triangle;$/;"	v
t	heaps/hxd/res/Atlas.hx	/^				var t = file.sub(Std.int(tileX * scale), Std.int(tileY * scale), Std.int(tileW * scale), Std/;"	v
t	heaps/hxd/res/Atlas.hx	/^		var t = c[0];$/;"	v
t	heaps/hxd/res/BDFFont.hx	/^			var t = font.tile.sub( d.x, d.y, d.width, d.height, d.xoffset, ascent - (d.height + d.yoffset/;"	v
t	heaps/hxd/res/DynamicText.hx	/^			var t = typeFromXml(x, fpos);$/;"	v
t	heaps/hxd/res/FileTree.hx	/^			var t = Config.extensions.get(e).split(".");$/;"	v
t	heaps/hxd/res/FontBuilder.hx	/^				var t = new h2d.Tile(innerTex, x, y, w - 1, h - 1);$/;"	v
t	heaps/hxd/res/FontBuilder.hx	/^				var t = new h2d.Tile(innerTex, x, y-h, w - 1, h - 1);$/;"	v
t	heaps/hxd/res/NanoJpeg.hx	/^			var t = qtab[i];$/;"	v
t	heaps/hxd/snd/openal/Emulator.hx	/^			var t = now - source.playedTime;$/;"	v
t	heaps/hxd/snd/webaudio/AudioTypes.hx	/^		var t = 0.;$/;"	v
t	heaps/hxd/snd/webaudio/Driver.hx	/^				var t = source.buffers[source.buffers.length - 2].ends;$/;"	v
t	heaps/hxsl/AgalOptim.hx	/^				var t = reg[i];$/;"	v
t	heaps/hxsl/AgalOut.hx	/^				var t = allocReg();$/;"	v
t	heaps/hxsl/AgalOut.hx	/^			var t = allocReg(ret);$/;"	v
t	heaps/hxsl/AgalOut.hx	/^			var t = expr(et);$/;"	v
t	heaps/hxsl/Ast.hx	/^	public static function t( msg : String, pos : Position ) : Dynamic {$/;"	f
t	heaps/hxsl/Checker.hx	/^			var t = el[0].t;$/;"	v
t	heaps/hxsl/Eval.hx	/^			var t = if( isFinal ) (out.length == 0 ? TVoid : out[out.length - 1].t) else e.t;$/;"	v
t	heaps/hxsl/Flatten.hx	/^				var t = args[args.length - 1 - rem].t;$/;"	v
t	heaps/hxsl/Flatten.hx	/^	public var t : VecType;$/;"	v
t	heaps/hxsl/MacroParser.hx	/^			var t = switch( t ) {$/;"	v
t	heaps/hxsl/Macros.hx	/^				var t = makeType(v.type);$/;"	v
t	heaps/hxsl/Macros.hx	/^			var t = makeType(t);$/;"	v
t	heaps/hxsl/Serializer.hx	/^			var t = readType();$/;"	v
t	heaps/hxsl/Serializer.hx	/^			var t = types[id];$/;"	v
t	heaps/samples/HtmlText.hx	/^				var t = hxd.Res.hxlogo.toTile();$/;"	v
t	heaps/samples/Interactive.hx	/^			var t = h2d.Tile.fromColor(0xFF0000, 3, 3);$/;"	v
t	heaps/samples/Pad.hx	/^			var t = new h2d.Text(fnt,this);$/;"	v
t	heaps/samples/PointLights.hx	/^			var t = time * 5 + i;$/;"	v
t	heaps/samples/SampleApp.hx	/^		var t = new h2d.Text(font, i);$/;"	v
t	heaps/samples/ShaderAdvanced.hx	/^				var t = new h3d.mat.Texture(1,1,[Target],fmt);$/;"	v
t	heaps/samples/Skin.hx	/^			var t = m.mainPass.getShader(h3d.shader.Texture);$/;"	v
t	heaps/samples/World.hx	/^		var t = world.loadModel(hxd.Res.tree);$/;"	v
t	heaps/tools/hxsl/Main.hx	/^			var t : js.html.TextAreaElement = cast t;$/;"	v
t0	heaps/h3d/impl/Benchmark.hx	/^		var t0 = haxe.Timer.stamp();$/;"	v
t0	heaps/hxd/res/Image.hx	/^				var t0 = haxe.Timer.stamp();$/;"	v
t0	heaps/hxsl/CacheFile.hx	/^		var t0 = haxe.Timer.stamp();$/;"	v
t1	heaps/h2d/col/Circle.hx	/^		var t1 = (-b - Math.sqrt(d)) \/ (2 * a);$/;"	v
t1	heaps/h3d/col/Capsule.hx	/^		var t1 = (- coefB - discriminantSqrt) \/ (2.0 * coefA);$/;"	v
t1	heaps/h3d/col/Ray.hx	/^		var t1 = (-1 - a.x) * dx;$/;"	v
t1	heaps/h3d/col/Ray.hx	/^		var t1 = (b.xMin - px) * dx;$/;"	v
t11	heaps/h3d/Matrix.hx	/^		var t11 = 0., t12 = 0., t13 = 0.;$/;"	v
t2	heaps/h2d/Anim.hx	/^			var t2 = frames[i];$/;"	v
t2	heaps/h2d/col/Circle.hx	/^		var t2 = (-b + Math.sqrt(d)) \/ (2 * a);$/;"	v
t2	heaps/h3d/col/Capsule.hx	/^		var t2 = (- coefB + discriminantSqrt) \/ (2.0 * coefA);$/;"	v
t2	heaps/h3d/col/Ray.hx	/^		var t2 = (1 - a.x) * dx;$/;"	v
t2	heaps/h3d/col/Ray.hx	/^		var t2 = (b.xMax - px) * dx;$/;"	v
t2	heaps/h3d/impl/TextureCache.hx	/^			var t2 = cache[i];$/;"	v
t2	heaps/h3d/shader/NoiseLib.hx	/^  var t2 = t * t;$/;"	v
t2	heaps/hxsl/GlslOut.hx	/^			var t2 = tabs + "\\t";$/;"	v
t2	heaps/hxsl/HlslOut.hx	/^			var t2 = tabs + "\\t";$/;"	v
t21	heaps/h3d/Matrix.hx	/^		var t21 = 0., t22 = 0., t23 = 0.;$/;"	v
t3	heaps/h3d/col/Ray.hx	/^		var t3 = (-1 - a.y) * dy;$/;"	v
t3	heaps/h3d/col/Ray.hx	/^		var t3 = (b.yMin - py) * dy;$/;"	v
t3	heaps/h3d/shader/NoiseLib.hx	/^  var t3 = t2 * t;$/;"	v
t31	heaps/h3d/Matrix.hx	/^		var t31 = 0., t32 = 0., t33 = 0.;$/;"	v
t4	heaps/h3d/col/Ray.hx	/^		var t4 = (1 - a.y) * dy;$/;"	v
t4	heaps/h3d/col/Ray.hx	/^		var t4 = (b.yMax - py) * dy;$/;"	v
t4	heaps/h3d/shader/NoiseLib.hx	/^  var t4 = t2 * t2;$/;"	v
t5	heaps/h3d/col/Ray.hx	/^		var t5 = (0 - a.z) * dz;$/;"	v
t5	heaps/h3d/col/Ray.hx	/^		var t5 = (b.zMin - pz) * dz;$/;"	v
t6	heaps/h3d/col/Ray.hx	/^		var t6 = (1 - a.z) * dz;$/;"	v
t6	heaps/h3d/col/Ray.hx	/^		var t6 = (b.zMax - pz) * dz;$/;"	v
tMin	heaps/h3d/col/Capsule.hx	/^		var tMin = (t1 < t2) ? t1 : t2;$/;"	v
tPrimeMin	heaps/h3d/col/Capsule.hx	/^		var tPrimeMin = tMin * m + n;$/;"	v
tag	heaps/hxd/fmt/tiff/Reader.hx	/^				var tag = new TifTag(f.readUInt16());$/;"	v
tagExtraValues	heaps/hxd/fmt/tiff/Writer.hx	/^		var tagExtraValues = [];$/;"	v
tagShowcase	heaps/samples/HtmlText.hx	/^		var tagShowcase = "HtmlText supports next tags:" +$/;"	v
tags	heaps/hxd/fmt/tiff/Data.hx	/^	var tags : Array<{ tag : TifTag, type : TifType, value : TifValue }>;$/;"	v
tags	heaps/hxd/fmt/tiff/Reader.hx	/^		var tags = [];$/;"	v
tags	heaps/hxd/fmt/tiff/Writer.hx	/^		var tags = tif.tags.copy();$/;"	v
tail	heaps/h2d/impl/BatchDrawState.hx	/^	var tail : StateEntry;$/;"	v
tail	heaps/h3d/parts/Particles.hx	/^	var tail : Particle;$/;"	v
tail	heaps/hxd/poly2tri/AdvancingFront.hx	/^	public var tail:Node;$/;"	v
tail	heaps/hxd/poly2tri/SweepContext.hx	/^		var tail = new Node( triangle.points[2] );$/;"	v
tail	heaps/hxd/poly2tri/SweepContext.hx	/^	public var tail:Point;$/;"	v
takeControl	heaps/h3d/impl/Benchmark.hx	/^	public static function takeControl( app : hxd.App, ?s3d : h3d.scene.Scene ) @:privateAccess {$/;"	f
tan	heaps/hxd/Math.hx	/^	public static inline function tan( f : Float ) {$/;"	f
tan	heaps/hxd/earcut/Earcut.hx	/^		var tan;$/;"	v
tanMin	heaps/hxd/earcut/Earcut.hx	/^		var tanMin = Math.POSITIVE_INFINITY;$/;"	v
tanX	heaps/h2d/col/Matrix.hx	/^		var tanX = Math.tan(sx);$/;"	v
tanX	heaps/h3d/scene/pbr/Environment.hx	/^			var tanX = normalize(cross(up, n));$/;"	v
tanX	heaps/h3d/shader/NormalMap.hx	/^			var tanX = transformedTangent.xyz.normalize();$/;"	v
tanX	heaps/h3d/shader/Parallax.hx	/^				var tanX = transformedTangent.xyz.normalize();$/;"	v
tanX	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var tanX = worldTangent.xyz.normalize();$/;"	v
tanY	heaps/h2d/col/Matrix.hx	/^		var tanY = Math.tan(sy);$/;"	v
tanY	heaps/h3d/scene/pbr/Environment.hx	/^			var tanY = normalize(cross(n, tanX));$/;"	v
tanY	heaps/h3d/shader/NormalMap.hx	/^			var tanY = n.cross(tanX) * -transformedTangent.w;$/;"	v
tanY	heaps/h3d/shader/Parallax.hx	/^				var tanY = n.cross(tanX);$/;"	v
tanY	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var tanY = n.cross(tanX) * -1;$/;"	v
tangent	heaps/h3d/shader/NormalMap.hx	/^			var tangent : Vec3;$/;"	v
tangent	heaps/h3d/shader/SkinTangent.hx	/^			var tangent : Vec3;$/;"	v
tangent	heaps/h3d/shader/VolumeDecal.hx	/^		@param var tangent : Vec3;$/;"	v
tangent	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		@param var tangent : Vec3;$/;"	v
tangents	heaps/h3d/prim/Polygon.hx	/^	public var tangents : Array<Point>;$/;"	v
tangents	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var tangents = genTangents ? buildTangents(geom) : null;$/;"	v
tangents	heaps/tools/mikktspace/Mikktspace.hx	/^		var tangents = haxe.io.Bytes.alloc(4 * 4 * vertCount);$/;"	v
target	heaps/h3d/Camera.hx	/^	public var target : Vector;$/;"	v
target	heaps/h3d/anim/SmoothTarget.hx	/^	public var target : Animation;$/;"	v
target	heaps/h3d/scene/CameraController.hx	/^	public var target(get, never) : h3d.col.Point;$/;"	v
targetChannels	heaps/hxd/snd/Manager.hx	/^	var targetChannels : Int;$/;"	v
targetDistance	heaps/h3d/scene/CameraController.hx	/^	public var targetDistance(get, never) : Float;$/;"	v
targetFlipY	heaps/h2d/RenderContext.hx	/^	var targetFlipY : Float;$/;"	v
targetFormat	heaps/hxd/snd/Manager.hx	/^	var targetFormat   : Data.SampleFormat;$/;"	v
targetFrame	heaps/hxd/snd/Mp3Data.hx	/^			var targetFrame = Math.floor(sampleStart \/ samplesPerFrame);$/;"	v
targetJoint	heaps/h3d/anim/Animation.hx	/^	public var targetJoint : Int;$/;"	v
targetObject	heaps/h3d/anim/Animation.hx	/^	public var targetObject : h3d.scene.Object;$/;"	v
targetOffset	heaps/h3d/scene/CameraController.hx	/^	var targetOffset = new h3d.Vector(0, 0, 0, 0);$/;"	v
targetPos	heaps/h3d/scene/CameraController.hx	/^	var targetPos = new h3d.Vector(10. \/ 25., Math.PI \/ 4, Math.PI * 5 \/ 13);$/;"	v
targetRate	heaps/hxd/snd/Manager.hx	/^	var targetRate     : Int;$/;"	v
targetSample	heaps/hxd/snd/Data.hx	/^			var targetSample = (i \/ (newSamples - 1)) * (samples - 1);$/;"	v
targetSkin	heaps/h3d/anim/Animation.hx	/^	public var targetSkin : h3d.scene.Skin;$/;"	v
targetStack	heaps/h3d/Engine.hx	/^	var targetStack : TargetTmp;$/;"	v
targetTmp	heaps/h3d/Engine.hx	/^	var targetTmp : TargetTmp;$/;"	v
targetUV	heaps/h3d/shader/SAO.hx	/^			var targetUV = uv + radiusSS * alpha * unitOffset * screenRatio;$/;"	v
targetsCount	heaps/h3d/impl/DirectXDriver.hx	/^	var targetsCount = 1;$/;"	v
targetsStack	heaps/h2d/RenderContext.hx	/^	var targetsStack : Array<TargetStackEntry>;$/;"	v
targetsStackIndex	heaps/h2d/RenderContext.hx	/^	var targetsStackIndex : Int;$/;"	v
targs	heaps/hxsl/Checker.hx	/^			var targs = [];$/;"	v
targs	heaps/hxsl/Eval.hx	/^			var targs = [channel];$/;"	v
tarr	heaps/samples/ShaderAdvanced.hx	/^		var tarr = bmp.addShader(new TestTextureArray());$/;"	v
tasks	heaps/samples/templates/.vscode/tasks.json	/^	"tasks": [$/;"	a
tcFmt	heaps/hxd/fs/Convert.hx	/^		var tcFmt = TEXCONV_FMT.get(format);$/;"	v
tcount	heaps/h3d/impl/GlDriver.hx	/^			var tcount = s.textures.length;$/;"	v
tcount	heaps/h3d/impl/Stage3dDriver.hx	/^			var tcount : Int = shader.fragment.texturesCount + shader.vertex.texturesCount;$/;"	v
tcount	heaps/h3d/prim/RawPrimitive.hx	/^	var tcount : Int;$/;"	v
tcp	heaps/hxd/net/Socket.hx	/^		var tcp = new hl.uv.Tcp();$/;"	v
tdisposed	heaps/h3d/impl/Stage3dDriver.hx	/^	var tdisposed : Texture;$/;"	v
tell	heaps/hxd/fmt/pak/FileSystem.hx	/^	public function tell() {$/;"	f
tell	heaps/hxd/impl/Air3File.hx	/^	public function tell() : Int {$/;"	f
temp	heaps/h3d/shader/Blur.hx	/^			var temp = vec4(uvToScreen(uv), depth, 1) * cameraInverseViewProj;$/;"	v
temp	heaps/h3d/shader/SAO.hx	/^			var temp = vec4(uv2, depth, 1) * cameraInverseViewProj;$/;"	v
temp	heaps/h3d/shader/pbr/PropsImport.hx	/^			var temp = vec4(uvToScreen(uv), depth, 1) * cameraInverseViewProj;$/;"	v
temp	heaps/hxd/BitmapData.hx	/^					var temp : Float = d2x;$/;"	v
temp	heaps/hxd/BitmapData.hx	/^					var temp : Float = d2y;$/;"	v
templates	heaps/samples/Generator.hx	/^		var templates = [];$/;"	v
testPlane	heaps/h3d/col/Bounds.hx	/^	inline function testPlane( p : Plane ) {$/;"	f
tex	heaps/h2d/Graphics.hx	/^		var tex = state.currentTexture;$/;"	v
tex	heaps/h2d/Graphics.hx	/^		var tex = tile.getTexture();$/;"	v
tex	heaps/h2d/Scene.hx	/^			var tex = new h3d.mat.Texture(width, height, [Target]);$/;"	v
tex	heaps/h2d/Scene.hx	/^		var tex = target.getTexture();$/;"	v
tex	heaps/h2d/Tile.hx	/^		var tex = h3d.mat.Texture.fromBitmap(bmp);$/;"	v
tex	heaps/h2d/Tile.hx	/^		var tex = innerTex;$/;"	v
tex	heaps/h2d/Tile.hx	/^		var tex = new h3d.mat.Texture(w, h);$/;"	v
tex	heaps/h2d/domkit/BaseComponents.hx	/^		var tex = t.getTexture();$/;"	v
tex	heaps/h2d/filter/Glow.hx	/^		var tex = t.getTexture();$/;"	v
tex	heaps/h2d/filter/InnerGlow.hx	/^		var tex = t.getTexture();$/;"	v
tex	heaps/h3d/impl/DirectXDriver.hx	/^			var tex = textures[i];$/;"	v
tex	heaps/h3d/impl/DirectXDriver.hx	/^		var tex = Driver.createTexture2d(desc);$/;"	v
tex	heaps/h3d/impl/DirectXDriver.hx	/^		var tex = textures[0];$/;"	v
tex	heaps/h3d/impl/GlDriver.hx	/^			var tex = textures[i];$/;"	v
tex	heaps/h3d/mat/BigTexture.hx	/^	public var tex : h3d.mat.Texture;$/;"	v
tex	heaps/h3d/mat/PbrMaterial.hx	/^		var tex = mainPass.getShader(h3d.shader.pbr.PropsTexture);$/;"	v
tex	heaps/h3d/pass/Shadows.hx	/^		var tex = h3d.mat.Texture.fromColor(0xFFFFFF);$/;"	v
tex	heaps/h3d/scene/pbr/Renderer.hx	/^						var tex = pl.shadows.getShadowTex();$/;"	v
tex	heaps/h3d/shader/Buffers.hx	/^	public var tex : haxe.ds.Vector<h3d.mat.Texture>;$/;"	v
tex	heaps/hxd/res/BitmapFont.hx	/^		var tex = loader.load(path).toTexture();$/;"	v
tex	heaps/hxd/res/Gradients.hx	/^		var tex   = createTexture(grads, resolution);$/;"	v
tex	heaps/hxd/res/Gradients.hx	/^		var tex  = new h3d.mat.Texture(twid, thei);$/;"	v
tex	heaps/hxd/res/Image.hx	/^	var tex : h3d.mat.Texture;$/;"	v
tex	heaps/samples/Base3D.hx	/^		var tex = hxd.Res.hxlogo.toTexture();$/;"	v
tex	heaps/samples/Lights.hx	/^		var tex = light == null ? null : light.shadows.getShadowTex();$/;"	v
tex	heaps/samples/Stencil.hx	/^		var tex = hxd.Res.hxlogo.toTexture();$/;"	v
texA	heaps/h3d/shader/MinMaxShader.hx	/^		@param var texA : Sampler2D;$/;"	v
texA	heaps/h3d/shader/MinMaxShader.hx	/^		@param var texA : SamplerCube;$/;"	v
texB	heaps/h3d/shader/MinMaxShader.hx	/^		@param var texB : Sampler2D;$/;"	v
texB	heaps/h3d/shader/MinMaxShader.hx	/^		@param var texB : SamplerCube;$/;"	v
texMemory	heaps/h3d/impl/MemoryManager.hx	/^	public var texMemory(default, null) : Float = 0;$/;"	v
texOut	heaps/h3d/pass/HardwarePick.hx	/^	var texOut : h3d.mat.Texture;$/;"	v
texelSize	heaps/h3d/shader/DirShadow.hx	/^					var texelSize = 1.0\/shadowRes;$/;"	v
texelSize	heaps/h3d/shader/SpotShadow.hx	/^					var texelSize = 1.0\/shadowRes;$/;"	v
texpr	heaps/hxsl/Clone.hx	/^	public function texpr( e : TExpr ) : TExpr {$/;"	f
text	heaps/h2d/CheckBox.hx	/^	public var text(default,set) : String = "";$/;"	v
text	heaps/h2d/HtmlText.hx	/^				var text = e.nodeValue;$/;"	v
text	heaps/h2d/HtmlText.hx	/^				var text = htmlToText(e.nodeValue);$/;"	v
text	heaps/h2d/HtmlText.hx	/^			var text = htmlToText(e.nodeValue);$/;"	v
text	heaps/h2d/Text.hx	/^	public var text(default, set) : String;$/;"	v
text	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var text : String = "";$/;"	v
text	heaps/h2d/domkit/Style.hx	/^				var text = getDisplayInfo(o);$/;"	v
text	heaps/hxd/res/BDFFont.hx	/^		var text = entry.getText();$/;"	v
text	heaps/samples/Blur.hx	/^	var text : h2d.Text;$/;"	v
text	heaps/samples/HtmlText.hx	/^		var text = createText(flow, tagShowcase, Align.Left);$/;"	v
text	heaps/tools/hxsl/Main.hx	/^	var text : js.html.TextAreaElement;$/;"	v
textAlign	heaps/h2d/Text.hx	/^	public var textAlign(default, set) : Align;$/;"	v
textAlign	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var textAlign : h2d.Text.Align = Left;$/;"	v
textChanged	heaps/h2d/Text.hx	/^	var textChanged : Bool;$/;"	v
textChar	heaps/hxd/res/FontBuilder.hx	/^			var textChar = options.chars.charAt(i);$/;"	v
textColor	heaps/h2d/Text.hx	/^	public var textColor(default, set) : Int;$/;"	v
textColor	heaps/h3d/impl/Benchmark.hx	/^	public var textColor = 0;$/;"	v
textField	heaps/samples/HtmlText.hx	/^	public var textField: h2d.HtmlText;$/;"	v
textField	heaps/samples/Text.hx	/^	public var textField: h2d.Text;$/;"	v
textHeight	heaps/h2d/Text.hx	/^	public var textHeight(get, null) : Float;$/;"	v
textPos	heaps/h2d/TextInput.hx	/^	function textPos( x : Float, y : Float ) {$/;"	f
textSplit	heaps/h2d/HtmlText.hx	/^			var textSplit = [], restPos = 0;$/;"	v
textWidgets	heaps/samples/HtmlText.hx	/^	var textWidgets:Array<HtmlTextWidget> = [];$/;"	v
textWidgets	heaps/samples/Text.hx	/^	var textWidgets:Array<TextWidget> = [];$/;"	v
textWidth	heaps/h2d/Text.hx	/^	public var textWidth(get, null) : Float;$/;"	v
textXml	heaps/h2d/HtmlText.hx	/^	var textXml : Xml;$/;"	v
texture	heaps/h2d/Particles.hx	/^	public var texture(default,set) : h3d.mat.Texture;$/;"	v
texture	heaps/h2d/RenderContext.hx	/^	var texture : h3d.mat.Texture;$/;"	v
texture	heaps/h2d/Video.hx	/^	var texture : h3d.mat.Texture;$/;"	v
texture	heaps/h2d/filter/InnerGlow.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h2d/filter/Mask.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h2d/filter/Shader.hx	/^			@param var texture : Sampler2D;$/;"	v
texture	heaps/h2d/impl/BatchDrawState.hx	/^	public var texture : h3d.mat.Texture;$/;"	v
texture	heaps/h3d/mat/BigTexture.hx	/^	public var texture : hxd.res.Image;$/;"	v
texture	heaps/h3d/mat/Material.hx	/^	public var texture(get, set) : h3d.mat.Texture;$/;"	v
texture	heaps/h3d/parts/GpuParticles.hx	/^	public var texture : h3d.mat.Texture		= null;$/;"	v
texture	heaps/h3d/pass/ColorMatrix.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/pass/Copy.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/pass/Copy.hx	/^		@param var texture : Sampler2DArray;$/;"	v
texture	heaps/h3d/pass/CubeCopy.hx	/^		@param var texture : SamplerCube;$/;"	v
texture	heaps/h3d/pass/DirShadowMap.hx	/^		var texture = ctx.textures.allocTarget("dirShadowMap", size, size, false, format);$/;"	v
texture	heaps/h3d/pass/DirShadowMap.hx	/^		var texture = dshader.shadowMap;$/;"	v
texture	heaps/h3d/pass/FXAA.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/pass/PassObject.hx	/^	public var texture : Int = 0;$/;"	v
texture	heaps/h3d/pass/PointShadowMap.hx	/^		var texture = ctx.computingStatic ? createStaticTexture() : ctx.textures.allocTarget("pointSha/;"	v
texture	heaps/h3d/pass/SpotShadowMap.hx	/^		var texture = ctx.computingStatic ? createStaticTexture() : ctx.textures.allocTarget("spotShad/;"	v
texture	heaps/h3d/scene/Trail.hx	/^	public var texture(get, set) : h3d.mat.Texture;$/;"	v
texture	heaps/h3d/scene/fwd/Renderer.hx	/^		var texture = ctx.textures.allocTarget("depthMap", ctx.engine.width, ctx.engine.height, true);$/;"	v
texture	heaps/h3d/scene/fwd/Renderer.hx	/^		var texture = ctx.textures.allocTarget("normalMap", ctx.engine.width, ctx.engine.height);$/;"	v
texture	heaps/h3d/scene/pbr/Environment.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/AlphaMap.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/AnimatedTexture.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Base2d.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Bloom.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Blur.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/CubeMap.hx	/^		@param var texture : SamplerCube;$/;"	v
texture	heaps/h3d/shader/Displacement.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/GpuParticle.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/NormalMap.hx	/^        @param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Outline2D.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/SpecularTexture.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Texture.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/Texture2.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/h3d/shader/pbr/CubeLod.hx	/^		@param var texture : SamplerCube;$/;"	v
texture	heaps/h3d/shader/pbr/PropsTexture.hx	/^		@param var texture : Sampler2D;$/;"	v
texture	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var texture = getSpecChild(m, "DiffuseColor");$/;"	v
texture	heaps/samples/GraphicsDraw.hx	/^	var texture : h3d.mat.Texture;$/;"	v
textureColor	heaps/h2d/Particles.hx	/^		var textureColor : Vec4;$/;"	v
textureColor	heaps/h3d/shader/AnimatedTexture.hx	/^		var textureColor : Vec4;$/;"	v
textureColor	heaps/h3d/shader/Base2d.hx	/^		var textureColor : Vec4;$/;"	v
textureColor	heaps/h3d/shader/ColorKey.hx	/^		var textureColor : Vec4;$/;"	v
textureColor	heaps/h3d/shader/WhiteAlpha.hx	/^		var textureColor : Vec4;$/;"	v
textureColorCache	heaps/h3d/Engine.hx	/^	var textureColorCache = new Map<Int,h3d.mat.Texture>();$/;"	v
textureCount	heaps/h3d/pass/SortByMaterial.hx	/^	var textureCount : Int = 1;$/;"	v
textureIdMap	heaps/h3d/pass/SortByMaterial.hx	/^	var textureIdMap : Array<Int>;$/;"	v
textureInfos	heaps/h3d/impl/LogDriver.hx	/^	function textureInfos( buf : haxe.ds.Vector<h3d.mat.Texture>, tid : Int ) {$/;"	f
textureName	heaps/h3d/parts/Data.hx	/^	public var textureName : String;$/;"	v
textureParam	heaps/h2d/filter/Shader.hx	/^	var textureParam : String;$/;"	v
texturePath	heaps/h3d/scene/World.hx	/^		var texturePath = resolveTexturePath(r, mat);$/;"	v
textureSample	heaps/h3d/shader/SignedDistanceField.hx	/^			var textureSample : Vec4 = textureColor;$/;"	v
textureShader	heaps/h3d/mat/Material.hx	/^	public var textureShader(default, null) : h3d.shader.Texture;$/;"	v
textureWrap	heaps/h3d/mat/PbrMaterial.hx	/^	@:optional var textureWrap : Bool;$/;"	v
textures	heaps/h3d/Engine.hx	/^	public var textures : Array<h3d.mat.Texture>;$/;"	v
textures	heaps/h3d/impl/GlDriver.hx	/^	public var textures : Array<{ u : Uniform, t : hxsl.Ast.Type, mode : Int }>;$/;"	v
textures	heaps/h3d/impl/MemoryManager.hx	/^	var textures : Array<h3d.mat.Texture>;$/;"	v
textures	heaps/h3d/impl/RenderContext.hx	/^	public var textures : h3d.impl.TextureCache;$/;"	v
textures	heaps/h3d/prim/ModelCache.hx	/^	var textures : Map<String, h3d.mat.Texture>;$/;"	v
textures	heaps/h3d/scene/World.hx	/^	var textures : Map<String, WorldMaterial>;$/;"	v
textures	heaps/h3d/scene/pbr/Renderer.hx	/^	var textures = {$/;"	v
textures	heaps/hxsl/Cache.hx	/^		var textures = [];$/;"	v
textures	heaps/hxsl/Flatten.hx	/^		var textures = packTextures(prefix + "Textures", allVars, TSampler2D)$/;"	v
textures	heaps/hxsl/HlslOut.hx	/^		var textures = [];$/;"	v
textures	heaps/hxsl/RuntimeShader.hx	/^	public var textures : AllocParam;$/;"	v
textures	heaps/samples/ShaderAdvanced.hx	/^		@param var textures : Sampler2DArray;$/;"	v
textures2DCount	heaps/h3d/impl/DirectXDriver.hx	/^	public var textures2DCount : Int;$/;"	v
texturesCount	heaps/h3d/impl/DirectXDriver.hx	/^	public var texturesCount : Int;$/;"	v
texturesCount	heaps/hxsl/RuntimeShader.hx	/^	public var texturesCount : Int;$/;"	v
tf	heaps/h2d/CheckBox.hx	/^	var tf : h2d.Text;$/;"	v
tf	heaps/h2d/Console.hx	/^	var tf : h2d.TextInput;$/;"	v
tf	heaps/hxd/res/FontBuilder.hx	/^		var tf = new flash.text.TextField();$/;"	v
tf	heaps/samples/Base2D.hx	/^		var tf = new h2d.Text(font, s2d);$/;"	v
tf	heaps/samples/Base2D.hx	/^	var tf : h2d.Text;$/;"	v
tf	heaps/samples/Bounds.hx	/^		var tf = new h2d.Text(hxd.Res.customFont.toFont(), boxes[0]);$/;"	v
tf	heaps/samples/Camera2D.hx	/^		var tf : h2d.TextInput = hxd.impl.Api.downcast(slider.parent.getChildAt(2),h2d.TextInput);$/;"	v
tf	heaps/samples/Cursor.hx	/^			var tf = new h2d.Text(hxd.res.DefaultFont.get(), i);$/;"	v
tf	heaps/samples/Flows.hx	/^			var tf = new h2d.Text(font, flow);$/;"	v
tf	heaps/samples/Flows.hx	/^			var tf = new h2d.Text(font, sub);$/;"	v
tf	heaps/samples/GpuParticles.hx	/^	var tf : h2d.Text;$/;"	v
tf	heaps/samples/HtmlText.hx	/^			var tf = new h2d.HtmlText(font, parent);$/;"	v
tf	heaps/samples/HtmlText.hx	/^		var tf = new h2d.HtmlText(font, this);$/;"	v
tf	heaps/samples/Pad.hx	/^	var tf : h2d.Text;$/;"	v
tf	heaps/samples/SampleApp.hx	/^		var tf = new h2d.Text(getFont(), f);$/;"	v
tf	heaps/samples/SampleApp.hx	/^		var tf = new h2d.Text(getFont(), fui);$/;"	v
tf	heaps/samples/SampleApp.hx	/^		var tf = new h2d.TextInput(getFont(), f);$/;"	v
tf	heaps/samples/Sound.hx	/^			var tf = new h2d.Text(getFont(), f);$/;"	v
tf	heaps/samples/Text.hx	/^			var tf = createText(flow, "BMFont XML format (Littera export)", Align.Left, hxd.Res.littera_x/;"	v
tf	heaps/samples/Text.hx	/^			var tf = new h2d.Text(forceFont != null ? forceFont : font, parent);$/;"	v
tf	heaps/samples/Text.hx	/^		var tf = new h2d.Text(font, this);$/;"	v
tf	heaps/samples/Video.hx	/^	var tf : h2d.Text;$/;"	v
tf	heaps/samples/World.hx	/^	var tf : h2d.Text;$/;"	v
tfName	heaps/samples/Pad.hx	/^	var tfName : h2d.Text;$/;"	v
tfun	heaps/hxsl/Clone.hx	/^	public function tfun( f : TFunction ) : TFunction {$/;"	f
tfuns	heaps/hxsl/Checker.hx	/^		var tfuns = [];$/;"	v
tget	heaps/hxsl/Eval.hx	/^			var tget = {$/;"	v
th	heaps/h2d/Drawable.hx	/^		var th = tile.height;$/;"	v
th	heaps/h2d/Object.hx	/^		var th = tile.height;$/;"	v
th	heaps/h3d/impl/Stage3dDriver.hx	/^			var th = renderTargets == 0 ? this.height : 9999;$/;"	v
that	heaps/hxd/poly2tri/Triangle.hx	/^		var that:Triangle = this.neighbors[index];$/;"	v
thei	heaps/hxd/res/Gradients.hx	/^		var thei = hxd.Math.nextPOT(ghei * grads.length);$/;"	v
theta	heaps/h2d/Particles.hx	/^					var theta = rand() * Math.PI * 2;$/;"	v
theta	heaps/h3d/parts/Emitter.hx	/^			var theta = rand() * Math.PI * 2;$/;"	v
theta	heaps/h3d/parts/GpuParticles.hx	/^			var theta = rand() * Math.PI * 2;$/;"	v
theta	heaps/h3d/scene/CameraController.hx	/^	public var theta(get, never) : Float;$/;"	v
theta	heaps/h3d/shader/pbr/Light.hx	/^			var theta = dot(delta.normalize(), -lightDir);$/;"	v
theta	heaps/h3d/shader/pbr/Slides.hx	/^						var theta = (-uv.y+0.5)*3.1415;$/;"	v
thickness	heaps/h3d/scene/Box.hx	/^	public var thickness = 1.0;$/;"	v
third	heaps/hxd/fmt/blend/Data.hx	/^		var third  = bytes.get(pos + 1);$/;"	v
thisIndent	heaps/h2d/domkit/Style.hx	/^			var thisIndent = parents.length;$/;"	v
threadIdCache	heaps/hxd/fmt/pak/FileSystem.hx	/^	var threadIdCache : Array<Null<Int>>;$/;"	v
threadIdentifier	heaps/hxd/fmt/pak/FileSystem.hx	/^	var threadIdentifier : sys.thread.Tls<Null<Int>>;$/;"	v
threadLoop	heaps/hxd/impl/AsyncLoader.hx	/^	function threadLoop() {$/;"	f
threshold	heaps/h3d/scene/pbr/Environment.hx	/^		@param var threshold : Float;$/;"	v
threshold	heaps/h3d/shader/KillAlpha.hx	/^		@param var threshold : Float;$/;"	v
threshold	heaps/tools/mikktspace/Mikktspace.hx	/^		var threshold = args.length > 2 ? Std.parseFloat(args[2]) : 180;$/;"	v
thresholdValue	heaps/hxd/Perlin.hx	/^	public function thresholdValue( p : Float ) {$/;"	f
tid	heaps/h3d/impl/DirectXDriver.hx	/^				var tid = i + 2;$/;"	v
tid	heaps/h3d/pass/ShaderManager.hx	/^			var tid = 0;$/;"	v
tid	heaps/hxsl/Serializer.hx	/^		var tid = typeIdMap.get(t);$/;"	v
tid	heaps/hxsl/Serializer.hx	/^	var tid = 1;$/;"	v
tif	heaps/hxd/fmt/tiff/Reader.hx	/^		var tif : TifFile = {$/;"	v
tif	heaps/hxd/fmt/tiff/Writer.hx	/^		var tif : TifFile = {$/;"	v
tile	heaps/h2d/Anim.hx	/^		var tile = getFrame();$/;"	v
tile	heaps/h2d/Bitmap.hx	/^	public var tile(default,set) : Tile;$/;"	v
tile	heaps/h2d/CdbLevel.hx	/^	public var tile : h2d.Tile;$/;"	v
tile	heaps/h2d/Font.hx	/^	public var tile(default,null) : h2d.Tile;$/;"	v
tile	heaps/h2d/Graphics.hx	/^	public var tile : h2d.Tile;$/;"	v
tile	heaps/h2d/Slider.hx	/^	public var tile : h2d.Tile;$/;"	v
tile	heaps/h2d/SpriteBatch.hx	/^	public var tile : Tile;$/;"	v
tile	heaps/h2d/TileGroup.hx	/^	public var tile : Tile;$/;"	v
tile	heaps/h2d/Video.hx	/^	var tile : h2d.Tile;$/;"	v
tile	heaps/hxd/fmt/bfnt/FontParser.hx	/^		var tile : h2d.Tile = null;$/;"	v
tile	heaps/hxd/fmt/bfnt/Reader.hx	/^				var tile = font.tile = resolveTile(font.tilePath);$/;"	v
tile	heaps/hxd/res/Gradients.hx	/^		var tile  = h2d.Tile.fromTexture(tex);$/;"	v
tile	heaps/samples/Base2D.hx	/^		var tile = hxd.Res.hxlogo.toTile();$/;"	v
tile	heaps/samples/GraphicsDraw.hx	/^		var tile = h2d.Tile.fromBitmap(bmp);$/;"	v
tileAlign	heaps/hxd/res/Atlas.hx	/^	function tileAlign( t : h2d.Tile, halign : h2d.Flow.FlowAlign, valign : h2d.Flow.FlowAlign, wid/;"	f
tileArrow	heaps/h2d/Dropdown.hx	/^	public var tileArrow(default, set) : h2d.Tile;$/;"	v
tileArrowOpen	heaps/h2d/Dropdown.hx	/^	public var tileArrowOpen : h2d.Tile;$/;"	v
tileBorders	heaps/h2d/ScaleGrid.hx	/^	public var tileBorders(default, set) : Bool;$/;"	v
tileBorders	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var tileBorders : Bool;$/;"	v
tileBuilder	heaps/h2d/CdbLevel.hx	/^	var tileBuilder : cdb.TileBuilder;$/;"	v
tileGroup	heaps/samples/Tiled.hx	/^		var tileGroup = new h2d.TileGroup(tiles);$/;"	v
tileOverItem	heaps/h2d/Dropdown.hx	/^	public var tileOverItem(default, set) : h2d.Tile;$/;"	v
tilePath	heaps/h2d/Font.hx	/^	public var tilePath(default,null) : String;$/;"	v
tileProps	heaps/h2d/CdbLevel.hx	/^	var tileProps(default, null) : Array<Dynamic>;$/;"	v
tileSetArray	heaps/samples/Tiled.hx	/^		var tileSetArray = tiles.gridFlatten(TILE_SIZE, 0, 0);$/;"	v
tileSize	heaps/samples/Camera2D.hx	/^		var tileSize = 16;$/;"	v
tileSize	heaps/samples/DrawingTiles.hx	/^		var tileSize = logo.width \/ 8;$/;"	v
tileWrap	heaps/h2d/Drawable.hx	/^	public var tileWrap(default, set) : Bool;$/;"	v
tileWrap	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var tileWrap : Bool;$/;"	v
tileX	heaps/hxd/res/Atlas.hx	/^				var tileX = 0, tileY = 0, tileW = 0, tileH = 0, tileDX = 0, tileDY = 0, origW = 0, origH = 0/;"	v
tileX	heaps/samples/Tiled.hx	/^			var tileX = 0;$/;"	v
tileY	heaps/samples/Tiled.hx	/^			var tileY = 0;$/;"	v
tiledMapData	heaps/samples/Tiled.hx	/^		var tiledMapData = hxd.Res.tileMap.toMap(); \/\/ .tmx file$/;"	v
tilegroup	heaps/samples/DrawingTiles.hx	/^		var tilegroup = new h2d.TileGroup(hbox);$/;"	v
tiles	heaps/h2d/CdbLevel.hx	/^			var tiles = l.tileset.tiles;$/;"	v
tiles	heaps/h2d/CdbLevel.hx	/^	public var tiles : Array<h2d.Tile>;$/;"	v
tiles	heaps/h2d/KeyFrames.hx	/^	var tiles : Array<h2d.Tile>;$/;"	v
tiles	heaps/h2d/Particles.hx	/^	var tiles : Array<h2d.Tile>;$/;"	v
tiles	heaps/samples/Camera2D.hx	/^		var tiles = tset.gridFlatten(tileSize, 0, 0);$/;"	v
tiles	heaps/samples/DrawingTiles.hx	/^		var tiles = logo.gridFlatten(tileSize);$/;"	v
tiles	heaps/samples/Tiled.hx	/^		var tiles = hxd.Res.tiles.toTile();			\/\/ tile sheet used in .tmx file above$/;"	v
tiles	heaps/samples/Tiled.hx	/^	var tiles:h2d.TileGroup;$/;"	v
tilesProps	heaps/h2d/CdbLevel.hx	/^	public var tilesProps(get, never) : Array<Dynamic>;$/;"	v
tileset	heaps/h2d/CdbLevel.hx	/^	public var tileset : LevelTileset;$/;"	v
tilesets	heaps/h2d/CdbLevel.hx	/^	var tilesets : Map<String, LevelTileset>;$/;"	v
time	heaps/h2d/Video.hx	/^	public var time(get, null) : Float;$/;"	v
time	heaps/h3d/impl/Benchmark.hx	/^		var time = allocLabel(count++);$/;"	v
time	heaps/h3d/impl/Benchmark.hx	/^	public var time : Float;$/;"	v
time	heaps/h3d/impl/RenderContext.hx	/^	public var time : Float;$/;"	v
time	heaps/h3d/parts/Data.hx	/^	public var time : Float;$/;"	v
time	heaps/h3d/parts/Emitter.hx	/^	public var time(default,null) : Float;$/;"	v
time	heaps/h3d/parts/GpuParticles.hx	/^	public var time : Float;$/;"	v
time	heaps/h3d/parts/Particle.hx	/^	public var time : Float;$/;"	v
time	heaps/h3d/shader/AnimatedTexture.hx	/^			var time : Float;$/;"	v
time	heaps/h3d/shader/Base2d.hx	/^		@global var time : Float;$/;"	v
time	heaps/h3d/shader/BaseMesh.hx	/^			var time : Float;$/;"	v
time	heaps/h3d/shader/GpuParticle.hx	/^			var time : Float;$/;"	v
time	heaps/h3d/shader/GpuParticle.hx	/^		@param var time : Float;$/;"	v
time	heaps/h3d/shader/SinusDeform.hx	/^		@global var time : Float;$/;"	v
time	heaps/h3d/shader/UVAnim.hx	/^			var time : Float;$/;"	v
time	heaps/h3d/shader/UVScroll.hx	/^			var time : Float;$/;"	v
time	heaps/hxd/fs/FileConverter.hx	/^		var time = std.Math.floor(getFileTime(fullPath) \/ 1000);$/;"	v
time	heaps/hxd/res/Image.hx	/^					var time = (haxe.Timer.stamp()-t0)*1000.0;$/;"	v
time	heaps/hxd/snd/NativeChannel.hx	/^	var time : Float; \/\/ Mandatory for proper buffer sync, otherwise produces gaps in playback du/;"	v
time	heaps/hxd/snd/webaudio/Driver.hx	/^				var time = ctx.currentTime;$/;"	v
time	heaps/samples/Base3D.hx	/^	var time : Float = 0.;$/;"	v
time	heaps/samples/Bounds.hx	/^	var time = 0.;$/;"	v
time	heaps/samples/GpuParticles.hx	/^	var time = 0.;$/;"	v
time	heaps/samples/Helpers.hx	/^	var time = 0.0;$/;"	v
time	heaps/samples/Mask.hx	/^	var time : Float = 0.;$/;"	v
time	heaps/samples/Particles2d.hx	/^	var time : Float;$/;"	v
time	heaps/samples/PointLights.hx	/^	var time : Float = 0.;$/;"	v
time	heaps/samples/Quaternion.hx	/^	var time = 0.;$/;"	v
time	heaps/samples/Sao.hx	/^		var time = Math.PI * 0.25;$/;"	v
time	heaps/samples/ShaderAdvanced.hx	/^		@param var time : Float;$/;"	v
time	heaps/samples/Shadows.hx	/^	var time : Float = 0.;$/;"	v
time	heaps/samples/Sound.hx	/^	var time = 0.;$/;"	v
time	heaps/samples/Stencil.hx	/^	var time : Float = 0.;$/;"	v
timeMs	heaps/h3d/impl/Benchmark.hx	/^		var timeMs = totalTime \/ 1e6;$/;"	v
timeOffset	heaps/hxd/snd/Manager.hx	/^	public var timeOffset : Float = 0.;$/;"	v
timeout	heaps/hxd/net/Socket.hx	/^	public var timeout(default, set) : Null<Float>;$/;"	v
timeoutTick	heaps/hxd/System.flash.hx	/^	public static function timeoutTick() : Void {$/;"	f
timeoutTick	heaps/hxd/System.hl.hx	/^	public static function timeoutTick() : Void @:privateAccess {$/;"	f
timeoutTick	heaps/hxd/System.hx	/^	public static function timeoutTick() : Void {$/;"	f
timeoutTick	heaps/hxd/System.js.hx	/^	public static function timeoutTick() : Void {$/;"	f
times	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var times = dataCurves[0].get("KeyTime").getFloats();$/;"	v
timing_curves	heaps/hxd/fmt/kframes/Data.hx	/^	var timing_curves : Array<Array<KFSize<Float>>>;$/;"	v
tinf	heaps/h2d/RenderContext.hx	/^		var tinf = targetsStack[--targetsStackIndex];$/;"	v
tip	heaps/h3d/impl/Benchmark.hx	/^	var tip : h2d.Text;$/;"	v
tipCurName	heaps/h3d/impl/Benchmark.hx	/^	var tipCurName : String;$/;"	v
tipCurrent	heaps/h3d/impl/Benchmark.hx	/^	var tipCurrent : StatsObject;$/;"	v
title	heaps/hxd/System.hl.hx	/^		var title = haxe.macro.Compiler.getDefine("windowTitle");$/;"	v
title	heaps/hxd/Window.flash.hx	/^	public var title(get, set) : String;$/;"	v
title	heaps/hxd/Window.hl.hx	/^	public var title(get, set) : String;$/;"	v
title	heaps/hxd/Window.hx	/^	public var title(get, set) : String;$/;"	v
title	heaps/hxd/Window.js.hx	/^	public var title(get, set) : String;$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("0°) 9 flows with text inline");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("1°) 3 flows with text inline in 3 flows inline");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("2°) 1 flow with text in 1 flow in 1 flow : all alignments");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("3°) 3 flows with text inline inside 3 flows in column");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("4°) Reversing");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("5°) Multiline + MaxWidth reached | Multiline + MaxHeight reached");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("6°) Child Properties");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("7°) Stack layout");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("8°) Flow + text resize");$/;"	v
title	heaps/samples/Flows.hx	/^			var title = createTitle("9°) Overflow");$/;"	v
title	heaps/samples/Generator.hx	/^			var title = f.split(".").shift();$/;"	v
tl	heaps/h2d/Tile.hx	/^		var tl = [];$/;"	v
tl	heaps/h2d/Tile.hx	/^		var tl = new Array();$/;"	v
tl	heaps/h3d/mat/BigTexture.hx	/^	public var tl : QuadTree;$/;"	v
tl	heaps/hxd/res/Atlas.hx	/^				var tl = contents.get(key);$/;"	v
tl2	heaps/h2d/col/RoundRect.hx	/^			var tl2 = t * invLenSq;$/;"	v
tl2	heaps/h2d/col/Segment.hx	/^			var tl2 = t * invLenSq;$/;"	v
tlen	heaps/h3d/scene/World.hx	/^						var tlen = t.length();$/;"	v
tlen	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var tlen = trans.length();$/;"	v
tmax	heaps/h3d/col/Ray.hx	/^		var tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6));$/;"	v
tmin	heaps/h3d/col/Ray.hx	/^		var tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));$/;"	v
tmod	heaps/hxd/Timer.hx	/^	public static var tmod(get,set) : Float;$/;"	v
tmp	heaps/h2d/Graphics.hx	/^	var tmp : hxd.FloatBuffer;$/;"	v
tmp	heaps/h2d/Mask.hx	/^		var tmp;$/;"	v
tmp	heaps/h2d/RenderContext.hx	/^		var tmp = new h3d.Buffer(nverts, stride, [Quads,Dynamic,RawFormat]);$/;"	v
tmp	heaps/h2d/SpriteBatch.hx	/^		var tmp = tmpBuf;$/;"	v
tmp	heaps/h2d/Tile.hx	/^		var tmp = u; u = u2; u2 = tmp;$/;"	v
tmp	heaps/h2d/Tile.hx	/^		var tmp = v; v = v2; v2 = tmp;$/;"	v
tmp	heaps/h2d/TileGroup.hx	/^	var tmp : hxd.FloatBuffer;$/;"	v
tmp	heaps/h2d/col/Matrix.hx	/^	static var tmp = new Matrix();$/;"	v
tmp	heaps/h2d/col/RoundRect.hx	/^			var tmp = w;$/;"	v
tmp	heaps/h3d/Matrix.hx	/^		var tmp = tmp;$/;"	v
tmp	heaps/h3d/Matrix.hx	/^		var tmp;$/;"	v
tmp	heaps/h3d/Matrix.hx	/^	static var tmp = new Matrix();$/;"	v
tmp	heaps/h3d/anim/Transition.hx	/^		var tmp = st;$/;"	v
tmp	heaps/h3d/impl/DirectXDriver.hx	/^			var tmp = new hl.NativeArray(1);$/;"	v
tmp	heaps/h3d/impl/DirectXDriver.hx	/^		var tmp = dx.Driver.createBuffer(indiceCount << v.bits, Staging, None, CpuRead | CpuWrite, Non/;"	v
tmp	heaps/h3d/impl/DirectXDriver.hx	/^		var tmp = dx.Driver.createBuffer(vertexCount * v.stride * 4, Staging, None, CpuRead | CpuWrite/;"	v
tmp	heaps/h3d/impl/DirectXDriver.hx	/^		var tmp = dx.Driver.createTexture2d(desc);$/;"	v
tmp	heaps/h3d/impl/GlDriver.hx	/^		var tmp = new Uint8Array(m.size * m.stride * 4);$/;"	v
tmp	heaps/h3d/mat/Texture.hx	/^				var tmp = r;$/;"	v
tmp	heaps/h3d/parts/Particles.hx	/^		var tmp = tmpBuf;$/;"	v
tmp	heaps/h3d/parts/Particles.hx	/^	var tmp : h3d.Vector;$/;"	v
tmp	heaps/h3d/pass/Blur.hx	/^		var tmp = ctx.textures.allocTarget(src.name+"BlurTmp", src.width, src.height, false, src.forma/;"	v
tmp	heaps/h3d/pass/Outline.hx	/^		var tmp = ctx.textures.allocTarget(src.name + "OutlineTmp", src.width, src.height, false, src./;"	v
tmp	heaps/h3d/pass/PassList.hx	/^		var tmp = o;$/;"	v
tmp	heaps/h3d/scene/Mesh.hx	/^		var tmp = primitive.getBounds().clone();$/;"	v
tmp	heaps/h3d/scene/MeshBatch.hx	/^				var tmp = haxe.io.Bytes.alloc(4 * instanceCount);$/;"	v
tmp	heaps/h3d/shader/Base2d.hx	/^			var tmp = vec3(absolutePosition.xy, 1);$/;"	v
tmp	heaps/hxd/BitmapData.hx	/^				var tmp = x0;$/;"	v
tmp	heaps/hxd/BitmapData.hx	/^				var tmp = y0;$/;"	v
tmp	heaps/hxd/Math.hx	/^			var tmp = a[x];$/;"	v
tmp	heaps/hxd/Rand.hx	/^			var tmp = a[x];$/;"	v
tmp	heaps/hxd/WaitEvent.hx	/^		function tmp(dt:Float) {$/;"	f
tmp	heaps/hxd/clipper/Clipper.hx	/^				var tmp:OutPt = pp;$/;"	v
tmp	heaps/hxd/clipper/Clipper.hx	/^			var tmp = seg1a;$/;"	v
tmp	heaps/hxd/clipper/Clipper.hx	/^			var tmp = seg2a;$/;"	v
tmp	heaps/hxd/clipper/Clipper.hx	/^		var tmp = e.topX;$/;"	v
tmp	heaps/hxd/clipper/Clipper.hx	/^            var tmp = m_IntersectList[i];$/;"	v
tmp	heaps/hxd/clipper/Clipper.hx	/^          var tmp = c.Minkowski(pattern, pols[i], true);$/;"	v
tmp	heaps/hxd/fmt/fbx/Geometry.hx	/^		var tmp = new h3d.col.Point();$/;"	v
tmp	heaps/hxd/fmt/fbx/HMDOut.hx	/^					var tmp = jo.transPos.clone();$/;"	v
tmp	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var tmp = Sys.getEnv("TMPDIR");$/;"	v
tmp	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var tmp = new h3d.col.Point();$/;"	v
tmp	heaps/hxd/fmt/fbx/HMDOut.hx	/^	var tmp = haxe.io.Bytes.alloc(4);$/;"	v
tmp	heaps/hxd/fmt/fbx/Parser.hx	/^		var tmp = token;$/;"	v
tmp	heaps/hxd/impl/CacheAllocator.hx	/^		var tmp = available;$/;"	v
tmp	heaps/hxd/poly2tri/SweepContext.hx	/^		var tmp = [t];$/;"	v
tmp	heaps/hxd/snd/NativeChannel.hx	/^		var tmp = front;$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^					var tmp = e1;$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^				var tmp = allocReg(TMat4);$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^				var tmp = allocReg(TVec(2,VFloat));$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^				var tmp = allocReg(TVec(3,VFloat));$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^			var tmp = allocReg(TFloat);$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^			var tmp = allocReg(a.t);$/;"	v
tmp	heaps/hxsl/AgalOut.hx	/^			var tmp = allocReg(e2.t);$/;"	v
tmp	heaps/hxsl/GlslOut.hx	/^			var tmp = buf;$/;"	v
tmp	heaps/hxsl/GlslOut.hx	/^		var tmp = buf;$/;"	v
tmp	heaps/hxsl/HlslOut.hx	/^			var tmp = buf;$/;"	v
tmp	heaps/hxsl/HlslOut.hx	/^		var tmp = buf;$/;"	v
tmpA	heaps/h2d/Object.hx	/^				var tmpA = scaleX * cr;$/;"	v
tmpA	heaps/h2d/Object.hx	/^			var tmpA = this.matA * f1.x + this.matB * f1.y;$/;"	v
tmpA	heaps/h2d/RenderContext.hx	/^			var tmpA = obj.matA * f1.x + obj.matB * f1.y;$/;"	v
tmpA	heaps/h2d/RenderContext.hx	/^		var tmpA = viewA;$/;"	v
tmpA	heaps/h2d/Scene.hx	/^			var tmpA = this.matA * f1.x + this.matB * f1.y;$/;"	v
tmpB	heaps/h2d/Object.hx	/^				var tmpB = scaleX * sr;$/;"	v
tmpB	heaps/h2d/Object.hx	/^			var tmpB = this.matA * f2.x + this.matB * f2.y;$/;"	v
tmpB	heaps/h2d/RenderContext.hx	/^			var tmpB = obj.matA * f2.x + obj.matB * f2.y;$/;"	v
tmpB	heaps/h2d/RenderContext.hx	/^		var tmpB = viewB;$/;"	v
tmpB	heaps/h2d/Scene.hx	/^			var tmpB = this.matA * f2.x + this.matB * f2.y;$/;"	v
tmpBounds	heaps/h2d/Flow.hx	/^		var tmpBounds = tmpBounds;$/;"	v
tmpBounds	heaps/h2d/Flow.hx	/^	var tmpBounds = new h2d.col.Bounds();$/;"	v
tmpBounds	heaps/h2d/RenderContext.hx	/^	public var tmpBounds = new h2d.col.Bounds();$/;"	v
tmpBounds	heaps/h3d/prim/Instanced.hx	/^	var tmpBounds : h3d.col.Bounds;$/;"	v
tmpBuf	heaps/h2d/SpriteBatch.hx	/^	var tmpBuf : hxd.FloatBuffer;$/;"	v
tmpBuf	heaps/h3d/parts/Particles.hx	/^	var tmpBuf : hxd.FloatBuffer;$/;"	v
tmpBuf	heaps/h3d/prim/BigPrimitive.hx	/^		var tmpBuf : hl.BytesAccess<hxd.impl.Float32> = hl.Bytes.getArray(tmpBuf.getNative());$/;"	v
tmpBuf	heaps/h3d/prim/BigPrimitive.hx	/^		var tmpBuf = tmpBuf;$/;"	v
tmpBuf	heaps/h3d/prim/BigPrimitive.hx	/^	var tmpBuf : hxd.FloatBuffer;$/;"	v
tmpBuf	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var tmpBuf = new hxd.impl.TypedArray.Float32Array(stride);$/;"	v
tmpBuf	heaps/hxd/net/Socket.hx	/^	var tmpBuf : haxe.io.Bytes;$/;"	v
tmpBuf	heaps/hxd/net/Socket.hx	/^	var tmpBuf : js.node.Buffer;$/;"	v
tmpBuffer	heaps/hxd/snd/NativeChannel.hx	/^	var tmpBuffer : haxe.io.Float32Array;$/;"	v
tmpBytes	heaps/hxd/snd/openal/Driver.hx	/^	var tmpBytes : haxe.io.Bytes;$/;"	v
tmpC	heaps/h2d/Object.hx	/^				var tmpC = scaleY * -sr;$/;"	v
tmpC	heaps/h2d/Object.hx	/^			var tmpC = this.matC * f1.x + this.matD * f1.y;$/;"	v
tmpC	heaps/h2d/RenderContext.hx	/^			var tmpC = obj.matC * f1.x + obj.matD * f1.y;$/;"	v
tmpC	heaps/h2d/RenderContext.hx	/^		var tmpC = viewC;$/;"	v
tmpC	heaps/h2d/Scene.hx	/^			var tmpC = this.matC * f1.x + this.matD * f1.y;$/;"	v
tmpCol	heaps/hxd/res/Gradients.hx	/^			var tmpCol = new h3d.Vector();$/;"	v
tmpCount	heaps/hxsl/AgalOut.hx	/^	var tmpCount : Int;$/;"	v
tmpD	heaps/h2d/Object.hx	/^				var tmpD = scaleY * cr;$/;"	v
tmpD	heaps/h2d/Object.hx	/^			var tmpD = this.matC * f2.x + this.matD * f2.y;$/;"	v
tmpD	heaps/h2d/RenderContext.hx	/^			var tmpD = obj.matC * f2.x + obj.matD * f2.y;$/;"	v
tmpD	heaps/h2d/RenderContext.hx	/^		var tmpD = viewD;$/;"	v
tmpD	heaps/h2d/Scene.hx	/^			var tmpD = this.matC * f2.x + this.matD * f2.y;$/;"	v
tmpDir	heaps/hxd/fs/FileConverter.hx	/^	var tmpDir : String;$/;"	v
tmpDir	heaps/hxd/fs/LocalFileSystem.hx	/^	static var tmpDir : String = null;$/;"	v
tmpFile	heaps/hxd/fs/Convert.hx	/^			var tmpFile = tmpPath.toString();$/;"	v
tmpFile	heaps/hxsl/CacheFileBuilder.hx	/^			var tmpFile = "tmp";$/;"	v
tmpIdx	heaps/h3d/prim/BigPrimitive.hx	/^	var tmpIdx : hxd.IndexBuffer;$/;"	v
tmpLm	heaps/hxd/clipper/Clipper.hx	/^			var tmpLm = m_MinimaList.next;$/;"	v
tmpLm	heaps/hxd/clipper/Clipper.hx	/^			var tmpLm = m_MinimaList;$/;"	v
tmpMat	heaps/h3d/scene/Object.hx	/^	static var tmpMat = new h3d.Matrix();$/;"	v
tmpMat	heaps/h3d/scene/Skin.hx	/^		var tmpMat = TMP_MAT;$/;"	v
tmpMatrix	heaps/h2d/filter/AbstractMask.hx	/^	var tmpMatrix : h2d.col.Matrix;$/;"	v
tmpMatrix	heaps/h3d/anim/SmoothTarget.hx	/^	public var tmpMatrix : h3d.Matrix;$/;"	v
tmpMatrix	heaps/h3d/anim/SmoothTransition.hx	/^	public var tmpMatrix : h3d.Matrix;$/;"	v
tmpMatrix	heaps/hxd/BitmapData.hx	/^	static var tmpMatrix = new flash.geom.Matrix();$/;"	v
tmpOut	heaps/hxsl/CacheFileBuilder.hx	/^			var tmpOut = tmpFile + ".sb";$/;"	v
tmpPath	heaps/hxd/fs/Convert.hx	/^			var tmpPath = new haxe.io.Path(dstPath);$/;"	v
tmpPath	heaps/hxd/fs/Convert.hx	/^		var tmpPath = null;$/;"	v
tmpPoint	heaps/h2d/Object.hx	/^	static var tmpPoint = new h2d.col.Point();$/;"	v
tmpPoint	heaps/hxd/BitmapData.hx	/^	static var tmpPoint = new flash.geom.Point();$/;"	v
tmpPoints	heaps/h2d/Graphics.hx	/^	var tmpPoints : Array<GPoint>;$/;"	v
tmpPoints	heaps/h3d/scene/Graphics.hx	/^	var tmpPoints : Array<GPoint>;$/;"	v
tmpPos	heaps/h2d/ObjectFollower.hx	/^	var tmpPos = new h3d.Vector();$/;"	v
tmpRay	heaps/h3d/col/ObjectCollider.hx	/^		var tmpRay = TMP_RAY;$/;"	v
tmpRay	heaps/h3d/col/TransformCollider.hx	/^		var tmpRay = TMP_RAY;$/;"	v
tmpRect	heaps/hxd/BitmapData.hx	/^	static var tmpRect = new flash.geom.Rectangle();$/;"	v
tmpSize	heaps/h2d/ObjectFollower.hx	/^	var tmpSize : h2d.col.Bounds;$/;"	v
tmpSphere	heaps/h3d/col/Capsule.hx	/^	static var tmpSphere = new Sphere(0., 0., 0., 0.);$/;"	v
tmpSrc	heaps/hxsl/CacheFileBuilder.hx	/^			var tmpSrc = tmpFile + ".hlsl";$/;"	v
tmpSrc	heaps/hxsl/CacheFileBuilder.hx	/^			var tmpSrc = tmpFile + ".pssl";$/;"	v
tmpTex	heaps/h3d/pass/PointShadowMap.hx	/^	var tmpTex : h3d.mat.Texture;$/;"	v
tmpTextures	heaps/h3d/impl/DirectXDriver.hx	/^	var tmpTextures = new Array<h3d.mat.Texture>();$/;"	v
tmpVec	heaps/h3d/scene/Object.hx	/^	static var tmpVec = new h3d.Vector();$/;"	v
tmpVec	heaps/h3d/scene/Skin.hx	/^	static var tmpVec = new h3d.Vector();$/;"	v
tmpVector	heaps/h3d/Engine.hx	/^	var tmpVector = new h3d.Vector();$/;"	v
tmpX	heaps/h2d/Object.hx	/^			var tmpX = this.absX * f1.x + this.absY * f1.y + f1.z;$/;"	v
tmpX	heaps/h2d/RenderContext.hx	/^			var tmpX = obj.absX * f1.x + obj.absY * f1.y + f1.z;$/;"	v
tmpX	heaps/h2d/Scene.hx	/^			var tmpX = this.absX * f1.x + this.absY * f1.y + f1.z;$/;"	v
tmpY	heaps/h2d/Object.hx	/^			var tmpY = this.absX * f2.x + this.absY * f2.y + f2.z;$/;"	v
tmpY	heaps/h2d/RenderContext.hx	/^			var tmpY = obj.absX * f2.x + obj.absY * f2.y + f2.z;$/;"	v
tmpY	heaps/h2d/Scene.hx	/^			var tmpY = this.absX * f2.x + this.absY * f2.y + f2.z;$/;"	v
tmx	heaps/samples/Camera2D.hx	/^		var tmx = Res.tileMap.toMap();$/;"	v
tname	heaps/h2d/Console.hx	/^				var tname = ""+tval;$/;"	v
tnx	heaps/h3d/prim/BigPrimitive.hx	/^					var tnx = nx * cr - ny * sr;$/;"	v
tnx	heaps/h3d/prim/BigPrimitive.hx	/^					var tnx = tx * cr - ty * sr;$/;"	v
tny	heaps/h3d/prim/BigPrimitive.hx	/^					var tny = nx * sr + ny * cr;$/;"	v
tny	heaps/h3d/prim/BigPrimitive.hx	/^					var tny = tx * sr + ty * cr;$/;"	v
to	heaps/h2d/KeyFrames.hx	/^					var to = Std.parseInt(reg.matched(3));$/;"	v
to	heaps/h2d/KeyFrames.hx	/^	var to : Int;$/;"	v
to	heaps/hxd/res/Any.hx	/^	public function to<T:hxd.res.Resource>( c : Class<T> ) : T {$/;"	f
toAdd	heaps/h3d/col/Collider.hx	/^			var toAdd = c.makeDebugObj();$/;"	v
toAgal	heaps/hxsl/AgalOut.hx	/^	public static function toAgal( shader, version ) {$/;"	f
toArray	heaps/hxd/FloatBuffer.hx	/^	@:to inline function toArray() return [for( i in 0...this.pos ) this.array[i]];$/;"	f
toBinary	heaps/hxd/fmt/fbx/Data.hx	/^	public static function toBinary( n : FbxProp ) {$/;"	f
toBitmap	heaps/hxd/fs/LoadedBitmap.hx	/^	public function toBitmap() : hxd.BitmapData {$/;"	f
toBitmap	heaps/hxd/res/Image.hx	/^	public function toBitmap() : hxd.BitmapData {$/;"	f
toBounds	heaps/h2d/col/IBounds.hx	/^	public inline function toBounds( scale = 1. ) : Bounds {$/;"	f
toCircle	heaps/h2d/col/Bounds.hx	/^	public inline function toCircle() {$/;"	f
toColor	heaps/h3d/Vector.hx	/^	public inline function toColor() {$/;"	f
toColorHSL	heaps/h3d/Vector.hx	/^	public function toColorHSL() {$/;"	f
toDDS	heaps/hxd/Pixels.hx	/^	public function toDDS() {$/;"	f
toDDSLayers	heaps/hxd/Pixels.hx	/^	public static function toDDSLayers( pixels : Array<Pixels>, isCubeMap = false ) {$/;"	f
toEuler	heaps/h3d/Quat.hx	/^	public function toEuler() {$/;"	f
toF32Array	heaps/hxd/FloatBuffer.hx	/^	@:to inline function toF32Array() return this.array;$/;"	f
toFloat	heaps/hxd/fmt/fbx/Data.hx	/^	public static function toFloat( n : FbxProp ) {$/;"	f
toFloat	heaps/hxsl/Checker.hx	/^	function toFloat( e : TExpr ) {$/;"	f
toFloats	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function toFloats( n : FbxNode ) {$/;"	f
toFont	heaps/hxd/res/BDFFont.hx	/^	public function toFont() : h2d.Font {$/;"	f
toFont	heaps/hxd/res/BitmapFont.hx	/^	public function toFont() : h2d.Font {$/;"	f
toHMD	heaps/hxd/fmt/fbx/HMDOut.hx	/^	public function toHMD( filePath : String, includeGeometry : Bool ) : Data {$/;"	f
toHmd	heaps/hxd/res/Model.hx	/^	public function toHmd() : hxd.fmt.hmd.Library {$/;"	f
toIBounds	heaps/h2d/col/Bounds.hx	/^	public inline function toIBounds( scale = 1. ) : IBounds {$/;"	f
toIPoint	heaps/h2d/col/Point.hx	/^	public inline function toIPoint( scale = 1. ) {$/;"	f
toIPolygon	heaps/h2d/col/Polygon.hx	/^	public function toIPolygon( scale = 1. ) : IPolygon {$/;"	f
toIPolygons	heaps/h2d/col/Polygons.hx	/^	public function toIPolygons( scale = 1. ) : IPolygons {$/;"	f
toImage	heaps/hxd/res/Any.hx	/^	public function toImage() {$/;"	f
toInt	heaps/h3d/scene/Object.hx	/^	public inline function toInt() return this;$/;"	f
toInt	heaps/hxd/Pixels.hx	/^	public inline function toInt() return this;$/;"	f
toInt	heaps/hxd/fmt/fbx/Data.hx	/^	public static function toInt( n : FbxProp ) {$/;"	f
toInt	heaps/hxd/fmt/hmd/Data.hx	/^	public inline function toInt() {$/;"	f
toInt	heaps/hxd/fmt/tiff/Data.hx	/^	public inline function toInt() return this;$/;"	f
toInt	heaps/hxd/impl/Allocator.hx	/^	public inline function toInt() : Int {$/;"	f
toInt	heaps/hxd/res/Image.hx	/^	inline function toInt() return this;$/;"	f
toInt	heaps/hxd/snd/openal/Emulator.hx	/^	public inline function toInt() return id;$/;"	f
toInt	heaps/hxsl/Flatten.hx	/^	function toInt( e : TExpr ) {$/;"	f
toInt	heaps/hxsl/Globals.hx	/^	public inline function toInt() {$/;"	f
toMap	heaps/hxd/res/TiledMap.hx	/^	public function toMap() : TiledMapData {$/;"	f
toMatrix	heaps/h3d/Quat.hx	/^	public function toMatrix( ?m : h3d.Matrix ) {$/;"	f
toMatrix	heaps/h3d/anim/LinearAnimation.hx	/^	public function toMatrix() {$/;"	f
toMatrix	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function toMatrix(leftHand) {$/;"	f
toMatrix	heaps/hxd/fmt/hmd/Data.hx	/^	public function toMatrix(postScale=false) {$/;"	f
toMatrix2D	heaps/h3d/Matrix.hx	/^	public inline function toMatrix2D( ?m : h2d.col.Matrix ) {$/;"	f
toMerge	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var toMerge = [], mergeGroups = new Map<Int,Array<FbxNode>>();$/;"	v
toMesh	heaps/h3d/scene/Object.hx	/^	public function toMesh() : Mesh {$/;"	f
toModel	heaps/hxd/res/Any.hx	/^	public function toModel() {$/;"	f
toNative	heaps/hxd/BitmapData.hx	/^	public inline function toNative() : BitmapInnerData {$/;"	f
toNative	heaps/hxd/fs/LoadedBitmap.hx	/^	public inline function toNative() : LoadedBitmapData {$/;"	f
toPNG	heaps/hxd/BitmapData.hx	/^	public function toPNG() {$/;"	f
toPNG	heaps/hxd/Pixels.hx	/^	public function toPNG( ?level = 9 ) {$/;"	f
toPoint	heaps/h2d/col/IPoint.hx	/^	public inline function toPoint( scale = 1. ) {$/;"	f
toPoint	heaps/h3d/Vector.hx	/^	public inline function toPoint() {$/;"	f
toPolygon	heaps/h2d/col/IPolygon.hx	/^	public function toPolygon( scale = 1. ) : Polygon {$/;"	f
toPolygon	heaps/h2d/col/Segments.hx	/^	public function toPolygon() : Polygon {$/;"	f
toPolygons	heaps/h2d/col/IPolygons.hx	/^	public function toPolygons( scale = 1. ) : Polygons {$/;"	f
toPolygons	heaps/hxd/clipper/Clipper.hx	/^	public function toPolygons(polygons:IPolygons) {$/;"	f
toPrefab	heaps/hxd/res/Any.hx	/^	public function toPrefab() {$/;"	f
toQuads	heaps/h2d/impl/BatchDrawState.hx	/^		inline function toQuads( count : Int ) return count >> 1;$/;"	f
toQuaternion	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public function toQuaternion(leftHand) {$/;"	f
toSdfFont	heaps/hxd/res/BitmapFont.hx	/^	public function toSdfFont(?size:Int, channel : h2d.Font.SDFChannel = 0, alphaCutoff : Float = 0/;"	f
toSegments	heaps/h2d/col/Polygon.hx	/^	public function toSegments() : Segments {$/;"	f
toSound	heaps/hxd/res/Any.hx	/^	public function toSound() {$/;"	f
toSphere	heaps/h3d/col/Bounds.hx	/^	public inline function toSphere() {$/;"	f
toString	heaps/h2d/Drawable.hx	/^			var toString = hxsl.Printer.shaderToString.bind(_, true);$/;"	v
toString	heaps/h2d/Object.hx	/^	function toString() {$/;"	f
toString	heaps/h2d/Tile.hx	/^	public function toString() : String {$/;"	f
toString	heaps/h2d/col/Bounds.hx	/^	public function toString() : String {$/;"	f
toString	heaps/h2d/col/Circle.hx	/^	public function toString() {$/;"	f
toString	heaps/h2d/col/IBounds.hx	/^	public function toString() {$/;"	f
toString	heaps/h2d/col/IPoint.hx	/^	public function toString() : String {$/;"	f
toString	heaps/h2d/col/Matrix.hx	/^	public function toString() {$/;"	f
toString	heaps/h2d/col/Point.hx	/^	public function toString() : String {$/;"	f
toString	heaps/h2d/col/Polynomial.hx	/^	function toString() {$/;"	f
toString	heaps/h2d/impl/PointApi.hx	/^	function toString() : String;$/;"	f
toString	heaps/h3d/Matrix.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/Quat.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/Vector.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/anim/Animation.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Bounds.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Capsule.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/FPoint.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/IPoint.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Plane.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Point.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Ray.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Seg.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/col/Sphere.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/mat/Pass.hx	/^			var toString = hxsl.Printer.shaderToString.bind(_, true);$/;"	v
toString	heaps/h3d/mat/Texture.hx	/^	function toString() {$/;"	f
toString	heaps/h3d/mat/TextureArray.hx	/^	override function toString() {$/;"	f
toString	heaps/h3d/prim/Primitive.hx	/^	public function toString() {$/;"	f
toString	heaps/h3d/prim/UV.hx	/^	function toString() {$/;"	f
toString	heaps/h3d/scene/Object.hx	/^	public function toString() {$/;"	f
toString	heaps/hxd/Direction.hx	/^	inline function toString() {$/;"	f
toString	heaps/hxd/Event.hx	/^	public function toString() {$/;"	f
toString	heaps/hxd/Pixels.hx	/^	public function toString() {$/;"	f
toString	heaps/hxd/fmt/fbx/Data.hx	/^	public static function toString( n : FbxProp ) {$/;"	f
toString	heaps/hxd/fmt/hmd/Data.hx	/^	public function toString() {$/;"	f
toString	heaps/hxd/fmt/hmd/Dump.hx	/^	public static function toString(hmd) {$/;"	f
toString	heaps/hxd/fs/NotFound.hx	/^	@:keep function toString() {$/;"	f
toString	heaps/hxd/poly2tri/Edge.hx	/^	public function toString()$/;"	f
toString	heaps/hxd/poly2tri/Point.hx	/^	public function toString()$/;"	f
toString	heaps/hxd/poly2tri/Triangle.hx	/^	public function toString():String$/;"	f
toString	heaps/hxd/res/Resource.hx	/^	function toString() {$/;"	f
toString	heaps/hxsl/Ast.hx	/^	public function toString() {$/;"	f
toString	heaps/hxsl/Ast.hx	/^	public static function toString( e : TExpr ) {$/;"	f
toString	heaps/hxsl/Ast.hx	/^	public static function toString( g : TGlobal ) {$/;"	f
toString	heaps/hxsl/Ast.hx	/^	public static function toString( s : ShaderData ) {$/;"	f
toString	heaps/hxsl/Ast.hx	/^	public static function toString( t : Type ) {$/;"	f
toString	heaps/hxsl/DynamicShader.hx	/^	override function toString() {$/;"	f
toString	heaps/hxsl/Printer.hx	/^	public static function toString( e : TExpr, varId = false ) {$/;"	f
toString	heaps/hxsl/Shader.hx	/^	public function toString() {$/;"	f
toString	heaps/samples/Network.hx	/^	public function toString() {$/;"	f
toTarget	heaps/h3d/scene/CameraController.hx	/^	public function toTarget() {$/;"	f
toText	heaps/hxd/res/Any.hx	/^	public function toText() {$/;"	f
toTexture	heaps/hxd/res/Any.hx	/^	public function toTexture() {$/;"	f
toTexture	heaps/hxd/res/Gradients.hx	/^	public function toTexture(name : String, ?resolution = 256) : h3d.mat.Texture {$/;"	f
toTexture	heaps/hxd/res/Image.hx	/^	public function toTexture() : h3d.mat.Texture {$/;"	f
toTextureMap	heaps/hxd/res/Gradients.hx	/^	public function toTextureMap(?resolution = 256) : Map<String, h3d.mat.Texture> {$/;"	f
toTile	heaps/hxd/res/Any.hx	/^	public function toTile() {$/;"	f
toTile	heaps/hxd/res/Image.hx	/^	public function toTile() : h2d.Tile {$/;"	f
toTileMap	heaps/hxd/res/Gradients.hx	/^	public function toTileMap(?resolution = 256) : Map<String, h2d.Tile> {$/;"	f
toTris	heaps/h2d/impl/BatchDrawState.hx	/^		inline function toTris( count : Int ) return Std.int(count \/ 3);$/;"	f
toType	heaps/hxsl/Ast.hx	/^	public static function toType( t : VecType ) {$/;"	f
toVector	heaps/h3d/col/Point.hx	/^	public inline function toVector() {$/;"	f
toVector	heaps/hxd/Pixels.hx	/^	public function toVector() : haxe.ds.Vector<Int> {$/;"	f
to_frame	heaps/hxd/fmt/kframes/Data.hx	/^	@:optional var to_frame : Int;$/;"	v
tobx	heaps/h2d/Graphics.hx	/^		var tobx = bx - ax, toby = by - ay;$/;"	v
tocx	heaps/h2d/Graphics.hx	/^		var tocx = cx - bx, tocy = cy - by;$/;"	v
todo	heaps/hxsl/Splitter.hx	/^		var todo = [];$/;"	v
todx	heaps/h2d/Graphics.hx	/^		var todx = dx - cx, tody = dy - cy;$/;"	v
token	heaps/hxd/fmt/fbx/Parser.hx	/^	var token : Null<Token>;$/;"	v
tokenStr	heaps/hxd/fmt/fbx/Parser.hx	/^	function tokenStr( t : Token ) {$/;"	f
tone	heaps/h3d/scene/pbr/Renderer.hx	/^	var tone : TonemapMap;$/;"	v
toneMode	heaps/h3d/scene/pbr/Renderer.hx	/^	public var toneMode : TonemapMap = Reinhard;$/;"	v
tonemap	heaps/h3d/scene/pbr/Renderer.hx	/^	var tonemap = new h3d.pass.ScreenFx(new h3d.shader.pbr.ToneMapping());$/;"	v
top	heaps/h2d/Scene.hx	/^					var top = l == 0 ? 0 : layersIndexes[l - 1];$/;"	v
top	heaps/h2d/Scene.hx	/^					var top = layersIndexes[l++];$/;"	v
top	heaps/hxd/clipper/Clipper.hx	/^	public var top(get, set) : IPoint;$/;"	v
top	heaps/hxd/clipper/Rect.hx	/^	public var top : Int;$/;"	v
topParent	heaps/h3d/scene/Skin.hx	/^			var topParent : Object = this;$/;"	v
topX	heaps/hxd/clipper/Clipper.hx	/^	public var topX : Int;$/;"	v
topY	heaps/hxd/clipper/Clipper.hx	/^			var topY = PopScanbeam();$/;"	v
topY	heaps/hxd/clipper/Clipper.hx	/^	public var topY : Int;$/;"	v
toqx	heaps/h2d/Graphics.hx	/^			var toqx = qx - px, toqy = qy - py;$/;"	v
torx	heaps/h2d/Graphics.hx	/^			var torx = rx - qx, tory = ry - qy;$/;"	v
tot	heaps/h3d/anim/Skin.hx	/^					var tot = count + ((p1.joints.length + p2.joints.length - count) >> 1);$/;"	v
tot	heaps/h3d/pass/Blur.hx	/^		var tot = 0.;$/;"	v
tot	heaps/h3d/pass/ShaderManager.hx	/^			var tot = 0;$/;"	v
tot	heaps/hxd/Perlin.hx	/^		var tot = 0.;$/;"	v
tot	heaps/hxd/fmt/pak/FileSystem.hx	/^		var tot = 0;$/;"	v
tot	heaps/hxd/fmt/spine/Library.hx	/^					var tot = v.vw0 + v.vw1 + v.vw2;$/;"	v
tot	heaps/hxd/fs/FileInput.hx	/^		var tot = 0;$/;"	v
tot	heaps/hxd/fs/LocalFileSystem.hx	/^		var tot = f.readBytes(out, outPos, len);$/;"	v
totSize	heaps/hxd/res/Image.hx	/^				var totSize = 0;$/;"	v
totTime	heaps/h3d/shader/GpuParticle.hx	/^				var totTime = props.time + time;$/;"	v
total	heaps/h2d/Object.hx	/^		var total = new h2d.col.Bounds();$/;"	v
total	heaps/h3d/impl/GlDriver.hx	/^		var total = (needed + 7) & ~7; \/\/ align on 8 bytes$/;"	v
total	heaps/h3d/impl/MemoryManager.hx	/^			var total = b.vertices;$/;"	v
total	heaps/h3d/impl/MemoryManager.hx	/^		var total = 0, free = 0, count = 0;$/;"	v
total	heaps/hxd/clipper/Clipper.hx	/^	public var total(get, never) : Int;$/;"	v
total	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var total = 0.;$/;"	v
totalCount	heaps/h2d/impl/BatchDrawState.hx	/^	public var totalCount(default, null) : Int;$/;"	v
totalFrames	heaps/h3d/shader/AnimatedTexture.hx	/^		@param var totalFrames : Float;$/;"	v
totalFrames	heaps/h3d/shader/GpuParticle.hx	/^		@param var totalFrames : Float;$/;"	v
totalFrames	heaps/h3d/shader/UVAnim.hx	/^		@param var totalFrames : Float;$/;"	v
totalReadBytes	heaps/hxd/fmt/pak/FileSystem.hx	/^	public var totalReadBytes = 0;$/;"	v
totalReadCount	heaps/hxd/fmt/pak/FileSystem.hx	/^	public var totalReadCount = 0;$/;"	v
totalSample	heaps/h3d/shader/PointShadow.hx	/^						var totalSample = samplePerDim * samplePerDim * samplePerDim;$/;"	v
totalSamples	heaps/hxd/snd/Mp3Data.hx	/^		var totalSamples : Int = 0;$/;"	v
totalTime	heaps/h3d/impl/Benchmark.hx	/^			var totalTime = 0.;$/;"	v
totalTime	heaps/h3d/impl/Benchmark.hx	/^		var totalTime = 0.;$/;"	v
totalVertices	heaps/h3d/Buffer.hx	/^	public function totalVertices() {$/;"	f
totalWeight	heaps/h3d/scene/pbr/Environment.hx	/^			var totalWeight = 1e-10;$/;"	v
totx	heaps/h2d/Graphics.hx	/^			var totx = tx - sx, toty = ty - sy;$/;"	v
touchId	heaps/hxd/Event.hx	/^	public var touchId : Int;$/;"	v
tout	heaps/h2d/filter/ColorMatrix.hx	/^		var tout = ctx.textures.allocTileTarget("colorMatrixOut", t);$/;"	v
tp	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var tp = 0, rp = 0, sp = 0, ap = 0, uvp = 0, fovp = 0, rollp = 0;$/;"	v
tpath	heaps/hxd/res/FileTree.hx	/^		var tpath = { pack : ["hxd", "_res"], name : name, params : [] };$/;"	v
tprops	heaps/h2d/CdbLevel.hx	/^		var tprops = Reflect.field(levelsProps.tileSets, ldat.file);$/;"	v
tprops	heaps/h2d/CdbLevel.hx	/^		var tprops = [for( p in tileset.tilesProps ) p == null ? 0 : Reflect.field(p, name)];$/;"	v
tprops	heaps/h2d/CdbLevel.hx	/^		var tprops = [for( p in tileset.tilesProps ) p == null ? null : Reflect.field(p, name)];$/;"	v
tr	heaps/h2d/RenderContext.hx	/^			var tr = (tile.width > tile.height ? tile.width : tile.height) * 1.5 * hxd.Math.max(hxd.Math./;"	v
tr	heaps/h3d/Quat.hx	/^		var tr = ax.x + ay.y + az.z;$/;"	v
tr	heaps/h3d/Quat.hx	/^		var tr = m._11 + m._22 + m._33;$/;"	v
tr	heaps/h3d/mat/BigTexture.hx	/^	public var tr : QuadTree;$/;"	v
tracing_can_start	heaps/hxd/BitmapData.hx	/^				var tracing_can_start = false;$/;"	v
trans	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var trans = m.getPosition().toPoint();$/;"	v
trans	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var trans : Null<Point>;$/;"	v
transPos	heaps/h3d/anim/Skin.hx	/^	public var transPos : h3d.Matrix; \/\/ inverse pose matrix$/;"	v
transPos	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var transPos = h3d.Matrix.L(subDef.get("Transform").getFloats());$/;"	v
transPos	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var transPos : h3d.Matrix;$/;"	v
transform	heaps/h2d/col/Matrix.hx	/^	public inline function transform( pt : Point ) {$/;"	f
transform	heaps/h2d/col/Point.hx	/^	public inline function transform( m : Matrix ) {$/;"	f
transform	heaps/h2d/col/Polygon.hx	/^	public function transform(mat: h2d.col.Matrix) {$/;"	f
transform	heaps/h2d/impl/PointApi.hx	/^	function transform( m : M ) : Void;$/;"	f
transform	heaps/h3d/Vector.hx	/^	public inline function transform( m : Matrix ) {$/;"	f
transform	heaps/h3d/col/Bounds.hx	/^	public function transform( m : Matrix ) {$/;"	f
transform	heaps/h3d/col/Frustum.hx	/^	public function transform( m : h3d.Matrix ) @:privateAccess {$/;"	f
transform	heaps/h3d/col/Plane.hx	/^	public function transform( m : h3d.Matrix ) {$/;"	f
transform	heaps/h3d/col/Point.hx	/^	public inline function transform( m : Matrix ) {$/;"	f
transform	heaps/h3d/col/Polygon.hx	/^	public function transform( m : h3d.Matrix ) {$/;"	f
transform	heaps/h3d/col/Polygon.hx	/^	public function transform( m : h3d.Matrix ){$/;"	f
transform	heaps/h3d/col/Ray.hx	/^	public inline function transform( m : h3d.Matrix ) {$/;"	f
transform	heaps/h3d/col/SkinCollider.hx	/^	var transform : PolygonBuffer;$/;"	v
transform	heaps/h3d/col/TransformCollider.hx	/^	public function transform( m : Matrix ) {$/;"	f
transform	heaps/h3d/prim/Quads.hx	/^	public function transform( m : h3d.Matrix ) {$/;"	f
transform	heaps/h3d/scene/World.hx	/^	public var transform : h3d.Matrix;$/;"	v
transform	heaps/h3d/shader/GpuParticle.hx	/^		@param var transform : Mat3x4;$/;"	v
transform2x2	heaps/h2d/col/Point.hx	/^	public inline function transform2x2( m : Matrix ) {$/;"	f
transform3D	heaps/h3d/parts/GpuParticles.hx	/^	public var transform3D : Bool				= false;$/;"	v
transform3D	heaps/h3d/shader/GpuParticle.hx	/^		@const var transform3D : Bool;$/;"	v
transform3x3	heaps/h3d/Vector.hx	/^	public inline function transform3x3( m : Matrix ) {$/;"	f
transform3x3	heaps/h3d/col/Bounds.hx	/^	public function transform3x3( m : Matrix ) {$/;"	f
transform3x3	heaps/h3d/col/Frustum.hx	/^	public function transform3x3( m : h3d.Matrix ) @:privateAccess {$/;"	f
transform3x3	heaps/h3d/col/Plane.hx	/^	public function transform3x3( m : h3d.Matrix ) {$/;"	f
transform3x3	heaps/h3d/col/Point.hx	/^	public inline function transform3x3( m : Matrix ) {$/;"	f
transform3x4	heaps/h3d/Vector.hx	/^	public inline function transform3x4( m : Matrix ) {$/;"	f
transformInverseTranspose	heaps/h3d/col/Plane.hx	/^	inline function transformInverseTranspose(m:h3d.Matrix) {$/;"	f
transformed	heaps/h2d/col/Point.hx	/^	public inline function transformed( m : Matrix ) {$/;"	f
transformed	heaps/h2d/impl/PointApi.hx	/^	function transformed( m : M ) : Point;$/;"	f
transformed	heaps/h3d/Vector.hx	/^	public inline function transformed( m : Matrix ) {$/;"	f
transformed	heaps/h3d/col/Point.hx	/^	public inline function transformed( m : Matrix ) {$/;"	f
transformed2x2	heaps/h2d/col/Point.hx	/^	public inline function transformed2x2( m : Matrix ) {$/;"	f
transformed3x3	heaps/h3d/Vector.hx	/^	public inline function transformed3x3( m : Matrix ) {$/;"	f
transformed3x3	heaps/h3d/col/Point.hx	/^	public inline function transformed3x3( m : Matrix ) {$/;"	f
transformed3x4	heaps/h3d/Vector.hx	/^	public inline function transformed3x4( m : Matrix ) {$/;"	f
transformedNormal	heaps/h3d/shader/BaseMesh.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/CubeMap.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/DirLight.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/LineShader.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/NormalMap.hx	/^        var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/ParticleShader.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/PointLight.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/SkinBase.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/pbr/CubeLod.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedNormal	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var transformedNormal : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/BaseMesh.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/DirLight.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/DirShadow.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/LineShader.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/NormalMap.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/ParticleShader.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/PointLight.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/PointShadow.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/Shadow.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/SkinBase.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/SpotShadow.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/pbr/Light.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedPosition	heaps/h3d/shader/pbr/PropsImport.hx	/^		var transformedPosition : Vec3;$/;"	v
transformedTangent	heaps/h3d/shader/NormalMap.hx	/^		@var var transformedTangent : Vec4;$/;"	v
transformedTangent	heaps/h3d/shader/Parallax.hx	/^		var transformedTangent : Vec4;$/;"	v
transformedTangent	heaps/h3d/shader/Skin.hx	/^		var transformedTangent : Vec4;$/;"	v
transformedTangent	heaps/h3d/shader/SkinTangent.hx	/^		var transformedTangent : Vec4;$/;"	v
transformedTangent	heaps/h3d/shader/VolumeDecal.hx	/^		var transformedTangent : Vec4;$/;"	v
transformedTangent	heaps/h3d/shader/pbr/VolumeDecal.hx	/^		var transformedTangent : Vec4;$/;"	v
transitionColorF	heaps/h2d/domkit/BaseComponents.hx	/^	function transitionColorF( v1 : h3d.Vector, v2 : h3d.Vector, t : Float ) : h3d.Vector {$/;"	f
transitionFlowBackground	heaps/h2d/domkit/BaseComponents.hx	/^	function transitionFlowBackground( bg1 : FlowBg, bg2 : FlowBg, v : Float ) : FlowBg {$/;"	f
translate	heaps/h2d/col/Matrix.hx	/^	public inline function translate( x : Float, y : Float ) {$/;"	f
translate	heaps/h3d/Matrix.hx	/^	public function translate( x = 0., y = 0., z = 0. ) {$/;"	f
translate	heaps/h3d/prim/Polygon.hx	/^	public function translate( dx, dy, dz ) {$/;"	f
translate	heaps/h3d/prim/Quads.hx	/^	public function translate( dx : Float, dy : Float, dz : Float ) {$/;"	f
translate	heaps/hxd/fmt/spine/Data.hx	/^	public var translate : haxe.ds.Vector<Float>;$/;"	v
translate	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var translate : Array<{ time : Float, x : Float, y : Float, ?curve : JCurve }>;$/;"	v
translateX	heaps/h2d/col/Matrix.hx	/^	public inline function translateX( x : Float ) {$/;"	f
translateY	heaps/h2d/col/Matrix.hx	/^	public inline function translateY( y : Float ) {$/;"	f
translatedX	heaps/h3d/prim/Polygon.hx	/^	var translatedX = 0.;$/;"	v
translatedY	heaps/h3d/prim/Polygon.hx	/^	var translatedY = 0.;$/;"	v
translatedZ	heaps/h3d/prim/Polygon.hx	/^	var translatedZ = 0.;$/;"	v
transp	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var transp = getSpecChild(m, "TransparentColor");$/;"	v
transpState	heaps/h2d/ZGroup.hx	/^	var transpState : State;$/;"	v
transparencyStops	heaps/hxd/fmt/grd/Data.hx	/^	public var transparencyStops : Array<TransparencyStop>;$/;"	v
transpos	heaps/hxd/fmt/hmd/Data.hx	/^	public var transpos : Null<Position>;$/;"	v
transpose	heaps/h3d/Matrix.hx	/^	public function transpose() {$/;"	f
tree	heaps/hxd/res/FileTree.hx	/^		var tree = scan();$/;"	v
treeRoot	heaps/h2d/domkit/Style.hx	/^			var treeRoot = new h2d.Flow(inspectPreview);$/;"	v
tres	heaps/h3d/prim/ModelCache.hx	/^		var tres;$/;"	v
tri	heaps/h3d/impl/InstanceBuffer.hx	/^			var tri = Std.int((idxCount * instCount) \/ 3);$/;"	v
triCount	heaps/h2d/TileGroup.hx	/^	override public function triCount() {$/;"	f
triCount	heaps/h3d/col/PolygonBuffer.hx	/^	var triCount : Int;$/;"	v
triCount	heaps/h3d/impl/InstanceBuffer.hx	/^	public var triCount(default,null) : Int = 0;$/;"	v
triCount	heaps/h3d/prim/BigPrimitive.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/DynamicPrimitive.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/HMDModel.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/Plane2D.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/Polygon.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/Primitive.hx	/^	public function triCount() {$/;"	f
triCount	heaps/h3d/prim/Quads.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/prim/RawPrimitive.hx	/^	override function triCount() {$/;"	f
triCount	heaps/h3d/scene/World.hx	/^				var triCount = Std.int(g.indexCount\/3);$/;"	v
triIndexes	heaps/h3d/impl/MemoryManager.hx	/^	public var triIndexes(default,null) : Indexes;$/;"	v
triIndexes	heaps/h3d/scene/World.hx	/^				var triIndexes = new Array<Int>();$/;"	v
triPlanes	heaps/h3d/col/Polygon.hx	/^	var triPlanes : TriPlane;$/;"	v
triPos	heaps/hxd/fmt/hmd/Library.hx	/^			var triPos = [], pos = 0;$/;"	v
triZ	heaps/h3d/scene/World.hx	/^				var triZ = new Array<Float>();$/;"	v
triangle	heaps/hxd/poly2tri/Node.hx	/^	public var triangle:Triangle;$/;"	v
triangle	heaps/hxd/poly2tri/Sweep.hx	/^		var triangle = new Triangle(node.prev.point, node.point, node.next.point);$/;"	v
triangle	heaps/hxd/poly2tri/Sweep.hx	/^		var triangle = new Triangle(point, node.point, node.next.point);$/;"	v
triangle	heaps/hxd/poly2tri/SweepContext.hx	/^		var triangle = new Triangle(points[0], this.tail, this.head);$/;"	v
triangleGroups	heaps/h3d/anim/Skin.hx	/^	public var triangleGroups : haxe.ds.Vector<Int>;$/;"	v
triangleShape	heaps/samples/Interactive2D.hx	/^	var triangleShape : Triangle;$/;"	v
triangles	heaps/h2d/col/Delaunay.hx	/^		var triangles = [];$/;"	v
triangles	heaps/h3d/anim/Skin.hx	/^	public var triangles : Array<Int>;$/;"	v
triangles	heaps/hxd/earcut/Earcut.hx	/^	var triangles : Array<Int>;$/;"	v
triangles	heaps/hxd/fmt/spine/Data.hx	/^	public var triangles : Array<Int>;$/;"	v
triangles	heaps/hxd/fmt/spine/JsonData.hx	/^	var triangles : Array<Int>;$/;"	v
triangles	heaps/hxd/poly2tri/SweepContext.hx	/^	public var triangles:Array<Triangle>;$/;"	v
triangulate	heaps/h2d/col/Delaunay.hx	/^	public static function triangulate( points:Array<Point> ) : Array<DelaunayTriangle> {$/;"	f
triangulate	heaps/hxd/earcut/Earcut.hx	/^	@:generic public function triangulate < T: { x:Float, y:Float } > ( points : Array<T>, ?holes :/;"	f
triangulate	heaps/hxd/poly2tri/Sweep.hx	/^	public function triangulate()$/;"	f
triangulateNode	heaps/hxd/earcut/Earcut.hx	/^	public function triangulateNode( root : EarNode, useZOrder ) {$/;"	f
triangulated	heaps/hxd/poly2tri/VisiblePolygon.hx	/^	var triangulated:Bool;$/;"	v
trimax	heaps/h2d/col/Delaunay.hx	/^		var trimax = 4 * nv;$/;"	v
tris	heaps/hxd/poly2tri/VisiblePolygon.hx	/^		var tris = new Array();$/;"	v
tryUnify	heaps/hxsl/Checker.hx	/^	function tryUnify( t1 : Type, t2 : Type ) {$/;"	f
tset	heaps/samples/Camera2D.hx	/^		var tset = Res.tiles.toTile();$/;"	v
tshader	heaps/h3d/mat/Material.hx	/^		var tshader = textureShader;$/;"	v
tshader	heaps/h3d/mat/PbrMaterial.hx	/^		var tshader = textureShader;$/;"	v
tsize	heaps/h3d/mat/BigTexture.hx	/^		var tsize = t.getSize();$/;"	v
tsize	heaps/hxsl/Checker.hx	/^			var tsize = 0;$/;"	v
tstr	heaps/h2d/Console.hx	/^				var tstr = haxe.macro.TypeTools.toString(t);$/;"	v
tstring	heaps/hxd/res/DynamicText.hx	/^			var tstring = macro : String;$/;"	v
tsup	heaps/hxsl/Macros.hx	/^							var tsup = csup.t.get();$/;"	v
tt	heaps/h3d/impl/DirectXDriver.hx	/^		var tt = t.t;$/;"	v
tt	heaps/h3d/impl/GlDriver.hx	/^			var tt = t.type;$/;"	v
tt	heaps/h3d/impl/GlDriver.hx	/^		var tt : Texture = { t : tt, width : t.width, height : t.height, internalFmt : GL.RGBA, pixelF/;"	v
tt	heaps/h3d/impl/GlDriver.hx	/^		var tt = gl.createTexture();$/;"	v
tt	heaps/h3d/impl/GlDriver.hx	/^		var tt = t.t;$/;"	v
ttype	heaps/hxsl/Clone.hx	/^	public function ttype( t : Type ) {$/;"	f
tuv	heaps/h3d/pass/FXAA.hx	/^			var tuv = input.uv;$/;"	v
tv	heaps/hxsl/Checker.hx	/^			var tv = makeVar(vl[0],e.pos);$/;"	v
tv	heaps/hxsl/Checker.hx	/^		var tv : TVar = {$/;"	v
tval	heaps/h2d/Console.hx	/^				var tval = switch( tstr ) {$/;"	v
tvar	heaps/hxsl/Clone.hx	/^	public function tvar( v : TVar ) : TVar {$/;"	f
tvec4	heaps/hxsl/Cache.hx	/^		var tvec4 = TVec(4, VFloat);$/;"	v
tvec4	heaps/hxsl/Cache.hx	/^		var tvec4 = TVec(4,VFloat);$/;"	v
tw	heaps/h2d/Drawable.hx	/^		var tw = tile.width;$/;"	v
tw	heaps/h2d/Object.hx	/^		var tw = tile.width;$/;"	v
tw	heaps/h3d/anim/Skin.hx	/^			var tw = 0.;$/;"	v
tw	heaps/h3d/impl/Benchmark.hx	/^		var tw = tip.textWidth + 10;$/;"	v
tw	heaps/h3d/impl/Stage3dDriver.hx	/^			var tw = renderTargets == 0 ? this.width : 9999;$/;"	v
tw	heaps/h3d/mat/Texture.hx	/^		var tw = 1, th = 1;$/;"	v
tw	heaps/hxd/Pixels.hx	/^		var tw = w == 0 ? 0 : 1, th = h == 0 ? 0 : 1;$/;"	v
two_pi	heaps/hxd/clipper/Clipper.hx	/^	private var two_pi = Math.PI * 2;$/;"	v
tx	heaps/h2d/Graphics.hx	/^			var tx = qx + d * torx, ty = qy + d * tory;$/;"	v
tx	heaps/h2d/RenderContext.hx	/^			var tx = tile.dx + tile.width * 0.5;$/;"	v
tx	heaps/h3d/Matrix.hx	/^	public var tx(get, set) : Float;$/;"	v
tx	heaps/h3d/anim/LinearAnimation.hx	/^	public var tx : Float;$/;"	v
tx	heaps/h3d/anim/SmoothTarget.hx	/^				var tx = m.tx, ty = m.ty, tz = m.tz;$/;"	v
tx	heaps/h3d/anim/SmoothTarget.hx	/^	public var tx : Float;$/;"	v
tx	heaps/h3d/impl/Benchmark.hx	/^		var tx = s == null ? curWidth : s.xPos + ((s.xSize - tw) * .5);$/;"	v
tx	heaps/h3d/prim/BigPrimitive.hx	/^				var tx = (x * cr - y * sr) * scale;$/;"	v
tx	heaps/h3d/prim/BigPrimitive.hx	/^				var tx = buf[p++];$/;"	v
tx	heaps/h3d/scene/World.hx	/^					var tx = 1., ty = 0., tz = 0.;$/;"	v
tx	heaps/samples/Quaternion.hx	/^	var tx : Float = 0.;$/;"	v
txt	heaps/h2d/domkit/Style.hx	/^				var txt = new HtmlText(hxd.res.DefaultFont.get(), btn);$/;"	v
txt	heaps/h2d/domkit/Style.hx	/^			var txt = try r.entry.getText() catch( e : Dynamic ) { haxe.Timer.delay(onChange.bind(ntry),1/;"	v
ty	heaps/h2d/RenderContext.hx	/^			var ty = tile.dy + tile.height * 0.5;$/;"	v
ty	heaps/h3d/Matrix.hx	/^	public var ty(get, set) : Float;$/;"	v
ty	heaps/h3d/anim/LinearAnimation.hx	/^	public var ty : Float;$/;"	v
ty	heaps/h3d/anim/SmoothTarget.hx	/^	public var ty : Float;$/;"	v
ty	heaps/h3d/prim/BigPrimitive.hx	/^				var ty = (x * sr + y * cr) * scale;$/;"	v
ty	heaps/h3d/prim/BigPrimitive.hx	/^				var ty = buf[p++];$/;"	v
ty	heaps/samples/Quaternion.hx	/^	var ty : Float = 0.;$/;"	v
type	heaps/h2d/Font.hx	/^	public var type : FontType;$/;"	v
type	heaps/h3d/impl/GlDriver.hx	/^		var type = shader.vertex ? GL.VERTEX_SHADER : GL.FRAGMENT_SHADER;$/;"	v
type	heaps/h3d/impl/GlDriver.hx	/^	public var type : Int;$/;"	v
type	heaps/h3d/parts/GpuParticles.hx	/^	var type : String;$/;"	v
type	heaps/hxd/fmt/blend/Data.hx	/^				var type = dna.types[typeIndex];$/;"	v
type	heaps/hxd/fmt/blend/Data.hx	/^	public var type:Int; \/\/ Index in dna.types$/;"	v
type	heaps/hxd/fmt/fbx/Parser.hx	/^		var type : Int = getByte();$/;"	v
type	heaps/hxd/fmt/grd/Data.hx	/^	public var type     : ColorStopType;$/;"	v
type	heaps/hxd/fmt/grd/Reader.hx	/^			var type  : ColorStopType;$/;"	v
type	heaps/hxd/fmt/grd/Reader.hx	/^		var type = i.readString(4);$/;"	v
type	heaps/hxd/fmt/grd/Reader.hx	/^		var type = i.readString(len);$/;"	v
type	heaps/hxd/fmt/spine/Library.hx	/^		var type = j.type;$/;"	v
type	heaps/hxd/fmt/tiff/Reader.hx	/^				var type = new TifType(f.readUInt16());$/;"	v
type	heaps/hxsl/Ast.hx	/^	var type : Null<Type>;$/;"	v
type	heaps/hxsl/Ast.hx	/^	var type : Type;$/;"	v
type	heaps/hxsl/Checker.hx	/^		var type = null;$/;"	v
type	heaps/hxsl/Macros.hx	/^			var type = Context.getLocalClass().toString().split(".").pop();$/;"	v
type	heaps/hxsl/RuntimeShader.hx	/^	public var type : Ast.Type;$/;"	v
type	heaps/samples/templates/.vscode/launch.json	/^			"type": "chrome",$/;"	s	object:configurations.1
type	heaps/samples/templates/.vscode/launch.json	/^			"type": "hl",$/;"	s	object:configurations.0
type	heaps/samples/templates/.vscode/launch.json	/^            "type": "fdb",$/;"	s	object:configurations.2
type	heaps/samples/templates/.vscode/tasks.json	/^			"type": "haxe",$/;"	s	object:tasks.0
type	heaps/samples/templates/.vscode/tasks.json	/^			"type": "hxml",$/;"	s	object:tasks.1
type	heaps/samples/templates/.vscode/tasks.json	/^			"type": "hxml",$/;"	s	object:tasks.2
type	heaps/samples/templates/.vscode/tasks.json	/^			"type": "hxml",$/;"	s	object:tasks.3
typeBinop	heaps/hxsl/Checker.hx	/^	function typeBinop(op, e1:TExpr, e2:TExpr, pos : Position) {$/;"	f
typeExpr	heaps/hxsl/Checker.hx	/^	function typeExpr( e : Expr, with : WithType ) : TExpr {$/;"	f
typeFromXml	heaps/hxd/res/DynamicText.hx	/^	static function typeFromXml( x : Access, pos : { file : String, content : String, pos : Positio/;"	f
typeFun	heaps/hxsl/Checker.hx	/^	function typeFun( f : TFunction, e : Expr ) {$/;"	f
typeId	heaps/hxd/fmt/blend/Data.hx	/^				var typeId = readChars(4); \/\/ TYPE$/;"	v
typeIdMap	heaps/hxsl/Serializer.hx	/^	var typeIdMap : Map<Type,Int>;$/;"	v
typeIndex	heaps/hxd/fmt/blend/Data.hx	/^				var typeIndex = ds.fieldTypes[i];$/;"	v
typeIndex	heaps/hxd/fmt/blend/Data.hx	/^			var typeIndex = ds.fieldTypes[i];$/;"	v
typeIndex	heaps/hxd/fmt/blend/Data.hx	/^		var typeIndex = ds.fieldTypes[index];$/;"	v
typeIndex	heaps/hxd/fmt/blend/Data.hx	/^		var typeIndex = getTypeIndex(dna, type);$/;"	v
typeStr	heaps/hxd/impl/Properties.hx	/^	function typeStr(t:Type.ValueType) {$/;"	f
typeWith	heaps/hxsl/Checker.hx	/^	function typeWith( e : Expr, ?t : Type ) {$/;"	f
types	heaps/hxd/fmt/blend/Data.hx	/^	public var types:Array<String> = [];$/;"	v
types	heaps/hxd/fs/EmbedFileSystem.hx	/^		var types = {$/;"	v
types	heaps/hxsl/Serializer.hx	/^	var types : Array<Type>;$/;"	v
typesCount	heaps/hxd/fmt/blend/Data.hx	/^				var typesCount = read32();$/;"	v
typesLength	heaps/hxd/fmt/blend/Data.hx	/^	public var typesLength:Array<Int> = [];$/;"	v
tz	heaps/h3d/Matrix.hx	/^	public var tz(get, set) : Float;$/;"	v
tz	heaps/h3d/anim/LinearAnimation.hx	/^	public var tz : Float;$/;"	v
tz	heaps/h3d/anim/SmoothTarget.hx	/^	public var tz : Float;$/;"	v
tz	heaps/h3d/prim/BigPrimitive.hx	/^				var tz = buf[p++];$/;"	v
tz	heaps/samples/Quaternion.hx	/^	var tz : Float = 0.;$/;"	v
u	heaps/h2d/KeyFrames.hx	/^				var u = 1 - t;$/;"	v
u	heaps/h2d/Tile.hx	/^	var u : Float;$/;"	v
u	heaps/h2d/col/Polygon.hx	/^			var u = ( r.lx * (p0.y - r.py) - r.ly * (p0.x - r.px) ) \/ ( r.ly * (p.x - p0.x) - r.lx * (p./;"	v
u	heaps/h2d/col/Segment.hx	/^		var u = ( r.lx * (y - r.py) - r.ly * (x - r.px) ) \/ ( r.ly * dx - r.lx * dy );$/;"	v
u	heaps/h3d/col/Polygon.hx	/^		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;$/;"	v
u	heaps/h3d/col/PolygonBuffer.hx	/^			var u = T.dot(p) * invDet;$/;"	v
u	heaps/h3d/prim/Cylinder.hx	/^			var u = s \/ segs;$/;"	v
u	heaps/h3d/prim/UV.hx	/^	public var u : Float;$/;"	v
u	heaps/h3d/scene/Trail.hx	/^			var u = (curTime - p0.t) \/ duration;$/;"	v
u	heaps/h3d/scene/World.hx	/^					var u = vl[p++];$/;"	v
u	heaps/h3d/shader/NoiseLib.hx	/^  var u = permute(permute(p.x) + p.y + noiseSeed) * 0.0243902439 + rot; \/\/ Rotate by shift$/;"	v
u	heaps/hxd/fmt/spine/Data.hx	/^	public var u : Float;$/;"	v
u2	heaps/h2d/Tile.hx	/^	var u2 : Float;$/;"	v
u2	heaps/h3d/prim/Cylinder.hx	/^			var u2 = (s + 1) \/ segs;$/;"	v
ua	heaps/hxd/System.js.hx	/^		var ua = js.Browser.navigator.userAgent.toLowerCase();$/;"	v
ubuffer	heaps/samples/ShaderAdvanced.hx	/^		var ubuffer = bmp.addShader(new TestUniformBuffer());$/;"	v
ufmod	heaps/hxd/Math.hx	/^	public static inline function ufmod( value : Float, modulo : Float ) {$/;"	f
ui	heaps/h2d/Camera.hx	/^		var ui = new h2d.Camera(s2d);$/;"	v
ui	heaps/samples/Pad.hx	/^		var ui = new PadUI(p, flow);$/;"	v
ui8	heaps/hxd/snd/webaudio/Driver.hx	/^				var ui8 = new hxd.impl.TypedArray.Uint8Array(data.getData());$/;"	v
uiCamera	heaps/samples/Camera2D.hx	/^		var uiCamera = new Camera();$/;"	v
uid	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var uid = 0;$/;"	v
uid	heaps/hxsl/Linker.hx	/^	public var uid : Int;$/;"	v
uid	heaps/hxsl/Serializer.hx	/^	var uid = 1;$/;"	v
uid	heaps/samples/Network.hx	/^	@:s public var uid : Int;$/;"	v
uid	heaps/samples/Network.hx	/^	public var uid : Int;$/;"	v
uidx	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var uidx = uvs[0].index[i];$/;"	v
uint	heaps/hxd/Rand.hx	/^	inline function uint() {$/;"	f
umod	heaps/hxd/Math.hx	/^	public static inline function umod( value : Int, modulo : Int ) {$/;"	f
unbind	heaps/h2d/filter/AbstractMask.hx	/^	override function unbind(s:Object) {$/;"	f
unbind	heaps/h2d/filter/Filter.hx	/^	public function unbind( s : Object ) {$/;"	f
unbind	heaps/h2d/filter/Group.hx	/^	override function unbind(s:Object) {$/;"	f
unbind	heaps/h3d/anim/Animation.hx	/^	public function unbind( objectName : String ) {$/;"	f
unbind	heaps/h3d/anim/Transition.hx	/^	override function unbind( objectName : String ) {$/;"	f
unbind	heaps/h3d/impl/DirectXDriver.hx	/^	function unbind( res ) {$/;"	f
unbind	heaps/hxd/snd/Driver.hx	/^	public function unbind  (e : T, source : SourceHandle) : Void {};$/;"	f
unbind	heaps/hxd/snd/openal/LowPassDriver.hx	/^	override function unbind(e : LowPass, source : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/openal/PitchDriver.hx	/^	override function unbind(e : Pitch, source : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function unbind(e : Reverb, s : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/openal/SpatializationDriver.hx	/^	override function unbind(e : Spatialization, s : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/webaudio/LowPassDriver.hx	/^	override function unbind(e : LowPass, source : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/webaudio/PitchDriver.hx	/^	override function unbind(e : Pitch, source : SourceHandle) : Void {$/;"	f
unbind	heaps/hxd/snd/webaudio/SpatializationDriver.hx	/^	override function unbind(e : Spatialization, source : SourceHandle) : Void {$/;"	f
unbindEffect	heaps/hxd/snd/Manager.hx	/^	function unbindEffect(c : Channel, s : Source, e : Effect) {$/;"	f
unbindTargets	heaps/h3d/impl/GlDriver.hx	/^	function unbindTargets() {$/;"	f
under	heaps/h2d/Layers.hx	/^	public function under( s : Object ) {$/;"	f
undo	heaps/h2d/TextInput.hx	/^	var undo : Array<TextHistoryElement> = [];$/;"	v
unexpected	heaps/hxd/fmt/fbx/Parser.hx	/^	function unexpected( t : Token ) : Dynamic {$/;"	f
uniform	heaps/h3d/impl/DirectXDriver.hx	/^		var uniform = m.flags.has(UniformBuffer);$/;"	v
uniformBuffer	heaps/hxsl/GlslOut.hx	/^	var uniformBuffer : Int = 0;$/;"	v
unify	heaps/hxsl/Checker.hx	/^	function unify( t1 : Type, t2 : Type, p : Position ) {$/;"	f
unifyCallParams	heaps/hxsl/Checker.hx	/^	function unifyCallParams( efun : TExpr, args : Array<Expr>, variants : Array<FunType>, pos : Po/;"	f
unifyExpr	heaps/hxsl/Checker.hx	/^	function unifyExpr( e : TExpr, t : Type ) {$/;"	f
unindex	heaps/h3d/prim/Polygon.hx	/^	public function unindex() {$/;"	f
union	heaps/h2d/col/Bounds.hx	/^	public function union( b : Bounds ) : Bounds {$/;"	f
union	heaps/h2d/col/IBounds.hx	/^	public function union( b : IBounds ) : IBounds {$/;"	f
union	heaps/h2d/col/IPolygon.hx	/^	public function union( p : IPolygon, withHoles = true ) : IPolygons {$/;"	f
union	heaps/h2d/col/IPolygons.hx	/^	public function union( ?p : IPolygons, withHoles = true ) : IPolygons {$/;"	f
uniqueLocals	heaps/hxsl/Linker.hx	/^	function uniqueLocals( expr : TExpr, locals : Map < String, Bool > ) : Void {$/;"	f
uniqueName	heaps/hxsl/Splitter.hx	/^	function uniqueName( v : TVar ) {$/;"	f
uniqueWrite	heaps/hxsl/AgalOptim.hx	/^	function uniqueWrite( t ) {$/;"	f
unitOffset	heaps/h3d/shader/SAO.hx	/^			var unitOffset = vec2(cos(angle), sin(angle));$/;"	v
unitScale	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var unitScale = 1;$/;"	v
unk	heaps/samples/FxView.hx	/^		var unk = prefab.getOpt(hrt.prefab.Unknown);$/;"	v
unlock	heaps/hxd/BitmapData.hx	/^	public function unlock() {$/;"	f
unmask	heaps/h2d/Mask.hx	/^	public static function unmask( ctx : RenderContext ) {$/;"	f
unop	heaps/hxsl/AgalOptim.hx	/^		inline function unop(_, a, _) {$/;"	f
unop	heaps/hxsl/AgalOptim.hx	/^		inline function unop(d, v, op) {$/;"	f
unop	heaps/hxsl/AgalOut.hx	/^		inline function unop(uop) {$/;"	f
unoptim	heaps/hxsl/AgalOptim.hx	/^	function unoptim() {$/;"	f
unproject	heaps/h3d/Camera.hx	/^	public function unproject( screenX : Float, screenY : Float, camZ ) {$/;"	f
unqueueBuffer	heaps/hxd/snd/Driver.hx	/^	public function unqueueBuffer        (source : SourceHandle, buffer : BufferHandle) : Void;$/;"	f
unqueueBuffer	heaps/hxd/snd/Manager.hx	/^	function unqueueBuffer(s : Source) {$/;"	f
unqueueBuffer	heaps/hxd/snd/openal/Driver.hx	/^	public function unqueueBuffer(source : SourceHandle, buffer : BufferHandle) : Void {$/;"	f
unqueueBuffer	heaps/hxd/snd/webaudio/Driver.hx	/^	public function unqueueBuffer (source : SourceHandle, buffer : BufferHandle) : Void {$/;"	f
unrollLoops	heaps/hxsl/Eval.hx	/^	public var unrollLoops : Bool;$/;"	v
unscaledBl	heaps/h2d/ScaleGrid.hx	/^		var unscaledBl : Float = bl, unscaledBr : Float = br, unscaledBt : Float = bt, unscaledBb : Fl/;"	v
unscaledInnerTileHeight	heaps/h2d/ScaleGrid.hx	/^			var unscaledInnerTileHeight = innerTileHeight * invScaleY;$/;"	v
unscaledInnerTileWidth	heaps/h2d/ScaleGrid.hx	/^			var unscaledInnerTileWidth = innerTileWidth * invScaleX;$/;"	v
unserialize	heaps/hxsl/CacheFile.hx	/^		function unserialize() {$/;"	f
unserialize	heaps/hxsl/Serializer.hx	/^	public function unserialize( data : String ) : ShaderData {$/;"	f
unskinnedJointsAsObjects	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var unskinnedJointsAsObjects : Bool;$/;"	v
unused	heaps/hxsl/AgalOut.hx	/^	var unused : Map<Int, Reg>;$/;"	v
up	heaps/h3d/Camera.hx	/^	public var up : Vector;$/;"	v
up	heaps/h3d/Matrix.hx	/^    public inline function up() {$/;"	f
up	heaps/h3d/scene/Trail.hx	/^		var up = new h3d.col.Point(0, Math.sin(angle), Math.cos(angle));$/;"	v
up	heaps/h3d/scene/pbr/Environment.hx	/^			var up = abs(n.z) < 0.999 ? vec3(0, 0, 1) : vec3(1, 0, 0);$/;"	v
up	heaps/hxd/snd/Listener.hx	/^	public var up  : h3d.Vector;$/;"	v
upAxis	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		var upAxis = 1;$/;"	v
update	Laser.hx	/^	public function update() {$/;"	f
update	Main.hx	/^	override function update(dt:Float) {$/;"	f
update	Player.hx	/^	public function update() {$/;"	f
update	heaps/h2d/Particles.hx	/^	override function update(et:Float) {$/;"	f
update	heaps/h2d/SpriteBatch.hx	/^	function update(et:Float) {$/;"	f
update	heaps/h2d/SpriteBatch.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/h3d/Camera.hx	/^	public function update() {$/;"	f
update	heaps/h3d/anim/Animation.hx	/^	public function update(dt:Float) : Float {$/;"	f
update	heaps/h3d/anim/SmoothTarget.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/h3d/anim/SmoothTransition.hx	/^	override function update( dt : Float ) : Float {$/;"	f
update	heaps/h3d/anim/Transition.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/h3d/parts/Data.hx	/^	public var update : Particle -> Void;$/;"	v
update	heaps/h3d/parts/Emitter.hx	/^	public function update(dt:Float) {$/;"	f
update	heaps/hxd/App.hx	/^	function update( dt : Float ) {$/;"	f
update	heaps/hxd/Cursor.hx	/^	public function update( dt : Float ) : Int {$/;"	f
update	heaps/hxd/Pad.hx	/^	public function update() {}$/;"	f
update	heaps/hxd/Timer.hx	/^	public static function update() {$/;"	f
update	heaps/hxd/WaitEvent.hx	/^	public function update(dt:Float) {$/;"	f
update	heaps/hxd/snd/Driver.hx	/^	public function update  () : Void;$/;"	f
update	heaps/hxd/snd/Driver.hx	/^	public function update  (e : T) : Void {};$/;"	f
update	heaps/hxd/snd/Manager.hx	/^	public function update() {$/;"	f
update	heaps/hxd/snd/NativeChannel.hx	/^	var update : haxe.MainLoop.MainEvent;$/;"	v
update	heaps/hxd/snd/openal/Driver.hx	/^	public function update() : Void {$/;"	f
update	heaps/hxd/snd/openal/LowPassDriver.hx	/^	override function update(e : LowPass) : Void {$/;"	f
update	heaps/hxd/snd/openal/ReverbDriver.hx	/^	override function update(e : Reverb) : Void {$/;"	f
update	heaps/hxd/snd/webaudio/Driver.hx	/^	public function update () : Void { }$/;"	f
update	heaps/samples/AdjustColor.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Base2D.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Base3D.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/Bounds.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Camera2D.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/CollideCheck.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/CubeTexture.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Domkit.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/DrawingTiles.hx	/^	override function update( et : Float ):Bool {$/;"	f
update	heaps/samples/Filters.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Flows.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/GpuParticles.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/GraphicsDraw.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Helpers.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/HtmlText.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Input.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Interactive.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Interactive2D.hx	/^	override private function update(dt:Float)$/;"	f
update	heaps/samples/Lights.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Mask.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/MeshBatch.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/MeshBatch.hx	/^	public function update(dt:Float) {$/;"	f
update	heaps/samples/Network.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Pad.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Pad.hx	/^	public function update(){$/;"	f
update	heaps/samples/Particles2d.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Pbr.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/PointLights.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/Quaternion.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Sao.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/ScaleMode2D.hx	/^	override function update(dt:Float)$/;"	f
update	heaps/samples/ShaderAdvanced.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Shadows.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/Sound.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Stencil.hx	/^	override function update( dt : Float ) {$/;"	f
update	heaps/samples/Text.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/Video.hx	/^	override function update(dt:Float) {$/;"	f
update	heaps/samples/World.hx	/^	override function update(dt:Float) {$/;"	f
updateBG	heaps/hxd/fmt/pak/Loader.hx	/^	function updateBG( progress : Float ) {$/;"	f
updateBits	heaps/h3d/scene/World.hx	/^	public function updateBits() {$/;"	f
updateBounds	heaps/h2d/TileGroup.hx	/^		inline function updateBounds( x, y ) {$/;"	f
updateBounds	heaps/h3d/parts/GpuParticles.hx	/^	public function updateBounds( bounds : h3d.col.Bounds ) {$/;"	f
updateBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	function updateBuffer( res : dx.Resource, bytes : hl.Bytes, startByte : Int, bytesCount : Int )/;"	f
updateCamSliderValues	heaps/samples/Camera2D.hx	/^	private function updateCamSliderValues() {$/;"	f
updateCamera	heaps/h3d/pass/SpotShadowMap.hx	/^	function updateCamera(){$/;"	f
updateChannels	heaps/hxd/snd/NativeChannel.hx	/^	static function updateChannels() {$/;"	f
updateComponentId	heaps/h2d/domkit/BaseComponents.hx	/^	static function updateComponentId(p:domkit.Properties<Dynamic>) {$/;"	f
updateConstants	heaps/hxsl/DynamicShader.hx	/^	override function updateConstants( globals : Globals ) {$/;"	f
updateConstants	heaps/hxsl/Shader.hx	/^	public function updateConstants( globals : Globals ) {$/;"	f
updateConstantsFinal	heaps/hxsl/Shader.hx	/^	function updateConstantsFinal( globals : Globals ) {$/;"	f
updateConstraint	heaps/h2d/Flow.hx	/^	function updateConstraint() {$/;"	f
updateConstraint	heaps/h2d/Text.hx	/^	function updateConstraint() {$/;"	f
updateContent	heaps/h2d/ScaleGrid.hx	/^	function updateContent() {$/;"	f
updateCurrentVolume	heaps/hxd/snd/Channel.hx	/^	override function updateCurrentVolume( now : Float ) {$/;"	f
updateCurrentVolume	heaps/hxd/snd/ChannelBase.hx	/^	function updateCurrentVolume( now : Float ) {$/;"	f
updateCursor	heaps/hxd/SceneEvents.hx	/^	public function updateCursor( i : Interactive ) {$/;"	f
updateCursor	heaps/hxd/System.hl.hx	/^	static function updateCursor() : Void {$/;"	f
updateCursor	heaps/hxd/System.js.hx	/^	static function updateCursor() : Void {$/;"	f
updateDefaultMatrix	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function updateDefaultMatrix( model : FbxNode, d : DefaultMatrixes ) {$/;"	f
updateDestination	heaps/hxd/snd/webaudio/AudioTypes.hx	/^	public function updateDestination() {$/;"	f
updateDivisor	heaps/h3d/impl/GlDriver.hx	/^	inline function updateDivisor( a : CompiledAttribute ) {$/;"	f
updateDuration	heaps/hxd/snd/openal/Emulator.hx	/^	public function updateDuration() {$/;"	f
updateEvent	heaps/hxd/snd/Manager.hx	/^	var updateEvent   : MainEvent;$/;"	v
updateInputs	Player.hx	/^	private function updateInputs() {$/;"	f
updateJoints	heaps/h3d/col/SkinCollider.hx	/^	function updateJoints() {$/;"	f
updateList	heaps/hxd/WaitEvent.hx	/^	var updateList : Array<Float -> Bool> ;$/;"	v
updateModelScale	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	function updateModelScale() {$/;"	f
updateNeedFlush	heaps/h3d/Engine.hx	/^	function updateNeedFlush() {$/;"	f
updateNormals	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function updateNormals( g : Geometry, vbuf : hxd.FloatBuffer, idx : Array<Array<Int>> ) {$/;"	f
updateParticle	heaps/h3d/parts/Emitter.hx	/^	function updateParticle( p : Particle, dt : Float ) {$/;"	f
updatePos	heaps/h3d/parts/GpuParticles.hx	/^	public function updatePos( time : Float, gravity : Float ) {$/;"	f
updatePreview	heaps/h2d/domkit/Style.hx	/^	function updatePreview( e : hxd.Event ) {$/;"	f
updateResCount	heaps/h3d/impl/DirectXDriver.hx	/^	var updateResCount : Int;$/;"	v
updateScrollCursor	heaps/h2d/Flow.hx	/^	function updateScrollCursor() {$/;"	f
updateSize	heaps/h2d/Text.hx	/^	inline function updateSize() {$/;"	f
updateVirtualChannels	heaps/hxd/snd/Manager.hx	/^	function updateVirtualChannels(now : Float) {$/;"	f
updates	heaps/samples/ShaderAdvanced.hx	/^	var updates : Array<Float -> Void> = [];$/;"	v
upload	heaps/h2d/Tile.hx	/^	function upload( bmp:hxd.BitmapData ) : Void {$/;"	f
upload	heaps/h3d/Indexes.hx	/^	public function upload( indexes : hxd.IndexBuffer, pos : Int, count : Int, bufferPos = 0 ) {$/;"	f
upload	heaps/h3d/mat/BigTexture.hx	/^	function upload( t : hxd.res.Image, q : QuadTree, alphaChannel ) {$/;"	f
upload	heaps/h3d/scene/MeshBatch.hx	/^				var upload = needUpload;$/;"	v
uploadBitmap	heaps/h3d/mat/Texture.hx	/^	public function uploadBitmap( bmp : hxd.BitmapData, mipLevel = 0, layer = 0 ) {$/;"	f
uploadBuffer	heaps/h3d/impl/GlDriver.hx	/^	function uploadBuffer( buffer : h3d.shader.Buffers, s : CompiledShader, buf : h3d.shader.Buffer/;"	f
uploadBuffers	heaps/h3d/impl/DirectXDriver.hx	/^	function uploadBuffers( buf : h3d.shader.Buffers, state : PipelineState, shader : ShaderContext/;"	f
uploadBytes	heaps/h3d/Buffer.hx	/^	public function uploadBytes( data : haxe.io.Bytes, dataPos : Int, vertices : Int ) {$/;"	f
uploadBytes	heaps/h3d/Indexes.hx	/^	public function uploadBytes( bytes : haxe.io.Bytes, dataPos : Int, indices : Int ) {$/;"	f
uploadIndexBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadIndexBuffer(i:IndexBuffer, startIndice:Int, indiceCount:Int, buf:hxd.In/;"	f
uploadIndexBuffer	heaps/h3d/impl/Driver.hx	/^	public function uploadIndexBuffer( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf :/;"	f
uploadIndexBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function uploadIndexBuffer( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf/;"	f
uploadIndexBuffer	heaps/h3d/impl/LogDriver.hx	/^	override function uploadIndexBuffer( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf/;"	f
uploadIndexBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadIndexBuffer( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf/;"	f
uploadIndexBytes	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadIndexBytes(i:IndexBuffer, startIndice:Int, indiceCount:Int, buf:haxe.io/;"	f
uploadIndexBytes	heaps/h3d/impl/Driver.hx	/^	public function uploadIndexBytes( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf : /;"	f
uploadIndexBytes	heaps/h3d/impl/GlDriver.hx	/^	override function uploadIndexBytes( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf /;"	f
uploadIndexBytes	heaps/h3d/impl/LogDriver.hx	/^	override function uploadIndexBytes( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf /;"	f
uploadIndexBytes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadIndexBytes( i : IndexBuffer, startIndice : Int, indiceCount : Int, buf /;"	f
uploadParams	heaps/h3d/scene/RenderContext.hx	/^	public function uploadParams() {$/;"	f
uploadPixels	heaps/h3d/mat/BigTexture.hx	/^	function uploadPixels( pixels : hxd.Pixels, x : Int, y : Int, alphaChannel ) {$/;"	f
uploadPixels	heaps/h3d/mat/Texture.hx	/^	public function uploadPixels( pixels : hxd.Pixels, mipLevel = 0, layer = 0 ) {$/;"	f
uploadPixels	heaps/hxd/res/Gradients.hx	/^		function uploadPixels() {$/;"	f
uploadShaderBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	function uploadShaderBuffer( sbuffer : dx.Resource, buffer : haxe.ds.Vector<hxd.impl.Float32>, /;"	f
uploadShaderBuffers	heaps/h3d/Engine.hx	/^	public function uploadShaderBuffers(buffers, which) {$/;"	f
uploadShaderBuffers	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadShaderBuffers(buffers:h3d.shader.Buffers, which:h3d.shader.Buffers.Buff/;"	f
uploadShaderBuffers	heaps/h3d/impl/Driver.hx	/^	public function uploadShaderBuffers( buffers : h3d.shader.Buffers, which : h3d.shader.Buffers.B/;"	f
uploadShaderBuffers	heaps/h3d/impl/GlDriver.hx	/^	override function uploadShaderBuffers( buf : h3d.shader.Buffers, which : h3d.shader.Buffers.Buf/;"	f
uploadShaderBuffers	heaps/h3d/impl/LogDriver.hx	/^	override function uploadShaderBuffers( buffers : h3d.shader.Buffers, which : h3d.shader.Buffers/;"	f
uploadShaderBuffers	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadShaderBuffers( buffers : h3d.shader.Buffers, which : h3d.shader.Buffers/;"	f
uploadTextureBitmap	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadTextureBitmap(t:h3d.mat.Texture, bmp:hxd.BitmapData, mipLevel:Int, side/;"	f
uploadTextureBitmap	heaps/h3d/impl/Driver.hx	/^	public function uploadTextureBitmap( t : h3d.mat.Texture, bmp : hxd.BitmapData, mipLevel : Int,/;"	f
uploadTextureBitmap	heaps/h3d/impl/GlDriver.hx	/^	override function uploadTextureBitmap( t : h3d.mat.Texture, bmp : hxd.BitmapData, mipLevel : In/;"	f
uploadTextureBitmap	heaps/h3d/impl/LogDriver.hx	/^	override function uploadTextureBitmap( t : h3d.mat.Texture, bmp : hxd.BitmapData, mipLevel : In/;"	f
uploadTextureBitmap	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadTextureBitmap( t : h3d.mat.Texture, bmp : hxd.BitmapData, mipLevel : In/;"	f
uploadTexturePixels	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadTexturePixels(t:h3d.mat.Texture, pixels:hxd.Pixels, mipLevel:Int, side:/;"	f
uploadTexturePixels	heaps/h3d/impl/Driver.hx	/^	public function uploadTexturePixels( t : h3d.mat.Texture, pixels : hxd.Pixels, mipLevel : Int, /;"	f
uploadTexturePixels	heaps/h3d/impl/GlDriver.hx	/^	override function uploadTexturePixels( t : h3d.mat.Texture, pixels : hxd.Pixels, mipLevel : Int/;"	f
uploadTexturePixels	heaps/h3d/impl/LogDriver.hx	/^	override function uploadTexturePixels( t : h3d.mat.Texture, pixels : hxd.Pixels, mipLevel : Int/;"	f
uploadTexturePixels	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadTexturePixels( t : h3d.mat.Texture, pixels : hxd.Pixels, mipLevel : Int/;"	f
uploadTextureVideoElement	heaps/h3d/impl/GlDriver.hx	/^	private function uploadTextureVideoElement( t : h3d.mat.Texture, v : js.html.VideoElement, mipL/;"	f
uploadTextures	heaps/hxd/impl/AsyncLoader.hx	/^	function uploadTextures() {$/;"	f
uploadVector	heaps/h3d/Buffer.hx	/^	public function uploadVector( buf : hxd.FloatBuffer, bufPos : Int, vertices : Int, startVertice/;"	f
uploadVertexBuffer	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadVertexBuffer(v:VertexBuffer, startVertex:Int, vertexCount:Int, buf:hxd./;"	f
uploadVertexBuffer	heaps/h3d/impl/Driver.hx	/^	public function uploadVertexBuffer( v : VertexBuffer, startVertex : Int, vertexCount : Int, buf/;"	f
uploadVertexBuffer	heaps/h3d/impl/GlDriver.hx	/^	override function uploadVertexBuffer( v : VertexBuffer, startVertex : Int, vertexCount : Int, b/;"	f
uploadVertexBuffer	heaps/h3d/impl/LogDriver.hx	/^	override function uploadVertexBuffer( v : VertexBuffer, startVertex : Int, vertexCount : Int, b/;"	f
uploadVertexBuffer	heaps/h3d/impl/ManagedBuffer.hx	/^	public function uploadVertexBuffer( start : Int, vertices : Int, buf : hxd.FloatBuffer, bufPos /;"	f
uploadVertexBuffer	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadVertexBuffer( v : VertexBuffer, startVertex : Int, vertexCount : Int, b/;"	f
uploadVertexBytes	heaps/h3d/impl/DirectXDriver.hx	/^	override function uploadVertexBytes(v:VertexBuffer, startVertex:Int, vertexCount:Int, buf:haxe./;"	f
uploadVertexBytes	heaps/h3d/impl/Driver.hx	/^	public function uploadVertexBytes( v : VertexBuffer, startVertex : Int, vertexCount : Int, buf /;"	f
uploadVertexBytes	heaps/h3d/impl/GlDriver.hx	/^	override function uploadVertexBytes( v : VertexBuffer, startVertex : Int, vertexCount : Int, bu/;"	f
uploadVertexBytes	heaps/h3d/impl/LogDriver.hx	/^	override function uploadVertexBytes( v : VertexBuffer, startVertex : Int, vertexCount : Int, bu/;"	f
uploadVertexBytes	heaps/h3d/impl/ManagedBuffer.hx	/^	public function uploadVertexBytes( start : Int, vertices : Int, data : haxe.io.Bytes, dataPos =/;"	f
uploadVertexBytes	heaps/h3d/impl/Stage3dDriver.hx	/^	override function uploadVertexBytes( v : VertexBuffer, startVertex : Int, vertexCount : Int, by/;"	f
uploadedCount	heaps/h3d/parts/GpuParticles.hx	/^	public var uploadedCount(default,null) : Int;$/;"	v
url	heaps/haxelib.json	/^	"url" : "http:\/\/heaps.io",$/;"	s
url	heaps/hxd/net/BinaryLoader.hx	/^	public var url(default, null) : String;$/;"	v
url	heaps/samples/templates/.vscode/launch.json	/^			"url": "file:\/\/${workspaceFolder}\/index.html",$/;"	s	object:configurations.1
useAllocatorLimit	heaps/h2d/TileGroup.hx	/^	public var useAllocatorLimit = 1024;$/;"	v
useAlpha	heaps/h3d/pass/ColorMatrix.hx	/^		@const var useAlpha : Bool;$/;"	v
useAlphaChannel	heaps/h3d/shader/AlphaMap.hx	/^		@const var useAlphaChannel : Bool;$/;"	v
useAsyncDecode	heaps/hxd/res/Image.hx	/^	public var useAsyncDecode(get, never) : Bool;$/;"	v
useCookie	heaps/h3d/shader/pbr/Light.hx	/^		@const var useCookie : Bool;$/;"	v
useEmissiveHDR	heaps/h3d/shader/pbr/GammaCorrect.hx	/^		@const var useEmissiveHDR : Bool;$/;"	v
useMask	heaps/h3d/pass/ColorMatrix.hx	/^		@const var useMask : Bool;$/;"	v
useScreenPixels	heaps/hxd/Window.js.hx	/^	public var useScreenPixels : Bool = js.Browser.supported;$/;"	v
useScreenResolution	heaps/h2d/filter/Filter.hx	/^	public var useScreenResolution(default, set):Bool = defaultUseScreenResolution;$/;"	v
useSourceUVs	heaps/h3d/shader/AlphaMap.hx	/^		@const @param var useSourceUVs : Bool = false;$/;"	v
useWorker	heaps/hxd/Worker.hx	/^	var useWorker : Bool;$/;"	v
useWorldUV	heaps/h3d/shader/SAO.hx	/^		@const var useWorldUV : Bool;$/;"	v
used	heaps/h3d/mat/BigTexture.hx	/^	public var used : Bool;$/;"	v
used	heaps/h3d/prim/Polygon.hx	/^			var used = [];$/;"	v
used	heaps/hxsl/AgalOptim.hx	/^				var used = [];$/;"	v
used	heaps/hxsl/Cache.hx	/^		var used = [];$/;"	v
used	heaps/hxsl/Dce.hx	/^	public var used : Bool;$/;"	v
used	heaps/hxsl/Dce.hx	/^	var used : Map<Int,VarDeps>;$/;"	v
usedEffects	heaps/hxd/snd/Manager.hx	/^		var usedEffects : Effect = null;$/;"	v
usedFunctions	heaps/hxsl/Linker.hx	/^	public var usedFunctions : Array<TFunction>;$/;"	v
usedMemory	heaps/h3d/impl/MemoryManager.hx	/^	public var usedMemory(default, null) : Float = 0;$/;"	v
usedRegs	heaps/hxsl/AgalOptim.hx	/^	var usedRegs : Array<Array<RegInfos>>;$/;"	v
usedTextures	heaps/h3d/impl/Stage3dDriver.hx	/^	public var usedTextures : Array<Bool>;$/;"	v
userProps	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var userProps = p.props[4].toString().split("&cr;&lf;");$/;"	v
uv	heaps/h2d/filter/Mask.hx	/^			var uv = vec3(input.uv, 1);$/;"	v
uv	heaps/h3d/pass/ColorMatrix.hx	/^				var uv = vec3(input.uv, 1);$/;"	v
uv	heaps/h3d/pass/CubeCopy.hx	/^			var uv = calculatedUV * 2.0 - 1.0;$/;"	v
uv	heaps/h3d/scene/pbr/Environment.hx	/^			var uv = vec2(atan(n.y, n.x), asin(-n.z));$/;"	v
uv	heaps/h3d/shader/AlphaMap.hx	/^			var uv = useSourceUVs ? input.uv : calculatedUV;$/;"	v
uv	heaps/h3d/shader/AnimatedTexture.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/Base2d.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/Blur.hx	/^					var uv = input.uv + pixel * offsets[i < 0 ? -i : i];$/;"	v
uv	heaps/h3d/shader/GpuParticle.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/LineShader.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/MinMaxShader.hx	/^			var uv = calculatedUV * 2.0 - 1.0;$/;"	v
uv	heaps/h3d/shader/NoiseLib.hx	/^  var uv = vec2(pos.x + pos.y*0.5, pos.y);$/;"	v
uv	heaps/h3d/shader/ParticleShader.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/Texture.hx	/^			var uv : Vec2;$/;"	v
uv	heaps/h3d/shader/pbr/PropsImport.hx	/^			var uv = isScreen ? calculatedUV : screenUV;$/;"	v
uv	heaps/h3d/shader/pbr/Slides.hx	/^					var uv = vec2(x,y) - 3;$/;"	v
uv	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var uv : Array<{ t : Float, u : Float, v : Float }>;$/;"	v
uv	heaps/hxd/fmt/fbx/Geometry.hx	/^			var uv = uv[i];$/;"	v
uv	heaps/hxd/fmt/fbx/Geometry.hx	/^		var uv = getUVs();$/;"	v
uv	heaps/hxsl/AgalOut.hx	/^			var uv = expr(uv);$/;"	v
uv0	heaps/h3d/prim/Polygon.hx	/^			var uv0 = uvs[i0];$/;"	v
uv1	heaps/h3d/prim/Polygon.hx	/^			var uv1 = uvs[i1];$/;"	v
uv2	heaps/h3d/prim/Polygon.hx	/^			var uv2 = uvs[i2];$/;"	v
uv2	heaps/h3d/shader/SAO.hx	/^			var uv2 = uvToScreen(uv);$/;"	v
uv2	heaps/h3d/shader/Texture2.hx	/^			var uv2 : Vec2;$/;"	v
uv2	heaps/hxd/fmt/fbx/Geometry.hx	/^			var uv2 = uv2[i];$/;"	v
uv2	heaps/hxd/fmt/fbx/Geometry.hx	/^		var uv2 = g.getUVs();$/;"	v
uvAnims	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	var uvAnims : Map<String, Array<{ t : Float, u : Float, v : Float }>>;$/;"	v
uvDelta	heaps/h3d/shader/AlphaMap.hx	/^		@param var uvDelta : Vec2;$/;"	v
uvDelta	heaps/h3d/shader/UVDelta.hx	/^		@param var uvDelta : Vec2;$/;"	v
uvLerp	heaps/h3d/anim/BufferAnimation.hx	/^	inline function uvLerp( v1 : Float, v2 : Float, k : Float ) {$/;"	f
uvLerp	heaps/h3d/anim/LinearAnimation.hx	/^	inline function uvLerp( v1 : Float, v2 : Float, k : Float ) {$/;"	f
uvPos	heaps/h3d/shader/Base2d.hx	/^		@param var uvPos : Vec4;$/;"	v
uvScale	heaps/h3d/prim/Polygon.hx	/^	public function uvScale( su : Float, sv : Float ) {$/;"	f
uvScale	heaps/h3d/shader/AlphaMap.hx	/^		@param var uvScale : Vec2;$/;"	v
uvScale	heaps/h3d/shader/UVDelta.hx	/^		@param var uvScale : Vec2;$/;"	v
uvSpeed	heaps/h3d/shader/UVScroll.hx	/^		@param var uvSpeed : Vec2;$/;"	v
uvs	heaps/h3d/anim/LinearAnimation.hx	/^	public var uvs : haxe.ds.Vector<Float>;$/;"	v
uvs	heaps/h3d/parts/GpuParticles.hx	/^		var uvs = PUVS;$/;"	v
uvs	heaps/h3d/prim/Polygon.hx	/^	public var uvs : Array<UV>;$/;"	v
uvs	heaps/h3d/prim/Quads.hx	/^	var uvs : Array<UV>;$/;"	v
uvs	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var uvs = c.uv == null ? null : new haxe.ds.Vector(numFrames * 2);$/;"	v
uvs	heaps/hxd/fmt/fbx/Geometry.hx	/^		var uvs = [];$/;"	v
uvs	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var uvs = geom.getUVs();$/;"	v
uvs	heaps/hxd/fmt/spine/JsonData.hx	/^	var uvs : Array<Float>;$/;"	v
uvs	heaps/hxd/fmt/spine/Library.hx	/^			var uvs = j.uvs;$/;"	v
v	heaps/h2d/CdbLevel.hx	/^					var v = layer[i];$/;"	v
v	heaps/h2d/Console.hx	/^			var v = args[i + 1];$/;"	v
v	heaps/h2d/HtmlText.hx	/^							var v = e.get(a);$/;"	v
v	heaps/h2d/HtmlText.hx	/^					var v = e.get(a);$/;"	v
v	heaps/h2d/KeyFrames.hx	/^			var v = f.key_values[i];$/;"	v
v	heaps/h2d/Object.hx	/^			var v = o.find(f);$/;"	v
v	heaps/h2d/Object.hx	/^		var v = f(this);$/;"	v
v	heaps/h2d/Tile.hx	/^	var v : Float;$/;"	v
v	heaps/h2d/Video.hx	/^	var v : VideoImpl;$/;"	v
v	heaps/h2d/Video.hx	/^	var v : js.html.VideoElement;$/;"	v
v	heaps/h2d/col/Polygon.hx	/^		var v = side(p, q, r);$/;"	v
v	heaps/h2d/col/Voronoi.hx	/^			var v = halfedges[iHalfedge].getStartpoint();$/;"	v
v	heaps/h2d/col/Voronoi.hx	/^		var v = new Point(x, y);$/;"	v
v	heaps/h2d/domkit/BaseComponents.hx	/^			var v = parseFloatPercent(v);$/;"	v
v	heaps/h2d/domkit/BaseComponents.hx	/^		var v = new h3d.Vector();$/;"	v
v	heaps/h2d/domkit/Style.hx	/^				var v = dom.currentValues == null ? null : dom.currentValues[i];$/;"	v
v	heaps/h3d/Camera.hx	/^						var v = p.currentAnimation.getPropValue(follow.pos.name, "FOVY");$/;"	v
v	heaps/h3d/Matrix.hx	/^		var v = contrast + 1;$/;"	v
v	heaps/h3d/Matrix.hx	/^        var v = new h3d.Vector(_11, _12, _13);$/;"	v
v	heaps/h3d/Matrix.hx	/^        var v = new h3d.Vector(_21, _22, _23);$/;"	v
v	heaps/h3d/Matrix.hx	/^        var v = new h3d.Vector(_31, _32, _33);$/;"	v
v	heaps/h3d/col/Bounds.hx	/^		var v = new h3d.col.Point();$/;"	v
v	heaps/h3d/col/Plane.hx	/^		var v = new h3d.Vector(nx, ny, nz, -d);$/;"	v
v	heaps/h3d/col/Polygon.hx	/^		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;$/;"	v
v	heaps/h3d/col/PolygonBuffer.hx	/^			var v = rdir.dot(q) * invDet;$/;"	v
v	heaps/h3d/col/Sphere.hx	/^		var v = getCenter();$/;"	v
v	heaps/h3d/impl/DirectXDriver.hx	/^				var v = new dx.Driver.RenderTargetDesc(getTextureFormat(tex), arr ? Texture2DArray : Texture/;"	v
v	heaps/h3d/impl/GlDriver.hx	/^		var v : String = gl.getParameter(GL.SHADING_LANGUAGE_VERSION);$/;"	v
v	heaps/h3d/impl/GlDriver.hx	/^		var v : String = gl.getParameter(GL.VERSION);$/;"	v
v	heaps/h3d/impl/Stage3dDriver.hx	/^		var v = flash.system.Capabilities.version.split(" ")[1].split(",");$/;"	v
v	heaps/h3d/impl/Stage3dDriver.hx	/^		var v;$/;"	v
v	heaps/h3d/parts/Emitter.hx	/^				var v = new h3d.Vector(p.dx, p.dy, p.dz).reflect(tmp);$/;"	v
v	heaps/h3d/parts/Emitter.hx	/^			var v = new h3d.Vector(p.dx, p.dy, p.dz);$/;"	v
v	heaps/h3d/parts/GpuParticles.hx	/^		var v = new h3d.col.Point();$/;"	v
v	heaps/h3d/parts/Particles.hx	/^		var v = p;$/;"	v
v	heaps/h3d/pass/DirShadowMap.hx	/^					var v = camera.target.sub(camera.pos).normalized();$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^				var v : Dynamic;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^				var v = globals.fastGet(g.gid);$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : Array<Dynamic> = v;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : Array<Float> = v;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : Array<h3d.Matrix> = v;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : Array<h3d.Vector> = v;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : Dynamic = globals.fastGet(p.perObjectGlobal.gid);$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^			var v : h3d.Vector = v;$/;"	v
v	heaps/h3d/pass/ShaderManager.hx	/^		var v = si.s.getParamValue(p.index);$/;"	v
v	heaps/h3d/prim/Cube.hx	/^		var v = scale;$/;"	v
v	heaps/h3d/prim/HMDModel.hx	/^		var v = new hxd.FloatBuffer();$/;"	v
v	heaps/h3d/prim/Plane2D.hx	/^		var v = new hxd.FloatBuffer();$/;"	v
v	heaps/h3d/prim/Quads.hx	/^		var v = new hxd.FloatBuffer();$/;"	v
v	heaps/h3d/prim/UV.hx	/^	public var v : Float;$/;"	v
v	heaps/h3d/scene/CameraController.hx	/^		var v = new h3d.Vector(dx, dy, dz);$/;"	v
v	heaps/h3d/scene/Graphics.hx	/^		var v = 0.;$/;"	v
v	heaps/h3d/scene/MeshBatch.hx	/^				var v : h3d.Vector = curShader.getParamValue(p.index);$/;"	v
v	heaps/h3d/scene/Object.hx	/^			var v = o.find(f);$/;"	v
v	heaps/h3d/scene/Object.hx	/^		var v = f(this);$/;"	v
v	heaps/h3d/scene/Trail.hx	/^				var v = (i + 1) \/ k;$/;"	v
v	heaps/h3d/scene/Trail.hx	/^			var v : Dynamic = Reflect.field(obj, f);$/;"	v
v	heaps/h3d/scene/World.hx	/^						var v = idx[base++];$/;"	v
v	heaps/h3d/scene/World.hx	/^					var v = vl[p++];$/;"	v
v	heaps/h3d/scene/pbr/Environment.hx	/^					var v = n; \/\/ approx$/;"	v
v	heaps/h3d/scene/pbr/Environment.hx	/^			var v = vec3( sqrt( 1.0 - NoV * NoV ), 0., NoV );$/;"	v
v	heaps/h3d/shader/SAO.hx	/^			var v = Q - position;$/;"	v
v	heaps/h3d/shader/pbr/BDRF.hx	/^			var v = 0.5 \/ (lambdaV + lambdaL);$/;"	v
v	heaps/h3d/shader/pbr/BDRF.hx	/^			var v = vec3(ab * TdH, at * BdH, a2 * NdH);$/;"	v
v	heaps/h3d/shader/pbr/PropsTexture.hx	/^				var v = texture.get(calculatedUV);$/;"	v
v	heaps/hxd/BytesBuffer.hx	/^		var v = new BytesBuffer();$/;"	v
v	heaps/hxd/Pad.hx	/^							var v = (c.value - min) * 2 \/ (max - min) - 1;$/;"	v
v	heaps/hxd/Pad.hx	/^							var v = (c.value - min) \/ (max - min);$/;"	v
v	heaps/hxd/Pad.hx	/^				var v = p.d.getAxis(i);$/;"	v
v	heaps/hxd/Pad.hx	/^		var v = value \/ 0x7FFF;$/;"	v
v	heaps/hxd/Perlin.hx	/^		var v = 0.;$/;"	v
v	heaps/hxd/Pixels.hx	/^					var v = bytes.getInt32(p);$/;"	v
v	heaps/hxd/Pixels.hx	/^				var v = Std.int(fbytes.getFloat(p)*255);$/;"	v
v	heaps/hxd/System.flash.hx	/^				var v = new flash.Vector();$/;"	v
v	heaps/hxd/fmt/bfnt/FontParser.hx	/^				var v = reg.matched(2);$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var v = p.props[idx].toFloat();$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var v = toFloats(g);$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var v = data[i] * mult;$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var v = t.x[0];$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var v = t.y[0];$/;"	v
v	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var v = t.z[0];$/;"	v
v	heaps/hxd/fmt/fbx/HMDOut.hx	/^						var v = pval.toFloat();$/;"	v
v	heaps/hxd/fmt/hmd/Library.hx	/^		var v = new hxd.impl.TypedArray.Float32Array(count);$/;"	v
v	heaps/hxd/fmt/spine/Data.hx	/^	public var v : Float;$/;"	v
v	heaps/hxd/fmt/spine/Library.hx	/^				var v = new SkinnedVertice();$/;"	v
v	heaps/hxd/fmt/tiff/Data.hx	/^		var v = get(f, tag);$/;"	v
v	heaps/hxd/impl/BitsBuilder.hx	/^				var v = fget(macro (this.$field >> $v{offset}) & $v{mask});$/;"	v
v	heaps/hxd/impl/Properties.hx	/^					var v : Array<Float> = v;$/;"	v
v	heaps/hxd/impl/Properties.hx	/^					var v : String = v;$/;"	v
v	heaps/hxd/impl/Properties.hx	/^			var v : Dynamic = getField(props, f);$/;"	v
v	heaps/hxd/res/Atlas.hx	/^					var v = prop[1];$/;"	v
v	heaps/hxd/res/DynamicText.hx	/^								var v = a[i];$/;"	v
v	heaps/hxd/res/DynamicText.hx	/^					var v : Dynamic = Reflect.field(obj, f);$/;"	v
v	heaps/hxd/res/DynamicText.hx	/^					var v : Dynamic = parseXmlData(e);$/;"	v
v	heaps/hxd/res/Image.hx	/^				var v = (fourCC >>> 24) - "0".code;$/;"	v
v	heaps/hxd/snd/Manager.hx	/^			var v = c.currentVolume * volume;$/;"	v
v	heaps/hxd/snd/NativeChannel.hx	/^			var v = Std.int(fbuf.getFloat(i << 2) * 0x7FFF);$/;"	v
v	heaps/hxd/snd/openal/Driver.hx	/^		var v = source.sampleOffset + AL.getSourcei(source.inst, AL.SAMPLE_OFFSET);$/;"	v
v	heaps/hxd/snd/openal/Emulator.hx	/^				var v = data.get(i) \/ 0xFF;$/;"	v
v	heaps/hxd/snd/openal/Emulator.hx	/^				var v = sext16(data.getUInt16(i << 1)) \/ 0x8000;$/;"	v
v	heaps/hxsl/AgalOptim.hx	/^					var v = r.live[i];$/;"	v
v	heaps/hxsl/AgalOptim.hx	/^				var v = i2.values[r2.access.comp.getIndex()];$/;"	v
v	heaps/hxsl/AgalOptim.hx	/^				var v = v.clone();$/;"	v
v	heaps/hxsl/AgalOptim.hx	/^			var v = inf.values[s.getIndex()];$/;"	v
v	heaps/hxsl/AgalOut.hx	/^				var v = valloc[i];$/;"	v
v	heaps/hxsl/AgalOut.hx	/^			var v = expr(v);$/;"	v
v	heaps/hxsl/AgalOut.hx	/^			var v = valloc[found];$/;"	v
v	heaps/hxsl/AgalOut.hx	/^			var v = valloc[vid];$/;"	v
v	heaps/hxsl/Cache.hx	/^						var v = getVarRec(v, name, Param);$/;"	v
v	heaps/hxsl/Cache.hx	/^						var v = getVarRec(v, p.name, Global);$/;"	v
v	heaps/hxsl/Cache.hx	/^					var v = getVarRec(v, name, kind);$/;"	v
v	heaps/hxsl/Cache.hx	/^				var v = outVars.get(vname);$/;"	v
v	heaps/hxsl/Cache.hx	/^			var v = getVar(p);$/;"	v
v	heaps/hxsl/Cache.hx	/^			var v = outVars.get(path);$/;"	v
v	heaps/hxsl/Checker.hx	/^				var v : TVar = {$/;"	v
v	heaps/hxsl/Checker.hx	/^				var v = makeVar(v, e.pos);$/;"	v
v	heaps/hxsl/Checker.hx	/^				var v = vl[i];$/;"	v
v	heaps/hxsl/Checker.hx	/^			var v = vars.get(name);$/;"	v
v	heaps/hxsl/Checker.hx	/^			var v = vl[0];$/;"	v
v	heaps/hxsl/Dce.hx	/^				var v = affect[i];$/;"	v
v	heaps/hxsl/Dce.hx	/^			var v = get(v);$/;"	v
v	heaps/hxsl/Dce.hx	/^	public var v : TVar;$/;"	v
v	heaps/hxsl/DynamicShader.hx	/^				var v : Int = v;$/;"	v
v	heaps/hxsl/DynamicShader.hx	/^			var v : Dynamic = getParamValue(varIndexes.get(c.v.id));$/;"	v
v	heaps/hxsl/DynamicShader.hx	/^			var v : Dynamic = values[a.index];$/;"	v
v	heaps/hxsl/Eval.hx	/^					var v = f.args[i];$/;"	v
v	heaps/hxsl/Eval.hx	/^				var v = evalCall(g, args, eargs, e.p);$/;"	v
v	heaps/hxsl/Eval.hx	/^			var v = handleReturn(v, isFinal);$/;"	v
v	heaps/hxsl/Flatten.hx	/^	public var v : Null<TVar>;$/;"	v
v	heaps/hxsl/Linker.hx	/^				var v = allocVar(f.ref, f.expr.p);$/;"	v
v	heaps/hxsl/Linker.hx	/^				var v = allocVar(v, e1.p);$/;"	v
v	heaps/hxsl/Linker.hx	/^			var v : TVar = {$/;"	v
v	heaps/hxsl/Linker.hx	/^			var v = allocVar(v, e.p);$/;"	v
v	heaps/hxsl/Linker.hx	/^		var v = [], f = [];$/;"	v
v	heaps/hxsl/Linker.hx	/^	public var v : TVar;$/;"	v
v	heaps/hxsl/MacroParser.hx	/^					var v : Ast.VarDecl = {$/;"	v
v	heaps/hxsl/Macros.hx	/^					var v : Int = $p;$/;"	v
v	heaps/hxsl/Serializer.hx	/^			var v = TVECS.get(bits);$/;"	v
v	heaps/hxsl/Serializer.hx	/^			var v = readVar();$/;"	v
v	heaps/hxsl/Serializer.hx	/^		var v = varMap.get(id);$/;"	v
v	heaps/hxsl/Shader.hx	/^				var v : Bool = v;$/;"	v
v	heaps/hxsl/Shader.hx	/^				var v : Int = v;$/;"	v
v	heaps/hxsl/Shader.hx	/^				var v : hxsl.ChannelTexture = v;$/;"	v
v	heaps/hxsl/Shader.hx	/^			var v : Dynamic = globals.fastGet(c.globalId);$/;"	v
v	heaps/hxsl/SharedShader.hx	/^	public var v : TVar;$/;"	v
v	heaps/hxsl/Splitter.hx	/^			var v = inf.v;$/;"	v
v	heaps/hxsl/Splitter.hx	/^	public var v : TVar;$/;"	v
v	heaps/samples/SampleApp.hx	/^			var v = Std.parseFloat(tf.text);$/;"	v
v0	heaps/h2d/KeyFrames.hx	/^			var v0 = cur.data[index];$/;"	v
v0	heaps/hxsl/Checker.hx	/^					var v0 = vl.shift();$/;"	v
v1	heaps/h2d/KeyFrames.hx	/^			var v1 = next.data[index];$/;"	v
v1	heaps/h3d/Matrix.hx	/^			var v1 = new h3d.Vector($/;"	v
v1	heaps/h3d/prim/Sphere.hx	/^				var v1 = vertice(x + 1, y);$/;"	v
v1	heaps/hxd/Perlin.hx	/^		var v1 = linear(linear(ga, gb, xs), linear(gc, gd, xs), ys);$/;"	v
v2	heaps/h2d/Tile.hx	/^	var v2 : Float;$/;"	v
v2	heaps/h3d/Matrix.hx	/^			var v2 = new h3d.Vector($/;"	v
v2	heaps/h3d/Quat.hx	/^		var v2 = 1 - v;$/;"	v
v2	heaps/h3d/col/Polygon.hx	/^		var v2 = new h3d.col.Point(x - p0x,  y - p0y, z - p0z);$/;"	v
v2	heaps/h3d/prim/Sphere.hx	/^				var v2 = vertice(x, y);$/;"	v
v2	heaps/h3d/shader/pbr/BDRF.hx	/^			var v2 = dot(v, v);$/;"	v
v2	heaps/hxd/Perlin.hx	/^		var v2 = linear(linear(ga, gb, xs), linear(gc, gd, xs), ys);$/;"	v
v2	heaps/hxsl/AgalOptim.hx	/^			var v2 = r(v, false);$/;"	v
v2	heaps/hxsl/Checker.hx	/^				var v2 = null;$/;"	v
v2	heaps/hxsl/Clone.hx	/^		var v2 = varMap.get(v.id);$/;"	v
v2	heaps/hxsl/Eval.hx	/^						var v2 = mapVar(v);$/;"	v
v2	heaps/hxsl/Eval.hx	/^				var v2 = mapVar(v);$/;"	v
v2	heaps/hxsl/Eval.hx	/^			var v2 = mapVar(v);$/;"	v
v2	heaps/hxsl/Eval.hx	/^		var v2 = varMap.get(v);$/;"	v
v2	heaps/hxsl/Linker.hx	/^				var v2 = allocVar(v, null, s.name);$/;"	v
v2	heaps/hxsl/Linker.hx	/^		var v2 : TVar = {$/;"	v
v2	heaps/hxsl/Linker.hx	/^		var v2 = varMap.get(key);$/;"	v
v2	heaps/hxsl/Splitter.hx	/^			var v2 = varMap.get(v);$/;"	v
v2	heaps/hxsl/Splitter.hx	/^			var v2 = varMap.get(varMap.get(v));$/;"	v
v3	heaps/h3d/prim/Sphere.hx	/^				var v3 = vertice(x, y + 1);$/;"	v
v4	heaps/h3d/prim/Sphere.hx	/^				var v4 = vertice(x + 1, y + 1);$/;"	v
vAlignChildFlow	heaps/samples/Flows.hx	/^	var vAlignChildFlow : Array<Flow> = [];$/;"	v
vAligns	heaps/samples/Flows.hx	/^	var vAligns = [FlowAlign.Top, FlowAlign.Middle, FlowAlign.Bottom];$/;"	v
vAngle	heaps/h3d/scene/pbr/Environment.hx	/^			var vAngle = vOffset + calculatedUV.y * fovY;$/;"	v
vOffset	heaps/h3d/scene/pbr/Environment.hx	/^			var vOffset = (PI - fovY) * 0.5;$/;"	v
vSize	heaps/h2d/Particles.hx	/^	public var vSize : Float;$/;"	v
vUV	heaps/h3d/shader/SAO.hx	/^			var vUV = input.uv;$/;"	v
va	heaps/h2d/col/Voronoi.hx	/^			var va = edge.va,$/;"	v
va	heaps/h2d/col/Voronoi.hx	/^		var va = edge.va,$/;"	v
va	heaps/h2d/col/Voronoi.hx	/^	public var va : Null<Point>;$/;"	v
va	heaps/hxd/fs/FileConverter.hx	/^			var va = Reflect.field(a,f);$/;"	v
val	heaps/h3d/shader/Blur.hx	/^				var val = 0.;$/;"	v
val	heaps/hxd/clipper/Clipper.hx	/^	public var val : T;$/;"	v
val	heaps/hxd/poly2tri/Orientation.hx	/^		var val = detleft - detright;$/;"	v
val	heaps/hxsl/AgalOut.hx	/^					var val = val.clone();$/;"	v
valID	heaps/hxd/Pad.hx	/^					var valID = p.values.length;$/;"	v
validBakedTexture	heaps/h3d/pass/PointShadowMap.hx	/^		var validBakedTexture = (staticTexture != null && staticTexture.width == dynamicTex.width);$/;"	v
validBakedTexture	heaps/h3d/pass/SpotShadowMap.hx	/^		var validBakedTexture = (staticTexture != null && staticTexture.width == texture.width);$/;"	v
validateNodes	heaps/h2d/HtmlText.hx	/^	function validateNodes( xml : Xml ) {$/;"	f
validateText	heaps/h2d/HtmlText.hx	/^	override function validateText() {$/;"	f
validateText	heaps/h2d/Text.hx	/^	function validateText() {$/;"	f
valign	heaps/h2d/Flow.hx	/^				var valign = p.verticalAlign == null ? valign : p.verticalAlign;$/;"	v
valign	heaps/h2d/Flow.hx	/^			var valign = verticalAlign == null ? Bottom : verticalAlign;$/;"	v
valign	heaps/h2d/Flow.hx	/^			var valign = verticalAlign == null ? Top : verticalAlign;$/;"	v
valign	heaps/samples/ScaleMode2D.hx	/^		var valign:ScaleModeAlign = Center;$/;"	v
valloc	heaps/hxsl/AgalOut.hx	/^		var valloc : Array<Array<C>> = [];$/;"	v
vals	heaps/hxd/res/Atlas.hx	/^						var vals = v.split(", ");$/;"	v
vals	heaps/hxsl/Ast.hx	/^			var vals = [for( a in args ) evalConst(a)];$/;"	v
value	heaps/h2d/CdbLevel.hx	/^	public var value : Dynamic;$/;"	v
value	heaps/h2d/Slider.hx	/^	public var value(default, set) : Float = 0;$/;"	v
value	heaps/h3d/impl/Benchmark.hx	/^	public var value : Float;$/;"	v
value	heaps/h3d/mat/MaterialDatabase.hx	/^		var value = try haxe.Json.parse(hxd.res.Loader.currentInstance.load(file).toText()) catch( e :/;"	v
value	heaps/h3d/scene/RenderContext.hx	/^	public var value : Dynamic;$/;"	v
value	heaps/hxd/fmt/grd/Reader.hx	/^		var value : Dynamic;$/;"	v
value	heaps/hxd/fmt/grd/Reader.hx	/^		var value = i.readString(len);$/;"	v
value	heaps/hxd/fmt/hbson/Writer.hx	/^				var value : Array<Dynamic> = value;$/;"	v
value	heaps/hxd/fmt/hbson/Writer.hx	/^			var value : Int = value;$/;"	v
value	heaps/hxd/fmt/tiff/Reader.hx	/^				var value = if( count == 1 || type == Ascii ) readValue(type) else VArray([for( i in 0...cou/;"	v
value	heaps/hxd/fs/FileConverter.hx	/^			var value : Dynamic = Reflect.field(obj,f);$/;"	v
value	heaps/hxd/poly2tri/Node.hx	/^	public var value:Float;$/;"	v
value	heaps/hxd/res/DynamicText.hx	/^				var value : Dynamic = DATA;$/;"	v
value	heaps/hxd/res/NanoJpeg.hx	/^		var value = njShowBits(16);$/;"	v
value	heaps/hxd/res/NanoJpeg.hx	/^		var value, coef = 0;$/;"	v
value	heaps/hxd/snd/effect/Pitch.hx	/^	public var value : Float;$/;"	v
value	heaps/hxsl/DynamicShader.hx	/^		var value : Dynamic = null;$/;"	v
valueMove	heaps/hxd/Math.hx	/^	public static inline function valueMove( v : Float, target : Float, max : Float ) {$/;"	f
valueStr	heaps/hxd/impl/Properties.hx	/^	function valueStr( v : Dynamic ) {$/;"	f
values	heaps/h3d/pass/Blur.hx	/^	var values : Array<Float>;$/;"	v
values	heaps/h3d/shader/Blur.hx	/^		@param var values : Array<Float,Quality>;$/;"	v
values	heaps/hxd/Pad.hx	/^	public var values : Array<Float> = [];$/;"	v
values	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var values = dataCurves[0].get("KeyValueFloat").getFloats();$/;"	v
values	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var values = ids.get(curves.get(cname)).get("KeyValueFloat").getFloats();$/;"	v
values	heaps/hxd/fmt/fbx/Geometry.hx	/^			var values = v.get("UV").getFloats();$/;"	v
values	heaps/hxd/fmt/spine/Library.hx	/^					var values = new haxe.ds.Vector(bd.rotate.length * 2);$/;"	v
values	heaps/hxd/fmt/spine/Library.hx	/^					var values = new haxe.ds.Vector(bd.scale.length * 3);$/;"	v
values	heaps/hxd/fmt/spine/Library.hx	/^					var values = new haxe.ds.Vector(bd.translate.length * 3);$/;"	v
values	heaps/hxsl/AgalOptim.hx	/^	public var values : Array<Reg>;$/;"	v
values	heaps/hxsl/DynamicShader.hx	/^	var values = new Array<Dynamic>();$/;"	v
values	heaps/samples/ShaderAdvanced.hx	/^		var values : Map<hxd.PixelFormat,String> = [$/;"	v
varAccess	heaps/hxsl/HlslOut.hx	/^	var varAccess : Map<Int,String>;$/;"	v
varId	heaps/hxsl/Printer.hx	/^	var varId : Bool;$/;"	v
varIdMap	heaps/hxsl/Linker.hx	/^	var varIdMap : Map<Int,Int>;$/;"	v
varIndexes	heaps/hxsl/DynamicShader.hx	/^	var varIndexes = new Map<Int,Int>();$/;"	v
varMap	heaps/hxsl/AgalOut.hx	/^	var varMap : Map<Int, Reg>;$/;"	v
varMap	heaps/hxsl/Clone.hx	/^	public var varMap : Map<Int,TVar>;$/;"	v
varMap	heaps/hxsl/Eval.hx	/^	public var varMap : Map<TVar,TVar>;$/;"	v
varMap	heaps/hxsl/Flatten.hx	/^	var varMap : Map<TVar,Alloc>;$/;"	v
varMap	heaps/hxsl/Linker.hx	/^		var varMap = new Map();$/;"	v
varMap	heaps/hxsl/Linker.hx	/^	var varMap : Map<String,AllocatedVar>;$/;"	v
varMap	heaps/hxsl/Serializer.hx	/^	var varMap : Map<Int, TVar>;$/;"	v
varMap	heaps/hxsl/Splitter.hx	/^	var varMap : Map<TVar,TVar>;$/;"	v
varName	heaps/hxsl/GlslOut.hx	/^	function varName( v : TVar ) {$/;"	f
varName	heaps/hxsl/HlslOut.hx	/^	function varName( v : TVar ) {$/;"	f
varNames	heaps/hxsl/DynamicShader.hx	/^	var varNames = new Map<String,Int>();$/;"	v
varNames	heaps/hxsl/GlslOut.hx	/^	public var varNames : Map<Int,String>;$/;"	v
varNames	heaps/hxsl/HlslOut.hx	/^	public var varNames : Map<Int,String>;$/;"	v
varNames	heaps/hxsl/Splitter.hx	/^	var varNames : Map<String,TVar>;$/;"	v
varSize	heaps/hxsl/Flatten.hx	/^	function varSize( v : Type, t : VecType ) {$/;"	f
varString	heaps/hxsl/Printer.hx	/^	public function varString( v : TVar ) {$/;"	f
vargs	heaps/h2d/Console.hx	/^		var vargs = new Array<Dynamic>();$/;"	v
varids	heaps/tools/hxsl/Main.hx	/^		var varids : js.html.InputElement = cast doc.getElementById("varids");$/;"	v
vars	heaps/h3d/impl/Stage3dDriver.hx	/^						var vars = [];$/;"	v
vars	heaps/hxd/res/DynamicText.hx	/^			var vars = x.innerHTML.split("::");$/;"	v
vars	heaps/hxsl/Ast.hx	/^	var vars : Array<TVar>;$/;"	v
vars	heaps/hxsl/CacheFile.hx	/^			var vars : Array<hxsl.Output> = unserialize();$/;"	v
vars	heaps/hxsl/Checker.hx	/^		var vars = Lambda.array(vars);$/;"	v
vars	heaps/hxsl/Checker.hx	/^	var vars : Map<String,TVar>;$/;"	v
vars	heaps/hxsl/Printer.hx	/^			var vars = new Map();$/;"	v
vars	heaps/hxsl/Splitter.hx	/^	var vars : Map<Int,VarProps>;$/;"	v
vars	heaps/tools/hxsl/Main.hx	/^			var vars : Dynamic = new hscript.Interp().execute(parser.parseString(vars));$/;"	v
vars	heaps/tools/hxsl/Main.hx	/^		var vars = vars.value;$/;"	v
vars	heaps/tools/hxsl/Main.hx	/^	var vars : js.html.TextAreaElement;$/;"	v
varying	heaps/hxsl/AgalOut.hx	/^		var varying = [];$/;"	v
vb	heaps/h2d/col/Voronoi.hx	/^		var vb = edge.vb;$/;"	v
vb	heaps/h2d/col/Voronoi.hx	/^	public var vb : Null<Point>;$/;"	v
vb	heaps/hxd/fs/FileConverter.hx	/^				var vb = Reflect.field(b,f);$/;"	v
vbuf	heaps/h3d/impl/DirectXDriver.hx	/^			var vbuf = @:privateAccess bl.buffer.buffer.vbuf;$/;"	v
vbuf	heaps/h3d/impl/DirectXDriver.hx	/^		var vbuf = @:privateAccess buffer.buffer.vbuf;$/;"	v
vbuf	heaps/h3d/impl/ManagedBuffer.hx	/^	var vbuf : Driver.VertexBuffer;$/;"	v
vbuf	heaps/h3d/impl/Stage3dDriver.hx	/^				var vbuf = @:privateAccess b.buffer.buffer.vbuf;$/;"	v
vbuf	heaps/h3d/impl/Stage3dDriver.hx	/^	var vbuf : flash.display3D.VertexBuffer3D;$/;"	v
vbuf	heaps/h3d/parts/GpuParticles.hx	/^		var vbuf = primitiveBuffers[groups.indexOf(g)];$/;"	v
vbuf	heaps/h3d/prim/DynamicPrimitive.hx	/^	var vbuf : hxd.FloatBuffer;$/;"	v
vbuf	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var vbuf = new hxd.FloatBuffer();$/;"	v
vbuf	heaps/hxd/fmt/hmd/Library.hx	/^		var vbuf = data.vertexes;$/;"	v
vbuf	heaps/hxd/fmt/hmd/Library.hx	/^		var vbuf = haxe.io.Bytes.alloc(vsize);$/;"	v
vbuffer	heaps/hxsl/Cache.hx	/^		var vbuffer = declVar("Batch_Buffer",TBuffer(TVec(4,VFloat),SVar(vcount)),Param);$/;"	v
vcolor	heaps/h3d/scene/Graphics.hx	/^		var vcolor = new h3d.shader.VertexColorAlpha();$/;"	v
vcount	heaps/h3d/prim/RawPrimitive.hx	/^	var vcount : Int;$/;"	v
vcount	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var vcount = Std.int(geom.getVertices().length \/ 3);$/;"	v
vcount	heaps/hxd/fmt/fbx/Geometry.hx	/^		var vcount = Std.int(vl.length \/ 3);$/;"	v
vcount	heaps/hxsl/Cache.hx	/^		var vcount = declVar("Batch_Count",TInt,Param);$/;"	v
vd	heaps/h3d/mat/PbrMaterial.hx	/^			var vd = mainPass.getShader(h3d.shader.VolumeDecal);$/;"	v
vd	heaps/hxsl/Dce.hx	/^		var vd = get(v);$/;"	v
vd	heaps/hxsl/Dce.hx	/^		var vd = used.get(v.id);$/;"	v
vdata	heaps/h3d/impl/Stage3dDriver.hx	/^		var vdata = cachedShader.vertex.getData();$/;"	v
vdesc	heaps/h3d/impl/DirectXDriver.hx	/^		var vdesc = new ShaderResourceViewDesc();$/;"	v
vec	heaps/hxd/Pixels.hx	/^		var vec = new haxe.ds.Vector<Int>(width * height);$/;"	v
vec2	heaps/hxsl/Checker.hx	/^	static var vec2 = TVec(2, VFloat);$/;"	v
vec3	heaps/hxsl/Checker.hx	/^	static var vec3 = TVec(3, VFloat);$/;"	v
vec4	heaps/hxsl/Checker.hx	/^	static var vec4 = TVec(4, VFloat);$/;"	v
vect	heaps/hxd/fmt/fbx/Geometry.hx	/^		var vect = root.get(layer + "." + name, opt);$/;"	v
velocity	heaps/hxd/snd/Listener.hx	/^	public var velocity : h3d.Vector;$/;"	v
velocity	heaps/hxd/snd/effect/Spatialization.hx	/^	public var velocity  : h3d.Vector;$/;"	v
version	heaps/h3d/impl/DirectXDriver.hx	/^		var version = Driver.getSupportedVersion();$/;"	v
version	heaps/h3d/parts/GpuParticles.hx	/^	var version : Int;$/;"	v
version	heaps/haxelib.json	/^    "version" : "1.9.1",$/;"	s
version	heaps/hxd/fmt/blend/Data.hx	/^	public var version:String;$/;"	v
version	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var version : Float = 0.;$/;"	v
version	heaps/hxd/fmt/grd/Reader.hx	/^	var version : Int;$/;"	v
version	heaps/hxd/fmt/hmd/Data.hx	/^	public var version : Int;$/;"	v
version	heaps/hxd/fmt/hmd/Reader.hx	/^	var version : Int;$/;"	v
version	heaps/hxd/fmt/hmd/Writer.hx	/^	var version : Int;$/;"	v
version	heaps/hxd/fmt/pak/Data.hx	/^	public var version : Int;$/;"	v
version	heaps/hxd/fs/Convert.hx	/^	public var version(default, null) : Int;$/;"	v
version	heaps/hxsl/AgalOut.hx	/^	var version : Int;$/;"	v
version	heaps/hxsl/CacheFile.hx	/^				var version = getShaderVersion(i.shader);$/;"	v
version	heaps/hxsl/CacheFile.hx	/^			var version = readString();$/;"	v
version	heaps/hxsl/CacheFile.hx	/^		var version = f.readInt32();$/;"	v
version	heaps/hxsl/GlslOut.hx	/^	public var version : Null<Int>;$/;"	v
version	heaps/tools/hxsl/Main.hx	/^			var version : String = gl.getParameter(GL.SHADING_LANGUAGE_VERSION);$/;"	v
vert	heaps/h2d/domkit/Style.hx	/^			var vert = h2d.Tile.fromColor(0xFF0000, 1, h);$/;"	v
vertCount	heaps/tools/mikktspace/Mikktspace.hx	/^		var vertCount = input.readInt32();$/;"	v
vertex	heaps/h3d/impl/DirectXDriver.hx	/^			var vertex = compileShader(shader.vertex);$/;"	v
vertex	heaps/h3d/impl/DirectXDriver.hx	/^	public var vertex : ShaderContext;$/;"	v
vertex	heaps/h3d/impl/GlDriver.hx	/^	public var vertex : Bool;$/;"	v
vertex	heaps/h3d/impl/GlDriver.hx	/^	public var vertex : CompiledShader;$/;"	v
vertex	heaps/h3d/impl/Stage3dDriver.hx	/^		var vertex = compileShader(shader.vertex, []).agal;$/;"	v
vertex	heaps/h3d/pass/HardwarePick.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/AmbientLight.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/AnimatedTexture.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Base2d.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/BaseMesh.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Buffers.hx	/^	public var vertex : ShaderBuffers;$/;"	v
vertex	heaps/h3d/shader/DirLight.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/GpuParticle.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/LineShader.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Outline.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Parallax.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/ParticleShader.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/PointLight.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/ScreenShader.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Skin.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/SkinTangent.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Texture.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/Texture2.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/UVAnim.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/UVDelta.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/UVScroll.hx	/^		function vertex() {$/;"	f
vertex	heaps/h3d/shader/ZCut.hx	/^		function vertex() {$/;"	f
vertex	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var vertex = subDef.get("Indexes").getInts();$/;"	v
vertex	heaps/hxsl/CacheFile.hx	/^			var vertex = readString();$/;"	v
vertex	heaps/hxsl/CacheFile.hx	/^		function vertex() {$/;"	f
vertex	heaps/hxsl/Linker.hx	/^	public var vertex : Null<Bool>;$/;"	v
vertex	heaps/hxsl/RuntimeShader.hx	/^	public var vertex : Bool;$/;"	v
vertex	heaps/hxsl/RuntimeShader.hx	/^	public var vertex : RuntimeShaderData;$/;"	v
vertex	heaps/samples/ShaderAdvanced.hx	/^		function vertex() {$/;"	f
vertexCount	heaps/h3d/anim/Skin.hx	/^	public var vertexCount(default, null) : Int;$/;"	v
vertexCount	heaps/h3d/prim/BigPrimitive.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/HMDModel.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/Plane2D.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/Polygon.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/Primitive.hx	/^	public function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/Quads.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/prim/RawPrimitive.hx	/^	override function vertexCount() {$/;"	f
vertexCount	heaps/h3d/scene/World.hx	/^			var vertexCount = Std.int(buf.length\/stride);$/;"	v
vertexCount	heaps/h3d/scene/World.hx	/^	public var vertexCount : Int;$/;"	v
vertexCount	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^		function vertexCount():Int; function setSkin(s:h3d.anim.Skin):Void;$/;"	f
vertexCount	heaps/hxd/fmt/hmd/Data.hx	/^	public var vertexCount : Int;$/;"	v
vertexFormat	heaps/hxd/fmt/hmd/Data.hx	/^	public var vertexFormat : Array<GeometryFormat>;$/;"	v
vertexJoints	heaps/h3d/anim/Skin.hx	/^	public var vertexJoints : haxe.ds.Vector<Int>;$/;"	v
vertexPosition	heaps/hxd/fmt/hmd/Data.hx	/^	public var vertexPosition : DataPosition;$/;"	v
vertexRemap	heaps/h3d/scene/World.hx	/^			var vertexRemap = new haxe.ds.Vector(vertexCount);$/;"	v
vertexRemap	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var vertexRemap = new Array<Int>();$/;"	v
vertexShader	heaps/h3d/impl/DirectXDriver.hx	/^	var vertexShader : PipelineState;$/;"	v
vertexSource	heaps/tools/hxsl/Main.hx	/^			var vertexSource = glsl.run(r.vertex.data);$/;"	v
vertexStride	heaps/hxd/fmt/hmd/Data.hx	/^	public var vertexStride : Int;$/;"	v
vertexTransformedNormal	heaps/h3d/shader/Parallax.hx	/^		var vertexTransformedNormal : Vec3;$/;"	v
vertexWeights	heaps/h3d/anim/Skin.hx	/^	public var vertexWeights : haxe.ds.Vector<Float>;$/;"	v
vertexes	heaps/h3d/prim/Polygon.hx	/^		var vertexes = new haxe.ds.Vector<hxd.impl.Float32>(points.length * 3);$/;"	v
vertexes	heaps/hxd/fmt/hmd/Library.hx	/^			var vertexes = new hxd.FloatBuffer();$/;"	v
vertexes	heaps/hxd/fmt/hmd/Library.hx	/^	public var vertexes : haxe.ds.Vector<hxd.impl.Float32>;$/;"	v
vertical	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var vertical : Bool;$/;"	v
verticalAlign	heaps/h2d/Flow.hx	/^	public var verticalAlign : Null<FlowAlign>;$/;"	v
verticalAlign	heaps/h2d/Flow.hx	/^	public var verticalAlign(default,set) : Null<FlowAlign>;$/;"	v
verticalAlign	heaps/h2d/ObjectFollower.hx	/^	public var verticalAlign : h2d.Flow.FlowAlign = Top;$/;"	v
verticalSpacing	heaps/h2d/Flow.hx	/^	public var verticalSpacing(default, set) : Int = 0;$/;"	v
vertice	heaps/h3d/prim/Sphere.hx	/^				inline function vertice(x, y) return x + y * (segsW + 1);$/;"	f
vertices	heaps/h2d/col/Voronoi.hx	/^	var vertices : Array<Point>;$/;"	v
vertices	heaps/h3d/Buffer.hx	/^	public var vertices(default,null) : Int;$/;"	v
vertices	heaps/hxd/fmt/spine/Data.hx	/^	public var vertices : Array<SkinnedVertice> = [];$/;"	v
vertices	heaps/hxd/fmt/spine/JsonData.hx	/^	var vertices : Array<Float>;$/;"	v
vertices	heaps/hxd/fmt/spine/Library.hx	/^			var vertices = j.vertices;$/;"	v
vertices	heaps/hxd/poly2tri/VisiblePolygon.hx	/^		var vertices = new Array();$/;"	v
verts	heaps/hxd/fmt/fbx/Geometry.hx	/^		var verts = getVertices();$/;"	v
verts	heaps/hxd/fmt/fbx/HMDOut.hx	/^		var verts = geom.getVertices();$/;"	v
vfun	heaps/hxsl/Splitter.hx	/^		var vfun = null, vvars = new Map();$/;"	v
vgl	heaps/tools/hxsl/Main.hx	/^			var vgl = compile(vertexSource, GL.VERTEX_SHADER);$/;"	v
vid	heaps/h3d/anim/Skin.hx	/^				var vid = index[iid + i];$/;"	v
vid	heaps/h3d/prim/Polygon.hx	/^		var vid = 0;$/;"	v
vid	heaps/hxd/fmt/fbx/Geometry.hx	/^				var vid = i;$/;"	v
vid	heaps/hxd/fmt/hmd/Library.hx	/^				var vid = isSmall ? (ibuf.get(r++) | (ibuf.get(r++) << 8)) : ibuf.getInt32(i<<2);$/;"	v
vid	heaps/hxsl/DynamicShader.hx	/^		var vid = isFloat ? floats.length : values.length;$/;"	v
vid	heaps/hxsl/DynamicShader.hx	/^		var vid = varNames.get(field);$/;"	v
vid	heaps/hxsl/Linker.hx	/^		var vid = allVars.length + 1;$/;"	v
video	heaps/samples/Video.hx	/^	var video : h2d.Video;$/;"	v
videoHeight	heaps/h2d/Video.hx	/^	public var videoHeight(default, null) : Int;$/;"	v
videoPlaying	heaps/h2d/Video.hx	/^	var videoPlaying : Bool;$/;"	v
videoTime	heaps/h2d/Video.hx	/^	var videoTime : Float;$/;"	v
videoTimeupdate	heaps/h2d/Video.hx	/^	var videoTimeupdate : Bool;$/;"	v
videoWidth	heaps/h2d/Video.hx	/^	public var videoWidth(default, null) : Int;$/;"	v
vids	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var vids = lookup.get(itotal);$/;"	v
vidx	heaps/h3d/scene/World.hx	/^			var vidx = 0;$/;"	v
vidx	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var vidx = index[k];$/;"	v
vidx	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var vidx = index.vidx[i];$/;"	v
vidx	heaps/hxd/fmt/hmd/Library.hx	/^				var vidx = data.indexes[idx];$/;"	v
vidx	heaps/hxsl/DynamicShader.hx	/^		var vidx = accesses.length;$/;"	v
vidx	heaps/hxsl/DynamicShader.hx	/^		var vidx = varIndexes.get(p.id);$/;"	v
view	heaps/h2d/Object.hx	/^		var view = ctx.tmpBounds;$/;"	v
view	heaps/h3d/impl/DirectXDriver.hx	/^				var view = t.t.view;$/;"	v
view	heaps/h3d/impl/DirectXDriver.hx	/^		var view = Driver.createShaderResourceView(tex, vdesc);$/;"	v
view	heaps/h3d/shader/BaseMesh.hx	/^			var view : Mat4;$/;"	v
view	heaps/h3d/shader/LineShader.hx	/^			var view : Mat4;$/;"	v
view	heaps/h3d/shader/pbr/DefaultForward.hx	/^		var view : Vec3;$/;"	v
view	heaps/h3d/shader/pbr/PropsDefinition.hx	/^		var view : Vec3;$/;"	v
view	heaps/samples/CollideCheck.hx	/^		var view = new h2d.Bitmap(h2d.Tile.fromPixels(bmp));$/;"	v
view.mybox	heaps/samples/domkit_res/style.css	/^view.mybox {$/;"	c
viewA	heaps/h2d/RenderContext.hx	/^	var viewA : Float;$/;"	v
viewB	heaps/h2d/RenderContext.hx	/^	var viewB : Float;$/;"	v
viewC	heaps/h2d/RenderContext.hx	/^	var viewC : Float;$/;"	v
viewD	heaps/h2d/RenderContext.hx	/^	var viewD : Float;$/;"	v
viewH	heaps/h2d/Camera.hx	/^	var viewH : Float;$/;"	v
viewNS	heaps/h3d/shader/Parallax.hx	/^			var viewNS : Vec3;$/;"	v
viewProj	heaps/h3d/shader/BaseMesh.hx	/^			var viewProj : Mat4;$/;"	v
viewProj	heaps/h3d/shader/LineShader.hx	/^			var viewProj : Mat4;$/;"	v
viewProj	heaps/h3d/shader/ParticleShader.hx	/^			var viewProj : Mat4;$/;"	v
viewW	heaps/h2d/Camera.hx	/^	var viewW : Float;$/;"	v
viewWS	heaps/h3d/shader/Parallax.hx	/^			var viewWS = (camera.position - transformedPosition).normalize();$/;"	v
viewX	heaps/h2d/Camera.hx	/^	var viewX : Float;$/;"	v
viewX	heaps/h2d/RenderContext.hx	/^	var viewX : Float;$/;"	v
viewX	heaps/h3d/Camera.hx	/^	public var viewX : Float = 0.;$/;"	v
viewY	heaps/h2d/Camera.hx	/^	var viewY : Float;$/;"	v
viewY	heaps/h2d/RenderContext.hx	/^	var viewY : Float;$/;"	v
viewY	heaps/h3d/Camera.hx	/^	public var viewY : Float = 0.;$/;"	v
viewport	heaps/h3d/impl/DirectXDriver.hx	/^	var viewport : hl.BytesAccess<hl.F32> = new hl.Bytes(4 * VIEWPORTS_ELTS);$/;"	v
viewport	heaps/h3d/pass/HardwarePick.hx	/^		@param var viewport : Vec4;$/;"	v
viewportA	heaps/h2d/Scene.hx	/^	var viewportA(default, null) : Float;$/;"	v
viewportA	heaps/h3d/shader/Base2d.hx	/^		@param var viewportA : Vec3;$/;"	v
viewportB	heaps/h3d/shader/Base2d.hx	/^		@param var viewportB : Vec3;$/;"	v
viewportD	heaps/h2d/Scene.hx	/^	var viewportD(default, null) : Float;$/;"	v
viewportHeight	heaps/h2d/Camera.hx	/^	public var viewportHeight(get, set) : Float;$/;"	v
viewportScaleX	heaps/h2d/Scene.hx	/^	public var viewportScaleX(default, null) : Float;$/;"	v
viewportScaleY	heaps/h2d/Scene.hx	/^	public var viewportScaleY(default, null) : Float;$/;"	v
viewportWidth	heaps/h2d/Camera.hx	/^	public var viewportWidth(get, set) : Float;$/;"	v
viewportX	heaps/h2d/Camera.hx	/^	public var viewportX(get, set) : Float;$/;"	v
viewportX	heaps/h2d/Scene.hx	/^	var viewportX(default, null) : Float;$/;"	v
viewportY	heaps/h2d/Camera.hx	/^	public var viewportY(get, set) : Float;$/;"	v
viewportY	heaps/h2d/Scene.hx	/^	var viewportY(default, null) : Float;$/;"	v
visibility	heaps/h3d/shader/GpuParticle.hx	/^		var visibility : Float;$/;"	v
visible	heaps/h2d/Camera.hx	/^	public var visible : Bool;$/;"	v
visible	heaps/h2d/Object.hx	/^	public var visible(default, set) : Bool = true;$/;"	v
visible	heaps/h2d/Scene.hx	/^			var visible = true;$/;"	v
visible	heaps/h2d/SpriteBatch.hx	/^	public var visible : Bool = true;$/;"	v
visible	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var visible : Bool = true;$/;"	v
visible	heaps/h3d/scene/Object.hx	/^	public var visible(get, set) : Bool;$/;"	v
visible	heaps/h3d/scene/World.hx	/^			var visible = ctx.computingStatic || c.bounds.inFrustum(ctx.camera.frustum);$/;"	v
visibleFlag	heaps/h3d/scene/RenderContext.hx	/^	public var visibleFlag : Bool;$/;"	v
vl	heaps/h3d/scene/World.hx	/^				var vl = data.vertexes;$/;"	v
vl	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var vl = toFloats(c.get("KeyValueFloat"));$/;"	v
vl	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var vl = [for( v in vl ) (v:Float)];$/;"	v
vl	heaps/hxd/fmt/fbx/Geometry.hx	/^		var vl = getVertices();$/;"	v
vl	heaps/hxsl/Checker.hx	/^			var vl = vl.copy();$/;"	v
vlc	heaps/hxd/res/NanoJpeg.hx	/^			var vlc = vlctab[i];$/;"	v
vlcCode	heaps/hxd/res/NanoJpeg.hx	/^	var vlcCode : Int;$/;"	v
vlctab	heaps/hxd/res/NanoJpeg.hx	/^	var vlctab : haxe.ds.Vector<haxe.io.Bytes>;$/;"	v
vmap	heaps/hxd/fmt/hmd/Library.hx	/^			var vmap = new haxe.ds.Vector(geom.vertexCount);$/;"	v
vn	heaps/h3d/shader/SAO.hx	/^			var vn = dot(v, normal) - (bias * sampleRadius);$/;"	v
vname	heaps/hxsl/Linker.hx	/^		var vname = v.name;$/;"	v
vnew	heaps/hxd/res/DynamicText.hx	/^					var vnew = applyText(path, Reflect.field(obj, id), x, ref == null ? null : refIds.get(id), /;"	v
vobj	heaps/hxsl/DynamicShader.hx	/^			var vobj = {};$/;"	v
voffset	heaps/hxsl/Cache.hx	/^		var voffset = declVar("Batch_Offset", TInt, Local);$/;"	v
volume	heaps/hxd/res/BDFFont.hx	/^		var volume : Int = 0;$/;"	v
volume	heaps/hxd/snd/ChannelBase.hx	/^	public var volume(default, set) : Float = 1.;$/;"	v
volume	heaps/hxd/snd/Manager.hx	/^		var volume = hasMasterVolume ? 1. : masterVolume;$/;"	v
volume	heaps/hxd/snd/Manager.hx	/^	public var volume  = -1.0;$/;"	v
volume	heaps/hxd/snd/SoundGroup.hx	/^	public var volume               : Float;$/;"	v
volume	heaps/hxd/snd/effect/Spatialization.hx	/^		var volume = 1 - dist \/ fadeDistance;$/;"	v
volume	heaps/hxd/snd/effect/Spatialization.hx	/^		var volume = referenceDistance\/(referenceDistance + rollOffFactor * (dist - referenceDistance/;"	v
volume	heaps/hxd/snd/openal/Emulator.hx	/^			var volume = #if js 1.0 #else source.volume #end;$/;"	v
volume	heaps/hxd/snd/openal/Emulator.hx	/^	public var volume : F32 = 1.;$/;"	v
volumeBounds	heaps/h3d/parts/GpuParticles.hx	/^	public var volumeBounds(default, set) : h3d.col.Bounds;$/;"	v
volumeMin	heaps/h3d/shader/GpuParticle.hx	/^		@param var volumeMin : Vec3;$/;"	v
volumeSize	heaps/h3d/shader/GpuParticle.hx	/^		@param var volumeSize : Vec3;$/;"	v
vout	heaps/hxd/fmt/fbx/Geometry.hx	/^		var vout = [], iout = [];$/;"	v
vout	heaps/hxd/fmt/hmd/Library.hx	/^				var vout = vidx * 3;$/;"	v
vout	heaps/hxsl/Linker.hx	/^				var vout = [];$/;"	v
vp	heaps/hxsl/Cache.hx	/^					var vp = parentVars.get(path);$/;"	v
vp	heaps/hxsl/Splitter.hx	/^				var vp = new VarProps(nv);$/;"	v
vpos	heaps/hxd/res/NanoJpeg.hx	/^			var vpos = 0;$/;"	v
vprev	heaps/hxd/impl/Properties.hx	/^					var vprev : h3d.Vector = vprev;$/;"	v
vprev	heaps/hxd/impl/Properties.hx	/^			var vprev : Dynamic = getField(obj, f);$/;"	v
vr	heaps/h2d/Particles.hx	/^	public var vr : Float;$/;"	v
vreal	heaps/hxsl/Cache.hx	/^			var vreal : TVar = declVar(v.name, v.type, Local);$/;"	v
vrot	heaps/h2d/Particles.hx	/^		var vrot = g.rotSpeed * (1 + rand() * g.rotSpeedRand) * (srand() < 0 ? -1 : 1);$/;"	v
vs2	heaps/hxsl/Eval.hx	/^				var vs2 = mapVar(vs);$/;"	v
vsize	heaps/h3d/parts/GpuParticles.hx	/^		var vsize = g.sizeIncr, vrot = g.rotSpeed * (1 + rand() * g.rotSpeedRand) * (srand() < 0 ? -1 /;"	v
vsize	heaps/h3d/prim/DynamicPrimitive.hx	/^	var vsize : Int;$/;"	v
vsize	heaps/hxd/fmt/hmd/Library.hx	/^		var vsize = geom.vertexCount * geom.vertexStride * 4;$/;"	v
vspacing	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var vspacing : Int;$/;"	v
vst	heaps/h3d/impl/Benchmark.hx	/^						var vst = 1e9 \/ hxd.System.getDefaultFrameRate() - totalTime;$/;"	v
vstr	heaps/h2d/domkit/Style.hx	/^				var vstr = v == null ? "???" : StringTools.htmlEscape(domkit.CssParser.valueStr(v));$/;"	v
vsync	heaps/hxd/Window.flash.hx	/^	public var vsync(get, set) : Bool;$/;"	v
vsync	heaps/hxd/Window.hl.hx	/^	public var vsync(get, set) : Bool;$/;"	v
vsync	heaps/hxd/Window.hx	/^	public var vsync(get, set) : Bool;$/;"	v
vsync	heaps/hxd/Window.js.hx	/^	public var vsync(get, set) : Bool;$/;"	v
vtmp	heaps/hxd/fmt/hmd/Library.hx	/^		var vtmp = new h3d.Vector();$/;"	v
vv	heaps/h3d/shader/SAO.hx	/^			var vv = dot(v, v);$/;"	v
vvars	heaps/hxsl/Splitter.hx	/^		var vvars = [for( v in vvars ) if( !v.local ) v.v];$/;"	v
vw	heaps/h3d/Matrix.hx	/^		var vw = _14 * x + _24 * y + _34 * z + _44;$/;"	v
vw0	heaps/hxd/fmt/spine/Data.hx	/^	public var vw0 : Float;$/;"	v
vw1	heaps/hxd/fmt/spine/Data.hx	/^	public var vw1 : Float;$/;"	v
vw2	heaps/hxd/fmt/spine/Data.hx	/^	public var vw2 : Float;$/;"	v
vx	heaps/h2d/Particles.hx	/^	public var vx : Float;$/;"	v
vx	heaps/h2d/SpriteBatch.hx	/^	public var vx : Float = 0.;$/;"	v
vx	heaps/h2d/col/Voronoi.hx	/^			var vx = v.x;$/;"	v
vx	heaps/h3d/Matrix.hx	/^		var vx = _11 * x + _21 * y + _31 * z + _41;$/;"	v
vx	heaps/h3d/parts/Data.hx	/^	public var vx : Value;$/;"	v
vx	heaps/h3d/parts/GpuParticles.hx	/^	public var vx : Float;$/;"	v
vx	heaps/h3d/prim/BigPrimitive.hx	/^				var vx = dx + tx;$/;"	v
vx	heaps/hxd/fmt/spine/Library.hx	/^						var vx = vertices[pos++];$/;"	v
vx0	heaps/hxd/fmt/spine/Data.hx	/^	public var vx0 : Float;$/;"	v
vx1	heaps/hxd/fmt/spine/Data.hx	/^	public var vx1 : Float;$/;"	v
vx2	heaps/hxd/fmt/spine/Data.hx	/^	public var vx2 : Float;$/;"	v
vy	heaps/h2d/Particles.hx	/^	public var vy : Float;$/;"	v
vy	heaps/h2d/SpriteBatch.hx	/^	public var vy : Float = 0.;$/;"	v
vy	heaps/h2d/col/Voronoi.hx	/^			var vy = v.y;$/;"	v
vy	heaps/h3d/Matrix.hx	/^		var vy = _12 * x + _22 * y + _32 * z + _42;$/;"	v
vy	heaps/h3d/parts/Data.hx	/^	public var vy : Value;$/;"	v
vy	heaps/h3d/parts/GpuParticles.hx	/^	public var vy : Float;$/;"	v
vy	heaps/h3d/prim/BigPrimitive.hx	/^				var vy = dy + ty;$/;"	v
vy	heaps/hxd/fmt/spine/Library.hx	/^						var vy = vertices[pos++];$/;"	v
vy0	heaps/hxd/fmt/spine/Data.hx	/^	public var vy0 : Float;$/;"	v
vy1	heaps/hxd/fmt/spine/Data.hx	/^	public var vy1 : Float;$/;"	v
vy2	heaps/hxd/fmt/spine/Data.hx	/^	public var vy2 : Float;$/;"	v
vz	heaps/h3d/Matrix.hx	/^		var vz = _13 * x + _23 * y + _33 * z + _43;$/;"	v
vz	heaps/h3d/parts/Data.hx	/^	public var vz : Value;$/;"	v
vz	heaps/h3d/parts/GpuParticles.hx	/^	public var vz : Float;$/;"	v
vz	heaps/h3d/prim/BigPrimitive.hx	/^				var vz = dz + z * scale;$/;"	v
w	heaps/h2d/HtmlText.hx	/^			var w = info.width;$/;"	v
w	heaps/h2d/ObjectFollower.hx	/^			var w = b.width, h = b.height;$/;"	v
w	heaps/h2d/Text.hx	/^			var w = calcWidth;$/;"	v
w	heaps/h2d/Tile.hx	/^		var w = 1, h = 1;$/;"	v
w	heaps/h2d/Tile.hx	/^		var w = innerTex.width;$/;"	v
w	heaps/h2d/Video.hx	/^			var w = videoWidth, h = videoHeight;$/;"	v
w	heaps/h2d/Video.hx	/^		var w = 0, h = 0;$/;"	v
w	heaps/h2d/col/IPolygon.hx	/^			var w = 0;$/;"	v
w	heaps/h2d/col/Polygon.hx	/^			var w = 0;$/;"	v
w	heaps/h2d/domkit/BaseComponents.hx	/^				var w = parseInt(w);$/;"	v
w	heaps/h2d/domkit/Style.hx	/^			var w = p.tile.iwidth;$/;"	v
w	heaps/h3d/Camera.hx	/^			var w = 1 \/ (bounds.xMax - bounds.xMin);$/;"	v
w	heaps/h3d/Engine.hx	/^			var w = window.width, h = window.height;$/;"	v
w	heaps/h3d/Quat.hx	/^		var w = q1.w * v2 + q2.w * v;$/;"	v
w	heaps/h3d/Quat.hx	/^	public var w : Float;$/;"	v
w	heaps/h3d/Vector.hx	/^	public var w : Float;$/;"	v
w	heaps/h3d/anim/Skin.hx	/^	public var w : Float;$/;"	v
w	heaps/h3d/col/SkinCollider.hx	/^				var w = obj.skinData.vertexWeights[j];$/;"	v
w	heaps/h3d/impl/Benchmark.hx	/^			var w = waitFrames.pop();$/;"	v
w	heaps/h3d/impl/DirectXDriver.hx	/^			var w = region.width >> mipLevel;$/;"	v
w	heaps/h3d/impl/DirectXDriver.hx	/^			var w = tex.width >> mipLevel;$/;"	v
w	heaps/h3d/impl/DirectXDriver.hx	/^		var w = tex.width >> mipLevel; if( w == 0 ) w = 1;$/;"	v
w	heaps/h3d/impl/GlDriver.hx	/^					var w = TWRAP[wrap];$/;"	v
w	heaps/h3d/impl/GlDriver.hx	/^			var w = Stencil.getWriteMask(maskBits);$/;"	v
w	heaps/h3d/impl/GlDriver.hx	/^			var w = hxd.Math.imax(1, tt.width >> mip);$/;"	v
w	heaps/h3d/impl/GlDriver.hx	/^		var w = tex.width >> mipLevel; if( w == 0 ) w = 1;$/;"	v
w	heaps/h3d/impl/MemoryManager.hx	/^				var w = t.width >> i; if( w == 0 ) w = 1;$/;"	v
w	heaps/h3d/mat/BigTexture.hx	/^				var w = (x + (y + dy) * size) * bpp + alphaPos;$/;"	v
w	heaps/h3d/mat/Texture.hx	/^		var w = width, h = height;$/;"	v
w	heaps/h3d/mat/TextureChannels.hx	/^			var w = (y * width * bpp) + off;$/;"	v
w	heaps/h3d/parts/GpuParticles.hx	/^	public var w : Float;$/;"	v
w	heaps/h3d/parts/Particle.hx	/^	var w : Float; \/\/ used for sorting$/;"	v
w	heaps/h3d/scene/Renderer.hx	/^			var w = p.obj.absPos._41 * cam._14 + p.obj.absPos._42 * cam._24 + p.obj.absPos._43 * cam._34 /;"	v
w	heaps/h3d/shader/NoiseLib.hx	/^  var w = vec3(dot(g0, d0), dot(g1, d1), dot(g2, d2));$/;"	v
w	heaps/hxd/BitmapData.hx	/^		var w = width;$/;"	v
w	heaps/hxd/Pixels.hx	/^			var w = width >> i; if( w == 0 ) w = 1;$/;"	v
w	heaps/hxd/Pixels.hx	/^		var w = width, h = height;$/;"	v
w	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^					var w = weights[i];$/;"	v
w	heaps/hxd/fmt/fbx/HMDOut.hx	/^			inline function w(v:Float) outputData.addFloat(v);$/;"	f
w	heaps/hxd/fmt/grd/Reader.hx	/^		var w = next.location - prev.location;$/;"	v
w	heaps/hxd/fmt/hmd/Library.hx	/^				var w = (w1 == 0 ? 1 : 0) | (w2 == 0 ? 2 : 0) | (w3 == 0 ? 4 : 0);$/;"	v
w	heaps/hxd/fmt/hmd/Library.hx	/^			var w = 0;$/;"	v
w	heaps/hxd/fmt/spine/Library.hx	/^						var w = vertices[pos++];$/;"	v
w	heaps/hxd/fs/Convert.hx	/^		var w = r.header.width;$/;"	v
w	heaps/hxd/fs/LocalFileSystem.hx	/^		var w = WATCH_LIST[WATCH_INDEX++];$/;"	v
w	heaps/hxd/impl/AsyncLoader.hx	/^						var w = inf.width >> mip;$/;"	v
w	heaps/hxd/res/Atlas.hx	/^					var w = Std.parseInt(wh[0]);$/;"	v
w	heaps/hxd/res/FontBuilder.hx	/^				var w = size.w + xMarg;$/;"	v
w	heaps/hxd/res/FontBuilder.hx	/^				var w = size.w;$/;"	v
w	heaps/hxd/res/FontBuilder.hx	/^			var w = Math.ceil(ctx.measureText(textChar).width) + 1;$/;"	v
w	heaps/hxd/res/FontBuilder.hx	/^			var w = Math.ceil(tf.textWidth) + 1;$/;"	v
w	heaps/hxd/res/Image.hx	/^							var w = inf.width >> mip;$/;"	v
w	heaps/hxd/res/Image.hx	/^					var w = inf.width >> i;$/;"	v
w	heaps/hxd/res/Image.hx	/^			var w = inf.width >> mipLevel;$/;"	v
w	heaps/hxd/res/Image.hx	/^			var w = r.header.width;$/;"	v
w	heaps/hxd/res/Image.hx	/^		var w = inf.width, h = inf.height;$/;"	v
w	heaps/hxd/res/NanoJpeg.hx	/^		var w = c.width, s1 = c.stride, s2 = s1 + s1;$/;"	v
w	heaps/hxd/snd/Mp3Data.hx	/^		var w = 0;$/;"	v
w	heaps/hxsl/AgalOptim.hx	/^			var w = inf.writes[b];$/;"	v
w	heaps/hxsl/AgalOut.hx	/^				var w = comps[0].index;$/;"	v
w	heaps/samples/HtmlText.hx	/^			var w = createWidget("", a);$/;"	v
w	heaps/samples/HtmlText.hx	/^			var w = createWidget(longText, a);$/;"	v
w	heaps/samples/HtmlText.hx	/^			var w = createWidget(multilineText, a);$/;"	v
w	heaps/samples/HtmlText.hx	/^			var w = createWidget(singleText, a);$/;"	v
w	heaps/samples/HtmlText.hx	/^			var w = new HtmlTextWidget(s2d, font, str, align);$/;"	v
w	heaps/samples/Text.hx	/^			var w = createWidget("", a);$/;"	v
w	heaps/samples/Text.hx	/^			var w = createWidget(longText, a);$/;"	v
w	heaps/samples/Text.hx	/^			var w = createWidget(multilineText, a);$/;"	v
w	heaps/samples/Text.hx	/^			var w = createWidget(singleText, a);$/;"	v
w	heaps/samples/Text.hx	/^			var w = new TextWidget(s2d, font, str, align);$/;"	v
w1	heaps/hxd/fmt/hmd/Library.hx	/^				var w1 = vbuf[p++];$/;"	v
w2	heaps/h3d/Quat.hx	/^		var w2 = q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z;$/;"	v
w2	heaps/h3d/mat/BigTexture.hx	/^		var w2 = 1, h2 = 1;$/;"	v
w2	heaps/h3d/shader/pbr/BDRF.hx	/^			var w2 = a2 \/ v2;$/;"	v
w2	heaps/hxd/fmt/hmd/Library.hx	/^				var w2 = vbuf[p++];$/;"	v
w3	heaps/hxd/fmt/hmd/Library.hx	/^				var w3 = vbuf[p++];$/;"	v
w4	heaps/h3d/shader/Skin.hx	/^				var w4 = 1 - (input.weights.x + input.weights.y + input.weights.z);$/;"	v
w4	heaps/h3d/shader/SkinTangent.hx	/^				var w4 = 1 - (input.weights.x + input.weights.y + input.weights.z);$/;"	v
wait	heaps/hxd/Pad.hx	/^	public static function wait( onPad : Pad -> Void ) {$/;"	f
wait	heaps/hxd/WaitEvent.hx	/^	public function wait( time : Float, callb : Void -> Void ) {$/;"	f
wait	heaps/hxd/Worker.hx	/^			var wait = true;$/;"	v
wait	heaps/hxd/net/Socket.hx	/^	override function wait() {$/;"	f
wait	heaps/hxd/net/Socket.hx	/^	public function wait() {$/;"	f
wait	heaps/hxd/net/SocketHost.hx	/^	public function wait( host : String, port : Int, ?onConnected : NetworkClient -> Void ) {$/;"	f
wait	heaps/hxsl/CacheFile.hx	/^		var wait = [];$/;"	v
waitCount	heaps/hxd/snd/LoadingData.hx	/^	var waitCount = 0;$/;"	v
waitCount	heaps/hxsl/CacheFile.hx	/^	var waitCount : Int = 0;$/;"	v
waitForPageInput	heaps/hxd/snd/webaudio/Context.hx	/^	static function waitForPageInput() {$/;"	f
waitFrames	heaps/h3d/impl/Benchmark.hx	/^	var waitFrames : Array<QueryObject>;$/;"	v
waitLoad	heaps/h3d/mat/Texture.hx	/^	public function waitLoad( f : Void -> Void ) {$/;"	f
waitLoads	heaps/h3d/mat/Texture.hx	/^	var waitLoads : Array<Void -> Void>;$/;"	v
waitPad	heaps/hxd/Pad.hx	/^	static var waitPad : Pad -> Void;$/;"	v
waitT	heaps/h3d/impl/Benchmark.hx	/^				var waitT = frameTime - totalTime;$/;"	v
waitTimer	heaps/h3d/mat/BigTexture.hx	/^	var waitTimer : haxe.Timer;$/;"	v
waitUntil	heaps/hxd/WaitEvent.hx	/^	public function waitUntil( callb ) {$/;"	f
wantedFPS	heaps/hxd/Timer.hx	/^	public static var wantedFPS = 60.;$/;"	v
wasBlurred	heaps/hxd/Window.hl.hx	/^	var wasBlurred : Bool;$/;"	v
wasContextLost	heaps/h3d/scene/RenderContext.hx	/^	public var wasContextLost : Bool;$/;"	v
wasPressed	heaps/samples/Pad.hx	/^	var wasPressed = false;$/;"	v
wasRemoved	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^	public var wasRemoved : Null<Int>;$/;"	v
watch	heaps/hxd/fs/FileEntry.hx	/^	public function watch( onChanged : Null<Void -> Void> ) { }$/;"	f
watch	heaps/hxd/fs/LocalFileSystem.hx	/^	override function watch( onChanged : Null < Void -> Void > ) {$/;"	f
watch	heaps/hxd/fs/MultiFileSystem.hx	/^	override function watch( onChanged : Null < Void -> Void > ) {$/;"	f
watch	heaps/hxd/res/Resource.hx	/^	public function watch( onChanged : Null < Void -> Void > ) {$/;"	f
watchCallb	heaps/hxd/res/Image.hx	/^	function watchCallb() {$/;"	f
watchCallb	heaps/hxd/res/Sound.hx	/^	function watchCallb() {$/;"	f
watchCallback	heaps/hxd/fs/LocalFileSystem.hx	/^	var watchCallback : Void -> Void;$/;"	v
watchTime	heaps/hxd/fs/LocalFileSystem.hx	/^	var watchTime : Float;$/;"	v
wav	heaps/hxd/fs/Convert.hx	/^			var wav = new format.wav.Reader(f).read();$/;"	v
weaponDirection	Player.hx	/^	var weaponDirection:Float = 0.0;$/;"	v
webRoot	heaps/samples/templates/.vscode/launch.json	/^			"webRoot": "${workspaceFolder}",$/;"	s	object:configurations.1
weight	heaps/hxd/Perlin.hx	/^		var weight = 1.;$/;"	v
weights	heaps/h3d/shader/Skin.hx	/^			var weights : Vec3;$/;"	v
weights	heaps/h3d/shader/SkinTangent.hx	/^			var weights : Vec3;$/;"	v
weights	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^						var weights = prevDef.get("Weights").getFloats();$/;"	v
weights	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^				var weights = weights[0].getFloats();$/;"	v
weights	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^			var weights = subDef.getAll("Weights");$/;"	v
wetDryMix	heaps/hxd/snd/effect/Reverb.hx	/^	public var wetDryMix         : Float; \/\/ [0.0, 100.0] %$/;"	v
wfactor	heaps/h3d/scene/Scene.hx	/^					var wfactor = 0.;$/;"	v
wh	heaps/hxd/res/Atlas.hx	/^					var wh = line[1].split(",");$/;"	v
wheelDelta	heaps/hxd/Event.hx	/^	public var wheelDelta : Float;$/;"	v
width	heaps/h2d/Bitmap.hx	/^	public var width(default,set) : Null<Float>;$/;"	v
width	heaps/h2d/CdbLevel.hx	/^	public var width : Int;$/;"	v
width	heaps/h2d/CdbLevel.hx	/^	public var width(default, null) : Int;$/;"	v
width	heaps/h2d/CdbLevel.hx	/^	var width : Int;$/;"	v
width	heaps/h2d/CheckBox.hx	/^		var width = 13;$/;"	v
width	heaps/h2d/Console.hx	/^	var width : Int;$/;"	v
width	heaps/h2d/Dropdown.hx	/^		var width = Std.int(dropdownList.getSize().width);$/;"	v
width	heaps/h2d/Flow.hx	/^					var width = p.isAbsolute ? absWidth : maxColWidth;$/;"	v
width	heaps/h2d/Font.hx	/^	public var width : Float;$/;"	v
width	heaps/h2d/HtmlText.hx	/^	var width : Float;$/;"	v
width	heaps/h2d/Interactive.hx	/^	public var width : Float;$/;"	v
width	heaps/h2d/Mask.hx	/^	public var width : Int;$/;"	v
width	heaps/h2d/Object.hx	/^		var width = Math.ceil(total.xMax - xMin - 1e-10);$/;"	v
width	heaps/h2d/ObjectFollower.hx	/^		var width = s2d == null ? h3d.Engine.getCurrent().width : s2d.width;$/;"	v
width	heaps/h2d/ScaleGrid.hx	/^	public var width(default,set) : Float;$/;"	v
width	heaps/h2d/Scene.hx	/^	public var width(default,null) : Int;$/;"	v
width	heaps/h2d/Tile.hx	/^	public var width(default,null) : Float;$/;"	v
width	heaps/h2d/col/Bounds.hx	/^	public var width(get, set) : Float;$/;"	v
width	heaps/h2d/col/IBounds.hx	/^	public var width(get, set) : Int;$/;"	v
width	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var width : Int;$/;"	v
width	heaps/h3d/Engine.hx	/^	public var width(default, null) : Int;$/;"	v
width	heaps/h3d/impl/Benchmark.hx	/^		var width = width == null ? s2d.width : width;$/;"	v
width	heaps/h3d/impl/Benchmark.hx	/^	public var width : Null<Int>;$/;"	v
width	heaps/h3d/impl/Stage3dDriver.hx	/^	var width : Int;$/;"	v
width	heaps/h3d/mat/BigTexture.hx	/^	public var width : Int;$/;"	v
width	heaps/h3d/mat/BigTexture.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/h3d/mat/DepthBuffer.hx	/^	public var width(default, null) : Int;$/;"	v
width	heaps/h3d/mat/Texture.hx	/^	public var width(default, null) : Int;$/;"	v
width	heaps/h3d/pass/Blur.hx	/^		var width = radius > 0 ? Math.ceil(hxd.Math.max(radius - 1, 1) * qadj \/ 2) : 0;$/;"	v
width	heaps/h3d/prim/Grid.hx	/^	public var width (default, null) : Int;$/;"	v
width	heaps/h3d/scene/pbr/LightSystem.hx	/^		var width = currentTarget == null ? ctx.engine.width : currentTarget.width;$/;"	v
width	heaps/h3d/shader/LineShader.hx	/^		@param var width : Float;$/;"	v
width	heaps/hxd/BitmapData.hx	/^	public var width : Int;$/;"	v
width	heaps/hxd/BitmapData.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/hxd/Pixels.hx	/^		var width = levels[0][0].width;$/;"	v
width	heaps/hxd/Pixels.hx	/^	public var width(default,null) : Int;$/;"	v
width	heaps/hxd/System.flash.hx	/^	public static var width(get,never) : Int;$/;"	v
width	heaps/hxd/System.hl.hx	/^		var width = 800;$/;"	v
width	heaps/hxd/System.hl.hx	/^	public static var width(get,never) : Int;$/;"	v
width	heaps/hxd/System.hx	/^	public static var width(get,never) : Int;$/;"	v
width	heaps/hxd/System.js.hx	/^	public static var width(get,never) : Int;$/;"	v
width	heaps/hxd/Window.flash.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/hxd/Window.hl.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/hxd/Window.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/hxd/Window.js.hx	/^	public var width(get, never) : Int;$/;"	v
width	heaps/hxd/fmt/hdr/Reader.hx	/^		var width = 0, height = 0;$/;"	v
width	heaps/hxd/fmt/spine/Data.hx	/^	public var width : Float;$/;"	v
width	heaps/hxd/fmt/spine/JsonData.hx	/^	var width : Float;$/;"	v
width	heaps/hxd/fmt/spine/JsonData.hx	/^	var width : Int;$/;"	v
width	heaps/hxd/fmt/tiff/Reader.hx	/^		var width = Utils.getInt(f, ImageWidth);$/;"	v
width	heaps/hxd/poly2tri/Basin.hx	/^	public var width:Float;$/;"	v
width	heaps/hxd/res/BDFFont.hx	/^	public var width : Int;$/;"	v
width	heaps/hxd/res/FontBuilder.hx	/^		var width = 1;$/;"	v
width	heaps/hxd/res/Image.hx	/^	public var width(default,null) : Int = 0;$/;"	v
width	heaps/hxd/res/NanoJpeg.hx	/^	public var width : Int;$/;"	v
width	heaps/hxd/res/NanoJpeg.hx	/^	var width : Int;$/;"	v
width	heaps/hxd/res/TiledMap.hx	/^	var width : Int;$/;"	v
width	heaps/samples/ScaleMode2D.hx	/^		var width:Int = 320;$/;"	v
widthBE	heaps/hxd/fmt/hdr/Reader.hx	/^			var widthBE = (width >> 8) | ((width & 0xFF) << 8);$/;"	v
willChange	heaps/hxd/Pixels.hx	/^	inline function willChange() {$/;"	f
win	heaps/h3d/impl/VulkanDriver.hx	/^			var win = hxd.Window.getInstance();$/;"	v
win	heaps/h3d/scene/pbr/Renderer.hx	/^		var win = hxd.Window.getInstance();$/;"	v
win	heaps/hxsl/CacheFileBuilder.hx	/^				var win = new dx.Window("", 800, 600);$/;"	v
windCnt	heaps/hxd/clipper/Clipper.hx	/^	public var windCnt : Int;$/;"	v
windCnt2	heaps/hxd/clipper/Clipper.hx	/^	public var windCnt2 : Int; \/\/winding count of the opposite polytype$/;"	v
windDelta	heaps/hxd/clipper/Clipper.hx	/^	public var windDelta : Int; \/\/1 or -1 depending on winding direction$/;"	v
window	heaps/h2d/Scene.hx	/^	var window : hxd.Window;$/;"	v
window	heaps/h3d/Engine.hx	/^	var window : hxd.Window;$/;"	v
window	heaps/h3d/impl/DirectXDriver.hx	/^	var window : dx.Window;$/;"	v
window	heaps/h3d/scene/Scene.hx	/^	var window : hxd.Window;$/;"	v
window	heaps/hxd/SceneEvents.hx	/^	var window : hxd.Window;$/;"	v
window	heaps/hxd/System.js.hx	/^			var window : Dynamic = js.Browser.window;$/;"	v
window	heaps/hxd/Window.hl.hx	/^	var window : dx.Window;$/;"	v
window	heaps/hxd/Window.hl.hx	/^	var window : sdl.Window;$/;"	v
windowHeight	heaps/hxd/Window.hl.hx	/^	var windowHeight = 600;$/;"	v
windowWidth	heaps/hxd/Window.hl.hx	/^	var windowWidth = 800;$/;"	v
wireframe	heaps/h3d/impl/GlDriver.hx	/^		var wireframe = bits & Pass.wireframe_mask != 0;$/;"	v
wm	heaps/h3d/scene/World.hx	/^		var wm = new WorldMaterial();$/;"	v
wmat	heaps/h3d/scene/World.hx	/^				var wmat = loadMaterialTexture(r, mat, m.name);$/;"	v
wordSplit	heaps/h2d/HtmlText.hx	/^		function wordSplit() {$/;"	f
world	heaps/samples/World.hx	/^	var world : h3d.scene.World;$/;"	v
worldDist	heaps/h3d/shader/BaseMesh.hx	/^			var worldDist : Float;$/;"	v
worldDist	heaps/h3d/shader/BaseMesh.hx	/^		var worldDist : Float;$/;"	v
worldNormal	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var worldNormal = normalize(cross(ddy, ddx));$/;"	v
worldPos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var worldPos = getWorlPos(screenPos);$/;"	v
worldPosition	heaps/h3d/scene/MeshBatch.hx	/^	public var worldPosition : Matrix;$/;"	v
worldTangent	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var worldTangent = cross(worldNormal, vec3(0,1,0));$/;"	v
wpos	heaps/h3d/shader/VolumeDecal.hx	/^			var wpos = ruv * matrix;$/;"	v
wpos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^				var wpos = ruv * matrix;$/;"	v
wpos	heaps/h3d/shader/pbr/VolumeDecal.hx	/^			var wpos = ruv * camera.inverseViewProj;$/;"	v
wrap	heaps/h2d/filter/Displacement.hx	/^	public var wrap(default, set) : Bool;$/;"	v
wrap	heaps/h3d/impl/GlDriver.hx	/^				var wrap = Type.enumIndex(t.wrap);$/;"	v
wrap	heaps/h3d/mat/Texture.hx	/^	public var wrap(default, set) : Wrap;$/;"	v
write	heaps/h3d/impl/Stage3dDriver.hx	/^			var write = Pass.getDepthWrite(bits) != 0;$/;"	v
write	heaps/hxd/Pixels.hx	/^		inline function write(v) { ddsOut.setInt32(outPos,v); outPos += 4; }$/;"	f
write	heaps/hxd/fmt/bfnt/Writer.hx	/^	public function write( font : h2d.Font ) {$/;"	f
write	heaps/hxd/fmt/hbson/Writer.hx	/^	public function write( json : Dynamic ) {$/;"	f
write	heaps/hxd/fmt/hmd/Writer.hx	/^	public function write( d : Data ) {$/;"	f
write	heaps/hxd/fmt/pak/Writer.hx	/^	public function write( pak : Data, content : haxe.io.Bytes, ?arrayContent : Array<haxe.io.Bytes/;"	f
write	heaps/hxd/fmt/tiff/Writer.hx	/^	public function write( tif : TifFile ) {$/;"	f
write	heaps/hxd/res/NanoJpeg.hx	/^			inline function write(out, c) {$/;"	f
write	heaps/hxd/res/NanoJpeg.hx	/^		inline function write(pos, v) {$/;"	f
write	heaps/hxsl/AgalOptim.hx	/^	function write( r : Reg ) {$/;"	f
write	heaps/hxsl/Linker.hx	/^	public var write : Map<Int,AllocatedVar>;$/;"	v
write	heaps/hxsl/Splitter.hx	/^	public var write : Int;$/;"	v
writeArr	heaps/hxsl/Serializer.hx	/^	inline function writeArr<T>( arr : Array<T>, f : T -> Void ) {$/;"	f
writeBounds	heaps/hxd/fmt/hmd/Writer.hx	/^	function writeBounds( b : h3d.col.Bounds ) {$/;"	f
writeByte	heaps/hxd/BytesBuffer.hx	/^	public inline function writeByte( v : Int ) {$/;"	f
writeByte	heaps/hxd/net/Socket.hx	/^	override function writeByte( c : Int ) {$/;"	f
writeByte	heaps/hxd/net/Socket.hx	/^	override function writeByte(c:Int) {$/;"	f
writeBytes	heaps/hxd/net/Socket.hx	/^	override function writeBytes( b : haxe.io.Bytes, pos : Int, len : Int ) : Int {$/;"	f
writeBytes	heaps/hxd/net/Socket.hx	/^	override function writeBytes( s : haxe.io.Bytes, pos : Int, len : Int ) : Int {$/;"	f
writeBytes	heaps/hxd/net/Socket.hx	/^	override function writeBytes(buf:haxe.io.Bytes, pos:Int, len:Int):Int {$/;"	f
writeConst	heaps/hxsl/Serializer.hx	/^	function writeConst( c : Const ) {$/;"	f
writeExpr	heaps/hxsl/Serializer.hx	/^	function writeExpr( e : TExpr ) {$/;"	f
writeFile	heaps/hxd/fmt/pak/Writer.hx	/^	public function writeFile( f : File ) {$/;"	f
writeFloat	heaps/hxd/BytesBuffer.hx	/^	public inline function writeFloat( v : Float ) {$/;"	f
writeFloat	heaps/hxd/fmt/fbx/HMDOut.hx	/^	inline function writeFloat( f : Float ) {$/;"	f
writeFloat	heaps/hxd/fmt/hmd/Writer.hx	/^	inline function writeFloat( f : Float ) {$/;"	f
writeFloat	heaps/hxd/snd/OggData.hx	/^	override function writeFloat(f) {$/;"	f
writeFrame	heaps/hxd/fmt/fbx/HMDOut.hx	/^	function writeFrame( o : h3d.anim.LinearAnimation.LinearObject, fid : Int ) {$/;"	f
writeFun	heaps/hxsl/Serializer.hx	/^	function writeFun( f : TFunction ) {$/;"	f
writeID	heaps/hxsl/Serializer.hx	/^	function writeID( id : Int ) {$/;"	f
writeInt16	heaps/hxd/snd/OggData.hx	/^	override function writeInt16(i) {$/;"	f
writeInt32	heaps/hxd/BytesBuffer.hx	/^	public inline function writeInt32( v : Int ) {$/;"	f
writeInt32	heaps/hxd/net/Socket.hx	/^	override function writeInt32( i : Int ) {$/;"	f
writeIntHex	heaps/hxsl/CacheFile.hx	/^		function writeIntHex( i : Int ) {$/;"	f
writeMask	heaps/hxd/Pixels.hx	/^			inline function writeMask(c) {$/;"	f
writeName	heaps/hxd/fmt/hmd/Writer.hx	/^	function writeName( name : String ) {$/;"	f
writePos	heaps/h3d/scene/World.hx	/^				var writePos = nv * stride;$/;"	v
writePosition	heaps/hxd/fmt/hmd/Writer.hx	/^	function writePosition( p : Position, hasScale = true ) {$/;"	f
writeProperty	heaps/hxd/fmt/hmd/Writer.hx	/^	function writeProperty( p : Property<Dynamic> ) {$/;"	f
writeProps	heaps/hxd/fmt/hmd/Writer.hx	/^	function writeProps( props : Properties ) {$/;"	f
writeRec	heaps/hxd/fmt/hbson/Writer.hx	/^	function writeRec(value:Dynamic) {$/;"	f
writeRec	heaps/hxd/fmt/pak/Build.hx	/^		function writeRec(f:File) {$/;"	f
writeResult	heaps/hxd/net/Socket.hx	/^	function writeResult(b) {$/;"	f
writeSamples	heaps/hxd/snd/Mp3Data.hx	/^		var writeSamples:Int, offset:Int;$/;"	v
writeSkin	heaps/hxd/fmt/hmd/Writer.hx	/^	function writeSkin( s : Skin ) {$/;"	f
writeString	heaps/hxd/fmt/bfnt/Writer.hx	/^	inline function writeString( s : String ) {$/;"	f
writeString	heaps/hxd/fmt/hbson/Writer.hx	/^	function writeString( str : String ) {$/;"	f
writeString	heaps/hxd/net/Socket.hx	/^	override function writeString( str : String #if (haxe_ver >= 4) , ?encoding :  haxe.io.Encoding/;"	f
writeString	heaps/hxsl/CacheFile.hx	/^		function writeString(str:String) {$/;"	f
writeString	heaps/hxsl/Serializer.hx	/^	function writeString( s : String ) {$/;"	f
writeTID	heaps/hxsl/Serializer.hx	/^	function writeTID( t : Type ) {$/;"	f
writeTo	heaps/hxsl/Dce.hx	/^			var writeTo = [null];$/;"	v
writeType	heaps/hxsl/Serializer.hx	/^	function writeType( t : Type ) {$/;"	f
writeValue	heaps/hxd/fmt/tiff/Writer.hx	/^	function writeValue( t : TifType, v : TifValue ) {$/;"	f
writeVar	heaps/hxsl/Serializer.hx	/^	function writeVar( v : TVar ) {$/;"	f
writeVarInt	heaps/hxsl/Serializer.hx	/^	function writeVarInt( id : Int ) {$/;"	f
writes	heaps/hxsl/AgalOptim.hx	/^		var writes = [];$/;"	v
writes	heaps/hxsl/AgalOptim.hx	/^	public var writes : haxe.ds.Vector<Int>;$/;"	v
written	heaps/h3d/impl/Stage3dDriver.hx	/^	var written : Bool;$/;"	v
wscale	heaps/samples/Sao.hx	/^	var wscale = 1.;$/;"	v
wt	heaps/hxsl/AgalOptim.hx	/^						var wt = i2.writes[k2];$/;"	v
wt	heaps/hxsl/AgalOptim.hx	/^					var wt = i2.writes[k2];$/;"	v
x	heaps/h2d/Camera.hx	/^		var x = (e.relX - scene.offsetX) \/ scene.viewportScaleX - absX;$/;"	v
x	heaps/h2d/Camera.hx	/^		var x = (pt.x - scene.offsetX) \/ scene.viewportScaleX - absX;$/;"	v
x	heaps/h2d/Camera.hx	/^		var x = pt.x - absX;$/;"	v
x	heaps/h2d/Camera.hx	/^		var x = pt.x;$/;"	v
x	heaps/h2d/Camera.hx	/^	public var x(default, set) : Float;$/;"	v
x	heaps/h2d/CdbLevel.hx	/^					var x = grounds[i++];$/;"	v
x	heaps/h2d/CdbLevel.hx	/^				var x = data[i++];$/;"	v
x	heaps/h2d/CdbLevel.hx	/^	public var x : Int;$/;"	v
x	heaps/h2d/Flow.hx	/^			var x = paddingLeft + borderLeft;$/;"	v
x	heaps/h2d/Flow.hx	/^			var x = startX;$/;"	v
x	heaps/h2d/Graphics.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/HtmlText.hx	/^			var x = leftMargin;$/;"	v
x	heaps/h2d/Interactive.hx	/^			var x = event.relX, y = event.relY;$/;"	v
x	heaps/h2d/KeyFrames.hx	/^				var x = bezier(c1x, c2x, t);$/;"	v
x	heaps/h2d/Object.hx	/^			var x, y;$/;"	v
x	heaps/h2d/Object.hx	/^		var x, y;$/;"	v
x	heaps/h2d/Object.hx	/^	public var x(default,set) : Float = 0;$/;"	v
x	heaps/h2d/SpriteBatch.hx	/^				var x, y;$/;"	v
x	heaps/h2d/SpriteBatch.hx	/^	public var x : Float = 0;$/;"	v
x	heaps/h2d/Text.hx	/^		var x = 0., y = 0., xMax = 0., xMin = 0., yMin = 0., prevChar = -1, linei = 0;$/;"	v
x	heaps/h2d/Text.hx	/^		var x = leftMargin;$/;"	v
x	heaps/h2d/Text.hx	/^		var x, y, w : Float, h;$/;"	v
x	heaps/h2d/Tile.hx	/^	public var x(default,null) : Float;$/;"	v
x	heaps/h2d/TileGroup.hx	/^		var x = x + t.dx, y = y + t.dy;$/;"	v
x	heaps/h2d/col/Bounds.hx	/^	public var x(get, set) : Float;$/;"	v
x	heaps/h2d/col/Circle.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/col/IBounds.hx	/^	public var x(get, set) : Int;$/;"	v
x	heaps/h2d/col/IPoint.hx	/^	public var x : Int;$/;"	v
x	heaps/h2d/col/Matrix.hx	/^		var x = m.x, y = m.y;$/;"	v
x	heaps/h2d/col/Matrix.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/col/Point.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/col/Polygon.hx	/^			var x = p0.x + u * (p.x - p0.x);$/;"	v
x	heaps/h2d/col/Polynomial.hx	/^		var x = new Matrix(n, degree + 1);$/;"	v
x	heaps/h2d/col/RoundRect.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/col/Segment.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/col/Voronoi.hx	/^		var x = point.x,$/;"	v
x	heaps/h2d/col/Voronoi.hx	/^	public var x : Float;$/;"	v
x	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var x : Float;$/;"	v
x	heaps/h3d/Matrix.hx	/^		var x = -axis.x, y = -axis.y, z = -axis.z;$/;"	v
x	heaps/h3d/Quat.hx	/^		var x = q1.x * v2 + q2.x * v;$/;"	v
x	heaps/h3d/Quat.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/Vector.hx	/^		var x = c * (1 - Math.abs((hue * 3 \/ Math.PI) % 2. - 1));$/;"	v
x	heaps/h3d/Vector.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/col/FPoint.hx	/^	public var x : hxd.impl.Float32;$/;"	v
x	heaps/h3d/col/HeightMap.hx	/^			var x = px + lx * dist;$/;"	v
x	heaps/h3d/col/IPoint.hx	/^	public var x : Int;$/;"	v
x	heaps/h3d/col/Point.hx	/^		var x = Math.lerp(p1.x, p2.x, k);$/;"	v
x	heaps/h3d/col/Point.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/col/Sphere.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/impl/GlDriver.hx	/^		var x : Int, y : Int, w : Int, h : Int;$/;"	v
x	heaps/h3d/mat/BigTexture.hx	/^	public var x : Int;$/;"	v
x	heaps/h3d/parts/GpuParticles.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/parts/Particle.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/prim/BigPrimitive.hx	/^			var x = buf[p++];$/;"	v
x	heaps/h3d/prim/Cube.hx	/^		var x = new UV(1, 1);$/;"	v
x	heaps/h3d/prim/Cylinder.hx	/^			var x = Math.cos(a) * ray, y = Math.sin(a) * ray;$/;"	v
x	heaps/h3d/prim/Grid.hx	/^			var x = i - y * (width + 1);$/;"	v
x	heaps/h3d/scene/Graphics.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/scene/Object.hx	/^	public var x(default,set) : Float;$/;"	v
x	heaps/h3d/scene/Trail.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/scene/World.hx	/^					var x = vl[p++];$/;"	v
x	heaps/h3d/scene/World.hx	/^	public var x : Float;$/;"	v
x	heaps/h3d/scene/pbr/Renderer.hx	/^			var x = Std.int((e.relX \/ win.width) * 4);$/;"	v
x	heaps/h3d/shader/NoiseLib.hx	/^  var x = vec3(p0.x, p1.x, p2.x);$/;"	v
x	heaps/h3d/shader/pbr/Slides.hx	/^			var x = input.uv.x * 4;$/;"	v
x	heaps/hxd/BitmapData.hx	/^			var x = x0;$/;"	v
x	heaps/hxd/Direction.hx	/^	public var x(get, never) : Int;$/;"	v
x	heaps/hxd/Math.hx	/^			var x = Std.random(len);$/;"	v
x	heaps/hxd/Pad.hx	/^				var x = p.d.axes[i << 1];$/;"	v
x	heaps/hxd/Rand.hx	/^			var x = random(len);$/;"	v
x	heaps/hxd/Window.js.hx	/^		var x, y, ev;$/;"	v
x	heaps/hxd/earcut/Earcut.hx	/^				var x = p.x + (hy - p.y) * (p.next.x - p.x) \/ (p.next.y - p.y);$/;"	v
x	heaps/hxd/earcut/Earcut.hx	/^				var x = p.x;$/;"	v
x	heaps/hxd/earcut/Earcut.hx	/^		var x = Std.int(32767 * (px - minX) \/ size);$/;"	v
x	heaps/hxd/earcut/Earcut.hx	/^	public var x : Float;$/;"	v
x	heaps/hxd/fmt/fbx/Geometry.hx	/^			var x = verts[i*3];$/;"	v
x	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var x = verts[vidx * 3];$/;"	v
x	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var x = vbuf[vid * stride];$/;"	v
x	heaps/hxd/fmt/hmd/Data.hx	/^	public var x : Float;$/;"	v
x	heaps/hxd/fmt/hmd/Library.hx	/^				var x = vbuf[p];$/;"	v
x	heaps/hxd/fmt/kframes/Data.hx	/^	public var x(get, set) : T;$/;"	v
x	heaps/hxd/fmt/spine/Data.hx	/^	public var x : Float;$/;"	v
x	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var x : Float;$/;"	v
x	heaps/hxd/fmt/spine/Library.hx	/^			var x = def(j.x, 0);$/;"	v
x	heaps/hxd/poly2tri/Point.hx	/^	public var x:Float;$/;"	v
x	heaps/hxd/poly2tri/Point.hx	/^	public var x:Int;$/;"	v
x	heaps/hxd/res/BDFFont.hx	/^		var x : Int = 0;$/;"	v
x	heaps/hxd/res/BDFFont.hx	/^	public var x : Int;$/;"	v
x	heaps/hxd/res/DynamicText.hx	/^		var x = new Access(Xml.parse(data).firstElement());$/;"	v
x	heaps/hxd/res/FontBuilder.hx	/^			var x = 0, y = 0, lineH = 0;$/;"	v
x	heaps/hxd/res/TiledMap.hx	/^		var x = new Access(Xml.parse(data).firstElement());$/;"	v
x	heaps/hxsl/CacheFile.hx	/^			var x = 0;$/;"	v
x	heaps/samples/Blur.hx	/^			var x = blur.pass.offsets[i < 0 ? -i : i] * i;$/;"	v
x	heaps/samples/MeshBatch.hx	/^	public var x : Float;$/;"	v
x	heaps/samples/Network.hx	/^	@:s public var x(default, set) : Float;$/;"	v
x	heaps/samples/Pad.hx	/^		var x = 0.;$/;"	v
x0	heaps/h2d/KeyFrames.hx	/^			var x0 = bezier(c1x, c2x, minT);$/;"	v
x0	heaps/h2d/col/Bounds.hx	/^		var x0 = xMin, y0 = yMin, x1 = xMax, y1 = yMax;$/;"	v
x0	heaps/h3d/scene/Trail.hx	/^			var x0 = prev.x;$/;"	v
x0	heaps/hxd/res/NanoJpeg.hx	/^		var x0, x1, x2, x3, x4, x5, x6, x7, x8;$/;"	v
x1	heaps/h2d/Graphics.hx	/^		var x1, y1;$/;"	v
x1	heaps/h2d/KeyFrames.hx	/^			var x1 = bezier(c1x, c2x, maxT);$/;"	v
x1	heaps/h2d/Mask.hx	/^		var x1 = object.absX + scrollX;$/;"	v
x1	heaps/h3d/scene/Trail.hx	/^			var x1 = pending.x;$/;"	v
x2	Laser.hx	/^		var x2 = this.x + d * Math.cos(angle);$/;"	v
x2	heaps/h2d/Mask.hx	/^		var x2 = width * object.matA + height * object.matC + x1;$/;"	v
x2	heaps/h2d/RenderContext.hx	/^			var x2 = x + w, y2 = y + h;$/;"	v
x2	heaps/h2d/RenderContext.hx	/^		var x2 = Math.min( x + w, renderX + renderW );$/;"	v
x2	heaps/h2d/col/Point.hx	/^		var x2 = x * c - y * s;$/;"	v
x2	heaps/h3d/Quat.hx	/^		var x2 = q1.x * q2.w + q1.w * q2.x + q1.y * q2.z - q1.z * q2.y;$/;"	v
x2	heaps/h3d/prim/Cylinder.hx	/^			var x2 = Math.cos(a2) * ray, y2 = Math.sin(a2) * ray;$/;"	v
x2	heaps/h3d/scene/Trail.hx	/^			var x2 = curX;$/;"	v
xAxis	heaps/hxd/Pad.hx	/^	public var xAxis(get,never) : Float;$/;"	v
xEnd	heaps/h3d/impl/Benchmark.hx	/^			var xEnd = Math.ceil(width * (curTime \/ totalTime));$/;"	v
xFlip	heaps/h2d/Tile.hx	/^	public var xFlip(get,set) : Bool;$/;"	v
xMarg	heaps/hxd/res/FontBuilder.hx	/^		var xMarg = 10;$/;"	v
xMax	heaps/h2d/Graphics.hx	/^	var xMax : Float;$/;"	v
xMax	heaps/h2d/HtmlText.hx	/^	var xMax : Float;$/;"	v
xMax	heaps/h2d/TileGroup.hx	/^	public var xMax : Float;$/;"	v
xMax	heaps/h2d/col/Bounds.hx	/^	public var xMax : Float;$/;"	v
xMax	heaps/h2d/col/IBounds.hx	/^	public var xMax : Int;$/;"	v
xMax	heaps/h3d/col/Bounds.hx	/^		var xMax = Math.min(a.xMax, b.xMax);$/;"	v
xMax	heaps/h3d/col/Bounds.hx	/^	public var xMax : Float;$/;"	v
xMin	heaps/h2d/Graphics.hx	/^	var xMin : Float;$/;"	v
xMin	heaps/h2d/HtmlText.hx	/^	var xMin : Float;$/;"	v
xMin	heaps/h2d/Mask.hx	/^		var xMin = out.xMin, yMin = out.yMin, xMax = out.xMax, yMax = out.yMax;$/;"	v
xMin	heaps/h2d/Object.hx	/^		var xMin = Math.floor(total.xMin + 1e-10);$/;"	v
xMin	heaps/h2d/RenderContext.hx	/^			var xMin = 1e20, yMin = 1e20, xMax = -1e20, yMax = -1e20;$/;"	v
xMin	heaps/h2d/TileGroup.hx	/^	public var xMin : Float;$/;"	v
xMin	heaps/h2d/col/Bounds.hx	/^	public var xMin : Float;$/;"	v
xMin	heaps/h2d/col/IBounds.hx	/^	public var xMin : Int;$/;"	v
xMin	heaps/h2d/filter/Group.hx	/^		var xMin = input.dx;$/;"	v
xMin	heaps/h3d/col/Bounds.hx	/^		var xMin = Math.max(a.xMin, b.xMin);$/;"	v
xMin	heaps/h3d/col/Bounds.hx	/^		var xMin = xMin, yMin = yMin, zMin = zMin, xMax = xMax, yMax = yMax, zMax = zMax;$/;"	v
xMin	heaps/h3d/col/Bounds.hx	/^	public var xMin : Float;$/;"	v
xPos	heaps/h2d/HtmlText.hx	/^	var xPos : Float;$/;"	v
xPos	heaps/h3d/impl/Benchmark.hx	/^		var xPos = 0;$/;"	v
xPos	heaps/h3d/impl/Benchmark.hx	/^	public var xPos : Int;$/;"	v
xSize	heaps/h3d/col/Bounds.hx	/^	public var xSize(get,set) : Float;$/;"	v
xSize	heaps/h3d/impl/Benchmark.hx	/^			var xSize = xEnd - xPos;$/;"	v
xSize	heaps/h3d/impl/Benchmark.hx	/^	public var xSize : Int;$/;"	v
xSort	heaps/h2d/col/Polygon.hx	/^	inline function xSort(a : Point, b : Point) {$/;"	f
xVal	heaps/h2d/KeyFrames.hx	/^		var xVal;$/;"	v
xc	heaps/h2d/col/Delaunay.hx	/^			var xc;$/;"	v
xcos1	heaps/h3d/Matrix.hx	/^		var xcos1 = x * cos1, zcos1 = z * cos1;$/;"	v
xend	heaps/hxd/BitmapData.hx	/^				var xend = x1;$/;"	v
xfactor	heaps/h2d/KeyFrames.hx	/^			var xfactor = dx == 0 ? 0.5 : (xVal - x0) \/ dx;$/;"	v
xhr	heaps/hxd/net/BinaryLoader.hx	/^		var xhr = new js.html.XMLHttpRequest();$/;"	v
xi	heaps/h3d/scene/pbr/Environment.hx	/^				var xi = hammersley(i, numSamples);$/;"	v
xinc	heaps/hxd/BitmapData.hx	/^					var xinc = temp \/ d2y;$/;"	v
xl	heaps/h2d/col/Voronoi.hx	/^		var xl = bbox.xMin,$/;"	v
xmax	heaps/h2d/Flow.hx	/^			var xmax = if(realMaxWidth > 0 && overflow != Expand) Math.floor(realMaxWidth - (paddingRight/;"	v
xmax	heaps/h2d/Object.hx	/^		var xmax = hxd.Math.NEGATIVE_INFINITY, ymax = hxd.Math.NEGATIVE_INFINITY;$/;"	v
xmax	heaps/h2d/col/Delaunay.hx	/^		var xmax = xmin;$/;"	v
xmax	heaps/hxd/poly2tri/SweepContext.hx	/^		var xmax = points[0].x;$/;"	v
xmax	heaps/hxd/res/NanoJpeg.hx	/^		var xmax = c.width - 3;$/;"	v
xmid	heaps/h2d/col/Delaunay.hx	/^		var xmid = (xmax + xmin) * 0.5;$/;"	v
xmin	heaps/h2d/Flow.hx	/^			var xmin = paddingLeft + borderLeft;$/;"	v
xmin	heaps/h2d/Flow.hx	/^			var xmin = startX, xmax = endX;$/;"	v
xmin	heaps/h2d/Object.hx	/^		var xmin = hxd.Math.POSITIVE_INFINITY, ymin = hxd.Math.POSITIVE_INFINITY;$/;"	v
xmin	heaps/h2d/Tile.hx	/^		var xmin = width, ymin = height, xmax = 0, ymax = 0;$/;"	v
xmin	heaps/h2d/col/Delaunay.hx	/^		var xmin = points[0].x;$/;"	v
xmin	heaps/hxd/poly2tri/SweepContext.hx	/^		var xmin = points[0].x;$/;"	v
xml	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var xml = Xml.parse(bytes.toString());$/;"	v
xml	heaps/hxd/fmt/bfnt/FontParser.hx	/^			var xml = new Access(xml.firstElement());$/;"	v
xml	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^							var xml = try Xml.parse(pval) catch( e : Dynamic ) throw "Invalid Events data in " + m.ge/;"	v
xml	heaps/hxd/fmt/fbx/BaseLibrary.hx	/^							var xml = try Xml.parse(pval) catch( e : Dynamic ) throw "Invalid UV data in " + m.getNam/;"	v
xoffset	heaps/hxd/res/BDFFont.hx	/^	public var xoffset : Int;$/;"	v
xoffset	heaps/samples/Flows.hx	/^			var xoffset = spaceX;$/;"	v
xor	heaps/hxd/clipper/Clipper.hx	/^	inline function xor(a, b) {$/;"	f
xpos	heaps/samples/HtmlText.hx	/^		var xpos = 0;$/;"	v
xpos	heaps/samples/Text.hx	/^		var xpos = 0;$/;"	v
xshift	heaps/hxd/res/NanoJpeg.hx	/^		var xshift = 0, yshift = 0;$/;"	v
xw	heaps/h3d/Quat.hx	/^		var xw = x * w;$/;"	v
xw	heaps/h3d/anim/BufferAnimation.hx	/^						var xw = qx * qw;$/;"	v
xw	heaps/h3d/anim/LinearAnimation.hx	/^					var xw = qx * qw;$/;"	v
xw	heaps/h3d/shader/NoiseLib.hx	/^  var xw = mod(vec3(p0.x, p1.x, p2.x), per.x);$/;"	v
xx	heaps/h2d/Particles.hx	/^				var xx = cosA * (p.x - dx) - sinA * (p.y - dy) + dx;$/;"	v
xx	heaps/h2d/col/IPolygon.hx	/^			var xx : Float, yy : Float;$/;"	v
xx	heaps/h2d/col/Polygon.hx	/^			var xx, yy;$/;"	v
xx	heaps/h3d/Matrix.hx	/^		var xx = x * x, yy = y * y, zz = z * z;$/;"	v
xx	heaps/h3d/Quat.hx	/^		var xx = x * x;$/;"	v
xx	heaps/h3d/anim/BufferAnimation.hx	/^						var xx = qx * qx;$/;"	v
xx	heaps/h3d/anim/LinearAnimation.hx	/^					var xx = qx * qx;$/;"	v
xy	heaps/h3d/Quat.hx	/^		var xy = x * y;$/;"	v
xy	heaps/h3d/anim/BufferAnimation.hx	/^						var xy = qx * qy;$/;"	v
xy	heaps/h3d/anim/LinearAnimation.hx	/^					var xy = qx * qy;$/;"	v
xyMinMax	heaps/h3d/parts/GpuParticles.hx	/^			var xyMinMax = Math.abs(maxDist * Math.cos(phi)) + start;$/;"	v
xz	heaps/h3d/Quat.hx	/^		var xz = x * z;$/;"	v
xz	heaps/h3d/anim/BufferAnimation.hx	/^						var xz = qx * qz;$/;"	v
xz	heaps/h3d/anim/LinearAnimation.hx	/^					var xz = qx * qz;$/;"	v
y	heaps/h2d/Camera.hx	/^		var y = (e.relY - scene.offsetY) \/ scene.viewportScaleY - absY;$/;"	v
y	heaps/h2d/Camera.hx	/^		var y = (pt.y - scene.offsetY) \/ scene.viewportScaleY - absY;$/;"	v
y	heaps/h2d/Camera.hx	/^		var y = pt.y - absY;$/;"	v
y	heaps/h2d/Camera.hx	/^		var y = pt.y;$/;"	v
y	heaps/h2d/Camera.hx	/^	public var y(default, set) : Float;$/;"	v
y	heaps/h2d/CdbLevel.hx	/^					var y = grounds[i++];$/;"	v
y	heaps/h2d/CdbLevel.hx	/^				var y = data[i++];$/;"	v
y	heaps/h2d/CdbLevel.hx	/^	public var y : Int;$/;"	v
y	heaps/h2d/Flow.hx	/^			var y = paddingTop + borderTop;$/;"	v
y	heaps/h2d/Flow.hx	/^			var y = startY;$/;"	v
y	heaps/h2d/Graphics.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/HtmlText.hx	/^		var y = yPos;$/;"	v
y	heaps/h2d/KeyFrames.hx	/^			var y = y0 + (y1 - y0) * xfactor;$/;"	v
y	heaps/h2d/Object.hx	/^	public var y(default, set) : Float = 0;$/;"	v
y	heaps/h2d/SpriteBatch.hx	/^	public var y : Float = 0;$/;"	v
y	heaps/h2d/Tile.hx	/^	public var y(default,null) : Float;$/;"	v
y	heaps/h2d/col/Bounds.hx	/^	public var y(get, set) : Float;$/;"	v
y	heaps/h2d/col/Circle.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/col/IBounds.hx	/^	public var y(get, set) : Int;$/;"	v
y	heaps/h2d/col/IPoint.hx	/^	public var y : Int;$/;"	v
y	heaps/h2d/col/Matrix.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/col/Point.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/col/Polygon.hx	/^			var y = p0.y + u * (p.y - p0.y);$/;"	v
y	heaps/h2d/col/Polynomial.hx	/^		var y = new Matrix(yVals.length, n);$/;"	v
y	heaps/h2d/col/RoundRect.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/col/Segment.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/col/Voronoi.hx	/^	public var y : Float;$/;"	v
y	heaps/h2d/domkit/BaseComponents.hx	/^	@:p var y : Float;$/;"	v
y	heaps/h3d/Quat.hx	/^		var y = q1.y * v2 + q2.y * v;$/;"	v
y	heaps/h3d/Quat.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/Vector.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/col/FPoint.hx	/^	public var y : hxd.impl.Float32;$/;"	v
y	heaps/h3d/col/HeightMap.hx	/^			var y = py + ly * dist;$/;"	v
y	heaps/h3d/col/IPoint.hx	/^	public var y : Int;$/;"	v
y	heaps/h3d/col/Point.hx	/^		var y = Math.lerp(p1.y, p2.y, k);$/;"	v
y	heaps/h3d/col/Point.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/col/Sphere.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/mat/BigTexture.hx	/^	public var y : Int;$/;"	v
y	heaps/h3d/parts/Data.hx	/^			var y = 0.0;$/;"	v
y	heaps/h3d/parts/GpuParticles.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/parts/Particle.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/prim/BigPrimitive.hx	/^			var y = buf[p++];$/;"	v
y	heaps/h3d/prim/Cube.hx	/^		var y = new UV(0, 0);$/;"	v
y	heaps/h3d/prim/Grid.hx	/^			var y = hxd.Math.floor(i \/ (width + 1));$/;"	v
y	heaps/h3d/scene/Graphics.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/scene/Object.hx	/^	public var y(default, set) : Float;$/;"	v
y	heaps/h3d/scene/Trail.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/scene/World.hx	/^					var y = vl[p++];$/;"	v
y	heaps/h3d/scene/World.hx	/^	public var y : Float;$/;"	v
y	heaps/h3d/scene/pbr/Renderer.hx	/^			var y = Std.int((e.relY \/ win.height) * 4);$/;"	v
y	heaps/h3d/shader/NoiseLib.hx	/^  var y = vec3(p0.y, p1.y, p2.y);$/;"	v
y	heaps/h3d/shader/pbr/Slides.hx	/^			var y = input.uv.y * 4;$/;"	v
y	heaps/hxd/BitmapData.hx	/^			var y = y0;$/;"	v
y	heaps/hxd/Direction.hx	/^	public var y(get, never) : Int;$/;"	v
y	heaps/hxd/Math.hx	/^			var y = Std.random(len);$/;"	v
y	heaps/hxd/Pad.hx	/^				var y = p.d.axes[(i << 1) + 1]; \/\/ y neg !;$/;"	v
y	heaps/hxd/Rand.hx	/^			var y = random(len);$/;"	v
y	heaps/hxd/clipper/Clipper.hx	/^		var y : Float;$/;"	v
y	heaps/hxd/clipper/Clipper.hx	/^		var y = m_Scanbeam.y;$/;"	v
y	heaps/hxd/clipper/Clipper.hx	/^	public var y : Int;$/;"	v
y	heaps/hxd/earcut/Earcut.hx	/^				var y = p.y;$/;"	v
y	heaps/hxd/earcut/Earcut.hx	/^		var y = Std.int(32767 * (py - minY) \/ size);$/;"	v
y	heaps/hxd/earcut/Earcut.hx	/^	public var y : Float;$/;"	v
y	heaps/hxd/fmt/fbx/Geometry.hx	/^			var y = verts[i*3+1];$/;"	v
y	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var y = verts[vidx * 3 + 1];$/;"	v
y	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var y = vbuf[vid * stride + 1];$/;"	v
y	heaps/hxd/fmt/hmd/Data.hx	/^	public var y : Float;$/;"	v
y	heaps/hxd/fmt/hmd/Library.hx	/^				var y = vbuf[p++];$/;"	v
y	heaps/hxd/fmt/kframes/Data.hx	/^	public var y(get, set) : T;$/;"	v
y	heaps/hxd/fmt/spine/Data.hx	/^	public var y : Float;$/;"	v
y	heaps/hxd/fmt/spine/JsonData.hx	/^	@:optional var y : Float;$/;"	v
y	heaps/hxd/fmt/spine/Library.hx	/^			var y = def(j.y, 0);$/;"	v
y	heaps/hxd/poly2tri/Point.hx	/^	public var y:Float;$/;"	v
y	heaps/hxd/poly2tri/Point.hx	/^	public var y:Int;$/;"	v
y	heaps/hxd/res/BDFFont.hx	/^		var y : Int = 0;$/;"	v
y	heaps/hxd/res/BDFFont.hx	/^	public var y : Int;$/;"	v
y	heaps/hxd/res/Gradients.hx	/^		var y = 1;$/;"	v
y	heaps/hxd/res/NanoJpeg.hx	/^					var y = py[k1++] << 8;$/;"	v
y	heaps/samples/Blur.hx	/^			var y = (1 - blur.pass.values[i < 0 ? -i : i]) * 10;$/;"	v
y	heaps/samples/Camera2D.hx	/^			var y = 0, x = 0;$/;"	v
y	heaps/samples/MeshBatch.hx	/^	public var y : Float;$/;"	v
y	heaps/samples/Network.hx	/^	@:s public var y(default, set) : Float;$/;"	v
y0	heaps/h2d/KeyFrames.hx	/^			var y0 = bezier(c1y, c2y, minT);$/;"	v
y0	heaps/h3d/scene/Trail.hx	/^			var y0 = prev.y;$/;"	v
y1	heaps/h2d/KeyFrames.hx	/^			var y1 = bezier(c1y, c2y, maxT);$/;"	v
y1	heaps/h2d/Mask.hx	/^		var y1 = object.absY + scrollY;$/;"	v
y1	heaps/h3d/scene/Trail.hx	/^			var y1 = pending.y;$/;"	v
y2	Laser.hx	/^		var y2 = this.y + d * Math.sin(angle);$/;"	v
y2	heaps/h2d/Mask.hx	/^		var y2 = width * object.matB + height * object.matD + y1;$/;"	v
y2	heaps/h2d/RenderContext.hx	/^		var y2 = Math.min( y + h, renderY + renderH );$/;"	v
y2	heaps/h2d/col/Point.hx	/^		var y2 = x * s + y * c;$/;"	v
y2	heaps/h3d/Quat.hx	/^		var y2 = q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x;$/;"	v
y2	heaps/h3d/scene/Trail.hx	/^			var y2 = curY;$/;"	v
yAxis	heaps/hxd/Pad.hx	/^	public var yAxis(get,never) : Float;$/;"	v
yFlip	heaps/h2d/Tile.hx	/^	public var yFlip(get,set) : Bool;$/;"	v
yMax	heaps/h2d/Graphics.hx	/^	var yMax : Float;$/;"	v
yMax	heaps/h2d/TileGroup.hx	/^	public var yMax : Float;$/;"	v
yMax	heaps/h2d/col/Bounds.hx	/^	public var yMax : Float;$/;"	v
yMax	heaps/h2d/col/IBounds.hx	/^	public var yMax : Int;$/;"	v
yMax	heaps/h3d/col/Bounds.hx	/^		var yMax = Math.min(a.yMax, b.yMax);$/;"	v
yMax	heaps/h3d/col/Bounds.hx	/^	public var yMax : Float;$/;"	v
yMin	heaps/h2d/Graphics.hx	/^	var yMin : Float;$/;"	v
yMin	heaps/h2d/Object.hx	/^		var yMin = Math.floor(total.yMin + 1e-10);$/;"	v
yMin	heaps/h2d/TileGroup.hx	/^	public var yMin : Float;$/;"	v
yMin	heaps/h2d/col/Bounds.hx	/^	public var yMin : Float;$/;"	v
yMin	heaps/h2d/col/IBounds.hx	/^	public var yMin : Int;$/;"	v
yMin	heaps/h2d/filter/Group.hx	/^		var yMin = input.dy;$/;"	v
yMin	heaps/h3d/col/Bounds.hx	/^		var yMin = Math.max(a.yMin, b.yMin);$/;"	v
yMin	heaps/h3d/col/Bounds.hx	/^	public var yMin : Float;$/;"	v
yPos	heaps/h2d/HtmlText.hx	/^	var yPos : Float;$/;"	v
ySize	heaps/h3d/col/Bounds.hx	/^	public var ySize(get,set) : Float;$/;"	v
yVal	heaps/h2d/KeyFrames.hx	/^		var yVal;$/;"	v
yc	heaps/h2d/col/Delaunay.hx	/^			var yc;$/;"	v
ycenter	heaps/h2d/col/Voronoi.hx	/^	public var ycenter : Float;$/;"	v
yend	heaps/hxd/BitmapData.hx	/^				var yend = y1;$/;"	v
yflip	heaps/hxd/Pixels.hx	/^	inline function yflip(y:Int) {$/;"	f
yinc	heaps/hxd/BitmapData.hx	/^					var yinc = (temp \/ d2x);$/;"	v
yinc	heaps/hxd/BitmapData.hx	/^					var yinc = temp \/ d2x;$/;"	v
ymax	heaps/h2d/Flow.hx	/^			var ymax = if(realMaxWidth > 0 && overflow != Expand) Math.floor(realMaxHeight - (paddingBott/;"	v
ymax	heaps/h2d/Layers.hx	/^		var ymax = children[pos++].y;$/;"	v
ymax	heaps/h2d/col/Delaunay.hx	/^		var ymax = ymin;$/;"	v
ymax	heaps/hxd/poly2tri/SweepContext.hx	/^		var ymax = points[0].y;$/;"	v
ymid	heaps/h2d/col/Delaunay.hx	/^		var ymid = (ymax + ymin) * 0.5;$/;"	v
ymin	heaps/h2d/Flow.hx	/^			var ymin = paddingTop + borderTop;$/;"	v
ymin	heaps/h2d/Flow.hx	/^			var ymin = startY, ymax = endY;$/;"	v
ymin	heaps/h2d/col/Delaunay.hx	/^		var ymin = points[0].y;$/;"	v
ymin	heaps/hxd/poly2tri/SweepContext.hx	/^		var ymin = points[0].y;$/;"	v
yoff	heaps/hxd/res/Gradients.hx	/^			var yoff   = 0;$/;"	v
yoffset	heaps/hxd/res/BDFFont.hx	/^	public var yoffset : Int;$/;"	v
yoffset	heaps/samples/Flows.hx	/^			var yoffset = title.getBounds().height + spaceY;$/;"	v
yoffset	heaps/samples/HtmlText.hx	/^		var yoffset = 10.0;$/;"	v
yoffset	heaps/samples/Text.hx	/^		var yoffset = 10.0;$/;"	v
ysort	heaps/h2d/Layers.hx	/^	public function ysort( layer : Int ) {$/;"	f
yw	heaps/h3d/Quat.hx	/^		var yw = y * w;$/;"	v
yw	heaps/h3d/anim/BufferAnimation.hx	/^						var yw = qy * qw;$/;"	v
yw	heaps/h3d/anim/LinearAnimation.hx	/^					var yw = qy * qw;$/;"	v
yw	heaps/h3d/shader/NoiseLib.hx	/^  var yw = mod(vec3(p0.y, p1.y, p2.y), per.y);$/;"	v
yy	heaps/h2d/Particles.hx	/^				var yy = sinA * (p.x - dx) + cosA * (p.y - dy) + dy;$/;"	v
yy	heaps/h3d/Quat.hx	/^		var yy = y * y;$/;"	v
yy	heaps/h3d/anim/BufferAnimation.hx	/^						var yy = qy * qy;$/;"	v
yy	heaps/h3d/anim/LinearAnimation.hx	/^					var yy = qy * qy;$/;"	v
yz	heaps/h3d/Quat.hx	/^		var yz = y * z;$/;"	v
yz	heaps/h3d/anim/BufferAnimation.hx	/^						var yz = qy * qz;$/;"	v
yz	heaps/h3d/anim/LinearAnimation.hx	/^					var yz = qy * qz;$/;"	v
z	heaps/h3d/Quat.hx	/^		var z = q1.z * v2 + q2.z * v;$/;"	v
z	heaps/h3d/Quat.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/Vector.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/col/FPoint.hx	/^	public var z : hxd.impl.Float32;$/;"	v
z	heaps/h3d/col/HeightMap.hx	/^			var z = pz + lz * dist;$/;"	v
z	heaps/h3d/col/IPoint.hx	/^	public var z : Int;$/;"	v
z	heaps/h3d/col/Point.hx	/^		var z = Math.lerp(p1.z, p2.z, k);$/;"	v
z	heaps/h3d/col/Point.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/col/Sphere.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/parts/GpuParticles.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/parts/Particle.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/prim/BigPrimitive.hx	/^			var z = buf[p++];$/;"	v
z	heaps/h3d/prim/Cube.hx	/^		var z = new UV(0, 1);$/;"	v
z	heaps/h3d/scene/Graphics.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/scene/Object.hx	/^	public var z(default, set) : Float;$/;"	v
z	heaps/h3d/scene/Renderer.hx	/^			var z = p.obj.absPos._41 * cam._13 + p.obj.absPos._42 * cam._23 + p.obj.absPos._43 * cam._33 /;"	v
z	heaps/h3d/scene/Trail.hx	/^	public var z : Float;$/;"	v
z	heaps/h3d/scene/World.hx	/^					var z = vl[p++];$/;"	v
z	heaps/h3d/shader/ZCut.hx	/^			var z = projectedPosition.z \/ projectedPosition.w;$/;"	v
z	heaps/hxd/earcut/Earcut.hx	/^	public var z : Int;$/;"	v
z	heaps/hxd/fmt/fbx/Geometry.hx	/^			var z = verts[i*3+2];$/;"	v
z	heaps/hxd/fmt/fbx/HMDOut.hx	/^				var z = verts[vidx * 3 + 2];$/;"	v
z	heaps/hxd/fmt/fbx/HMDOut.hx	/^			var z = vbuf[vid * stride + 2];$/;"	v
z	heaps/hxd/fmt/hmd/Data.hx	/^	public var z : Float;$/;"	v
z	heaps/hxd/fmt/hmd/Library.hx	/^				var z = vbuf[p++];$/;"	v
z0	heaps/h3d/prim/Cylinder.hx	/^		var z0 = centered ? -height * 0.5 : 0;$/;"	v
z0	heaps/h3d/scene/Trail.hx	/^			var z0 = prev.z;$/;"	v
z1	heaps/h3d/prim/Cylinder.hx	/^		var z1 = centered ? -z0 : height;$/;"	v
z1	heaps/h3d/scene/Scene.hx	/^		var z1 = i1.hitPoint.w;$/;"	v
z1	heaps/h3d/scene/Trail.hx	/^			var z1 = pending.z;$/;"	v
z1	heaps/h3d/scene/World.hx	/^					var z1 = buf[idx[base++] * stride + 2];$/;"	v
z2	heaps/h3d/Quat.hx	/^		var z2 = q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w;$/;"	v
z2	heaps/h3d/scene/Scene.hx	/^		var z2 = i2.hitPoint.w;$/;"	v
z2	heaps/h3d/scene/Trail.hx	/^			var z2 = curZ;$/;"	v
z2	heaps/h3d/scene/World.hx	/^					var z2 = buf[idx[base++] * stride + 2];$/;"	v
z3	heaps/h3d/scene/World.hx	/^					var z3 = buf[idx[base++] * stride + 2];$/;"	v
zFar	heaps/h3d/Camera.hx	/^	public var zFar : Float;$/;"	v
zFar	heaps/h3d/shader/BaseMesh.hx	/^			var zFar : Float;$/;"	v
zFar	heaps/h3d/shader/PointShadow.hx	/^		@param var zFar : Float;$/;"	v
zMax	heaps/h3d/col/Bounds.hx	/^		var zMax = Math.min(a.zMax, b.zMax);$/;"	v
zMax	heaps/h3d/col/Bounds.hx	/^	public var zMax : Float;$/;"	v
zMax	heaps/h3d/pass/DirShadowMap.hx	/^		var zMax = -1e9, zMin = 1e9;$/;"	v
zMax	heaps/h3d/shader/DirShadow.hx	/^					var zMax = shadowPos.z.saturate();$/;"	v
zMax	heaps/h3d/shader/PointShadow.hx	/^					var zMax = length(posToLight);$/;"	v
zMax	heaps/h3d/shader/Shadow.hx	/^			var zMax = shadowPos.z.saturate();$/;"	v
zMax	heaps/h3d/shader/SpotShadow.hx	/^					var zMax = shadowPos.z;$/;"	v
zMax	heaps/h3d/shader/SpotShadow.hx	/^					var zMax = shadowScreenPos.z.saturate();$/;"	v
zMax	heaps/h3d/shader/ZCut.hx	/^		@param var zMax : Float;$/;"	v
zMax	heaps/h3d/shader/pbr/DefaultForward.hx	/^				var zMax = length(posToLight);$/;"	v
zMin	heaps/h3d/col/Bounds.hx	/^		var zMin = Math.max(a.zMin, b.zMin);$/;"	v
zMin	heaps/h3d/col/Bounds.hx	/^	public var zMin : Float;$/;"	v
zMin	heaps/h3d/shader/ZCut.hx	/^		@param var zMin : Float;$/;"	v
zMinMax	heaps/h3d/parts/GpuParticles.hx	/^			var zMinMax = maxDist * Math.sin(phi);$/;"	v
zNear	heaps/h3d/Camera.hx	/^	public var zNear : Float;$/;"	v
zNear	heaps/h3d/scene/pbr/PointLight.hx	/^	public var zNear : Float = 0.02;$/;"	v
zNear	heaps/h3d/shader/BaseMesh.hx	/^			var zNear : Float;$/;"	v
zOrder	heaps/hxd/earcut/Earcut.hx	/^	inline function zOrder(px:Float, py:Float) {$/;"	f
zSize	heaps/h3d/col/Bounds.hx	/^	public var zSize(get,set) : Float;$/;"	v
zValue	heaps/h2d/ObjectFollower.hx	/^	var zValue : Float = 0.;$/;"	v
zValue	heaps/h3d/shader/Base2d.hx	/^		@param var zValue : Float;$/;"	v
zero	heaps/h3d/Matrix.hx	/^	public function zero() {$/;"	f
zero	heaps/hxsl/Eval.hx	/^				var zero = { e : TConst(CFloat(0.)), t : TFloat, p : pos };$/;"	v
zeroViewport	heaps/h2d/Scene.hx	/^		inline function zeroViewport() {$/;"	f
zmax	heaps/h3d/parts/GpuParticles.hx	/^			var zmax = speedMin * (1 + speedIncr * life) * life + start - gravity * life * life;$/;"	v
zmin	heaps/h3d/parts/GpuParticles.hx	/^			var zmin = emitStartDist + (speed * speed) \/ (4 * (gravity - speed * speedIncr)); \/\/ local/;"	v
zmin	heaps/h3d/scene/World.hx	/^					var zmin = z1;$/;"	v
zoom	heaps/h2d/Scene.hx	/^				var zoom = Math.min(engine.width \/ _width, engine.height \/ _height);$/;"	v
zoom	heaps/h2d/Scene.hx	/^				var zoom = Math.min(engine.width \/ minWidth, engine.height \/ minHeight);$/;"	v
zoom	heaps/h2d/Scene.hx	/^	public var zoom(get, set) : Int;$/;"	v
zoom	heaps/h3d/Camera.hx	/^	public var zoom : Float;$/;"	v
zoom	heaps/h3d/scene/CameraController.hx	/^	function zoom(delta : Float) {$/;"	f
zoom	heaps/samples/ScaleMode2D.hx	/^		var zoom:Float = 1;$/;"	v
zoomAmount	heaps/h3d/scene/CameraController.hx	/^	public var zoomAmount = 1.15;$/;"	v
zw	heaps/h3d/Quat.hx	/^		var zw = z * w;$/;"	v
zw	heaps/h3d/anim/BufferAnimation.hx	/^						var zw = qz * qw;$/;"	v
zw	heaps/h3d/anim/LinearAnimation.hx	/^					var zw = qz * qw;$/;"	v
zz	heaps/h3d/Quat.hx	/^		var zz = z * z;$/;"	v
zz	heaps/h3d/anim/BufferAnimation.hx	/^						var zz = qz * qz;$/;"	v
zz	heaps/h3d/anim/LinearAnimation.hx	/^					var zz = qz * qz;$/;"	v
